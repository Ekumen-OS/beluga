Search.setIndex({"alltitles": {"/home/runner/work/beluga/beluga/beluga/include Directory Reference": [[161, "home-runner-work-beluga-beluga-beluga-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; actions Relation": [[123, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-actions-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; containers Relation": [[124, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-containers-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; motion Relation": [[125, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-motion-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; policies Relation": [[126, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-policies-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; random Relation": [[127, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-random-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; sensor Relation": [[128, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-sensor-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; testing Relation": [[129, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-testing-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference": [[147, "home-runner-work-beluga-beluga-beluga-include-beluga-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File": [[12, "home-runner-work-beluga-beluga-beluga-include-beluga-3d-embedding-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; type_traits Relation": [[130, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; views Relation": [[131, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference": [[155, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference": [[22, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File": [[23, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference": [[29, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-assign-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File": [[30, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-assign-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference": [[265, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-normalize-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File": [[266, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-normalize-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference": [[286, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-propagate-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File": [[287, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-propagate-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference": [[296, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-reweight-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File": [[297, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-reweight-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; raycasting Relation": [[132, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-raycasting-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; type_traits Relation": [[133, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; views Relation": [[134, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference": [[152, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference": [[24, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File": [[25, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File": [[26, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-amcl-core-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference": [[164, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-distance-map-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File": [[165, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-distance-map-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference": [[166, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-effective-sample-size-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File": [[167, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-effective-sample-size-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference": [[172, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-estimation-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File": [[173, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-estimation-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference": [[176, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-exponential-filter-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File": [[177, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-exponential-filter-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference": [[163, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference": [[292, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File": [[293, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference": [[37, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-bresenham-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File": [[38, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-bresenham-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference": [[308, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-spatial-hash-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File": [[309, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-spatial-hash-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File": [[434, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-thrun-recovery-probability-estimator-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference": [[35, "home-runner-work-beluga-beluga-beluga-include-beluga-beluga-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File": [[36, "home-runner-work-beluga-beluga-beluga-include-beluga-beluga-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; utility Relation": [[135, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-gt-utility-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; views Relation": [[136, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference": [[149, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference": [[117, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File": [[118, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference": [[40, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-circular-array-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File": [[41, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-circular-array-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference": [[437, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-tuple-vector-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File": [[438, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-tuple-vector-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference": [[159, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File": [[171, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-epilogue-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File": [[285, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-prologue-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File": [[168, "home-runner-work-beluga-beluga-beluga-include-beluga-eigen-compatibility-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion -&gt; type_traits Relation": [[137, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference": [[157, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference": [[246, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File": [[247, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference": [[121, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-differential-drive-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File": [[122, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-differential-drive-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference": [[269, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-omnidirectional-drive-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File": [[270, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-omnidirectional-drive-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference": [[310, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-stationary-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File": [[311, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-stationary-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies -&gt; algorithm Relation": [[138, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-gt-algorithm-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference": [[146, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference": [[280, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File": [[281, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference": [[174, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-every-n-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File": [[175, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-every-n-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference": [[271, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-effective-size-drop-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File": [[272, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-effective-size-drop-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference": [[273, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-motion-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File": [[274, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-motion-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File": [[282, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-policy-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference": [[283, "home-runner-work-beluga-beluga-beluga-include-beluga-primitives-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File": [[284, "home-runner-work-beluga-beluga-beluga-include-beluga-primitives-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random -&gt; sensor Relation": [[139, "home-runner-work-beluga-beluga-beluga-include-beluga-random-gt-sensor-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference": [[160, "home-runner-work-beluga-beluga-beluga-include-beluga-random-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference": [[288, "home-runner-work-beluga-beluga-beluga-include-beluga-random-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File": [[289, "home-runner-work-beluga-beluga-beluga-include-beluga-random-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference": [[248, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-distribution-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File": [[249, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-distribution-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference": [[250, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-normal-distribution-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File": [[251, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-normal-distribution-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference": [[252, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-uniform-distribution-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File": [[253, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-uniform-distribution-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; algorithm Relation": [[140, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-algorithm-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; data Relation": [[141, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-data-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; types Relation": [[142, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-types-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference": [[153, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference": [[300, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File": [[301, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference": [[31, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-beam-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File": [[32, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-beam-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference": [[33, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-bearing-sensor-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File": [[34, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-bearing-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&gt; types Relation": [[143, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-gt-types-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference": [[154, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference": [[119, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-dense-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File": [[120, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-dense-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference": [[236, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-landmark-map-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File": [[237, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-landmark-map-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference": [[240, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-laser-scan-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File": [[241, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-laser-scan-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference": [[244, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-linear-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File": [[245, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-linear-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File": [[263, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-ndt-cell-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference": [[267, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-occupancy-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File": [[268, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-occupancy-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference": [[294, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-regular-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File": [[295, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-regular-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference": [[306, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-sparse-value-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File": [[307, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-sparse-value-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference": [[441, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-value-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File": [[442, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-value-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference": [[238, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-landmark-sensor-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File": [[239, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-landmark-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference": [[242, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-likelihood-field-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File": [[243, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-likelihood-field-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File": [[264, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-ndt-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference": [[156, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference": [[432, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File": [[433, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference": [[302, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-matchers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File": [[303, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-matchers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference": [[304, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-printers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File": [[305, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-printers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference": [[151, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference": [[439, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File": [[440, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference": [[276, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-particle-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File": [[277, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-particle-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference": [[312, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-strongly-typed-numeric-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File": [[313, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-strongly-typed-numeric-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference": [[435, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-tuple-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File": [[436, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-tuple-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference": [[158, "home-runner-work-beluga-beluga-beluga-include-beluga-types-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference": [[234, "home-runner-work-beluga-beluga-beluga-include-beluga-types-landmark-detection-types-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File": [[235, "home-runner-work-beluga-beluga-beluga-include-beluga-types-landmark-detection-types-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference": [[150, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File": [[179, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-forward-like-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference": [[231, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-indexing-iterator-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File": [[232, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-indexing-iterator-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views -&gt; type_traits Relation": [[144, "home-runner-work-beluga-beluga-beluga-include-beluga-views-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference": [[145, "home-runner-work-beluga-beluga-beluga-include-beluga-views-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference": [[443, "home-runner-work-beluga-beluga-beluga-include-beluga-views-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File": [[444, "home-runner-work-beluga-beluga-beluga-include-beluga-views-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference": [[169, "home-runner-work-beluga-beluga-beluga-include-beluga-views-elements-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File": [[170, "home-runner-work-beluga-beluga-beluga-include-beluga-views-elements-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference": [[278, "home-runner-work-beluga-beluga-beluga-include-beluga-views-particles-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File": [[279, "home-runner-work-beluga-beluga-beluga-include-beluga-views-particles-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference": [[290, "home-runner-work-beluga-beluga-beluga-include-beluga-views-random-intersperse-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File": [[291, "home-runner-work-beluga-beluga-beluga-include-beluga-views-random-intersperse-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference": [[298, "home-runner-work-beluga-beluga-beluga-include-beluga-views-sample-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File": [[299, "home-runner-work-beluga-beluga-beluga-include-beluga-views-sample-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference": [[428, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-evenly-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File": [[429, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-evenly-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference": [[430, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-while-kld-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File": [[431, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-while-kld-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference": [[445, "home-runner-work-beluga-beluga-beluga-include-beluga-views-zip-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File": [[446, "home-runner-work-beluga-beluga-beluga-include-beluga-views-zip-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference": [[162, "home-runner-work-beluga-beluga-beluga-include-ciabatta-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File": [[39, "home-runner-work-beluga-beluga-beluga-include-ciabatta-ciabatta-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference": [[462, "home-runner-work-beluga-beluga-beluga-amcl-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference": [[463, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference": [[448, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-node-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File": [[449, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-node-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference": [[450, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-nodelet-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File": [[451, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-nodelet-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference": [[474, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ndt-amcl-node-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File": [[475, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ndt-amcl-node-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File": [[477, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ros2-common-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include Directory Reference": [[497, "home-runner-work-beluga-beluga-beluga-ros-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference": [[496, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference": [[481, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-amcl-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File": [[482, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-amcl-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference": [[485, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-beluga-ros-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File": [[486, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-beluga-ros-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference": [[508, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-laser-scan-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File": [[509, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-laser-scan-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File": [[510, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-messages-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference": [[520, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-occupancy-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File": [[521, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-occupancy-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference": [[523, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-particle-cloud-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File": [[524, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-particle-cloud-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference": [[532, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-eigen-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File": [[533, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-eigen-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference": [[534, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-sophus-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File": [[535, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-sophus-hpp-source-file"]], "Advertised services": [[479, "advertised-services"], [480, "advertised-services"]], "AlignedBox2d &gt; Class Reference": [[84, "alignedbox2d-gt-class-reference"]], "AlignedBox3d &gt; Class Reference": [[88, "alignedbox3d-gt-class-reference"]], "All": [[181, "all"]], "Amcl Class Reference": [[488, "amcl-class-reference"]], "Amcl&lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &gt; Class Template Reference": [[43, "amcl-lt-motionmodel-sensormodel-randomstategenerator-weightt-particletype-executionpolicy-gt-class-template-reference"]], "AmclNode Class Reference": [[454, "amclnode-class-reference"]], "AmclNodelet Class Reference": [[456, "amclnodelet-class-reference"]], "AmclParams Struct Reference": [[314, "amclparams-struct-reference"], [525, "amclparams-struct-reference"]], "Architecture": [[2, "architecture"]], "BaseDenseGrid2&lt; Derived &gt; Class Template Reference": [[45, "basedensegrid2-lt-derived-gt-class-template-reference"]], "BaseLaserScan&lt; Derived &gt; Class Template Reference": [[47, "baselaserscan-lt-derived-gt-class-template-reference"]], "BaseLinearGrid2&lt; Derived &gt; Class Template Reference": [[49, "baselineargrid2-lt-derived-gt-class-template-reference"]], "BaseOccupancyGrid2&lt; Derived &gt; Class Template Reference": [[51, "baseoccupancygrid2-lt-derived-gt-class-template-reference"]], "BaseRegularGrid&lt; Derived, NDim &gt; Class Template Reference": [[53, "baseregulargrid-lt-derived-ndim-gt-class-template-reference"]], "BeamModelParam Struct Reference": [[316, "beammodelparam-struct-reference"]], "BeamSensorModel&lt; OccupancyGrid &gt; Class Template Reference": [[55, "beamsensormodel-lt-occupancygrid-gt-class-template-reference"]], "BearingModelParam Struct Reference": [[318, "bearingmodelparam-struct-reference"]], "BearingSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[57, "bearingsensormodel-lt-landmarkmap-statetype-gt-class-template-reference"]], "Beluga": [[230, "beluga"]], "Beluga AMCL": [[472, "beluga-amcl"]], "Beluga ROS": [[506, "beluga-ros"]], "Benchmarking Beluga": [[7, "benchmarking-beluga"]], "Bibliography": [[42, "bibliography"], [487, "bibliography"], [537, "bibliography"]], "Bresenham2i Class Reference": [[59, "bresenham2i-class-reference"]], "Broadcasted transforms": [[479, "broadcasted-transforms"], [480, "broadcasted-transforms"]], "Build and source workspace": [[5, "build-and-source-workspace"]], "Building from source (with ROS)": [[5, "building-from-source-with-ros"]], "CRTP-based data adapters": [[2, "crtp-based-data-adapters"]], "Called services": [[479, "called-services"]], "CellHasher&lt; N &gt; Struct Template Reference": [[358, "cellhasher-lt-n-gt-struct-template-reference"]], "CircularArray&lt; T, N, F &gt; &gt; Struct Template Reference": [[425, "circulararray-lt-t-n-f-gt-gt-struct-template-reference"], [427, "circulararray-lt-t-n-f-gt-gt-struct-template-reference"]], "CircularArray&lt; T, N, F &gt; Class Template Reference": [[65, "circulararray-lt-t-n-f-gt-class-template-reference"]], "Class Hierarchy": [[229, "class-hierarchy"], [233, "class-hierarchy"], [471, "class-hierarchy"], [473, "class-hierarchy"], [505, "class-hierarchy"], [507, "class-hierarchy"]], "Class Index": [[116, "class-index"], [460, "class-index"], [494, "class-index"]], "Class List": [[27, "class-list"], [452, "class-list"], [483, "class-list"]], "Class Members": [[180, "class-members"], [182, "class-members"], [183, "class-members"], [184, "class-members"], [185, "class-members"], [186, "class-members"], [189, "class-members"], [210, "class-members"], [211, "class-members"], [212, "class-members"], [213, "class-members"], [214, "class-members"], [215, "class-members"], [216, "class-members"], [217, "class-members"], [218, "class-members"], [220, "class-members"], [221, "class-members"], [223, "class-members"], [224, "class-members"], [226, "class-members"], [227, "class-members"], [465, "class-members"], [466, "class-members"], [499, "class-members"], [500, "class-members"]], "Class Members - Enumerations": [[187, "class-members-enumerations"]], "Class Members - Enumerator": [[188, "class-members-enumerator"]], "Class Members - Functions": [[190, "class-members-functions"], [191, "class-members-functions"], [192, "class-members-functions"], [193, "class-members-functions"], [194, "class-members-functions"], [195, "class-members-functions"], [197, "class-members-functions"], [198, "class-members-functions"], [199, "class-members-functions"], [200, "class-members-functions"], [201, "class-members-functions"], [202, "class-members-functions"], [203, "class-members-functions"], [204, "class-members-functions"], [205, "class-members-functions"], [206, "class-members-functions"], [207, "class-members-functions"], [208, "class-members-functions"], [209, "class-members-functions"], [467, "class-members-functions"], [501, "class-members-functions"]], "Class Members - Related Functions": [[219, "class-members-related-functions"]], "Class Members - Typedefs": [[222, "class-members-typedefs"], [468, "class-members-typedefs"], [502, "class-members-typedefs"]], "Class Members - Variables": [[225, "class-members-variables"], [469, "class-members-variables"], [503, "class-members-variables"]], "Classes": [[28, "classes"], [453, "classes"], [484, "classes"]], "Clone Beluga repository": [[5, "clone-beluga-repository"]], "Compatibility Notes": [[479, "compatibility-notes"]], "Compatibility notes": [[480, "compatibility-notes"]], "Contact": [[0, "contact"]], "DenseGrid2": [[13, "densegrid2"]], "Dependencies": [[447, "dependencies"]], "Design principles": [[3, "design-principles"]], "DifferentialDriveModel&lt; StateType &gt; Class Template Reference": [[67, "differentialdrivemodel-lt-statetype-gt-class-template-reference"]], "DifferentialDriveModelParam Struct Reference": [[322, "differentialdrivemodelparam-struct-reference"]], "Distribution as a range": [[2, "distribution-as-a-range"]], "Easy to (re)use": [[3, "easy-to-re-use"]], "EigenBase&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[372, "eigenbase-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "ExponentialFilter Class Reference": [[69, "exponentialfilter-class-reference"]], "Extending Beluga": [[8, "extending-beluga"]], "Features": [[11, "features"], [447, "features"], [538, "features"]], "File List": [[178, "file-list"], [464, "file-list"], [498, "file-list"]], "Functional forms": [[2, "functional-forms"]], "Functions": [[196, "functions"]], "Graph Legend": [[228, "graph-legend"], [470, "graph-legend"], [504, "graph-legend"]], "IndexingIterator&lt; Indexable, Index &gt; Class Template Reference": [[71, "indexingiterator-lt-indexable-index-gt-class-template-reference"]], "Initial Pose and Transform Broadcast Parameters": [[479, "initial-pose-and-transform-broadcast-parameters"], [480, "initial-pose-and-transform-broadcast-parameters"]], "Install ROS distribution": [[5, "install-ros-distribution"]], "Install dependencies": [[5, "install-dependencies"]], "Installation": [[5, "installation"]], "Installing binaries": [[5, "installing-binaries"]], "Interface Parameters": [[479, "interface-parameters"], [480, "interface-parameters"]], "Key concepts": [[4, "key-concepts"]], "LandmarkBearingDetection Struct Reference": [[324, "landmarkbearingdetection-struct-reference"]], "LandmarkMap Class Reference": [[73, "landmarkmap-class-reference"]], "LandmarkModelParam Struct Reference": [[326, "landmarkmodelparam-struct-reference"]], "LandmarkPositionDetection Struct Reference": [[328, "landmarkpositiondetection-struct-reference"]], "LandmarkSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[75, "landmarksensormodel-lt-landmarkmap-statetype-gt-class-template-reference"]], "LaserScan": [[14, "laserscan"]], "LaserScan Class Reference": [[490, "laserscan-class-reference"]], "Lazy evaluated": [[3, "lazy-evaluated"]], "LikelihoodFieldModel&lt; OccupancyGrid &gt; Class Template Reference": [[77, "likelihoodfieldmodel-lt-occupancygrid-gt-class-template-reference"]], "LikelihoodFieldModelParam Struct Reference": [[330, "likelihoodfieldmodelparam-struct-reference"]], "Line&lt; Vector2, Integer &gt; Class Template Reference": [[61, "line-lt-vector2-integer-gt-class-template-reference"]], "LinearGrid2": [[15, "lineargrid2"]], "Member List": [[44, "member-list"], [46, "member-list"], [48, "member-list"], [50, "member-list"], [52, "member-list"], [54, "member-list"], [56, "member-list"], [58, "member-list"], [60, "member-list"], [62, "member-list"], [64, "member-list"], [66, "member-list"], [68, "member-list"], [70, "member-list"], [72, "member-list"], [74, "member-list"], [76, "member-list"], [78, "member-list"], [80, "member-list"], [82, "member-list"], [85, "member-list"], [87, "member-list"], [89, "member-list"], [91, "member-list"], [93, "member-list"], [95, "member-list"], [97, "member-list"], [99, "member-list"], [101, "member-list"], [103, "member-list"], [106, "member-list"], [109, "member-list"], [111, "member-list"], [113, "member-list"], [115, "member-list"], [315, "member-list"], [317, "member-list"], [319, "member-list"], [321, "member-list"], [323, "member-list"], [325, "member-list"], [327, "member-list"], [329, "member-list"], [331, "member-list"], [333, "member-list"], [335, "member-list"], [337, "member-list"], [339, "member-list"], [341, "member-list"], [343, "member-list"], [345, "member-list"], [347, "member-list"], [349, "member-list"], [351, "member-list"], [354, "member-list"], [356, "member-list"], [359, "member-list"], [361, "member-list"], [370, "member-list"], [371, "member-list"], [373, "member-list"], [374, "member-list"], [376, "member-list"], [379, "member-list"], [381, "member-list"], [383, "member-list"], [385, "member-list"], [387, "member-list"], [389, "member-list"], [392, "member-list"], [394, "member-list"], [396, "member-list"], [399, "member-list"], [403, "member-list"], [405, "member-list"], [407, "member-list"], [409, "member-list"], [411, "member-list"], [413, "member-list"], [415, "member-list"], [417, "member-list"], [419, "member-list"], [421, "member-list"], [423, "member-list"], [426, "member-list"], [455, "member-list"], [457, "member-list"], [459, "member-list"], [489, "member-list"], [491, "member-list"], [493, "member-list"], [526, "member-list"], [528, "member-list"], [531, "member-list"]], "Memory aware": [[3, "memory-aware"]], "Misc Parameters": [[479, "misc-parameters"], [480, "misc-parameters"]], "Monte Carlo Localization": [[4, "monte-carlo-localization"]], "Motion Model Parameters": [[479, "motion-model-parameters"], [480, "motion-model-parameters"]], "MotionModel": [[16, "motionmodel"]], "MultivariateNormalDistribution&lt; T &gt; Class Template Reference": [[79, "multivariatenormaldistribution-lt-t-gt-class-template-reference"]], "MultivariateNormalDistributionParam&lt; Vector, Matrix &gt; Class Template Reference": [[81, "multivariatenormaldistributionparam-lt-vector-matrix-gt-class-template-reference"]], "MultivariateUniformDistribution&lt; T, Constraint &gt; Class Template Reference": [[83, "multivariateuniformdistribution-lt-t-constraint-gt-class-template-reference"]], "NDTCell&lt; NDim, Scalar &gt; Struct Template Reference": [[332, "ndtcell-lt-ndim-scalar-gt-struct-template-reference"]], "NDTModelParam&lt; NDim &gt; Struct Template Reference": [[334, "ndtmodelparam-lt-ndim-gt-struct-template-reference"]], "NDTSensorModel&lt; SparseGridT &gt; Class Template Reference": [[90, "ndtsensormodel-lt-sparsegridt-gt-class-template-reference"]], "Namespace List": [[261, "namespace-list"], [517, "namespace-list"]], "Namespace Members": [[255, "namespace-members"], [256, "namespace-members"], [257, "namespace-members"], [258, "namespace-members"], [259, "namespace-members"], [260, "namespace-members"], [514, "namespace-members"], [515, "namespace-members"], [516, "namespace-members"]], "Namespaces": [[262, "namespaces"], [518, "namespaces"]], "NdtAmclNode Class Reference": [[458, "ndtamclnode-class-reference"]], "Nodelets": [[479, "nodelets"]], "Nodes": [[480, "nodes"]], "Numeric&lt; T, PhantomType &gt; &gt; Struct Template Reference": [[422, "numeric-lt-t-phantomtype-gt-gt-struct-template-reference"], [424, "numeric-lt-t-phantomtype-gt-gt-struct-template-reference"]], "Numeric&lt; T, PhantomType, typename &gt; Class Template Reference": [[92, "numeric-lt-t-phantomtype-typename-gt-class-template-reference"]], "Observation Model Parameters": [[479, "observation-model-parameters"], [480, "observation-model-parameters"]], "OccupancyGrid Class Reference": [[492, "occupancygrid-class-reference"]], "OccupancyGrid2d": [[17, "occupancygrid2d"]], "OmnidirectionalDriveModel Class Reference": [[94, "omnidirectionaldrivemodel-class-reference"]], "OmnidirectionalDriveModelParam Struct Reference": [[336, "omnidirectionaldrivemodelparam-struct-reference"]], "Overview": [[11, "overview"], [447, "overview"], [478, "overview"], [536, "overview"]], "Parameters": [[479, "parameters"], [480, "parameters"]], "Particle": [[18, "particle"]], "Particle Filter Parameters": [[479, "particle-filter-parameters"], [480, "particle-filter-parameters"]], "Performance focused": [[3, "performance-focused"]], "Prerequisites": [[6, "prerequisites"]], "Primer on Particle Filtering with Beluga": [[541, "primer-on-particle-filtering-with-beluga"]], "Profiling Beluga": [[9, "profiling-beluga"]], "Published topics": [[479, "published-topics"], [480, "published-topics"]], "Quickstart": [[6, "quickstart"]], "ROS 2 Reference": [[480, "ros-2-reference"]], "ROS Reference": [[479, "ros-reference"]], "RandomStateDistribution": [[19, "randomstatedistribution"]], "Rationale": [[1, "rationale"]], "Ray2d&lt; OccupancyGrid, Algorithm &gt; Class Template Reference": [[96, "ray2d-lt-occupancygrid-algorithm-gt-class-template-reference"]], "RegularGrid": [[20, "regulargrid"]], "Related Pages": [[275, "related-pages"], [476, "related-pages"], [522, "related-pages"]], "Releases": [[539, "releases"]], "Run Beluga in simulation": [[6, "run-beluga-in-simulation"]], "Run Beluga on a robot": [[6, "run-beluga-on-a-robot"]], "Run Beluga over a recording": [[6, "run-beluga-over-a-recording"]], "SE2&lt; Scalar &gt; &gt; Struct Template Reference": [[391, "se2-lt-scalar-gt-gt-struct-template-reference"], [530, "se2-lt-scalar-gt-gt-struct-template-reference"]], "SE2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[377, "se2base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "SE2d, OccupancyGrid &gt; Class Template Reference": [[86, "se2d-occupancygrid-gt-class-template-reference"]], "SE2d, void &gt; Class Reference": [[110, "se2d-void-gt-class-reference"]], "SE3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[369, "se3base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "SO2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[368, "so2base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "SO3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[375, "so3base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "STL consistent": [[3, "stl-consistent"]], "STL-like abstractions": [[2, "stl-like-abstractions"]], "SensorModel": [[21, "sensormodel"]], "Sophus Namespace Reference": [[511, "sophus-namespace-reference"]], "SparseValueGrid&lt; MapType, NDim &gt; Class Template Reference": [[98, "sparsevaluegrid-lt-maptype-ndim-gt-class-template-reference"]], "Statically bound": [[3, "statically-bound"]], "StationaryModel Class Reference": [[100, "stationarymodel-class-reference"]], "Subscribed topics": [[479, "subscribed-topics"], [480, "subscribed-topics"]], "Subscribed transforms": [[479, "subscribed-transforms"], [480, "subscribed-transforms"]], "Support": [[11, "support"]], "ThrunRecoveryProbabilityEstimator Class Reference": [[102, "thrunrecoveryprobabilityestimator-class-reference"]], "TupleContainer&lt; InternalContainer, T &gt; Class Template Reference": [[104, "tuplecontainer-lt-internalcontainer-t-gt-class-template-reference"]], "TupleVector&lt; T &gt; Class Template Reference": [[107, "tuplevector-lt-t-gt-class-template-reference"]], "UX centered": [[3, "ux-centered"]], "Using Beluga AMCL on an AMR": [[10, "using-beluga-amcl-on-an-amr"]], "Using Beluga with Nav2": [[540, "using-beluga-with-nav2"]], "ValueGrid2&lt; T &gt; Class Template Reference": [[108, "valuegrid2-lt-t-gt-class-template-reference"]], "ValueTraits Struct Reference": [[527, "valuetraits-struct-reference"]], "Visualize Beluga output": [[6, "visualize-beluga-output"]], "_doxygen Directory Reference": [[148, "doxygen-directory-reference"], [461, "doxygen-directory-reference"], [495, "doxygen-directory-reference"]], "almost_equal_to&lt; T &gt; Struct Template Reference": [[529, "almost-equal-to-lt-t-gt-struct-template-reference"]], "as_common_tuple_indirect_fn Struct Reference": [[402, "as-common-tuple-indirect-fn-struct-reference"]], "assign_fn Struct Reference": [[338, "assign-fn-struct-reference"]], "beluga Namespace Reference": [[254, "beluga-namespace-reference"]], "beluga_amcl/AmclNodelet": [[479, "beluga-amcl-amclnodelet"]], "beluga_amcl::AmclNode": [[480, "beluga-amcl-amclnode"]], "beluga_ros Namespace Reference": [[512, "beluga-ros-namespace-reference"]], "common_tuple_type&lt; T, U, Is &gt; Struct Template Reference": [[352, "common-tuple-type-lt-t-u-is-gt-struct-template-reference"]], "decay_t&lt; TupleLike&lt; Args\u2026 &gt; &gt; &gt; &gt; &gt; Struct Template Reference": [[357, "decay-t-lt-tuplelike-lt-args-gt-gt-gt-gt-gt-struct-template-reference"]], "decay_tuple_like&lt; T, class &gt; Struct Template Reference": [[355, "decay-tuple-like-lt-t-class-gt-struct-template-reference"]], "every_n_fn Struct Reference": [[380, "every-n-fn-struct-reference"]], "every_n_policy Struct Reference": [[382, "every-n-policy-struct-reference"]], "has_common_tuple_type&lt; typename, typename, typename &gt; Struct Template Reference": [[362, "has-common-tuple-type-lt-typename-typename-typename-gt-struct-template-reference"]], "has_single_element&lt; T, TupleLike, class &gt; Struct Template Reference": [[364, "has-single-element-lt-t-tuplelike-class-gt-struct-template-reference"]], "index_sequence&lt; I\u2026 &gt; &gt; Struct Template Reference": [[353, "index-sequence-lt-i-gt-gt-struct-template-reference"]], "is_arithmetic_v&lt; T &gt;, void &gt; &gt; Class Template Reference": [[114, "is-arithmetic-v-lt-t-gt-void-gt-gt-class-template-reference"]], "is_arithmetic_v&lt; Types &gt; &amp;&amp;\u2026), void &gt; &gt; Class Template Reference": [[112, "is-arithmetic-v-lt-types-gt-amp-amp-void-gt-gt-class-template-reference"]], "is_tuple_like&lt; T &gt; Struct Template Reference": [[366, "is-tuple-like-lt-t-gt-struct-template-reference"]], "iterator Class Reference": [[63, "iterator-class-reference"]], "make_from_state_fn&lt; Particle, State &gt; Struct Template Reference": [[360, "make-from-state-fn-lt-particle-state-gt-struct-template-reference"]], "msg Namespace Reference": [[513, "msg-namespace-reference"]], "multivariate_distribution_traits&lt; T, Enable &gt; Struct Template Reference": [[367, "multivariate-distribution-traits-lt-t-enable-gt-struct-template-reference"]], "normalize_base_fn Struct Reference": [[340, "normalize-base-fn-struct-reference"]], "normalize_fn Struct Reference": [[342, "normalize-fn-struct-reference"]], "on_effective_size_drop_policy Struct Reference": [[384, "on-effective-size-drop-policy-struct-reference"]], "on_motion_fn Struct Reference": [[386, "on-motion-fn-struct-reference"]], "on_motion_policy&lt; Pose &gt; Struct Template Reference": [[388, "on-motion-policy-lt-pose-gt-struct-template-reference"]], "on_motion_policy_base&lt; Pose &gt; Struct Template Reference": [[390, "on-motion-policy-base-lt-pose-gt-struct-template-reference"]], "particle_traits&lt; T &gt; Struct Template Reference": [[378, "particle-traits-lt-t-gt-struct-template-reference"]], "policy&lt; PolicyFn &gt; Struct Template Reference": [[393, "policy-lt-policyfn-gt-struct-template-reference"]], "policy_base Struct Reference": [[395, "policy-base-struct-reference"]], "propagate_base_fn Struct Reference": [[344, "propagate-base-fn-struct-reference"]], "propagate_fn Struct Reference": [[346, "propagate-fn-struct-reference"]], "random_intersperse_fn Struct Reference": [[404, "random-intersperse-fn-struct-reference"]], "random_intersperse_view&lt; Range, Fn, URNG &gt; Struct Template Reference": [[406, "random-intersperse-view-lt-range-fn-urng-gt-struct-template-reference"]], "reweight_base_fn Struct Reference": [[348, "reweight-base-fn-struct-reference"]], "reweight_fn Struct Reference": [[350, "reweight-fn-struct-reference"]], "sample_base_fn Struct Reference": [[408, "sample-base-fn-struct-reference"]], "sample_fn Struct Reference": [[410, "sample-fn-struct-reference"]], "sample_view&lt; Range, Distribution, URNG &gt; Struct Template Reference": [[412, "sample-view-lt-range-distribution-urng-gt-struct-template-reference"]], "sentinel Struct Reference": [[320, "sentinel-struct-reference"]], "spatial_hash&lt; T, Enable &gt; Struct Template Reference": [[397, "spatial-hash-lt-t-enable-gt-struct-template-reference"]], "state_fn Struct Reference": [[398, "state-fn-struct-reference"]], "take_evenly_fn Struct Reference": [[414, "take-evenly-fn-struct-reference"]], "take_while_kld_fn Struct Reference": [[416, "take-while-kld-fn-struct-reference"]], "tf2 Namespace Reference": [[519, "tf2-namespace-reference"]], "tuple&lt; Types\u2026 &gt; &gt; Class Template Reference": [[105, "tuple-lt-types-gt-gt-class-template-reference"]], "tuple_index&lt; T, TupleLike, class &gt; Struct Template Reference": [[400, "tuple-index-lt-t-tuplelike-class-gt-struct-template-reference"]], "tuple_index_found&lt; T, Args\u2026 &gt;()&gt; &gt; Struct Template Reference": [[365, "tuple-index-found-lt-t-args-gt-gt-gt-struct-template-reference"], [401, "tuple-index-found-lt-t-args-gt-gt-gt-struct-template-reference"]], "void_t&lt; common_tuple_type_t&lt; T, U &gt; &gt; &gt; Struct Template Reference": [[363, "void-t-lt-common-tuple-type-t-lt-t-u-gt-gt-gt-struct-template-reference"]], "weight_fn Struct Reference": [[420, "weight-fn-struct-reference"]], "zip_fn Struct Reference": [[418, "zip-fn-struct-reference"]]}, "docnames": ["about/contact", "about/rationale", "concepts/architecture", "concepts/design-principles", "concepts/key-concepts", "getting-started/installation", "getting-started/quickstart", "guides/benchmarking-beluga", "guides/extending-beluga", "guides/profiling-beluga", "guides/using-beluga-amcl", "index", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/annotated", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/citelist", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1", "packages/beluga/docs/_doxygen/generated/reference/html/classes", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/files", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga/docs/_doxygen/generated/reference/html/index", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/inherits", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/pages", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source", "packages/beluga/docs/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source", "packages/beluga_amcl/docs/index", "packages/beluga_amcl/docs/ros-reference", "packages/beluga_amcl/docs/ros2-reference", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source", "packages/beluga_ros/docs/index", "resources/bibliography", "roadmap/features", "roadmap/releases", "tutorials/nav2-integration", "tutorials/particle-filtering"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["about/contact.md", "about/rationale.md", "concepts/architecture.md", "concepts/design-principles.md", "concepts/key-concepts.md", "getting-started/installation.md", "getting-started/quickstart.md", "guides/benchmarking-beluga.md", "guides/extending-beluga.md", "guides/profiling-beluga.md", "guides/using-beluga-amcl.md", "index.md", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z.rst", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source.rst", "packages/beluga/docs/index.md", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source.rst", "packages/beluga_amcl/docs/index.md", "packages/beluga_amcl/docs/ros-reference.md", "packages/beluga_amcl/docs/ros2-reference.md", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source.rst", "packages/beluga_ros/docs/index.md", "resources/bibliography.md", "roadmap/features.md", "roadmap/releases.md", "tutorials/nav2-integration.md", "tutorials/particle-filtering.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 4, 5, 16, 21, 27, 28, 37, 38, 42, 59, 61, 63, 65, 67, 73, 92, 94, 98, 100, 102, 105, 106, 116, 145, 169, 178, 181, 184, 196, 205, 220, 222, 225, 228, 229, 230, 237, 239, 254, 255, 261, 263, 264, 270, 293, 297, 302, 307, 332, 398, 420, 429, 437, 438, 444, 447, 465, 467, 469, 470, 472, 479, 480, 487, 499, 504, 506, 524, 537], "0": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 65, 105, 112, 114, 118, 120, 122, 165, 166, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 314, 316, 318, 322, 326, 330, 332, 333, 334, 336, 338, 340, 342, 344, 346, 348, 350, 384, 398, 399, 404, 416, 420, 429, 430, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 480, 482, 486, 509, 510, 521, 524, 525, 527, 533, 535], "0003": 11, "001": [26, 314, 479, 482, 525], "01": [42, 122, 270, 322, 336, 487, 537], "02": 311, "05": [26, 32, 314, 316, 477, 479, 480, 482, 524, 525], "09023224677087": 254, "0f": 524, "0l": 264, "0u": 41, "0ul": 429, "0ull": 431, "0x00": [40, 41, 254], "0x01": [40, 41, 254], "0x02": [40, 41, 254], "0x04": [40, 41, 254], "0x9e3779b9": 264, "1": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537], "10": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 65, 105, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 480, 482, 486, 509, 510, 521, 524, 525, 533, 535, 537], "100": [30, 34, 38, 120, 122, 173, 237, 239, 243, 245, 249, 251, 253, 264, 266, 268, 274, 277, 284, 287, 291, 293, 297, 299, 307, 309, 330, 438, 451, 475, 477, 479, 480, 482, 510, 521, 527, 535], "101": [30, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 245, 249, 251, 253, 264, 266, 268, 270, 274, 277, 282, 284, 287, 291, 293, 295, 297, 307, 309, 436, 438, 449, 477, 482, 521, 535], "102": [26, 30, 34, 38, 173, 232, 237, 239, 243, 245, 251, 253, 264, 266, 268, 270, 272, 277, 282, 284, 287, 291, 293, 295, 297, 299, 307, 429, 438, 449, 451, 475, 477, 482, 510, 521, 535], "103": [30, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 245, 249, 251, 253, 264, 266, 268, 270, 274, 277, 284, 287, 291, 293, 295, 297, 299, 307, 309, 429, 438, 451, 475, 477, 482, 521, 524, 535], "104": [32, 34, 38, 41, 173, 232, 237, 239, 245, 249, 251, 253, 264, 266, 270, 277, 282, 284, 287, 291, 293, 297, 299, 307, 309, 429, 449, 475, 477, 521, 524, 535], "105": [26, 32, 34, 38, 232, 237, 239, 243, 245, 249, 251, 253, 264, 266, 268, 270, 274, 277, 282, 284, 287, 291, 293, 295, 297, 299, 309, 429, 436, 438, 449, 451, 475, 477, 482, 521, 524, 535], "106": [26, 32, 34, 38, 41, 173, 232, 237, 239, 243, 249, 251, 253, 270, 277, 284, 291, 293, 295, 297, 299, 429, 436, 449, 451, 477, 482, 521, 524, 535], "107": [26, 32, 34, 38, 237, 239, 245, 249, 251, 253, 264, 266, 270, 277, 282, 284, 287, 291, 293, 295, 297, 299, 309, 436, 449, 475, 477, 521, 524, 535], "108": [26, 32, 34, 38, 120, 122, 232, 237, 239, 243, 249, 251, 253, 264, 266, 270, 274, 277, 282, 284, 287, 291, 293, 295, 299, 309, 436, 438, 449, 451, 475, 477, 482, 510, 521, 524, 535], "109": [26, 32, 34, 38, 41, 120, 122, 232, 237, 239, 251, 253, 264, 266, 270, 274, 277, 282, 284, 287, 291, 293, 295, 436, 438, 451, 477, 510, 521, 524, 535], "10u": 524, "11": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "110": [26, 32, 34, 38, 41, 120, 122, 232, 237, 239, 249, 251, 253, 264, 266, 270, 274, 277, 282, 284, 287, 291, 293, 295, 297, 299, 309, 436, 438, 449, 475, 477, 510, 521, 524, 535], "1109": 537, "111": [26, 32, 34, 38, 120, 122, 232, 237, 239, 245, 249, 251, 253, 264, 266, 268, 270, 274, 277, 282, 284, 287, 293, 299, 431, 436, 438, 449, 451, 475, 477, 510, 521, 524], "112": [26, 32, 34, 38, 41, 120, 122, 237, 239, 245, 249, 251, 253, 264, 266, 268, 270, 274, 282, 287, 291, 293, 299, 431, 436, 438, 449, 451, 477, 510, 524, 535], "113": [26, 32, 34, 38, 122, 232, 237, 239, 243, 245, 249, 251, 253, 264, 266, 270, 274, 277, 284, 287, 291, 293, 299, 431, 436, 438, 449, 475, 477, 510, 524], "114": [26, 32, 34, 120, 122, 232, 237, 239, 243, 245, 249, 251, 253, 264, 266, 268, 270, 274, 282, 284, 287, 293, 299, 309, 431, 436, 438, 449, 451, 475, 477, 510, 524], "11400714819323198485llu": 309, "115": [26, 32, 34, 38, 122, 232, 237, 239, 243, 245, 251, 253, 264, 266, 270, 274, 284, 291, 293, 297, 299, 309, 431, 436, 438, 451, 477, 482, 524], "116": [26, 32, 34, 38, 122, 232, 237, 239, 243, 245, 249, 251, 264, 270, 284, 287, 291, 293, 297, 299, 431, 436, 438, 449, 475, 477, 482, 510, 524], "117": [26, 32, 34, 38, 122, 232, 237, 239, 243, 245, 249, 251, 253, 264, 266, 270, 274, 284, 287, 291, 293, 297, 299, 309, 431, 436, 438, 451, 475, 477, 482, 524], "118": [26, 32, 34, 38, 120, 122, 232, 237, 239, 243, 245, 251, 253, 264, 266, 270, 282, 284, 287, 291, 293, 297, 299, 431, 436, 438, 477, 482, 524, 535], "119": [26, 32, 34, 38, 120, 122, 232, 237, 239, 243, 245, 249, 251, 253, 266, 268, 270, 277, 282, 284, 287, 291, 293, 297, 299, 431, 436, 438, 475, 477, 482, 524, 535], "12": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 452, 471, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "120": [26, 32, 34, 38, 122, 232, 237, 239, 243, 245, 249, 251, 264, 266, 268, 270, 277, 282, 284, 287, 291, 299, 431, 436, 438, 475, 477, 482, 524, 535], "121": [26, 32, 34, 120, 122, 232, 237, 239, 243, 245, 251, 253, 264, 266, 270, 274, 277, 282, 284, 287, 291, 309, 431, 436, 438, 477, 482, 510, 524, 535], "122": [26, 32, 34, 38, 41, 122, 232, 237, 239, 243, 245, 249, 251, 264, 268, 270, 274, 277, 282, 284, 287, 299, 309, 431, 438, 475, 477, 482, 510, 524, 535], "123": [26, 32, 34, 38, 41, 122, 173, 237, 239, 243, 245, 249, 251, 264, 266, 270, 274, 277, 282, 284, 287, 291, 309, 431, 436, 438, 464, 475, 477, 482, 483, 498, 510, 517, 524, 535], "12345": [27, 178, 229, 261, 505], "124": [26, 29, 31, 32, 33, 34, 37, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 119, 121, 122, 164, 166, 169, 172, 173, 174, 176, 231, 232, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 254, 264, 265, 266, 267, 269, 270, 271, 273, 274, 276, 277, 278, 282, 283, 284, 286, 290, 292, 294, 296, 298, 299, 302, 306, 308, 309, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 353, 357, 358, 360, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 391, 393, 395, 398, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 425, 428, 430, 431, 435, 436, 437, 438, 441, 445, 449, 454, 456, 458, 474, 477, 481, 482, 488, 490, 492, 508, 510, 512, 520, 523, 525, 527, 530, 532, 534, 535], "125": [26, 32, 34, 38, 41, 122, 173, 232, 237, 239, 243, 245, 249, 251, 264, 266, 270, 274, 282, 291, 299, 309, 431, 436, 438, 449, 451, 475, 477, 482, 510, 524, 535], "126": [32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 245, 249, 251, 253, 264, 266, 270, 282, 284, 287, 291, 309, 431, 436, 438, 451, 475, 477, 482, 510, 535], "127": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 245, 251, 253, 264, 266, 270, 299, 309, 431, 436, 438, 449, 477, 482, 510, 535], "128": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 245, 249, 253, 264, 266, 268, 270, 282, 291, 299, 309, 431, 436, 438, 451, 475, 477, 482, 510, 535], "129": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 245, 249, 251, 264, 268, 270, 282, 284, 299, 431, 436, 438, 475, 477, 482, 510, 535], "13": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "130": [26, 32, 34, 38, 41, 122, 173, 237, 239, 243, 245, 253, 264, 266, 268, 270, 282, 284, 299, 309, 431, 436, 438, 477, 482, 510, 535], "131": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 245, 249, 264, 266, 268, 270, 282, 284, 287, 299, 309, 431, 438, 475, 477, 482, 510], "132": [26, 32, 34, 38, 41, 122, 173, 232, 237, 239, 243, 245, 249, 266, 270, 282, 284, 287, 299, 309, 431, 436, 438, 475, 477, 482, 524, 535], "133": [26, 32, 34, 38, 41, 122, 173, 232, 237, 239, 243, 245, 264, 268, 270, 282, 284, 287, 299, 431, 436, 438, 477, 482, 524], "134": [26, 32, 34, 38, 41, 122, 173, 232, 237, 239, 243, 249, 253, 264, 266, 270, 284, 287, 299, 309, 431, 436, 438, 449, 475, 477, 482, 524], "135": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 249, 253, 264, 266, 270, 284, 287, 299, 309, 431, 438, 449, 451, 475, 477, 524], "136": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 249, 251, 253, 264, 266, 270, 284, 299, 431, 436, 438, 451, 477, 482, 524], "137": [26, 32, 34, 38, 41, 122, 173, 232, 237, 239, 243, 249, 251, 253, 264, 266, 270, 284, 299, 309, 431, 436, 438, 449, 475, 477, 482, 524], "138": [26, 32, 34, 38, 41, 120, 122, 173, 237, 239, 243, 249, 251, 253, 264, 266, 268, 270, 284, 431, 436, 438, 449, 451, 475, 477, 535], "139": [32, 34, 38, 41, 122, 173, 232, 237, 239, 243, 249, 251, 264, 268, 270, 284, 291, 299, 436, 438, 451, 477, 482, 524, 535], "14": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "140": [26, 32, 34, 38, 41, 122, 173, 237, 239, 249, 251, 253, 264, 266, 268, 270, 284, 291, 431, 436, 438, 449, 475, 477, 482, 535], "141": [32, 34, 38, 41, 122, 173, 237, 239, 243, 249, 251, 264, 266, 268, 270, 291, 309, 436, 438, 449, 451, 475, 477, 482, 535], "142": [32, 34, 38, 41, 122, 173, 232, 237, 239, 249, 264, 266, 270, 284, 291, 309, 436, 438, 451, 477, 482, 535], "143": [32, 38, 41, 120, 122, 173, 232, 237, 239, 251, 264, 266, 268, 270, 291, 449, 475, 477, 482, 535], "144": [26, 32, 34, 38, 41, 120, 122, 173, 237, 239, 249, 251, 264, 266, 270, 291, 309, 436, 438, 449, 451, 475, 477, 482, 535], "145": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 249, 270, 284, 291, 436, 438, 477, 482, 535], "146": [26, 32, 34, 38, 41, 120, 122, 173, 237, 239, 243, 251, 264, 266, 270, 284, 291, 299, 436, 438, 449, 451, 475, 477, 482, 524, 535], "147": [26, 32, 34, 38, 41, 120, 122, 173, 237, 239, 243, 249, 251, 264, 266, 270, 284, 291, 299, 438, 475, 477, 482, 524], "148": [26, 32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 249, 264, 266, 268, 270, 284, 291, 299, 309, 431, 436, 438, 449, 451, 477, 524, 535], "149": [32, 34, 38, 41, 120, 122, 173, 232, 237, 239, 243, 251, 253, 266, 268, 270, 284, 291, 299, 309, 431, 436, 449, 475, 477, 482, 524], "14th": [42, 487, 537], "15": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "150": [26, 32, 34, 38, 41, 120, 122, 173, 239, 243, 249, 251, 253, 264, 266, 268, 270, 284, 291, 299, 309, 431, 436, 438, 451, 477, 524], "151": [26, 38, 41, 120, 122, 173, 232, 239, 243, 249, 253, 266, 268, 270, 284, 291, 299, 309, 431, 449, 477, 524], "152": [32, 34, 38, 41, 120, 122, 173, 239, 243, 251, 253, 264, 266, 268, 270, 284, 291, 299, 309, 431, 436, 449, 451, 477, 482, 524], "153": [26, 32, 34, 38, 120, 122, 173, 239, 243, 249, 251, 253, 268, 270, 284, 291, 299, 309, 431, 436, 477, 482, 524], "154": [34, 38, 41, 120, 122, 173, 232, 239, 243, 249, 253, 264, 268, 270, 284, 291, 299, 309, 431, 436, 449, 451, 477, 482, 524, 535], "155": [32, 38, 120, 122, 173, 232, 239, 243, 251, 253, 266, 268, 270, 284, 291, 299, 309, 431, 451, 477, 482, 524, 535], "156": [32, 34, 38, 120, 122, 173, 239, 243, 249, 251, 253, 264, 270, 284, 291, 299, 431, 436, 438, 449, 477, 524, 535], "157": [32, 34, 38, 120, 122, 173, 232, 239, 243, 249, 253, 264, 268, 270, 284, 291, 299, 431, 436, 438, 451, 475, 477, 482, 524, 535], "158": [32, 34, 38, 120, 122, 173, 243, 251, 253, 264, 270, 284, 291, 299, 431, 436, 438, 449, 475, 477, 482, 524, 535], "159": [32, 34, 38, 120, 122, 173, 239, 243, 249, 251, 253, 264, 270, 284, 299, 309, 431, 436, 438, 449, 451, 477, 524, 535], "16": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "160": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "161": [32, 34, 38, 120, 122, 173, 232, 239, 243, 249, 251, 253, 264, 270, 284, 291, 309, 436, 438, 451, 477, 482, 524, 535], "162": [32, 41, 122, 173, 232, 239, 243, 249, 253, 264, 266, 268, 291, 299, 436, 449, 475, 477, 482, 524, 535], "163": [32, 34, 38, 41, 122, 173, 232, 239, 243, 249, 264, 266, 268, 270, 277, 279, 284, 287, 291, 299, 309, 311, 431, 451, 477, 482, 524, 535], "164": [32, 38, 41, 122, 173, 239, 243, 249, 251, 253, 264, 266, 268, 284, 291, 299, 436, 449, 475, 477, 482, 524, 535], "165": [26, 41, 120, 122, 173, 232, 239, 243, 251, 253, 266, 268, 284, 299, 436, 449, 451, 475, 477, 524, 535], "166": [26, 38, 41, 120, 122, 173, 243, 249, 253, 264, 266, 268, 284, 291, 299, 436, 451, 477, 482, 524, 535], "167": [26, 38, 41, 120, 122, 173, 239, 243, 249, 251, 253, 268, 299, 449, 475, 477, 524, 535], "168": [26, 41, 120, 122, 173, 232, 239, 243, 249, 253, 284, 299, 309, 436, 438, 451, 477, 524, 535], "169": [26, 38, 41, 120, 122, 173, 232, 239, 243, 249, 253, 268, 284, 309, 436, 438, 449, 475, 477, 524], "17": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 447, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535, 536], "170": [26, 38, 41, 120, 122, 173, 232, 243, 249, 253, 268, 284, 299, 309, 431, 436, 438, 451, 475, 477, 524, 535], "171": [26, 38, 41, 120, 122, 173, 232, 239, 243, 249, 264, 268, 284, 309, 431, 436, 438, 449, 477, 524], "172": [26, 38, 41, 120, 122, 173, 239, 243, 249, 251, 264, 268, 284, 299, 309, 431, 436, 451, 475, 477, 524], "173": [26, 38, 122, 173, 232, 239, 243, 249, 251, 264, 268, 284, 299, 309, 431, 436, 438, 449, 477, 524], "174": [26, 38, 41, 122, 239, 243, 249, 268, 284, 299, 431, 451, 475, 477, 524], "175": [26, 122, 173, 239, 243, 249, 251, 264, 268, 284, 291, 299, 309, 431, 436, 449, 475, 477, 524], "176": [26, 38, 41, 232, 239, 243, 249, 264, 268, 284, 291, 299, 431, 436, 438, 449, 451, 475, 477, 524, 535], "177": [26, 38, 122, 232, 243, 249, 264, 284, 291, 299, 436, 438, 451, 477, 524, 535], "178": [26, 41, 122, 243, 264, 268, 284, 291, 299, 438, 449, 475, 477, 482, 524, 535], "179": [26, 38, 41, 232, 243, 264, 268, 284, 291, 309, 436, 438, 451, 477, 482, 524, 535], "18": [12, 23, 26, 30, 32, 34, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 291, 293, 295, 297, 299, 307, 309, 311, 313, 429, 431, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 509, 510, 521, 524, 533, 535], "180": [26, 38, 122, 243, 268, 284, 291, 299, 309, 436, 449, 475, 477, 482, 524, 525, 535], "181": [26, 41, 122, 243, 251, 264, 268, 284, 291, 299, 309, 438, 451, 477, 482, 524, 535], "182": [26, 38, 122, 232, 243, 251, 264, 268, 284, 291, 299, 436, 438, 449, 475, 477, 482, 524, 535], "183": [26, 38, 41, 122, 232, 243, 251, 264, 268, 284, 291, 299, 309, 436, 438, 451, 477, 482, 524, 535], "184": [26, 38, 122, 243, 264, 268, 284, 291, 299, 309, 436, 438, 449, 451, 475, 477, 482, 524, 535], "185": [26, 38, 41, 232, 243, 251, 268, 284, 291, 299, 449, 477, 482, 524], "186": [26, 38, 41, 243, 264, 268, 284, 291, 299, 309, 436, 438, 449, 451, 475, 477, 482, 524, 535], "187": [26, 38, 173, 243, 268, 277, 284, 299, 436, 438, 449, 451, 475, 477, 482, 524], "188": [26, 38, 41, 173, 232, 243, 264, 268, 284, 299, 436, 449, 477, 482, 524], "189": [26, 38, 173, 232, 251, 284, 299, 436, 438, 449, 451, 475, 477, 482, 524], "19": [12, 23, 26, 30, 32, 34, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 291, 293, 295, 297, 299, 307, 309, 311, 313, 429, 431, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 509, 510, 521, 524, 533, 535], "190": [26, 38, 41, 173, 232, 251, 264, 284, 291, 299, 309, 436, 438, 477, 482, 524], "191": [26, 38, 173, 232, 251, 284, 291, 299, 309, 436, 451, 475, 477, 482, 524], "192": [26, 38, 41, 173, 251, 264, 284, 291, 299, 309, 438, 477, 482, 524, 535], "193": [26, 38, 41, 173, 232, 264, 284, 291, 299, 309, 438, 451, 475, 477, 482, 524, 535], "194": [26, 38, 173, 232, 251, 284, 291, 299, 309, 451, 477, 482, 524, 535], "195": [26, 38, 41, 173, 232, 264, 284, 309, 438, 475, 477, 482, 524, 535], "196": [26, 38, 173, 232, 299, 309, 438, 451, 475, 477, 482, 524, 535], "197": [26, 38, 41, 173, 232, 284, 299, 309, 438, 475, 477, 482, 524, 535], "198": [26, 38, 173, 232, 251, 299, 309, 438, 451, 475, 477, 482, 524, 535], "199": [26, 38, 41, 173, 232, 251, 284, 299, 309, 438, 475, 477, 482, 524, 535], "1990": 1, "1_55_0": 358, "1e": [264, 524], "1ul": [26, 314, 429, 482, 525], "2": [4, 5, 6, 11, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 45, 51, 55, 65, 67, 79, 81, 84, 90, 96, 110, 118, 120, 122, 160, 165, 167, 168, 170, 171, 173, 175, 177, 178, 179, 229, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 294, 295, 297, 299, 301, 303, 304, 305, 306, 307, 309, 311, 313, 314, 316, 322, 330, 334, 338, 340, 398, 404, 414, 416, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 447, 448, 449, 451, 452, 454, 458, 463, 464, 471, 472, 474, 475, 477, 478, 479, 482, 483, 486, 487, 488, 505, 506, 509, 510, 512, 513, 517, 519, 521, 523, 524, 525, 530, 532, 533, 535, 536], "20": [12, 23, 26, 30, 32, 34, 38, 39, 41, 118, 120, 122, 145, 165, 167, 168, 169, 170, 171, 173, 178, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 291, 293, 295, 297, 299, 307, 309, 311, 313, 429, 431, 434, 436, 438, 440, 442, 444, 446, 447, 449, 451, 475, 477, 482, 509, 510, 521, 524, 533, 535], "200": [26, 38, 41, 173, 232, 251, 299, 309, 438, 451, 475, 477, 482, 524, 535], "2000": [11, 477, 480], "2000ul": [26, 314, 482, 525], "2001": [42, 487, 537], "2005": [42, 487, 537], "2006": 537, "2007": [42, 487, 537], "201": [26, 38, 173, 232, 251, 264, 299, 309, 438, 477, 482, 524, 535], "2015": 42, "2019": 39, "202": [26, 38, 41, 173, 232, 264, 284, 299, 438, 451, 477, 482, 524, 535], "2022": [25, 36, 122, 165, 170, 173, 177, 243, 247, 277, 301, 309, 311, 438, 440, 444, 449, 475, 521, 535], "2023": [32, 34, 38, 120, 122, 165, 170, 173, 177, 179, 235, 237, 239, 241, 243, 245, 247, 251, 268, 270, 279, 284, 289, 293, 295, 301, 303, 309, 311, 313, 429, 431, 436, 440, 442, 451, 509, 510, 521, 535], "2024": [12, 23, 25, 26, 30, 36, 41, 118, 167, 168, 171, 175, 179, 232, 249, 251, 253, 263, 264, 266, 272, 274, 277, 281, 282, 284, 285, 287, 291, 297, 299, 303, 305, 307, 431, 433, 434, 436, 438, 444, 446, 449, 451, 475, 477, 482, 486, 524, 533], "203": [38, 173, 251, 264, 299, 438, 477, 482, 524, 535], "204": [26, 38, 173, 264, 284, 299, 438, 451, 477, 482, 524, 535], "205": [26, 38, 173, 264, 284, 299, 438, 451, 477, 482, 524, 535], "206": [26, 173, 284, 299, 438, 451, 477, 482, 524, 535], "207": [38, 173, 251, 264, 284, 299, 438, 451, 477, 482, 524], "208": [26, 38, 41, 173, 251, 284, 299, 438, 451, 477, 482, 524, 535], "209": [26, 41, 173, 251, 284, 299, 438, 451, 477, 482, 524], "21": [12, 23, 26, 30, 32, 34, 38, 39, 41, 120, 122, 165, 167, 168, 170, 171, 173, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 277, 281, 282, 284, 285, 287, 291, 293, 295, 297, 299, 307, 309, 311, 313, 429, 431, 434, 436, 438, 442, 444, 446, 449, 451, 475, 477, 482, 509, 510, 521, 524, 533, 535], "210": [26, 38, 41, 173, 251, 284, 438, 477, 482, 524], "211": [26, 41, 173, 251, 284, 299, 438, 477, 482, 524], "212": [26, 41, 173, 251, 264, 284, 299, 438, 477, 482, 524], "213": [26, 41, 173, 251, 264, 284, 299, 438, 477, 482, 524, 535], "214": [26, 41, 173, 264, 284, 299, 477, 482, 524, 535], "215": [26, 38, 41, 173, 251, 264, 284, 299, 438, 477, 482, 524, 535], "216": [26, 38, 41, 168, 251, 264, 299, 438, 477, 482, 524, 535], "217": [26, 38, 41, 173, 264, 284, 299, 438, 477, 482, 524, 535], "218": [26, 41, 264, 284, 299, 477, 482, 524, 535], "219": [26, 38, 41, 251, 264, 284, 299, 438, 477, 482, 524, 535], "22": [12, 23, 26, 30, 32, 34, 38, 39, 41, 120, 122, 165, 167, 173, 235, 237, 239, 241, 243, 245, 249, 251, 253, 263, 264, 266, 268, 270, 272, 281, 284, 285, 287, 291, 293, 295, 297, 299, 307, 309, 311, 429, 431, 434, 438, 442, 444, 449, 451, 475, 477, 482, 509, 510, 521, 524, 533, 535], "220": [26, 38, 41, 251, 264, 284, 477, 482, 524, 535], "221": [26, 41, 251, 284, 477, 482, 524, 535], "222": [26, 38, 41, 251, 284, 299, 438, 477, 482, 524, 535], "223": [26, 38, 41, 251, 264, 284, 438, 477, 482, 524, 535], "224": [26, 38, 251, 264, 284, 477, 482, 524, 535], "225": [26, 38, 41, 251, 264, 284, 438, 477, 482, 524, 535], "226": [26, 38, 264, 284, 438, 477, 482, 524, 535], "227": [26, 38, 251, 264, 284, 438, 477, 482, 524, 535], "228": [26, 38, 251, 264, 284, 477, 482, 524], "229": [26, 38, 264, 438, 477, 524, 535], "23": [25, 26, 32, 34, 38, 39, 41, 42, 120, 122, 165, 168, 171, 173, 177, 235, 237, 239, 241, 243, 245, 253, 254, 263, 264, 266, 268, 270, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 305, 307, 309, 311, 352, 429, 431, 433, 434, 438, 442, 444, 449, 451, 475, 477, 482, 487, 509, 510, 521, 524, 533, 535, 537], "230": [26, 38, 251, 264, 284, 438, 477, 482, 524], "231": [26, 38, 41, 251, 264, 438, 477, 482, 524], "232": [26, 41, 264, 438, 477, 482, 524], "233": [26, 38, 41, 251, 264, 284, 438, 477, 482, 524], "234": [26, 38, 41, 173, 264, 284, 438, 477, 482, 524, 535], "235": [26, 41, 173, 264, 284, 477, 482, 524, 535], "236": [26, 38, 41, 173, 264, 284, 477, 482, 524, 535], "237": [26, 38, 41, 173, 264, 284, 477, 482, 524, 535], "238": [41, 173, 251, 264, 284, 477, 482, 524, 535], "239": [38, 41, 173, 251, 264, 284, 477, 482, 524, 535], "24": [12, 25, 26, 32, 34, 38, 39, 41, 120, 122, 165, 168, 171, 173, 177, 235, 237, 239, 241, 243, 245, 253, 263, 264, 266, 268, 270, 282, 284, 287, 289, 291, 293, 295, 297, 299, 305, 309, 311, 431, 433, 434, 438, 444, 449, 451, 475, 477, 482, 509, 510, 521, 524, 533, 535], "240": [38, 41, 173, 264, 284, 299, 477, 482, 524, 535], "241": [41, 173, 251, 264, 284, 299, 477, 482, 524, 535], "242": [38, 41, 173, 284, 299, 477, 482, 524, 535], "243": [38, 41, 173, 284, 299, 477, 482, 524, 535], "244": [41, 173, 284, 299, 477, 482, 524, 535], "245": [38, 41, 173, 477, 482, 524, 535], "246": [38, 41, 284, 477, 482, 524, 535], "247": [251, 284, 477, 482, 524, 535], "248": [38, 41, 251, 284, 477, 482, 524, 535], "249": [38, 251, 284, 477, 482, 524, 535], "25": [12, 25, 26, 32, 34, 38, 39, 41, 120, 122, 168, 171, 173, 175, 237, 239, 241, 243, 245, 253, 263, 264, 266, 268, 270, 282, 285, 287, 289, 291, 293, 295, 297, 299, 305, 309, 311, 313, 314, 431, 433, 434, 438, 444, 449, 451, 475, 477, 480, 482, 509, 510, 521, 524, 525, 533, 535], "250": [251, 284, 477, 482, 524], "251": [38, 251, 284, 477, 482, 524, 535], "252": [264, 284, 477, 482, 524, 535], "253": [41, 251, 264, 284, 477, 482, 524], "254": [41, 264, 284, 477, 524, 535], "255": [41, 264, 284, 477, 524, 535], "256": [41, 264, 284, 477, 524, 535], "257": [38, 41, 264, 284, 477, 524, 535], "258": [38, 264, 284, 477, 524, 535], "259": [38, 41, 264, 284, 477, 524], "26": [12, 25, 26, 32, 34, 39, 41, 118, 122, 168, 171, 173, 175, 177, 237, 239, 241, 243, 253, 263, 264, 266, 268, 270, 274, 279, 282, 287, 291, 293, 295, 297, 299, 303, 305, 309, 313, 433, 434, 438, 440, 449, 451, 475, 477, 482, 510, 521, 524, 533, 535], "260": [38, 251, 264, 284, 477, 524, 535], "261": [38, 251, 264, 284, 477, 524, 535], "262": [38, 251, 264, 284, 477, 524, 535], "263": [38, 251, 264, 477, 535], "264": [38, 41, 167, 173, 251, 264, 277, 279, 284, 477, 524, 535], "265": [38, 41, 264, 284, 477], "2654435769u": 309, "266": [38, 41, 251, 264, 284, 477, 535], "267": [38, 41, 264, 284, 477, 535], "268": [38, 41, 264, 284, 477, 535], "269": [264, 477, 524, 535], "27": [12, 25, 26, 32, 34, 39, 122, 168, 170, 171, 173, 175, 177, 232, 237, 239, 241, 243, 263, 264, 266, 268, 270, 274, 277, 279, 282, 287, 293, 297, 303, 305, 309, 434, 436, 438, 446, 449, 451, 475, 477, 482, 510, 521, 524, 533, 535], "270": [41, 264, 477, 524, 535], "271": [264, 477, 524], "272": [264, 477, 524, 535], "273": [41, 251, 264, 477, 524, 535], "274": [41, 251, 264, 477, 524, 535], "275": [41, 251, 264, 477, 524, 535], "276": [41, 251, 264, 477, 524, 535], "277": [41, 264, 477, 524], "278": [41, 42, 251, 264, 477, 524, 535], "279": [41, 264, 477, 524, 535], "28": [23, 25, 26, 30, 32, 34, 36, 122, 167, 168, 170, 173, 175, 232, 237, 239, 243, 249, 251, 263, 264, 268, 272, 274, 277, 281, 287, 293, 303, 305, 313, 436, 446, 449, 451, 475, 477, 486, 510, 521, 524, 533, 535], "280": [264, 477, 524, 535], "281": [41, 264, 477, 524, 535], "28155156327703": 254, "282": [264, 477, 524, 535], "283": [264, 477, 524], "284": [41, 264, 477, 535], "285": [41, 251, 264, 477, 535], "286": [41, 251, 264, 477, 535], "287": [41, 251, 264, 477, 535], "288": [41, 42, 251, 264, 477, 535], "289": [41, 251, 264, 477, 535], "29": [12, 25, 26, 30, 32, 34, 36, 39, 122, 167, 173, 177, 237, 239, 243, 249, 251, 263, 264, 268, 272, 274, 282, 285, 293, 303, 305, 307, 429, 436, 442, 446, 449, 451, 475, 477, 486, 510, 521, 524, 533, 535], "290": [41, 251, 264, 477, 535], "291": [41, 251, 264, 477, 535], "292": [264, 477], "293": [41, 251, 264, 477], "294": [251, 264, 477], "295": [251, 264, 477], "296": [41, 251, 264, 477], "297": [41, 251, 264, 477], "298": [41, 251, 264, 477], "2980539": 537, "2980632": 537, "299": [41, 251, 264, 477], "2d": [6, 11, 27, 32, 33, 34, 37, 38, 45, 47, 49, 51, 55, 57, 59, 61, 63, 67, 75, 77, 84, 86, 90, 94, 96, 100, 108, 119, 120, 121, 173, 229, 230, 238, 239, 240, 241, 243, 244, 245, 252, 253, 254, 261, 263, 264, 267, 268, 292, 293, 294, 306, 326, 441, 442, 448, 450, 454, 456, 458, 463, 464, 472, 474, 478, 479, 480, 481, 482, 483, 488, 490, 492, 496, 498, 505, 506, 508, 509, 510, 512, 517, 519, 520, 521], "2u": 431, "2x2": 173, "3": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 51, 65, 79, 88, 102, 118, 120, 122, 160, 165, 167, 168, 170, 171, 173, 175, 177, 178, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 294, 295, 297, 299, 301, 303, 304, 305, 306, 307, 309, 311, 313, 314, 330, 338, 375, 377, 429, 430, 431, 433, 434, 436, 438, 440, 442, 444, 446, 447, 449, 451, 475, 477, 482, 486, 487, 509, 510, 512, 519, 521, 524, 525, 533, 535], "30": [12, 25, 26, 32, 34, 36, 39, 165, 175, 232, 235, 237, 239, 243, 263, 264, 272, 277, 279, 282, 284, 285, 299, 303, 305, 307, 429, 436, 442, 446, 449, 451, 475, 477, 486, 510, 521, 524, 533, 535], "300": [41, 264, 477], "301": [41, 264, 477], "302": [41, 264, 477], "303": [41, 264, 477], "304": [264, 477], "305": [41, 264, 477], "306": 477, "307": 477, "308": [41, 477], "309": [41, 477], "31": [12, 25, 26, 30, 34, 36, 38, 39, 120, 165, 167, 170, 235, 239, 243, 245, 249, 251, 263, 264, 272, 274, 277, 279, 282, 284, 285, 303, 311, 429, 431, 444, 449, 451, 475, 477, 486, 509, 510, 521, 524, 533, 535], "310": [41, 477], "311": [41, 477], "312": [41, 477], "313": [41, 477], "314": [41, 477], "315": [41, 477], "316": 477, "317": [41, 477], "318": 477, "319": 477, "32": [12, 30, 34, 36, 38, 39, 41, 42, 120, 177, 179, 235, 237, 239, 245, 249, 251, 253, 263, 264, 282, 291, 295, 299, 303, 305, 307, 309, 311, 429, 431, 436, 442, 446, 449, 451, 475, 477, 486, 509, 510, 521, 524, 535], "320": [41, 477], "321": [41, 477], "322": [41, 477], "323": [41, 477], "324": [41, 477], "325": [41, 477], "326": [41, 477], "32634787735669": 254, "327": 477, "328": [41, 477], "329": 477, "33": [12, 26, 30, 34, 36, 39, 41, 165, 175, 177, 179, 235, 237, 241, 249, 251, 253, 263, 264, 266, 270, 272, 277, 282, 291, 295, 297, 299, 303, 309, 431, 436, 438, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 535], "330": 477, "331": [41, 477], "332": [41, 477], "333": [41, 477], "334": [41, 477], "335": [41, 477], "336": [41, 477], "337": [41, 477], "338": 477, "339": [41, 477], "34": [12, 30, 36, 38, 39, 42, 122, 175, 179, 235, 237, 241, 251, 264, 266, 270, 274, 279, 282, 287, 291, 297, 299, 303, 309, 311, 429, 431, 436, 438, 446, 449, 451, 475, 477, 482, 486, 487, 509, 510, 521, 524, 535, 537], "340": 477, "341": 477, "342": [41, 477], "343": [41, 477], "344": [41, 477], "345": [41, 477], "346": [41, 477], "347": [41, 477], "348": [41, 477], "349": [41, 477], "35": [12, 26, 30, 36, 38, 39, 41, 122, 170, 177, 179, 235, 249, 251, 253, 263, 264, 266, 268, 272, 274, 277, 279, 282, 287, 291, 293, 297, 299, 303, 309, 434, 436, 442, 446, 449, 451, 475, 486, 509, 510, 521, 524, 535], "350": 477, "351": [41, 477], "352": 477, "353": 477, "354": [41, 477], "355": [41, 477], "356": [41, 477], "357": [41, 477], "358": [41, 477], "359": [41, 477], "36": [12, 30, 32, 36, 39, 41, 170, 173, 175, 177, 179, 235, 237, 249, 251, 263, 264, 266, 268, 270, 272, 274, 277, 279, 282, 287, 293, 297, 303, 309, 429, 431, 436, 438, 442, 446, 449, 451, 475, 477, 482, 510, 519, 521, 524, 534, 535], "360": [41, 477], "361": [41, 477], "362": [41, 477], "363": [41, 477], "364": [41, 477], "365": 477, "366": [41, 477], "367": 477, "368": 477, "369": 477, "37": [26, 30, 32, 36, 38, 39, 41, 122, 170, 173, 179, 232, 235, 237, 243, 249, 251, 263, 264, 277, 279, 287, 291, 299, 303, 313, 431, 436, 438, 442, 446, 449, 451, 475, 509, 510, 521, 524], "370": 477, "371": 477, "372": [41, 477], "373": [41, 477], "374": [41, 477], "375": [41, 477], "376": [41, 477], "377": [41, 477], "378": [41, 477], "379": [41, 477], "38": [26, 30, 36, 38, 39, 41, 170, 177, 179, 232, 239, 243, 249, 251, 264, 266, 270, 272, 274, 279, 282, 284, 293, 297, 309, 313, 431, 434, 436, 438, 446, 449, 451, 475, 477, 482, 509, 510, 521, 524, 533, 535], "380": 477, "381": [41, 477], "382": 477, "383": 477, "384": [41, 477], "385": [41, 477], "386": 477, "387": [41, 477], "388": 477, "389": 477, "39": [26, 30, 32, 34, 36, 38, 39, 41, 170, 173, 175, 179, 232, 235, 237, 239, 249, 253, 263, 264, 270, 277, 282, 287, 293, 303, 305, 311, 313, 431, 434, 438, 442, 446, 449, 451, 475, 482, 510, 533], "390": 477, "391": 477, "392": [41, 477], "393": [41, 477], "394": [41, 477], "395": [41, 477], "396": [41, 477], "397": [41, 477], "398": [41, 477], "399": [41, 477], "3d": [12, 27, 33, 34, 57, 67, 73, 75, 88, 90, 121, 122, 229, 230, 236, 237, 238, 239, 249, 252, 253, 254, 261, 263, 264, 294, 306, 326, 490, 519], "3d_embed": [26, 32, 34, 38, 41, 120, 121, 122, 165, 167, 173, 177, 178, 179, 232, 235, 237, 239, 241, 243, 245, 249, 251, 253, 263, 264, 268, 270, 277, 282, 284, 293, 295, 307, 309, 311, 313, 431, 434, 436, 438, 442], "3x3": [254, 519, 534, 535], "4": [12, 13, 15, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 45, 49, 51, 67, 77, 79, 108, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 322, 330, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 512, 519, 521, 524, 533, 535], "40": [30, 34, 39, 122, 170, 175, 179, 235, 237, 243, 249, 251, 253, 264, 266, 277, 282, 297, 305, 311, 431, 436, 438, 451, 475, 477, 510], "400": [41, 477], "401": [41, 477], "402": [41, 477], "403": 477, "404": [41, 477], "405": 477, "406": 477, "407": 477, "408": [41, 477], "409": [41, 477], "41": [26, 30, 38, 39, 41, 170, 177, 179, 232, 235, 239, 249, 251, 253, 263, 264, 274, 277, 287, 305, 313, 431, 434, 436, 446, 451, 475, 482, 510, 533], "410": 477, "411": [41, 477], "415": 41, "416": 41, "418": 41, "419": 41, "42": [30, 32, 34, 38, 39, 122, 175, 177, 179, 232, 235, 237, 249, 270, 272, 274, 282, 305, 311, 436, 446, 451, 475, 477, 482, 510], "421": 41, "422": 41, "424": 41, "425": [41, 42], "427": 41, "428": 41, "43": [26, 30, 34, 39, 41, 177, 179, 235, 243, 249, 251, 253, 263, 274, 277, 282, 293, 305, 313, 446, 451, 475, 510, 535], "430": 41, "436": 41, "437": 41, "438": 41, "439": 41, "44": [32, 34, 38, 39, 41, 177, 179, 232, 237, 239, 251, 253, 270, 272, 277, 291, 293, 303, 305, 309, 311, 436, 442, 446, 451, 475, 477, 482, 510, 521, 524, 535], "440": 41, "441": 41, "442": 41, "443": 41, "444": 41, "445": 41, "446": 41, "447": 41, "448": 41, "449": 41, "45": [26, 30, 34, 39, 167, 177, 179, 235, 237, 239, 243, 249, 253, 263, 264, 272, 274, 277, 282, 291, 293, 303, 305, 307, 309, 311, 429, 434, 442, 446, 449, 451, 475, 477, 482, 510, 521, 524, 533], "450": 41, "451": 41, "452": 41, "453": 41, "454": 41, "456": 41, "46": [30, 32, 34, 39, 41, 42, 122, 167, 177, 179, 232, 235, 239, 249, 251, 263, 264, 272, 291, 299, 303, 305, 307, 309, 313, 429, 434, 442, 446, 449, 451, 475, 487, 510, 524, 533, 535, 537], "460": 41, "461": 41, "462": 41, "463": 41, "464": 41, "465": 41, "466": 41, "468": 41, "47": [26, 30, 39, 41, 167, 175, 177, 179, 235, 239, 251, 253, 266, 272, 277, 282, 291, 293, 299, 303, 305, 307, 309, 311, 429, 434, 442, 475, 477, 482, 510, 521, 524, 533], "472": 41, "473": 41, "474": 41, "475": 41, "476": 41, "477": 41, "478": 41, "479": 41, "48": [32, 34, 39, 41, 122, 167, 175, 177, 179, 232, 235, 239, 249, 264, 266, 270, 272, 277, 282, 291, 299, 303, 305, 309, 313, 429, 434, 436, 442, 446, 449, 475, 477, 521, 533], "480": 41, "481": 41, "483": 41, "486": 41, "487": 41, "488": 41, "489": 41, "49": [26, 30, 39, 41, 167, 175, 177, 179, 235, 237, 243, 249, 251, 263, 264, 266, 272, 274, 277, 282, 284, 291, 303, 305, 307, 309, 429, 434, 436, 438, 449, 475, 477, 509, 510, 524, 533], "490": 41, "492": 41, "495": 41, "496": 41, "497": 41, "498": 41, "499": 41, "4b": 11, "4d": 173, "5": [6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 55, 67, 75, 77, 79, 102, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 316, 322, 326, 330, 384, 404, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 480, 482, 486, 509, 510, 519, 521, 524, 525, 533, 535], "50": [32, 38, 39, 41, 167, 175, 177, 179, 232, 235, 237, 239, 241, 251, 253, 263, 264, 266, 270, 272, 274, 277, 282, 291, 299, 303, 305, 309, 313, 429, 434, 436, 438, 442, 449, 475, 477, 509, 510, 521, 533], "500": [477, 480], "5000": 479, "500ul": [26, 314, 482, 525], "501": 41, "504": 41, "505": 41, "506": 41, "507": 41, "508": 41, "51": [26, 30, 38, 39, 41, 167, 173, 175, 177, 179, 232, 235, 237, 243, 249, 253, 263, 264, 266, 274, 277, 282, 287, 291, 293, 297, 299, 305, 307, 309, 313, 429, 438, 442, 446, 449, 475, 477, 482, 509, 510, 533], "510": 41, "513": 41, "514": 41, "515": 41, "516": 41, "517": 41, "519": 41, "52": [30, 32, 38, 39, 122, 167, 173, 175, 177, 179, 235, 249, 251, 253, 263, 264, 266, 272, 277, 287, 291, 293, 297, 303, 305, 309, 313, 429, 434, 436, 446, 451, 475, 477, 482, 509, 510, 524, 533], "522": 41, "523": [38, 41], "523598": 479, "524": 41, "525": 41, "526": 41, "527": 41, "528": 41, "529": 41, "53": [26, 30, 39, 41, 165, 167, 173, 175, 177, 232, 243, 263, 264, 266, 272, 274, 277, 282, 287, 291, 293, 297, 299, 305, 307, 309, 313, 429, 436, 438, 442, 446, 449, 451, 475, 477, 509, 510, 521, 524, 533], "530": 41, "532": 41, "533": 41, "534": 41, "536": 41, "537": 41, "538": 41, "539": 41, "54": [26, 30, 32, 38, 39, 41, 122, 165, 167, 173, 175, 232, 237, 243, 249, 253, 263, 264, 266, 272, 277, 282, 287, 297, 309, 311, 313, 429, 436, 438, 442, 446, 449, 477, 482, 509, 510, 524, 533], "540": 41, "541": 41, "542": 41, "543": 41, "55": [26, 30, 38, 39, 41, 165, 167, 173, 175, 237, 243, 245, 249, 263, 264, 266, 270, 272, 277, 282, 287, 291, 293, 297, 305, 307, 309, 311, 313, 429, 446, 449, 451, 477, 482, 509, 510, 521, 524, 533, 535], "5555": 537, "56": [26, 30, 32, 39, 41, 165, 167, 173, 175, 232, 264, 266, 272, 277, 282, 284, 287, 291, 297, 307, 309, 311, 313, 429, 434, 436, 438, 442, 446, 449, 451, 477, 509, 510, 524, 535], "57": [26, 30, 32, 38, 39, 41, 165, 167, 173, 232, 243, 249, 251, 263, 264, 266, 270, 272, 277, 282, 284, 287, 295, 297, 303, 307, 309, 311, 313, 429, 434, 438, 442, 446, 451, 477, 482, 509, 510, 521, 524, 535], "58": [30, 32, 39, 41, 122, 165, 167, 173, 175, 232, 241, 249, 251, 263, 266, 272, 277, 282, 287, 291, 297, 299, 303, 309, 311, 313, 429, 434, 449, 451, 477, 482, 509, 510, 524, 535], "59": [30, 34, 38, 39, 165, 167, 173, 241, 251, 253, 263, 264, 266, 277, 282, 284, 287, 297, 299, 303, 307, 309, 311, 313, 429, 434, 438, 442, 446, 449, 451, 475, 477, 509, 510, 521, 524, 535], "6": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 55, 75, 77, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 316, 322, 326, 330, 369, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 482, 486, 509, 510, 521, 524, 533, 535], "60": [30, 32, 34, 38, 39, 41, 122, 165, 167, 173, 175, 232, 237, 239, 241, 243, 249, 253, 263, 264, 266, 272, 277, 282, 284, 287, 297, 299, 303, 305, 309, 311, 316, 429, 434, 436, 438, 442, 451, 475, 477, 479, 480, 509, 510, 521, 524, 535], "61": [30, 34, 39, 165, 173, 175, 232, 237, 243, 249, 251, 253, 263, 264, 266, 270, 274, 277, 282, 284, 287, 297, 299, 303, 305, 309, 311, 313, 429, 436, 446, 449, 477, 482, 509, 510, 524, 535], "62": [30, 38, 39, 165, 167, 173, 175, 232, 237, 239, 241, 243, 249, 253, 264, 266, 274, 277, 284, 287, 293, 297, 299, 301, 303, 305, 309, 311, 429, 434, 436, 438, 442, 446, 449, 451, 475, 477, 482, 509, 510, 521, 524, 535], "63": [30, 34, 38, 39, 165, 167, 173, 175, 237, 239, 241, 245, 253, 263, 264, 266, 270, 274, 277, 282, 287, 293, 297, 299, 301, 303, 305, 307, 309, 311, 429, 436, 438, 442, 446, 451, 475, 477, 510, 521, 524, 535], "64": [26, 30, 38, 39, 122, 165, 167, 173, 175, 232, 237, 239, 241, 243, 245, 249, 253, 263, 264, 266, 268, 272, 274, 277, 282, 284, 287, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 429, 436, 442, 446, 449, 475, 477, 509, 510, 524, 535], "64485362793663": 254, "65": [30, 34, 39, 120, 122, 165, 167, 173, 232, 237, 241, 245, 249, 253, 263, 264, 266, 272, 274, 277, 282, 284, 287, 291, 293, 295, 297, 299, 301, 307, 309, 311, 313, 429, 436, 438, 442, 446, 449, 451, 477, 482, 509, 510, 521, 524, 535], "66": [38, 39, 165, 167, 173, 175, 232, 237, 239, 241, 247, 253, 263, 264, 266, 272, 274, 277, 282, 284, 287, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 434, 436, 442, 446, 451, 475, 477, 482, 510, 521, 524, 535], "67": [30, 34, 38, 39, 122, 165, 167, 173, 232, 237, 241, 245, 249, 251, 253, 263, 264, 266, 272, 274, 277, 282, 284, 287, 291, 293, 297, 299, 301, 309, 313, 429, 434, 436, 442, 446, 449, 475, 477, 509, 510, 535], "68": [39, 122, 165, 167, 173, 232, 237, 239, 241, 245, 249, 251, 253, 263, 264, 266, 270, 272, 274, 277, 284, 287, 291, 293, 295, 297, 299, 301, 307, 309, 429, 434, 442, 446, 449, 451, 475, 477, 509, 510, 521, 524], "69": [34, 38, 39, 122, 165, 167, 173, 232, 237, 241, 245, 251, 253, 263, 264, 266, 270, 274, 277, 282, 284, 287, 291, 293, 297, 299, 307, 309, 313, 429, 434, 436, 442, 451, 477, 509, 510, 521, 524, 535], "6x6": [519, 534, 535], "7": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "70": [26, 38, 39, 42, 165, 173, 175, 237, 239, 245, 249, 253, 264, 266, 274, 277, 282, 284, 287, 291, 293, 297, 299, 309, 429, 434, 436, 438, 442, 446, 449, 475, 477, 482, 509, 510, 521, 524], "71": [34, 39, 122, 165, 173, 175, 232, 237, 241, 245, 249, 251, 253, 263, 264, 266, 270, 274, 277, 282, 284, 287, 291, 293, 299, 303, 305, 307, 309, 429, 434, 438, 442, 449, 451, 475, 477, 482, 509, 510], "713": [42, 487, 537], "72": [34, 38, 39, 165, 173, 175, 232, 237, 239, 245, 253, 263, 264, 266, 270, 274, 277, 282, 284, 287, 291, 293, 297, 299, 303, 305, 307, 309, 429, 431, 434, 436, 442, 451, 475, 477, 509, 510, 524], "720": [42, 487, 537], "73": [26, 38, 39, 165, 173, 175, 232, 237, 245, 249, 253, 263, 264, 266, 270, 277, 282, 284, 287, 291, 297, 303, 305, 309, 313, 429, 431, 434, 436, 438, 442, 449, 451, 475, 477, 509, 510, 524], "74": [26, 32, 34, 39, 120, 165, 173, 175, 232, 237, 239, 245, 249, 253, 263, 264, 274, 277, 282, 284, 287, 291, 293, 295, 297, 299, 303, 305, 307, 309, 313, 429, 431, 434, 436, 438, 446, 449, 475, 477, 482, 510, 521], "75": [26, 32, 38, 39, 41, 165, 173, 232, 237, 239, 241, 251, 263, 264, 266, 268, 270, 277, 282, 284, 287, 289, 291, 295, 297, 299, 303, 305, 307, 309, 429, 431, 434, 436, 446, 451, 475, 477, 482, 509, 510, 521, 524], "76": [26, 32, 38, 39, 41, 165, 173, 237, 241, 245, 249, 251, 253, 263, 264, 277, 282, 284, 287, 291, 295, 297, 305, 309, 313, 429, 431, 434, 438, 446, 449, 451, 475, 477, 509, 510, 521], "77": [26, 39, 41, 165, 173, 232, 237, 239, 241, 243, 249, 251, 253, 263, 274, 277, 282, 284, 287, 291, 295, 297, 299, 303, 305, 307, 429, 431, 434, 436, 446, 449, 475, 477, 482, 509, 510], "78": [26, 32, 38, 39, 165, 173, 232, 237, 241, 243, 251, 253, 263, 266, 270, 274, 284, 287, 291, 295, 297, 299, 305, 307, 431, 434, 436, 446, 451, 475, 477, 482, 509, 510, 521, 535], "79": [26, 30, 34, 38, 39, 41, 122, 165, 173, 232, 237, 241, 243, 245, 249, 266, 270, 274, 277, 282, 284, 287, 291, 293, 297, 307, 309, 429, 431, 434, 436, 438, 449, 451, 477, 509, 510, 521, 524, 535], "8": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 102, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "80": [26, 30, 32, 34, 39, 122, 165, 173, 232, 237, 241, 245, 249, 251, 253, 263, 264, 266, 274, 277, 282, 284, 287, 293, 295, 297, 299, 307, 313, 431, 434, 438, 449, 475, 477, 482, 510, 524, 535], "81": [26, 30, 34, 38, 39, 41, 122, 165, 173, 232, 237, 241, 243, 245, 253, 264, 266, 270, 274, 277, 282, 284, 291, 293, 297, 299, 307, 313, 431, 434, 436, 449, 451, 475, 477, 482, 509, 510, 521, 524, 535], "82": [26, 30, 32, 34, 38, 39, 120, 122, 165, 173, 232, 237, 239, 241, 245, 249, 253, 263, 264, 266, 274, 282, 284, 287, 291, 293, 299, 303, 307, 313, 431, 434, 436, 438, 451, 475, 477, 509, 510, 521, 535], "83": [26, 30, 39, 41, 120, 122, 165, 173, 237, 239, 241, 243, 245, 249, 264, 266, 270, 277, 282, 284, 287, 293, 297, 303, 307, 313, 431, 434, 436, 438, 449, 475, 477, 482, 510, 524, 535], "84": [26, 30, 32, 34, 38, 39, 120, 122, 165, 173, 232, 237, 239, 241, 245, 249, 251, 253, 263, 264, 266, 268, 270, 274, 277, 282, 284, 287, 291, 293, 297, 299, 303, 307, 313, 431, 434, 438, 449, 451, 475, 477, 482, 509, 510, 521, 524, 535], "85": [26, 30, 38, 39, 41, 122, 165, 232, 237, 241, 243, 249, 251, 253, 264, 266, 268, 274, 284, 287, 291, 293, 297, 299, 303, 313, 431, 434, 436, 438, 451, 475, 477, 482, 509, 510, 521, 524, 535], "86": [26, 30, 32, 38, 39, 42, 120, 165, 232, 237, 239, 241, 249, 263, 264, 266, 268, 270, 274, 277, 282, 284, 287, 293, 295, 297, 303, 307, 429, 431, 434, 436, 438, 449, 475, 477, 509, 510, 524, 535], "87": [26, 32, 38, 39, 41, 122, 165, 173, 232, 237, 241, 243, 251, 253, 263, 264, 266, 270, 274, 284, 287, 291, 293, 295, 297, 299, 303, 307, 309, 429, 431, 434, 436, 449, 451, 475, 477, 509, 510, 521, 524, 535], "88": [26, 38, 39, 122, 165, 232, 237, 241, 245, 249, 253, 263, 264, 266, 268, 274, 284, 287, 291, 293, 295, 297, 299, 303, 307, 309, 429, 431, 434, 438, 451, 475, 477, 482, 509, 510, 521, 524, 535], "889486": 537, "89": [26, 30, 32, 34, 38, 39, 41, 42, 165, 237, 241, 243, 245, 249, 253, 263, 264, 266, 268, 270, 274, 284, 287, 293, 295, 299, 307, 309, 429, 431, 434, 436, 438, 449, 477, 482, 509, 510, 524, 535], "9": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "90": [26, 34, 38, 39, 120, 122, 165, 232, 237, 241, 243, 245, 253, 263, 264, 266, 274, 284, 287, 291, 297, 299, 303, 307, 309, 429, 431, 434, 436, 449, 451, 475, 477, 509, 510, 521, 524], "900": 254, "91": [26, 34, 38, 39, 41, 120, 122, 165, 232, 239, 241, 245, 249, 253, 264, 266, 268, 274, 284, 287, 291, 293, 295, 297, 299, 303, 307, 309, 429, 431, 434, 436, 438, 451, 475, 477, 482, 509, 510, 521, 524, 535], "92": [26, 34, 38, 41, 120, 165, 232, 239, 241, 243, 245, 249, 264, 266, 274, 277, 297, 299, 303, 307, 309, 429, 431, 434, 436, 438, 449, 475, 477, 482, 509, 510, 524], "93": [26, 34, 38, 39, 120, 122, 165, 232, 239, 241, 245, 253, 264, 266, 270, 274, 277, 284, 287, 291, 299, 303, 307, 309, 431, 434, 436, 449, 451, 477, 509, 510, 521, 524], "94": [26, 34, 38, 39, 41, 120, 122, 165, 232, 239, 245, 249, 251, 264, 266, 270, 274, 277, 287, 291, 297, 299, 303, 307, 309, 434, 438, 475, 477, 482, 509, 510, 521, 524], "95": [32, 34, 38, 41, 120, 165, 232, 239, 249, 251, 264, 266, 274, 277, 284, 287, 291, 295, 297, 303, 309, 429, 431, 434, 436, 438, 449, 475, 477, 482, 509, 510, 524], "950": 254, "96": [26, 32, 34, 38, 122, 165, 173, 232, 237, 239, 245, 251, 264, 268, 270, 274, 277, 287, 291, 295, 297, 299, 303, 307, 309, 434, 436, 449, 451, 477, 482, 509, 510, 521], "9658": [27, 229, 261], "9660": [27, 178, 261, 452, 464, 471, 483, 498, 505, 517], "9670": [29, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 169, 174, 254, 265, 271, 273, 278, 286, 290, 296, 298, 302, 304, 308, 322, 330, 332, 334, 336, 338, 340, 344, 348, 360, 372, 382, 384, 386, 391, 393, 398, 402, 404, 406, 408, 412, 414, 416, 420, 422, 428, 430, 435, 445, 454, 456, 458, 488, 490, 492, 512, 519, 523, 530], "97": [34, 38, 41, 120, 165, 173, 232, 237, 239, 249, 251, 264, 266, 268, 274, 277, 287, 291, 293, 295, 297, 299, 303, 307, 309, 431, 438, 451, 475, 477, 482, 510, 521, 524, 535], "972": 524, "9780262201629": 537, "98": [32, 34, 38, 173, 232, 237, 239, 249, 251, 253, 264, 266, 268, 274, 277, 284, 287, 291, 293, 295, 297, 307, 436, 438, 449, 475, 477, 482, 510, 521, 535], "99": [30, 34, 38, 41, 173, 232, 237, 239, 243, 251, 253, 264, 266, 268, 274, 277, 287, 291, 293, 295, 299, 309, 436, 449, 451, 475, 477, 479, 480, 510, 521, 535], "990": 254, "999": [254, 430, 431], "A": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 71, 100, 116, 228, 229, 230, 231, 237, 254, 276, 310, 393, 447, 460, 470, 479, 480, 494, 504, 506], "AND": [40, 41, 254, 282, 395], "AS": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "And": 338, "As": 3, "But": [1, 291], "For": [0, 3, 4, 5, 100, 249, 251, 348], "If": [0, 5, 30, 43, 65, 105, 254, 265, 291, 393, 408, 414, 416, 428, 431, 438, 454, 456, 458, 488, 519, 524], "In": [4, 6, 29, 42, 79, 98, 487, 524, 537], "It": [1, 4, 43, 45, 47, 49, 51, 53, 55, 65, 71, 77, 92, 98, 100, 102, 105, 230, 254, 302, 332, 438, 472, 477, 478, 479, 480, 488, 506, 525], "Its": [65, 254, 402, 403, 446, 447], "NOT": [282, 395], "No": [65, 266, 454, 456], "Not": [243, 291], "OF": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "OR": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 40, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 395, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "On": 6, "Ones": [251, 295], "That": [65, 96], "The": [2, 3, 4, 5, 6, 18, 19, 29, 31, 33, 34, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 119, 121, 164, 165, 166, 169, 172, 174, 176, 228, 231, 234, 236, 238, 239, 240, 242, 244, 248, 250, 252, 254, 264, 265, 267, 269, 271, 273, 276, 278, 283, 286, 290, 291, 292, 294, 296, 298, 302, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 428, 430, 435, 437, 438, 441, 445, 447, 454, 456, 458, 470, 477, 479, 480, 481, 485, 488, 490, 492, 504, 508, 512, 519, 520, 523, 525, 527, 529, 530], "Then": [5, 16, 21], "There": [1, 6, 438, 524], "These": [2, 13, 17, 296], "To": [2, 3, 4, 270, 298], "Will": [110, 338], "_": [429, 480], "_angular_resolut": [524, 530, 531], "_angular_resolutionresolut": 530, "_linear_resolut": [524, 530, 531], "_linear_resolutionresolut": 530, "_model": 4, "_t": 4, "aa": 479, "ab": [122, 266, 270, 274, 434, 524], "abil": 102, "abl": [4, 22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "abort": [454, 456, 458], "about": [12, 122, 251, 254, 524], "abov": [4, 92, 105, 228, 302, 431, 438, 470, 504], "absolut": [5, 302], "abstract": [3, 36, 119, 120, 147, 154, 178, 243, 244, 245, 253, 267, 268, 277, 279, 283, 294, 307, 442], "academ": [0, 1], "accept": [92, 105, 302], "access": [3, 13, 15, 27, 29, 32, 34, 36, 41, 65, 71, 122, 147, 150, 164, 165, 167, 172, 173, 178, 228, 229, 231, 232, 239, 243, 254, 261, 264, 270, 277, 279, 283, 284, 287, 291, 299, 309, 311, 398, 412, 420, 431, 451, 456, 470, 504], "accord": [19, 32, 43, 254, 263, 332, 480, 488], "accordingli": [43, 488], "account": 254, "accumul": [166, 167, 172, 173, 265, 266, 348, 434], "acquir": 6, "action": [2, 3, 16, 26, 35, 36, 43, 67, 68, 94, 95, 100, 116, 122, 146, 147, 174, 175, 178, 202, 216, 219, 229, 230, 270, 271, 272, 273, 274, 281, 311, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 382, 386, 391, 447, 482, 524], "action_closur": [30, 265, 266, 338], "actioncontrol": [67, 94], "actionsact": 123, "actionsinclud": [130, 131], "activ": [449, 454, 458, 475, 477, 480], "actual": [105, 479, 480], "ad": [17, 102, 254, 477, 479, 480, 525], "adapt": [11, 26, 27, 29, 42, 43, 229, 254, 261, 291, 314, 402, 404, 406, 412, 430, 445, 446, 447, 481, 482, 483, 486, 487, 488, 496, 498, 505, 506, 512, 517, 525, 537], "adaptor": [23, 27, 29, 30, 145, 155, 169, 178, 229, 230, 261, 265, 266, 278, 286, 287, 290, 291, 296, 297, 298, 299, 338, 340, 342, 344, 346, 348, 350, 404, 406, 410, 414, 416, 418, 428, 429, 430, 431, 438, 444, 445, 446, 447], "adaptor_bas": 291, "add": [39, 100, 105, 438, 524], "addit": [20, 34, 239, 254, 410, 492], "addition": 65, "addressof": [71, 232, 291, 299], "adjust": [43, 488], "adl": [18, 254, 398, 420, 511, 517, 524, 534, 535], "adopt": [1, 2, 3, 5], "advanc": [41, 291, 438], "advantag": 4, "affect": 3, "afford": [3, 15, 478], "after": [2, 4, 43, 65, 71, 102, 173, 230, 232, 298, 408, 479, 480, 488], "again": [32, 237, 479, 480, 482, 525], "against": [79, 81, 237, 302], "agent": [42, 487, 537], "aggreg": [3, 41, 65, 479, 480], "agnost": [479, 480], "agre": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "aid": 506, "aka": [17, 59], "algebra": 447, "algorithm": [3, 4, 6, 27, 30, 31, 32, 35, 36, 43, 59, 61, 63, 69, 97, 102, 110, 112, 114, 147, 178, 183, 192, 204, 206, 218, 221, 229, 236, 237, 242, 243, 254, 261, 265, 266, 271, 272, 273, 274, 286, 287, 291, 296, 297, 298, 299, 314, 320, 338, 340, 342, 344, 346, 348, 350, 388, 397, 404, 408, 414, 416, 418, 429, 431, 437, 438, 446, 447, 448, 450, 463, 464, 474, 475, 481, 486, 488, 496, 498, 506, 523, 524], "algorithm_": 293, "algorithma": 96, "algorithmbeam_model": 140, "algorithminclud": [132, 133, 134], "algorithmon_effective_size_drop": 138, "algorithmrai": 96, "alia": [40, 105, 121, 254, 264, 277, 294, 306, 435, 436, 451, 456], "alias": 309, "align": [84, 88], "alignedbox2d": [27, 85, 116, 200, 202, 214, 216, 229, 252, 253, 254, 261], "alignedbox3d": [27, 89, 116, 200, 202, 214, 216, 229, 234, 235, 237, 252, 253, 254, 261], "alik": 5, "all": [4, 5, 6, 20, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 147, 173, 178, 180, 182, 183, 184, 185, 186, 189, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 228, 229, 230, 238, 239, 242, 243, 246, 254, 255, 258, 261, 262, 264, 275, 276, 277, 288, 291, 292, 293, 299, 300, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 431, 432, 438, 439, 445, 446, 453, 454, 455, 456, 457, 458, 459, 464, 465, 466, 470, 474, 476, 484, 485, 488, 489, 490, 491, 492, 493, 496, 498, 499, 500, 504, 512, 514, 516, 517, 518, 522, 524, 525, 526, 527, 528, 530, 531], "alloc": [3, 27, 65, 105, 107, 168, 229, 251, 254, 261, 437, 438], "allocator_typ": [41, 65, 66, 105, 106, 180, 222, 438], "allocator_typealloc": [41, 438], "allocator_typevoid": [41, 438], "allof": 303, "allow": [14, 25, 27, 92, 152, 172, 178, 229, 254, 261, 265, 308, 309, 397, 447, 477, 479, 480, 482, 490, 525], "almost_equal_to": [494, 499, 501, 503, 505, 523, 524, 530, 531], "almost_equal_toalmost_equal_to": 524, "almost_equal_tostd": 524, "alon": [523, 524], "along": [13, 96, 293, 482, 525], "alpha": [69, 70, 177, 523, 524], "alpha1": [322, 336, 477, 480], "alpha2": [322, 336, 477, 480], "alpha3": [322, 336, 477, 480], "alpha4": [322, 336, 477, 480], "alpha5": [336, 477, 480], "alpha_": 177, "alpha_fast": [26, 102, 103, 180, 225, 314, 434, 482, 499, 503, 525], "alpha_fastbeluga": 315, "alpha_fastbeluga_ro": 526, "alpha_fastdecai": 102, "alpha_fastdoubl": [26, 482], "alpha_fastexponenti": 482, "alpha_fastus": 26, "alpha_slow": [26, 102, 103, 180, 225, 314, 434, 482, 499, 503, 525], "alpha_slowbeluga": 315, "alpha_slowbeluga_ro": 526, "alpha_slowdecai": 102, "alpha_slowdoubl": [26, 482], "alpha_slowexponenti": 482, "alpha_slowus": 26, "alphabet": [229, 471, 505], "alphahuetorgba": [523, 524], "alphahuetorgbabeluga_ro": 524, "alphath": 69, "alreadi": [6, 34, 239, 243, 254, 285], "also": [5, 16, 17, 19, 21, 43, 55, 77, 298, 322, 336, 344, 454, 456, 458, 479, 480, 488], "altern": [5, 6, 18], "alwai": [29, 41, 254, 393, 414, 425, 428, 445], "always_reset_initial_pos": [479, 480], "amcl": [1, 6, 11, 26, 27, 32, 44, 116, 180, 189, 190, 195, 198, 203, 207, 211, 217, 223, 229, 243, 254, 261, 314, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 483, 485, 486, 489, 494, 496, 498, 499, 501, 502, 505, 506, 509, 510, 512, 517, 521, 524, 525], "amcl_cor": [43, 178, 314, 474, 475], "amcl_nod": [454, 463, 464, 479, 480], "amcl_nodelet": [456, 463, 464], "amcl_pos": 479, "amclamcl": [26, 482], "amclconfig": [450, 451, 456, 457], "amclconfigserv": [451, 456, 457, 465, 468], "amclconfigserverdynamic_reconfigur": 451, "amclconfigservertyp": 451, "amcldefinit": 482, "amclimplement": 26, "amclinlin": 489, "amclnod": [448, 449, 455, 460, 465, 467, 469, 472], "amclnode2d": [449, 471], "amclnodeamclnod": 449, "amclnodeexplicit": 455, "amclnodelet": [450, 451, 457, 460, 465, 467, 468, 469, 472], "amclnodelet2d": [451, 471], "amclnodeletmutableprotect": 457, "amclnodeletprotect": 457, "amclnodeletprotectedstat": 457, "amclnodeprotect": 455, "amclnodeprotectedstat": 455, "amclparam": [26, 43, 44, 116, 180, 212, 214, 218, 220, 223, 225, 254, 315, 481, 482, 488, 489, 494, 499, 503, 512, 526], "amclparamsstruct": [26, 229, 482, 505], "american": 42, "amount": [308, 393], "amp": [12, 26, 27, 30, 32, 34, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 120, 122, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 202, 205, 216, 218, 219, 220, 222, 229, 232, 237, 239, 241, 243, 245, 249, 250, 251, 252, 253, 254, 255, 257, 261, 263, 264, 266, 268, 270, 272, 274, 282, 284, 285, 287, 291, 293, 295, 297, 299, 302, 303, 304, 305, 307, 308, 309, 311, 313, 320, 321, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 384, 385, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 429, 431, 434, 435, 436, 437, 438, 442, 446, 449, 451, 454, 455, 456, 457, 458, 459, 475, 477, 482, 488, 489, 490, 492, 493, 509, 510, 511, 512, 519, 521, 523, 524, 530, 531, 532, 533, 534, 535], "amplitud": 243, "an": [2, 3, 4, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 40, 41, 43, 53, 55, 61, 65, 69, 71, 77, 79, 90, 92, 94, 96, 102, 105, 112, 114, 118, 120, 122, 146, 152, 157, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 228, 229, 230, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 298, 299, 301, 302, 303, 305, 307, 309, 311, 313, 330, 336, 338, 340, 342, 353, 358, 380, 382, 386, 398, 412, 414, 420, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 442, 444, 446, 449, 451, 454, 456, 458, 470, 475, 477, 479, 480, 482, 486, 488, 504, 509, 510, 511, 519, 521, 523, 524, 527, 532, 533, 534, 535], "analyz": 41, "andino": [6, 11], "andom_interspers": [291, 404], "angl": [14, 34, 47, 239, 241, 254, 273, 391, 490, 491, 499, 501, 509], "angle_incr": 509, "angle_min": 509, "anglesauto": 509, "anglez": 12, "angular": [26, 314], "angular_clustering_resolut": [110, 111, 309], "angular_clustering_resolutionclust": 110, "angular_resolut": [499, 503, 512, 523, 524, 530], "angular_resolutionangular": 512, "angular_resolutionbeluga_ro": 531, "angular_resolutionconst": 524, "angular_resolutionresolut": 524, "ani": [2, 4, 6, 12, 19, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 43, 71, 96, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 229, 231, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 261, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 298, 299, 301, 303, 305, 307, 309, 311, 313, 314, 393, 408, 410, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 454, 456, 458, 475, 477, 479, 480, 482, 486, 509, 510, 521, 524, 533, 535], "anoth": [16, 41, 65, 71, 79, 228, 232, 251, 470, 504], "any_polici": [26, 254, 255, 259, 282, 482], "any_view": 26, "anyth": 1, "apach": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "apertur": [34, 239], "api": [2, 26, 28, 35, 98, 147, 178, 181, 184, 196, 230, 258, 262, 453, 466, 472, 484, 485, 486, 496, 498, 500, 506, 516, 518, 524, 532, 534], "append": [29, 105], "appli": [3, 43, 169, 230, 239, 340, 344, 348, 393, 438, 479, 480, 488], "applic": [1, 3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 447, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "approach": [6, 249], "appropri": [2, 3, 254], "approxim": [2, 4, 249, 254, 479, 480, 525], "apt": 5, "ar": [1, 2, 4, 5, 6, 13, 15, 17, 18, 19, 27, 29, 34, 41, 43, 51, 55, 57, 65, 75, 77, 79, 81, 90, 96, 100, 105, 173, 228, 230, 239, 254, 264, 287, 296, 334, 344, 414, 425, 428, 429, 438, 445, 452, 470, 479, 480, 483, 488, 504, 524, 537], "arg": [5, 27, 34, 39, 57, 116, 221, 222, 229, 254, 261, 282, 356, 393, 394, 435, 436], "argument": [6, 19, 39, 43, 92, 96, 105, 254, 266, 287, 297, 298, 299, 302, 340, 342, 344, 346, 348, 350, 393, 404, 406, 410], "arithmet": [19, 21, 27, 37, 38, 59, 92, 229, 254, 261], "around": [90, 100, 243, 298, 330, 479, 480, 482, 525], "arra": [41, 65], "arrai": [26, 27, 38, 40, 41, 65, 112, 114, 115, 116, 118, 149, 169, 178, 202, 205, 216, 218, 220, 222, 229, 230, 251, 254, 261, 264, 295, 308, 309, 425, 427, 436, 447, 492, 512, 519, 521, 534, 535], "arrayarrai": 114, "arrow": [63, 228, 470, 480, 504, 524], "arrow_bodi": 524, "arrow_body_bas": 524, "arrow_head": 524, "arrow_head_bas": 524, "arrow_head_left_corn": 524, "arrow_head_right_corn": 524, "arrow_head_tip": 524, "as_common_tuple_indirect_fn": [116, 202, 216, 403, 445, 446], "as_common_tuple_indirect_fninlin": 403, "as_common_tuple_indirect_fnutil": [229, 446], "as_const": 179, "asdiagon": 251, "assert": [243, 253, 264, 299, 307, 434, 442, 446, 509], "assert_that": 302, "assign": [4, 22, 23, 26, 27, 39, 59, 65, 79, 105, 106, 155, 178, 180, 190, 229, 230, 251, 261, 338, 438, 482, 512, 523, 524], "assign_fn": [29, 30, 116, 202, 216, 219, 339], "assign_fnfriend": 339, "assign_fnimplement": [30, 229], "assign_fninlin": 339, "assign_particle_cloud": [512, 514, 515, 523, 524], "assign_particle_cloudbeluga_ro": 524, "assign_rang": [105, 106, 180, 190, 438], "assign_rangeconstexpr": 438, "assignconstexpr": [30, 438], "assigndefinit": 30, "assoaci": [32, 316], "associ": [32, 42, 79, 98, 251, 307, 316], "assum": [6, 34, 239, 254, 298, 299, 332, 398, 408, 416, 431, 479, 480, 523, 527], "atan": 524, "atan2": [34, 122, 239, 270], "atconstexpr": 41, "attach": [479, 480], "attribut": [286, 314, 316, 318, 322, 324, 326, 328, 330, 332, 334, 336, 372, 384, 404, 454, 456, 458, 525, 527, 530], "auto": [26, 30, 32, 34, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 67, 75, 77, 81, 90, 94, 96, 98, 100, 105, 108, 120, 122, 164, 165, 166, 167, 169, 170, 173, 175, 179, 237, 239, 241, 243, 245, 251, 254, 264, 266, 268, 270, 272, 274, 277, 278, 279, 282, 284, 287, 291, 293, 295, 297, 299, 302, 303, 305, 307, 309, 311, 338, 340, 342, 344, 346, 348, 350, 360, 380, 384, 386, 393, 395, 398, 402, 404, 408, 410, 414, 416, 418, 420, 429, 430, 431, 435, 436, 438, 446, 449, 451, 454, 456, 458, 475, 477, 482, 488, 490, 492, 509, 510, 521, 524, 535], "autocovari": 173, "automat": 254, "autonom": [42, 487, 537], "autostart": [477, 480], "autostart_callback": [449, 454, 455, 458, 459, 465, 467, 475], "autostart_callbackvoid": [449, 475], "autostart_delai": [477, 480], "autostart_timer_": [449, 454, 458, 465, 469, 475], "autostart_timer_beluga_amcl": [455, 459], "autostart_timer_rclcpp": [449, 475], "autostart_timer_tim": [449, 475], "auxiliar": [158, 234], "avail": [5, 6, 65, 86, 254, 479, 480], "averag": [102, 173, 254, 477, 479, 480, 482, 525], "average_weight": 434, "avoid": [3, 41, 102, 309, 436, 477, 479, 480, 482, 525], "axi": [12, 13, 45, 51, 84, 88, 110, 112, 114, 122, 245, 254, 309, 477, 482, 525], "a\u017eman": 39, "b": [28, 38, 39, 40, 41, 116, 181, 182, 184, 191, 196, 225, 237, 254, 255, 465, 469, 524, 530, 531], "ba": 482, "back": [41, 65, 66, 182, 191, 254, 438], "back_insert": 438, "backconstexpr": 41, "backward": [122, 270], "bad": [438, 479, 480, 525], "bag": 6, "bare": 3, "base": [4, 26, 27, 33, 39, 43, 45, 47, 49, 51, 53, 86, 102, 110, 119, 120, 146, 174, 178, 229, 230, 238, 240, 241, 244, 245, 253, 254, 261, 267, 268, 270, 271, 272, 273, 274, 281, 282, 286, 290, 294, 295, 307, 353, 386, 388, 391, 395, 430, 431, 434, 436, 438, 442, 447, 477, 478, 479, 480, 482, 488, 523, 524], "base_footprint": [477, 479, 480], "base_frame_id": [477, 479, 480], "base_pose_in_odom": [482, 488, 489], "base_pose_in_odombas": 488, "basedensegrid2": [46, 49, 50, 51, 52, 108, 109, 116, 119, 120, 183, 185, 192, 193, 201, 215, 229, 245, 254, 492, 493, 505], "basedensegrid2dens": [120, 245], "baselaserscan": [2, 48, 116, 203, 217, 229, 240, 241, 254, 490, 491, 505, 506, 509], "baselaserscanlas": 241, "baselineargrid2": [50, 51, 52, 108, 109, 116, 183, 185, 192, 193, 198, 201, 211, 215, 229, 244, 245, 254, 268, 442, 492, 493, 505], "baselineargrid2linear": [245, 268, 442], "baseoccupancygrid2": [2, 52, 116, 183, 187, 189, 192, 195, 202, 216, 229, 252, 253, 254, 267, 268, 492, 493, 505, 506, 521], "baseoccupancygrid2occup": [253, 268], "baseregulargrid": [45, 46, 49, 50, 51, 52, 54, 98, 99, 108, 109, 116, 183, 192, 229, 254, 294, 295, 307, 492, 493, 505], "baseregulargrid2": [120, 254, 255, 259, 294, 295], "baseregulargrid3": [254, 255, 259, 294, 295], "baseregulargridregularli": [120, 295, 307], "bash": 5, "basi": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 447, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "basic": [73, 236, 254], "bay": 4, "bayesian": [1, 4, 42], "beam": [14, 31, 32, 55, 75, 153, 178, 229, 230, 239, 254, 301, 316, 447, 477, 479, 480, 490], "beam_bear": 32, "beam_max_rang": [32, 182, 225, 316], "beam_max_rangebeluga": 317, "beam_max_rangedoubl": 32, "beam_max_rangemaximum": 32, "beam_model": [55, 153, 178, 300, 301, 316], "beam_skip_dist": 480, "beam_skip_error_threshold": 480, "beam_skip_threshold": 480, "beammodelparam": [31, 32, 55, 75, 116, 182, 213, 220, 225, 227, 254, 317], "beammodelparamparamet": [32, 229], "beamsensormodel": [21, 27, 31, 32, 56, 77, 116, 182, 191, 202, 207, 214, 216, 217, 220, 222, 223, 226, 229, 230, 254, 261, 316, 482, 488], "beamsensormodelbeam": 32, "beamsensormodelbeamsensormodel": 32, "bear": [27, 32, 33, 34, 57, 73, 75, 96, 97, 153, 178, 229, 230, 234, 235, 237, 239, 254, 261, 293, 301, 318, 324, 326, 328, 447], "bearing_error": [34, 239], "bearing_error_prob": [34, 239], "bearing_sensor_model": [57, 153, 178, 300, 301, 318], "bearingdirect": 96, "bearingmodelparam": [33, 34, 57, 116, 220, 225, 254, 319], "bearingmodelparamparamet": [34, 229], "bearingsensormodel": [21, 27, 33, 34, 58, 116, 182, 191, 202, 207, 214, 216, 217, 220, 222, 223, 226, 229, 230, 254, 261, 318], "bearingsensormodel2d": [33, 34, 254, 255, 259], "bearingsensormodel3d": [33, 34, 254, 255, 259], "bearingsensormodelbearingsensormodel": 34, "bearingsensormodelgener": 34, "becam": 1, "becaus": [1, 29, 55, 77, 105, 228, 239, 243, 264, 429, 470, 490, 504, 524], "becom": 1, "been": [3, 75, 274, 388, 391, 480], "befor": [5, 71, 232, 302, 435, 438, 477, 479, 480, 482, 524, 525], "begin": [4, 38, 41, 61, 62, 65, 66, 105, 106, 173, 182, 191, 237, 266, 287, 297, 299, 438], "begin_adaptor": 291, "begin_cursor": 299, "beginauto": 38, "beginconstexpr": [41, 438], "behav": [40, 254], "behavior": [55, 65, 71, 105], "being": [4, 19, 34, 65, 237, 254, 330, 430, 431], "bel": 4, "belief": [4, 254], "belong": [255, 514], "below": [230, 254, 271, 480], "beluga": [0, 1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 148, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 255, 256, 257, 258, 259, 260, 261, 262, 275, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 478, 479, 480, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 525, 526, 527, 528, 529, 530, 531, 536], "beluga_3d_embedding_hpp": 12, "beluga_actions_assign_hpp": 30, "beluga_actions_hpp": 23, "beluga_actions_normalize_hpp": 266, "beluga_actions_propagate_hpp": 287, "beluga_actions_reweight_hpp": 297, "beluga_algorithm_amcl_core_hpp": 26, "beluga_algorithm_distance_map_hpp": 165, "beluga_algorithm_effective_sample_size_hpp": 167, "beluga_algorithm_estimation_hpp": 173, "beluga_algorithm_exponential_filter_hpp": 177, "beluga_algorithm_hpp": 25, "beluga_algorithm_raycasting_bresenham_hpp": 38, "beluga_algorithm_raycasting_hpp": 293, "beluga_algorithm_spatial_hash_hpp": 309, "beluga_algorithm_thrun_recovery_probability_estimator_hpp": 434, "beluga_amcl": [5, 454, 455, 456, 457, 458, 459, 460, 464, 465, 467, 468, 469, 472], "beluga_amcl_amcl_node_hpp": 449, "beluga_amcl_amcl_nodelet_hpp": 451, "beluga_amcl_ndt_amcl_node_hpp": 475, "beluga_amcl_ros2_common_hpp": 477, "beluga_amclamclnod": [454, 455], "beluga_amclamclnodelet": [456, 457], "beluga_amclndtamclnod": [458, 459], "beluga_beluga_hpp": 36, "beluga_containers_circular_array_hpp": 41, "beluga_containers_hpp": 118, "beluga_containers_tuple_vector_hpp": 438, "beluga_eigen_compatibility_hpp": 168, "beluga_exampl": [5, 6], "beluga_motion_differential_drive_model_hpp": 122, "beluga_motion_hpp": 247, "beluga_motion_omnidirectional_drive_model_hpp": 270, "beluga_motion_stationary_model_hpp": 311, "beluga_policies_every_n_hpp": 175, "beluga_policies_hpp": 281, "beluga_policies_on_effective_size_drop_hpp": 272, "beluga_policies_on_motion_hpp": 274, "beluga_policies_policy_hpp": 282, "beluga_primitives_hpp": 284, "beluga_prologue_includ": [171, 285], "beluga_random_hpp": 289, "beluga_random_multivariate_distribution_traits_hpp": 249, "beluga_random_multivariate_normal_distribution_hpp": 251, "beluga_random_multivariate_uniform_distribution_hpp": 253, "beluga_ro": [2, 5, 448, 449, 450, 451, 454, 455, 456, 457, 474, 475, 477, 488, 489, 490, 491, 492, 493, 494, 498, 499, 501, 502, 503, 506, 511, 513, 514, 515, 519, 525, 526, 527, 528, 529, 530, 531], "beluga_ros_amcl_hpp": 482, "beluga_ros_beluga_ros_hpp": 486, "beluga_ros_laser_scan_hpp": 509, "beluga_ros_messages_hpp": 510, "beluga_ros_occupancy_grid_hpp": 521, "beluga_ros_particle_cloud_hpp": 524, "beluga_ros_tf2_eigen_hpp": 533, "beluga_ros_tf2_sophus_hpp": 535, "beluga_ros_vers": [510, 521, 533, 535], "beluga_rosamcl": [488, 489], "beluga_rosamclparam": [525, 526], "beluga_rosdetailalmost_equal_to": [529, 530, 531], "beluga_roslaserscan": [490, 491], "beluga_rosmsg": 513, "beluga_rosoccupancygrid": [492, 493], "beluga_rosoccupancygridvaluetrait": [527, 528], "beluga_rosth": [482, 509, 510, 521, 524], "beluga_sensor_beam_model_hpp": 32, "beluga_sensor_bearing_sensor_model_hpp": 34, "beluga_sensor_data_dense_grid_hpp": 120, "beluga_sensor_data_landmark_map_hpp": 237, "beluga_sensor_data_laser_scan_hpp": 241, "beluga_sensor_data_linear_grid_hpp": 245, "beluga_sensor_data_ndt_cell_hpp": 263, "beluga_sensor_data_occupancy_grid_hpp": 268, "beluga_sensor_data_regular_grid_hpp": 295, "beluga_sensor_data_sparse_value_grid_hpp": 307, "beluga_sensor_data_value_grid_hpp": 442, "beluga_sensor_hpp": 301, "beluga_sensor_landmark_sensor_model_hpp": 239, "beluga_sensor_likelihood_field_model_hpp": 243, "beluga_sensor_ndt_sensor_model_hpp": 264, "beluga_testing_hpp": 433, "beluga_testing_sophus_matchers_hpp": 303, "beluga_testing_sophus_printers_hpp": 305, "beluga_type_traits_hpp": 440, "beluga_type_traits_particle_traits_hpp": 277, "beluga_type_traits_strongly_typed_numeric_hpp": 313, "beluga_type_traits_tuple_traits_hpp": 436, "beluga_types_landmark_detection_types_hpp": 235, "beluga_utility_forward_like_hpp": 179, "beluga_utility_indexing_iterator_hpp": 232, "beluga_views_elements_hpp": 170, "beluga_views_hpp": 444, "beluga_views_particles_hpp": 279, "beluga_views_random_intersperse_hpp": 291, "beluga_views_sample_hpp": 299, "beluga_views_take_evenly_hpp": 429, "beluga_views_take_while_kld_hpp": 431, "beluga_views_zip_hpp": 446, "belugaactionsdetailassign_fn": [338, 339], "belugaactionsdetailnormalize_base_fn": [340, 341], "belugaactionsdetailnormalize_fn": [342, 343], "belugaactionsdetailpropagate_base_fn": [344, 345], "belugaactionsdetailpropagate_fn": [346, 347], "belugaactionsdetailreweight_base_fn": [348, 349], "belugaactionsdetailreweight_fn": [350, 351], "belugaamcl": [43, 44], "belugaamclparam": [314, 315], "belugabasedensegrid2": [45, 46], "belugabaselaserscan": [47, 48], "belugabaselineargrid2": [49, 50], "belugabaseoccupancygrid2": [51, 52], "belugabaseregulargrid": [53, 54], "belugabeammodelparam": [316, 317], "belugabeamsensormodel": [55, 56], "belugabearingmodelparam": [318, 319], "belugabearingsensormodel": [57, 58], "belugabresenham2i": [59, 60], "belugabresenham2ilin": [61, 62], "belugabresenham2ilineiter": [63, 64], "belugabresenham2ilineiteratorsentinel": [320, 321], "belugacirculararrai": [65, 66], "belugacommon_tuple_typ": [352, 353, 354], "belugadecay_tuple_lik": [355, 356, 357], "belugadetailcellhash": [358, 359], "belugadetailmake_from_state_fn": [360, 361], "belugadifferentialdrivemodel": [67, 68], "belugadifferentialdrivemodelparam": [322, 323], "belugaexponentialfilt": [69, 70], "belugahas_common_tuple_typ": [362, 363], "belugahas_single_el": [364, 365], "belugainclud": [123, 124, 125, 126, 127, 128, 129], "belugaindexingiter": [71, 72], "belugais_tuple_lik": 366, "belugalandmarkbearingdetect": [324, 325], "belugalandmarkmap": [73, 74], "belugalandmarkmodelparam": [326, 327], "belugalandmarkpositiondetect": [328, 329], "belugalandmarksensormodel": [75, 76], "belugalikelihoodfieldmodel": [77, 78], "belugalikelihoodfieldmodelparam": [330, 331], "belugamultivariate_distribution_trait": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "belugamultivariatenormaldistribut": [79, 80], "belugamultivariatenormaldistributionparam": [81, 82], "belugamultivariateuniformdistribut": [83, 84, 85, 86, 87, 88, 89], "belugandtcel": [332, 333], "belugandtmodelparam": [334, 335], "belugandtsensormodel": [90, 91], "beluganumer": [92, 93], "belugaomnidirectionaldrivemodel": [94, 95], "belugaomnidirectionaldrivemodelparam": [336, 337], "belugaparticle_trait": [378, 379], "belugapolici": [393, 394], "belugapoliciesdetailevery_n_fn": [380, 381], "belugapoliciesdetailevery_n_polici": [382, 383], "belugapoliciesdetailon_effective_size_drop_polici": [384, 385], "belugapoliciesdetailon_motion_fn": [386, 387], "belugapoliciesdetailon_motion_polici": [388, 389], "belugapoliciesdetailon_motion_policy_bas": [390, 391, 392], "belugapolicy_bas": [395, 396], "belugaray2d": [96, 97], "belugasparsevaluegrid": [98, 99], "belugaspatial_hash": [110, 111, 112, 113, 114, 115, 397], "belugastate_detailstate_fn": [398, 399], "belugastationarymodel": [100, 101], "belugath": [12, 26, 32, 34, 38, 41, 120, 122, 165, 167, 173, 177, 179, 232, 235, 237, 239, 241, 243, 245, 249, 251, 253, 263, 264, 268, 270, 277, 282, 284, 293, 295, 307, 309, 311, 313, 431, 434, 436, 438, 442], "belugathrunrecoveryprobabilityestim": [102, 103], "belugatuple_index": [400, 401], "belugatuplecontain": [104, 105, 106], "belugatuplevector": 107, "belugavaluegrid2": [108, 109], "belugaviewsdetailas_common_tuple_indirect_fn": [402, 403], "belugaviewsdetailrandom_intersperse_fn": [404, 405], "belugaviewsdetailrandom_intersperse_view": [406, 407], "belugaviewsdetailsample_base_fn": [408, 409], "belugaviewsdetailsample_fn": [410, 411], "belugaviewsdetailsample_view": [412, 413], "belugaviewsdetailtake_evenly_fn": [414, 415], "belugaviewsdetailtake_while_kld_fn": [416, 417], "belugaviewsdetailzip_fn": [418, 419], "belugaweight_detailweight_fn": [420, 421], "benchmark_likelihood_field_model": 243, "bernoulli_distribut": 291, "best": [5, 6, 447], "better": [77, 105], "between": [26, 34, 65, 71, 102, 228, 230, 232, 239, 254, 290, 309, 314, 322, 336, 404, 470, 477, 479, 480, 482, 504, 525], "bibliographi": [275, 522], "bin_weight": 524, "binari": 3, "bind": [272, 384], "bind_back": [29, 30, 266, 272, 287, 290, 291, 297, 299, 429, 431], "bit": [79, 81, 308, 309], "bitset": [308, 309], "bitwis": [40, 41, 254], "black": [228, 470, 504], "blackwel": [42, 487, 537], "blob": 105, "blue": [228, 470, 504], "bodi": [1, 524], "bolic": 42, "bond": [448, 449, 454, 458, 474, 475, 477, 480], "bond_": [449, 454, 458, 465, 469, 475], "bond_beluga_amcl": [455, 459], "bond_nod": [449, 475], "bond_std": [449, 475], "bondcpp": [448, 449, 474, 475, 477], "book": 537, "bool": [17, 26, 30, 38, 40, 41, 45, 49, 51, 63, 65, 71, 79, 81, 105, 108, 120, 165, 175, 179, 232, 251, 254, 268, 272, 274, 277, 282, 284, 291, 299, 314, 320, 382, 384, 388, 391, 393, 394, 435, 436, 438, 449, 451, 454, 456, 458, 475, 482, 492, 521, 524, 525, 527, 530], "boolean": [51, 230, 268, 393, 479, 480], "boost": 358, "bootstrap": [4, 11], "border": [228, 470, 504], "borrow": [55, 57, 75, 77, 90], "both": [6, 18, 27, 32, 33, 34, 57, 61, 65, 75, 92, 173, 229, 230, 238, 239, 243, 254, 261, 263, 326, 332, 393, 445, 478, 479, 523, 524], "bound": [27, 55, 57, 75, 77, 84, 88, 90, 229, 252, 253, 254, 261, 344, 451, 456], "boundari": [73, 74, 228, 234, 237, 254, 470, 504], "boundarieslimit": 73, "box": [3, 84, 85, 88, 89, 228, 253, 470, 504], "boxth": [84, 88], "bresenham": [59, 61, 63, 163, 178, 229, 254, 292, 293, 320], "bresenham2i": [37, 38, 60, 61, 62, 63, 64, 96, 116, 182, 185, 186, 187, 188, 191, 194, 198, 199, 202, 211, 212, 213, 216, 217, 218, 222, 224, 229, 254, 293, 320, 321], "bresenham2ibresenham": [38, 229], "bresenham2ibresenham2i": 38, "bresenham2iinlin": 60, "bresenham2iinlineexplicit": 60, "bridg": 2, "brief": [27, 178, 261, 452, 464, 483, 498, 517], "bright": [480, 524], "broadcast": [449, 451, 454, 456, 458, 475], "broader": 4, "browser": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "bucket": [431, 477, 479, 480, 482, 525], "buffer": [448, 449, 450, 451, 454, 456, 458, 474, 475], "build": [1, 6, 478], "built": [5, 447, 479, 480], "burgard": [42, 487, 537], "burn": 3, "c": [2, 28, 41, 116, 145, 169, 178, 181, 183, 184, 192, 196, 222, 225, 230, 254, 255, 352, 429, 436, 444, 447, 465, 467, 469, 536], "cach": [3, 105], "cache1": [428, 429], "calcul": [4, 25, 27, 32, 34, 57, 90, 110, 112, 114, 152, 164, 166, 167, 172, 173, 178, 229, 237, 239, 243, 254, 261, 272, 308, 309, 330, 384, 397, 479, 480], "calculate_covari": [172, 173, 254, 255, 257], "calculate_covariancesophu": 173, "calculate_weighted_sample_covari": 173, "call": [17, 26, 29, 43, 146, 174, 175, 178, 230, 281, 282, 382, 393, 416, 438, 519], "callab": 254, "callabl": [16, 21, 43, 67, 69, 94, 96, 100, 176, 229, 254, 298, 308, 344, 348, 397, 404, 406, 416, 430, 431], "callback": [449, 451, 454, 456, 458, 475], "callbackreturn": [449, 454, 458, 475], "calmost_equal_to": [483, 517], "calmost_equal_tostd": [483, 517], "cambridg": [42, 487, 537], "camcl": [483, 517], "camclimplement": [27, 261], "camclnode2d": 452, "camclnodelet2d": 452, "camclparamsstruct": [27, 261, 483, 517], "can": [1, 2, 3, 4, 5, 6, 13, 18, 20, 26, 29, 34, 43, 55, 57, 65, 71, 73, 75, 77, 105, 107, 230, 239, 254, 265, 271, 272, 286, 296, 298, 302, 338, 348, 393, 398, 416, 420, 435, 438, 479, 480, 524], "candid": 524, "cannot": [41, 263], "canon": 519, "capabl": 43, "capac": [105, 106, 183, 192, 438], "capacityconstexpr": 438, "caption": 4, "cardin": 291, "care": [3, 298], "carlo": [1, 2, 11, 26, 27, 43, 229, 254, 261, 314, 447, 481, 482, 483, 486, 488, 496, 498, 505, 512, 517, 525], "cartesian": [32, 47, 241], "cartograph": 6, "cas_common_tuple_indirect_fnutil": [27, 261], "case": [1, 3, 6, 29, 32, 34, 65, 102, 173, 239, 254, 316, 438, 480, 524], "cassert": 264, "cassign_fnimplement": [27, 261], "cast": [32, 96, 97, 183, 192, 264, 293, 295], "castabl": [96, 229, 254, 292], "caststd": 293, "categori": [34, 38, 63, 71, 73, 183, 225, 234, 235, 237, 239, 254, 324, 328], "categorybeluga": [325, 329], "categorycategori": 235, "categorylandmarkcategori": 235, "catkin_make_isol": 5, "caus": 4, "cbasedensegrid2dens": [27, 261], "cbaselaserscanlas": [27, 261], "cbaselineargrid2linear": [27, 261], "cbaseoccupancygrid2occup": [27, 261], "cbaseregulargridregularli": [27, 261], "cbeammodelparamparamet": [27, 261], "cbeamsensormodelbeam": [27, 261], "cbearingmodelparamparamet": [27, 261], "cbearingsensormodelgener": [27, 261], "cbegin": [32, 34, 41, 65, 66, 183, 192, 239, 243, 264], "cbeginconstexpr": 41, "cbeluga": [229, 505], "cbeluga_amcl": 471, "cbeluga_ro": 505, "cbresenham2ibresenham": [27, 261], "ccellhash": [27, 261], "cciabatta": 229, "ccirculararrayan": [27, 261], "ccommon_tuple_typ": [27, 261], "ccommon_tuple_typemeta": [27, 261], "cdecay_tuple_lik": [27, 261], "cdecay_tuple_likemeta": [27, 261], "cdecltyp": 229, "cdetail": 229, "cdifferentialdrivemodelparamparamet": [27, 261], "cdifferentialdrivemodelsampl": [27, 261], "ceil": 431, "cell": [13, 15, 17, 20, 27, 37, 38, 45, 46, 49, 50, 51, 52, 53, 54, 61, 63, 86, 90, 96, 98, 99, 108, 109, 120, 164, 165, 229, 243, 245, 254, 261, 263, 264, 268, 293, 295, 307, 332, 333, 334, 442, 492, 493, 521, 527], "cell_at": 20, "cell_grid": 264, "cell_index": [98, 99, 307], "cell_is_valid": 293, "cell_near": [45, 46, 49, 50, 51, 52, 53, 54, 98, 99, 108, 109, 120, 183, 192, 264, 268, 293, 295, 307, 492, 493], "cell_neareigen": [295, 307], "cell_posit": 293, "cellhash": [116, 202, 216, 229, 264, 359, 474, 475], "cellhasherdefinit": 264, "cells_data": [90, 91, 264], "cells_data_": 264, "cells_dataset": 264, "cells_dataspars": 90, "cells_matrix": 264, "cellsrang": [51, 53], "cend": [32, 34, 41, 65, 66, 183, 192, 239, 243, 264], "cendconstexpr": 41, "center": [100, 173, 243, 264, 330], "centroid": [49, 53, 96], "certain": [230, 271], "cevery_n_fnimplement": [27, 261], "cevery_n_policyimplement": [27, 261], "cexponentialfiltercal": [27, 261], "chain_inherit": 39, "chang": [266, 480], "changelog": 39, "chapter": [55, 67, 75, 77, 102, 322, 330], "character": 254, "charg": [479, 480], "chas_common_tuple_typ": [27, 261], "chas_common_tuple_typemeta": [27, 261], "chas_single_el": [27, 261], "chas_single_elementmeta": [27, 261], "chash": [27, 261], "cheap": 298, "cheapli": 393, "check": [5, 13, 27, 40, 41, 45, 49, 51, 71, 105, 108, 229, 254, 261, 362, 388, 390, 391, 435, 436, 521, 527], "checks_": 38, "choic": 5, "chrome": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "ciabatta": [178, 240, 241, 294, 295], "ciabatta_ciabatta_hpp": 39, "ciabatta_top": [39, 229, 241, 295], "cindexingiteratora": [27, 261], "circl": 173, "circuit": [282, 395], "circular": [26, 27, 40, 41, 65, 118, 149, 173, 178, 229, 230, 254, 261, 425, 427], "circular_arrai": [26, 38, 65, 117, 118, 149, 178, 425, 427], "circulararrai": [27, 38, 40, 41, 66, 116, 180, 182, 183, 185, 186, 189, 190, 191, 192, 193, 194, 195, 200, 202, 203, 204, 205, 211, 214, 216, 217, 218, 220, 221, 222, 224, 229, 230, 254, 261, 426, 482], "circulararrayan": [26, 41], "circulararraycirculararrai": 41, "circulararrayfeatureflag": [40, 41, 65, 254, 255, 256, 425, 427], "circulararrayfeatureflagscirculararrayfeatureflagsfeatur": 41, "circularli": [79, 251], "cis_tuple_likemeta": [27, 261], "cite": 251, "citeratorbresenham": [27, 261], "clamp": 434, "clandmarkbearingdetectionlandmark": [27, 261], "clandmarkmapbas": [27, 261], "clandmarkmodelparamparamet": [27, 261], "clandmarkpositiondetectionlandmark": [27, 261], "clandmarksensormodelgener": [27, 261], "claserscanthin": [483, 517], "class": [2, 3, 26, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 119, 120, 121, 122, 164, 165, 166, 167, 172, 173, 174, 176, 177, 179, 228, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 282, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 320, 338, 340, 342, 344, 346, 348, 350, 357, 360, 365, 367, 368, 369, 372, 375, 377, 378, 384, 386, 388, 390, 391, 393, 395, 397, 398, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 428, 429, 430, 431, 434, 435, 436, 437, 438, 441, 442, 445, 446, 448, 449, 450, 451, 470, 474, 475, 481, 482, 493, 504, 508, 509, 510, 511, 512, 519, 520, 521, 523, 524, 529, 532, 533, 534, 535], "classif": 42, "clear": [41, 65, 66, 105, 106, 183, 192, 438, 524], "clearconstexpr": 438, "clearvoid": 41, "client": [451, 456], "clikelihoodfieldmodellikelihood": [27, 261], "clikelihoodfieldmodelparamparamet": [27, 261], "clinebresenham": [27, 261], "close": [1, 34, 55, 173], "closest": 239, "closur": [29, 30, 175, 230, 266, 274, 287, 291, 297, 299, 338, 340, 342, 344, 346, 348, 350, 380, 386, 404, 410, 414, 416, 429, 431], "cloud": [32, 55, 77, 90, 243, 264, 449, 451, 454, 456, 458, 475, 486, 496, 498, 506, 512, 523, 524], "cluster": [254, 255, 259, 283, 284], "clustertag": [254, 283, 284], "clutter": 55, "cmake": 5, "cmake_from_state_fnfunct": [27, 261], "cmath": [31, 32, 33, 34, 238, 239, 240, 241, 242, 243, 294, 295, 308, 309, 430, 431, 520, 521, 523, 524], "cmultivariate_distribution_trait": [27, 261], "cmultivariate_distribution_traitsforward": [27, 261], "cmultivariatenormaldistributionmultivari": [27, 261], "cmultivariatenormaldistributionparammultivari": [27, 261], "cmultivariateuniformdistribut": [27, 261], "cmultivariateuniformdistributionprimari": [27, 261], "cndtamclnode2d": 452, "cndtcellrepresent": [27, 261], "cndtmodelparamparamet": [27, 261], "cndtsensormodelndt": [27, 261], "cnodelet": 471, "cnormalize_base_fnimplement": [27, 261], "cnormalize_fnimplement": [27, 261], "cnumeric_limit": [27, 229, 261], "cnumerichelp": [27, 261], "co": [241, 535], "coccupancygridthin": [483, 517], "code": [1, 3, 11, 22, 24, 29, 31, 33, 35, 37, 40, 117, 119, 121, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 166, 169, 172, 174, 176, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 358, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 463, 474, 481, 485, 496, 508, 520, 523, 532, 534], "coeff": 535, "coeffici": [173, 305], "coeffref": [173, 535], "cognit": 3, "coincid": 480, "col": [264, 304, 305], "colcon": 5, "collabor": [0, 45, 47, 49, 51, 53, 61, 98, 107, 108, 342, 346, 350, 362, 363, 364, 365, 366, 388, 393, 401, 406, 410, 412, 424, 427, 454, 456, 458, 490, 492], "collect": [2, 4], "color": [480, 523, 524], "color_rgba": 510, "colorrgba": [510, 523, 524], "colsatcompiletim": [249, 251, 372], "colsth": 304, "column": [249, 251, 304], "colwis": 264, "com": [0, 5, 32, 105, 243, 254, 352, 366, 398, 420, 524, 537], "combin": [40, 41, 243, 254, 330, 447, 474, 475, 524], "come": [2, 7, 8, 9, 10, 538, 539, 540, 541], "command": 6, "comment": [228, 470, 504], "commerci": 0, "common": [4, 27, 172, 173, 229, 254, 261, 263, 264, 265, 266, 276, 286, 287, 296, 297, 298, 299, 352, 353, 362, 363, 378, 431, 435, 436, 438], "common_tupl": [105, 438, 446], "common_tuple_typ": [27, 116, 221, 222, 229, 254, 261, 353, 354, 435, 436], "common_tuple_type_t": [27, 67, 94, 100, 116, 122, 229, 254, 255, 259, 261, 270, 311, 435, 436], "common_tuple_type_tconveni": 436, "common_tuple_type_ttypenam": 436, "common_tuple_typemeta": 436, "common_typ": 352, "common_type_t": [291, 353, 436], "common_types_t": 352, "commun": [479, 480], "comnidirectionaldrivemodelparamparamet": [27, 261], "comnidirectionaldrivemodelsampl": [27, 261], "compar": [4, 79, 81, 165, 254, 302, 435, 438, 530], "compat": [6, 79, 230, 251, 447, 472, 478, 506, 512, 513], "compil": [3, 65, 291, 309], "complet": [4, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 102, 103, 106, 109, 111, 113, 115, 229, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 354, 356, 359, 361, 370, 371, 373, 374, 376, 379, 381, 383, 385, 387, 389, 392, 394, 396, 399, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 426, 455, 457, 459, 471, 489, 491, 493, 505, 526, 528, 531], "complex": [3, 4, 65, 173, 309], "complianc": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "compliant": 43, "compon": [2, 75, 173, 230, 472, 506], "compos": [3, 26, 39, 230, 266, 277, 287, 291, 297, 340, 342, 344, 346, 348, 350, 393, 404, 414, 416, 429, 431, 447, 448, 449, 452, 454, 458, 471, 472, 474, 475, 479, 480, 482], "composit": [30, 338], "comput": [3, 4, 13, 15, 27, 32, 41, 43, 45, 49, 51, 53, 55, 57, 59, 67, 71, 75, 77, 86, 94, 96, 98, 100, 102, 108, 172, 173, 229, 243, 254, 261, 264, 296, 334, 348, 352, 416, 436], "computation": [55, 77, 264], "compute_free_st": 253, "compute_offset": 299, "con_effective_size_drop_policyimplement": [27, 261], "con_motion_fnimplement": [27, 261], "con_motion_policy_bas": [27, 261], "con_motion_policy_baseprimari": [27, 261], "con_motion_policybas": [27, 261], "concept": [1, 2, 3, 26, 105, 119, 154, 230, 237, 244, 267, 271, 272, 294, 298], "concret": 39, "condens": 480, "condit": [4, 12, 16, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 55, 57, 67, 75, 77, 90, 94, 100, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 230, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 384, 393, 429, 430, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "conditional_t": [90, 264, 334], "confer": [42, 487, 537], "config": [451, 456, 457], "config_": [451, 456, 465, 469], "config_beluga_amcl": [451, 457], "config_callback": [451, 456, 457, 465, 467], "config_callbackvoid": 451, "config_curr": 451, "config_server_": [451, 456, 465, 469], "config_server_beluga_amcl": [451, 457], "config_server_std": 451, "configur": [34, 43, 55, 57, 67, 75, 77, 90, 94, 122, 239, 243, 264, 270, 447, 449, 451, 454, 456, 458, 475, 477, 479, 480, 488], "configured_": [451, 456, 465, 469], "configured_beluga_amcl": 457, "configured_bool": 451, "configured_flag": 451, "confus": 309, "conjunction_v": [277, 284, 398, 420], "connect": [13, 15, 45, 49, 51, 108, 120, 245, 449, 451, 454, 456, 458, 475], "consid": [5, 26, 65, 228, 237, 273, 314, 470, 477, 479, 480, 490, 504], "consist": [4, 17, 26, 172, 173, 230, 254, 428], "const": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 32, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 120, 122, 165, 167, 172, 173, 175, 202, 216, 232, 237, 239, 241, 243, 245, 249, 250, 251, 252, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 282, 284, 287, 291, 293, 295, 297, 299, 302, 303, 304, 305, 307, 308, 309, 311, 313, 320, 321, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 358, 359, 360, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 384, 386, 388, 389, 391, 392, 393, 398, 399, 402, 403, 404, 408, 410, 414, 416, 418, 420, 421, 429, 431, 434, 435, 436, 437, 438, 442, 446, 449, 451, 454, 455, 456, 457, 458, 459, 474, 475, 482, 488, 489, 490, 492, 493, 509, 511, 519, 521, 524, 530, 531, 532, 533, 534, 535], "const_": 277, "const_iter": [41, 65, 66, 183, 222], "const_iteratorconst": 41, "const_iteratorindexingiter": 41, "const_point": [41, 65, 66, 183, 222], "const_pointerconst": 41, "const_refer": [41, 65, 66, 183, 222], "const_referenceconst": 41, "const_reverse_iter": [41, 65, 66, 183, 222], "const_reverse_iteratorconst": 41, "const_reverse_iteratorstd": 41, "constant": [40, 41, 65, 122, 243, 254, 270, 477, 482, 525], "constarrow": 38, "constbeluga": [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 74, 76, 78, 80, 82, 91, 95, 97, 99, 101, 106, 109, 111, 113, 115, 321, 333, 341, 343, 345, 347, 349, 351, 359, 361, 381, 385, 387, 405, 409, 411, 415, 417, 419, 491, 493], "constbeluga_amcl": 459, "constbeluga_ro": [489, 491, 493, 531], "constcalcul": 309, "constcast": 293, "constcheck": [120, 268], "constcompar": [251, 524], "constcomput": [38, 120, 122, 245, 268, 270, 293, 295, 307, 311], "constdefinit": [263, 264], "constderefer": 38, "constequ": 38, "constexpr": [26, 29, 30, 34, 39, 40, 41, 65, 69, 86, 92, 102, 105, 112, 114, 122, 169, 170, 174, 175, 177, 179, 239, 249, 251, 253, 254, 263, 264, 265, 266, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 290, 291, 296, 297, 298, 299, 308, 309, 313, 332, 338, 340, 342, 344, 346, 348, 350, 360, 368, 369, 372, 375, 377, 380, 382, 384, 386, 388, 391, 393, 395, 398, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 428, 429, 430, 431, 434, 435, 436, 438, 445, 446, 477, 521, 524, 527], "constexprnoexcept": [254, 435], "constfind": [34, 237, 239], "constgener": 251, "constget": [120, 245, 268, 307, 442, 475, 509, 521], "consthash": 264, "constinequ": 38, "constoverload": [175, 266, 272, 274, 287, 291, 297, 299, 429, 431, 446], "constptr": [451, 456, 457, 510], "constrain": 75, "constraint": [229, 253], "constraintth": 83, "constretriev": 268, "constreturn": [26, 32, 34, 38, 41, 237, 239, 243, 251, 264, 277, 438, 482], "construct": [19, 26, 27, 31, 32, 33, 34, 38, 41, 43, 55, 57, 59, 61, 63, 65, 67, 69, 71, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 105, 108, 110, 112, 114, 121, 122, 173, 229, 232, 238, 239, 242, 243, 251, 253, 254, 261, 264, 269, 270, 291, 299, 307, 309, 316, 318, 322, 326, 330, 334, 336, 406, 412, 437, 438, 442, 524, 530], "constructor": [19, 34, 38, 39, 41, 43, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 102, 105, 108, 110, 112, 114, 122, 175, 232, 237, 239, 243, 264, 270, 274, 282, 291, 299, 309, 313, 382, 391, 393, 406, 412, 438, 449, 454, 458, 475, 482, 488, 490, 492, 530], "constsampl": 299, "constsentinel": 38, "constsharedptr": [449, 454, 455, 458, 459, 475, 510], "constview": 241, "contain": [2, 3, 6, 13, 15, 26, 27, 29, 35, 36, 43, 45, 46, 49, 50, 51, 52, 65, 67, 71, 94, 98, 100, 102, 104, 105, 107, 108, 109, 112, 114, 120, 147, 150, 178, 183, 192, 228, 229, 230, 231, 232, 254, 261, 293, 307, 314, 384, 416, 425, 427, 443, 447, 470, 481, 482, 483, 488, 492, 493, 504, 505, 512, 517, 525], "containerscontain": 124, "containersinclud": [135, 136], "containsbool": 120, "content": 79, "contigu": [15, 65, 154, 178, 230, 244, 268, 290, 442], "continu": [264, 479, 480], "contribut": 5, "control": [3, 4, 16, 67, 68, 94, 95, 100, 101, 122, 270, 311], "control_act": [26, 43, 44], "control_action_typ": [94, 100], "control_action_window_": [26, 482], "control_actioncontrol": 43, "control_typ": [16, 67, 68, 94, 95, 100, 101, 122, 183, 222, 270, 311], "control_type_2d": 122, "control_type_3d": 122, "control_typecurr": [122, 270, 311], "control_typestd": [122, 270, 311], "controla": [67, 94, 100], "conveni": [40, 41, 92, 105, 254, 294, 302, 306, 435, 438], "converg": [102, 480], "convers": [3, 29, 30, 31, 32, 33, 34, 92, 105, 238, 239, 242, 243, 282, 393, 479, 480, 486, 496, 498, 506, 511, 517, 519, 524, 532, 533, 534, 535], "convert": [16, 29, 30, 32, 230, 237, 239, 249, 298, 309, 368, 369, 372, 375, 377, 477, 511, 519, 524, 532, 533, 534, 535], "convini": [121, 254, 474], "coordin": [13, 15, 17, 20, 45, 47, 49, 51, 53, 86, 98, 99, 108, 110, 241, 243, 245, 268, 295, 307, 309, 477, 479, 480, 524, 530], "coordinates_at": [15, 17, 20, 45, 46, 49, 50, 51, 52, 53, 54, 98, 99, 108, 109, 183, 192, 243, 245, 268, 293, 295, 492, 493], "coordinates_atauto": 268, "coordinates_ateigen": [245, 295], "coordinates_for": [17, 20, 45, 46, 49, 50, 51, 52, 53, 54, 98, 99, 108, 109, 183, 192, 253, 268, 295, 492, 493], "coordinates_forauto": [268, 295], "copi": [3, 12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 59, 61, 71, 79, 105, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 298, 299, 301, 303, 305, 307, 309, 311, 313, 402, 429, 431, 433, 434, 436, 437, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "copied_s": 438, "coplanar": 490, "copy_tag": [402, 403, 446], "copyabl": [108, 393], "copyassign": 19, "copyconstruct": 19, "copyright": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "core": [3, 37, 38, 41, 119, 120, 234, 235, 244, 245, 248, 249, 263, 264, 267, 268, 294, 295, 298, 306, 307, 474, 475, 532, 533], "correct": [4, 32, 249, 250, 251, 254, 438, 449, 451, 454, 456, 458, 475, 479], "correl": 251, "correspond": [5, 13, 14, 17, 19, 51, 75, 79, 251, 265, 479, 480, 521, 527], "cos_apertur": [34, 239], "cos_theta": 243, "could": 291, "couldn": 264, "count": [105, 106, 174, 175, 230, 380, 381, 382, 383, 414, 415, 428, 429, 431, 438], "count_": 175, "count_if": [172, 173], "counter": 382, "counterpart": 478, "countnew": 105, "countnumb": 414, "countsiz": 105, "countth": 382, "cov": [263, 264], "covari": [26, 43, 44, 79, 80, 81, 82, 100, 172, 173, 183, 225, 249, 251, 254, 263, 264, 332, 368, 369, 372, 375, 377, 447, 449, 451, 454, 456, 458, 475, 477, 479, 480, 482, 488, 489, 519, 534, 535], "covariance_": 480, "covariance_i": 477, "covariance_matrix": 173, "covariance_typ": [79, 80, 183, 222, 229, 249, 250, 251, 254, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "covariance_typeth": [249, 251], "covariance_typetypenam": [249, 251], "covariance_x": 477, "covariance_xi": 477, "covariance_xyaw": 477, "covariance_yaw": 477, "covariance_yyaw": 477, "covariancebeluga": 333, "covariancecovari": 263, "covarianceeigen": 263, "covarianceeigentorowmajor": [514, 515, 519, 534, 535], "covarianceeigentorowmajorarrai": 535, "covariancer": [79, 81], "covariancerowmajortoeigen": [514, 515, 519, 534, 535], "covariancerowmajortoeigensophu": 535, "covariances_dataset": 264, "covariancet": [26, 43, 44], "covariancettyp": 43, "cover": 3, "cp": [16, 18, 21], "cparticle_traitscommon": [27, 261], "cpo": [398, 420], "cpolicy_baseimplement": [27, 261], "cpolicyfn": 229, "cpolicyforward": [27, 261], "cpp": [243, 254, 352, 366, 398, 420], "cpprefer": [254, 352, 366, 398, 420], "cpropagate_base_fnimplement": [27, 261], "cpropagate_fnimplement": [27, 261], "crandom_intersperse_fnimplement": [27, 261], "crandom_intersperse_viewimplement": [27, 261], "crang": 229, "cray2dcast": [27, 261], "crbegin": [41, 65, 66, 183, 192], "crbeginconstexpr": 41, "crclcpp_lifecycl": 471, "creat": [18, 19, 27, 92, 173, 175, 229, 237, 254, 261, 274, 276, 277, 284, 299, 312, 313, 330, 338, 360, 380, 386, 479, 480, 482, 525], "create_timer_ro": 477, "crend": [41, 65, 66, 183, 192], "crendconstexpr": 41, "creweight_base_fnimplement": [27, 261], "creweight_fnimplement": [27, 261], "cross": [34, 173, 239], "crtp": 39, "csample_base_fnimplement": [27, 261], "csample_fnimplement": [27, 261], "csample_viewimplement": [27, 261], "csentinelpast": [27, 261], "csparsevaluegridgener": [27, 261], "cspatial_hash": [27, 261], "cspatial_hashcal": [27, 261], "cstate_fncustom": [27, 261], "cstate_typ": 229, "cstationarymodela": [27, 261], "cstd": 229, "cstdint": [37, 38, 40, 41, 231, 232, 234, 235, 236, 237, 244, 245, 264, 267, 268, 308, 309, 441, 442], "ctake_evenly_fnimplement": [27, 261], "ctake_while_kld_fnimplement": [27, 261], "cthrunrecoveryprobabilityestimatorrandom": [27, 261], "ctuple_el": [27, 261], "ctuple_index": [27, 261], "ctuple_indexmeta": [27, 261], "ctuple_s": [27, 261], "ctuplecontain": [27, 261], "ctuplecontainerprimari": [27, 261], "ctuplevectorshorthand": [27, 261], "cube": 243, "cup": 4, "curious": 2, "current": [1, 4, 26, 41, 43, 65, 67, 71, 94, 100, 105, 230, 232, 274, 286, 296, 348, 382, 391, 392, 438, 447, 449, 451, 454, 456, 458, 475, 477, 479, 480, 482, 488, 525], "current_": 175, "current_orient": [122, 270], "current_point_": 38, "current_pose_2d": 122, "currentth": 391, "curri": 39, "cursor": [71, 72, 232, 299], "cursor_": 232, "custom": [18, 26, 43, 254, 283, 398, 420, 482, 488, 519], "cvaluegrid2gener": [27, 261], "cvaluetraitstrait": [483, 517], "cweight_fncustom": [27, 261], "cwisesqrt": 251, "cycl": [3, 254], "cyril": [42, 487, 537], "czip_fnimplement": [27, 261], "d": [0, 1, 6, 19, 28, 32, 42, 116, 181, 184, 185, 193, 196, 222, 225, 255, 465, 469, 487, 499, 537], "d1": [90, 185, 225, 263, 264, 332, 333, 334], "d1beluga": 335, "d1doubl": 264, "d1scale": 264, "d2": [90, 185, 225, 263, 264, 332, 333, 334], "d2beluga": 335, "d2doubl": 264, "d2scale": 264, "dark": [228, 470, 504], "dash": [228, 470, 504], "data": [3, 6, 13, 15, 17, 27, 32, 34, 41, 42, 43, 45, 47, 49, 51, 53, 65, 66, 73, 98, 99, 108, 109, 173, 178, 185, 193, 229, 234, 235, 239, 242, 243, 252, 253, 254, 261, 264, 322, 324, 328, 330, 332, 334, 336, 372, 474, 475, 479, 480, 488, 490, 492, 493, 499, 501, 506, 508, 509, 520, 521], "data_": [41, 307, 442], "data_at": [13, 15, 45, 46, 49, 50, 51, 52, 98, 99, 108, 109, 120, 185, 193, 245, 264, 268, 307, 492, 493], "data_atauto": [120, 245, 268], "data_atstd": 307, "data_near": [13, 45, 46, 49, 50, 51, 52, 98, 99, 108, 109, 120, 185, 193, 243, 307, 492, 493], "data_nearauto": 120, "data_nearstd": 307, "dataaggreg": 65, "dataconst": [307, 442, 521], "dataconstexpr": 41, "datagrid": [98, 108], "datainclud": 143, "datalikelihood_field_model": 141, "dataset": 264, "datatyp": [27, 34, 73, 154, 178, 229, 236, 237, 239, 254, 261], "date": [5, 477, 479, 480], "dbuild_test": 5, "debug": [263, 332], "decai": [27, 229, 254, 261, 355, 435, 436, 477, 479, 480, 482, 525], "decay_t": [27, 30, 116, 221, 222, 229, 254, 261, 266, 277, 284, 287, 297, 340, 342, 344, 346, 348, 350, 352, 353, 356, 365, 378, 398, 401, 420, 435, 436], "decay_tuple_lik": [27, 116, 221, 222, 229, 254, 261, 277, 356, 357, 435, 436], "decay_tuple_like_t": [254, 255, 259, 277, 435, 436, 437, 438], "decay_tuple_like_tconveni": [277, 436], "decay_tuple_like_ttypenam": [277, 436], "decay_tuple_likemeta": 436, "decid": [230, 477, 479, 480, 482, 525], "declar": [19, 26, 27, 229, 249, 251, 254, 261, 266, 272, 282, 287, 297, 367, 393], "declare_common_param": 477, "declare_paramet": 477, "decltyp": [26, 30, 38, 39, 71, 165, 169, 170, 229, 232, 241, 254, 277, 284, 287, 291, 299, 378, 398, 420, 435, 436, 438, 482, 524], "declval": [71, 232, 277, 284, 291, 299, 378], "decreas": 524, "decrement": [71, 232], "dedu": 59, "deduc": [250, 251, 254], "deduct": [107, 250, 251, 252, 253, 254, 437, 438], "default": [6, 19, 27, 38, 39, 41, 59, 61, 63, 65, 71, 79, 81, 92, 96, 98, 105, 107, 110, 168, 229, 232, 251, 254, 261, 265, 266, 271, 282, 286, 287, 291, 293, 296, 297, 299, 307, 309, 313, 340, 342, 344, 346, 350, 384, 393, 404, 406, 412, 416, 430, 431, 437, 438, 451, 456, 457, 479, 480, 482, 488], "default_config_": [451, 456, 465, 469], "default_config_beluga_amcl": [451, 457], "default_config_default": 451, "default_random_engin": [291, 299, 404, 406, 412], "defaultbeluga": [60, 62, 64, 66, 72, 80, 82, 93, 99, 106, 111, 394, 407, 413], "defaultconstruct": [38, 251, 307], "defaultdefault": [38, 41, 232, 282, 291, 299, 309, 313, 438], "defer": 39, "defin": [2, 4, 12, 14, 17, 18, 20, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 45, 47, 49, 51, 53, 62, 66, 71, 80, 96, 107, 118, 120, 122, 146, 165, 167, 168, 170, 173, 174, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 271, 272, 273, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 342, 346, 350, 398, 420, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 455, 457, 459, 475, 477, 482, 486, 509, 510, 519, 521, 524, 533, 535], "definit": [12, 26, 30, 32, 34, 38, 41, 120, 122, 165, 167, 168, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 282, 284, 287, 291, 293, 295, 297, 299, 303, 307, 309, 311, 313, 429, 431, 434, 436, 438, 442, 446, 449, 451, 475, 482, 509, 510, 521, 524, 533, 535], "degeneraci": [43, 488], "degrad": [55, 254], "degre": [3, 524], "delai": [477, 480], "delet": [39, 291], "delta": [122, 251, 270, 274], "delta_bear": 270, "delta_rot_hat": 270, "denot": [228, 470, 504], "dens": [13, 15, 45, 119, 154, 168, 178, 229, 245, 254], "dense_grid": [45, 154, 178, 244, 245], "densegrid2": [15, 45, 275], "densiti": [19, 524], "dep": 5, "depend": [22, 24, 29, 31, 33, 34, 35, 37, 40, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 474, 475, 481, 485, 508, 520, 523, 532, 534], "depict": 480, "depriv": 477, "depth": 6, "derefer": [63, 71, 429, 445], "deriv": [27, 46, 48, 50, 52, 54, 108, 109, 119, 120, 183, 185, 187, 189, 192, 193, 195, 198, 201, 202, 203, 211, 215, 216, 217, 229, 240, 241, 244, 245, 248, 252, 253, 254, 261, 267, 268, 294, 295, 368, 369, 372, 375, 377], "derivedconcret": [45, 47, 49, 51, 53], "describ": [45, 47, 49, 51, 53, 75, 230, 479, 480], "descript": [22, 24, 27, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 117, 119, 121, 164, 166, 169, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 261, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 452, 454, 456, 458, 464, 474, 477, 481, 483, 485, 488, 490, 492, 498, 508, 511, 512, 513, 517, 519, 520, 523, 525, 527, 529, 530, 532, 534], "descriptor": 477, "design": [174, 271, 273], "desir": 271, "destroi": 237, "destructor": [43, 55, 57, 61, 65, 67, 69, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 102, 105, 108, 110, 112, 114, 382, 391, 406, 412, 488, 490, 492, 530], "detail": [22, 24, 26, 27, 29, 30, 31, 33, 35, 37, 39, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 116, 117, 119, 121, 164, 166, 169, 172, 174, 175, 176, 178, 186, 194, 202, 204, 205, 212, 216, 218, 219, 220, 225, 229, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 276, 277, 278, 280, 282, 283, 286, 287, 288, 290, 291, 292, 294, 296, 297, 298, 299, 300, 302, 304, 306, 308, 309, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 464, 471, 474, 475, 481, 482, 483, 485, 488, 490, 492, 494, 498, 499, 501, 503, 505, 508, 510, 511, 512, 513, 517, 519, 520, 523, 524, 525, 527, 529, 530, 531, 532, 534], "detect": [27, 33, 34, 57, 58, 73, 75, 76, 122, 229, 230, 234, 235, 237, 238, 239, 254, 261, 270, 273, 274, 322, 324, 328, 336, 384, 388, 391], "detection_bearing_in_robot": 239, "detection_bearing_in_sensor": [34, 73, 74, 185, 225, 235, 237, 324], "detection_bearing_in_sensorbear": 235, "detection_bearing_in_sensorbeluga": 325, "detection_bearing_in_sensorlandmarkbearing3": 235, "detection_bearing_in_sensorth": 73, "detection_categori": [34, 73, 74, 237, 239], "detection_categoryth": 73, "detection_position_in_robot": [185, 225, 235, 237, 239, 328], "detection_position_in_robotbeluga": 329, "detection_position_in_robotdetect": 235, "detection_position_in_robotlandmarkposition3": 235, "detection_position_in_world": [73, 74, 237, 239], "detection_position_in_worldth": 73, "detection_range_in_robot": 239, "detection_weight": [34, 239], "detections2d": 75, "detectionslandmark": 57, "determin": 254, "develop": [5, 6], "deviat": [32, 34, 172, 173, 239, 243, 254, 316, 318, 326, 330, 479, 480], "diagnosic_updater_": [451, 456, 465, 469], "diagnosic_updater_beluga_amcl": 457, "diagnosic_updater_diagnost": 451, "diagnosic_updater_diagnostic_updat": 451, "diagnost": [451, 456, 479], "diagnostic_updat": [450, 451, 456, 457], "diagnosticarrai": 479, "diagnostics_msg": 479, "diagnosticstatuswrapp": [451, 456, 457], "diagram": [45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 454, 456, 458, 490, 492], "dictat": [479, 480], "did": [34, 239, 524], "dieter": [42, 487, 537], "diff": 479, "differ": [19, 38, 41, 63, 65, 71, 90, 92, 105, 232, 302, 309, 438, 524], "difference_typ": [38, 41, 63, 64, 65, 66, 71, 72, 105, 106, 185, 222, 232, 438], "difference_typediffer": 438, "difference_typeiter": 38, "difference_types": 41, "difference_typesign": 232, "difference_typestd": [38, 41, 232, 438], "differenti": [27, 67, 121, 122, 157, 178, 229, 230, 247, 254, 261, 447, 477], "differential_dr": [477, 479, 480], "differential_drive_model": [67, 157, 178, 246, 247, 322, 474, 475], "differentialdrivemodel": [2, 16, 27, 68, 116, 121, 122, 183, 185, 193, 202, 216, 217, 220, 222, 229, 230, 254, 261, 322], "differentialdrivemodel2d": [121, 122, 254, 255, 259, 474, 475, 482, 488], "differentialdrivemodel2ddifferentialdrivemodel": 482, "differentialdrivemodel3d": [121, 122, 254, 255, 259], "differentialdrivemodeldifferentialdrivemodel": 122, "differentialdrivemodelparam": [67, 116, 121, 122, 185, 218, 221, 225, 254, 323], "differentialdrivemodelparamparamet": [122, 229], "differentialdrivemodelsampl": 122, "differentialmotionmodel": [477, 480], "digit": 309, "dim": [168, 264, 480, 524], "dimens": [263, 332], "dimension": [20, 25, 27, 53, 79, 98, 120, 152, 178, 229, 254, 261, 263, 264, 294, 295, 306, 307, 308, 332, 358, 481, 486, 488, 496, 498], "dims_out": 264, "direct": [65, 96, 293], "directional_statist": 173, "directli": [19, 22, 24, 29, 31, 33, 35, 37, 40, 102, 117, 119, 121, 164, 166, 169, 172, 174, 176, 231, 234, 238, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 435, 437, 439, 441, 443, 445, 481, 508, 519, 520, 523, 532, 534], "dirti": 32, "discard": [4, 47], "discret": [4, 19, 27, 33, 75, 153, 178, 229, 230, 238, 239, 254, 261, 301, 479, 480, 492, 521], "discrete_distribut": 299, "dispers": 173, "distanc": [25, 26, 41, 65, 71, 96, 122, 152, 164, 165, 178, 232, 237, 243, 254, 270, 273, 293, 314, 322, 330, 336, 391, 430, 438, 479, 480], "distance_funct": [164, 165, 243, 254], "distance_functiongiven": 254, "distance_map": [24, 25, 152, 178, 242, 243], "distance_threshold": [122, 185, 225, 270, 322, 336], "distance_thresholdbeluga": [323, 337], "distance_thresholddist": [122, 270], "distance_thresholddoubl": [122, 270], "distance_to": 291, "distance_vari": [122, 270], "distancefunct": [164, 165, 243, 254], "distancefunctiona": 254, "distancetyp": [165, 254], "distri": 482, "distribut": [3, 4, 11, 12, 16, 19, 23, 25, 26, 27, 30, 32, 34, 36, 38, 39, 41, 43, 44, 79, 81, 82, 83, 84, 86, 88, 118, 120, 122, 147, 160, 165, 167, 168, 170, 171, 173, 175, 177, 178, 179, 205, 220, 229, 230, 232, 235, 237, 239, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 261, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 288, 289, 291, 293, 295, 297, 298, 299, 301, 303, 305, 307, 309, 311, 313, 316, 332, 404, 408, 409, 410, 411, 413, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 447, 449, 451, 475, 477, 479, 480, 482, 486, 488, 489, 509, 510, 512, 521, 523, 524, 525, 533, 535], "distribution_": [251, 253, 291, 299], "distribution_typ": 19, "distributiona": [81, 412], "distributionparam": [122, 270], "distributionth": 412, "distrubut": 254, "div_hashed_valu": 309, "divers": [2, 4, 43, 479, 480, 482, 488, 525], "divid": [20, 108, 230, 265, 477], "djuric": 42, "do": [65, 293, 479, 480], "do_beamskip": 480, "doc": [309, 358], "document": [5, 23, 25, 29, 30, 32, 34, 36, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 118, 120, 122, 165, 167, 169, 170, 173, 174, 175, 177, 178, 180, 182, 183, 185, 186, 189, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 228, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 255, 261, 265, 266, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 284, 286, 287, 289, 290, 291, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 311, 313, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 428, 429, 430, 431, 433, 435, 436, 438, 440, 442, 444, 445, 446, 449, 451, 454, 456, 458, 464, 465, 470, 475, 476, 482, 486, 488, 490, 492, 498, 499, 504, 509, 512, 514, 517, 519, 521, 522, 523, 524, 525, 527, 529, 530, 533, 535], "doe": [2, 4, 19, 41, 65, 105, 228, 254, 298, 393, 470, 480, 504], "doesn": [39, 79, 98, 264, 480], "doi": 537, "don": [6, 29, 249, 277, 293, 438], "dontaligncol": 305, "dot": [4, 34, 237, 239], "dot_product_a": 237, "dot_product_b": 237, "doubl": [13, 17, 20, 26, 32, 34, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 69, 70, 75, 77, 90, 92, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 114, 120, 122, 173, 177, 229, 239, 243, 253, 254, 263, 264, 266, 268, 270, 272, 283, 284, 291, 293, 295, 307, 308, 309, 314, 316, 318, 322, 326, 330, 332, 333, 334, 336, 340, 341, 342, 343, 384, 385, 404, 405, 406, 407, 416, 417, 430, 431, 434, 442, 475, 477, 482, 490, 492, 493, 509, 521, 524, 525, 533, 535], "doublenear": 303, "doubt": 5, "down": 3, "doxygen": [228, 470, 504], "draw": [4, 27, 37, 38, 59, 61, 63, 229, 254, 261, 298], "drawing_values_from_the_distribut": 251, "drift": [479, 480], "drive": [27, 67, 94, 121, 122, 157, 178, 229, 230, 247, 254, 261, 269, 270, 447, 477], "drop": [230, 271, 384], "due": 55, "durabl": 6, "dure": [4, 29, 102, 454, 456, 458], "dx_": 4, "dxspan_": 38, "dynam": [4, 264], "dynamic_reconfigur": [450, 451, 456], "dyspan_": 38, "e": [3, 16, 28, 65, 71, 92, 105, 112, 114, 116, 181, 184, 186, 194, 196, 232, 235, 254, 255, 302, 303, 324, 328, 465, 469, 499], "each": [4, 13, 19, 55, 105, 112, 114, 164, 165, 169, 172, 173, 180, 182, 183, 185, 186, 189, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 230, 243, 254, 265, 278, 291, 308, 309, 348, 404, 406, 416, 431, 438, 465, 477, 479, 480, 499, 524, 525], "eagerli": [29, 230, 338], "earli": 3, "easili": 4, "ecosystem": 478, "eff": [479, 480, 525], "effect": [4, 19, 25, 26, 29, 41, 65, 146, 152, 166, 178, 230, 254, 271, 272, 281, 477, 479, 480, 525], "effective_s": [41, 65, 66, 186, 194], "effective_sample_s": [24, 25, 152, 178, 254, 255, 257, 271, 272], "effective_sample_sizeauto": [167, 272], "effective_sizeconstexpr": 41, "effici": [2, 29, 36, 117, 147, 178, 254], "effort": 6, "eigen": [3, 12, 13, 15, 17, 20, 27, 34, 37, 38, 45, 46, 49, 50, 51, 52, 53, 54, 59, 79, 84, 85, 88, 89, 90, 98, 99, 108, 109, 116, 119, 120, 122, 156, 168, 173, 178, 183, 189, 195, 200, 202, 206, 214, 216, 218, 220, 221, 222, 224, 225, 229, 234, 235, 239, 243, 244, 245, 248, 249, 251, 252, 253, 254, 261, 263, 264, 267, 268, 270, 293, 294, 295, 302, 304, 305, 306, 307, 311, 332, 334, 358, 359, 368, 369, 372, 375, 376, 377, 433, 447, 449, 451, 454, 455, 456, 457, 458, 459, 474, 475, 486, 492, 493, 496, 498, 506, 519, 521, 524, 532, 533, 534, 535], "eigen3": [234, 235], "eigen_compat": [119, 120, 178, 263, 264, 294, 295, 306, 307], "eigen_major_vers": 168, "eigen_world_vers": 168, "eigenbas": [27, 116, 183, 189, 195, 206, 214, 218, 220, 221, 222, 224, 225, 229, 248, 249, 251, 254, 261, 376], "eigenvalu": 251, "eigenvector": 251, "either": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 67, 105, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 393, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 480, 482, 486, 509, 510, 521, 524, 533, 535], "ekumen": [0, 5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "ekumenlab": 0, "elem": 264, "element": [27, 29, 65, 105, 145, 172, 173, 178, 229, 230, 254, 255, 257, 261, 284, 290, 302, 303, 304, 308, 364, 391, 398, 400, 404, 412, 414, 416, 420, 421, 428, 429, 430, 431, 435, 436, 438, 443, 444, 445, 446, 519], "elementconstexpr": [284, 436], "elementsconstexpr": 170, "elementsdefinit": 170, "elev": 243, "elif": [510, 521, 533, 535], "els": [26, 32, 34, 41, 122, 173, 179, 232, 239, 251, 264, 266, 277, 287, 291, 299, 309, 431, 436, 438, 510, 521, 533, 535], "emb": [12, 122, 254], "embed": [13, 15, 17, 20], "emit": 479, "emphas": 230, "emplace_back": [120, 264, 524], "empti": [4, 26, 41, 65, 66, 105, 106, 165, 186, 194, 253, 414, 428, 438, 448, 449, 450, 451, 454, 455, 456, 457, 474, 475, 479, 480, 482, 524], "emptyconstexpr": [41, 438], "en": [173, 251, 254, 352, 366, 398, 420, 524], "enabl": [30, 41, 65, 229, 249, 254, 299, 308, 309, 338, 393, 454, 456, 458, 479, 480, 482, 511, 517, 524, 525, 534, 535], "enable_borrowed_rang": [171, 285], "enable_if_t": [27, 30, 41, 65, 92, 112, 113, 114, 115, 116, 166, 167, 172, 173, 183, 189, 195, 202, 205, 206, 214, 216, 218, 220, 221, 222, 224, 225, 229, 248, 249, 254, 261, 266, 277, 282, 284, 287, 297, 308, 309, 313, 338, 340, 342, 344, 346, 348, 350, 352, 356, 357, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 393, 394, 398, 401, 416, 420, 431, 435, 436, 437, 438, 512, 523, 524], "enable_safe_rang": 285, "enable_tf_broadcast_": [449, 451, 454, 456, 458, 465, 469, 475], "enable_tf_broadcast_beluga_amcl": [455, 457, 459], "enable_tf_broadcast_bool": [449, 451, 475], "enable_tf_broadcast_wheth": [449, 451, 475], "encourag": 2, "end": [4, 27, 37, 38, 41, 61, 62, 63, 65, 66, 96, 105, 106, 173, 186, 194, 229, 237, 243, 261, 266, 287, 297, 299, 307, 320, 438, 524], "end_cursor": 299, "endauto": 38, "endconstexpr": [41, 438], "endfor": 4, "endif": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "enforc": 2, "engin": [84, 85, 86, 87, 88, 89, 253, 291, 299, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413], "engine_": [291, 299], "engineth": [84, 86, 88, 404, 406, 412], "enhanc": 102, "enough": 4, "ensur": [5, 429, 524], "entri": 98, "enum": [38, 40, 41, 51, 52, 59, 60, 254, 268, 492, 493], "enumcastoutofrang": 41, "enumer": [28, 40, 59, 164, 165, 184, 254, 258, 262, 267, 268, 428, 429], "enumeratorkrolloveronwrit": 254, "enumeratorkstandard": 59, "environ": [55, 77, 254], "epilogu": 178, "epsilon": [173, 254, 266, 416, 417, 430, 431, 434], "epsilonmaximum": 254, "epsilonse": 416, "equal": [19, 38, 63, 65, 71, 79, 81, 232, 254, 320, 360, 408, 483, 505, 517, 524, 529, 530], "equal_to": [483, 505, 517, 523, 524, 529, 530], "equalitycompar": 19, "equat": 4, "equip": 6, "equival": [65, 254, 352, 445, 480, 483, 505, 506, 517, 523, 524, 529, 530], "eras": 254, "erasur": 3, "erf": 32, "ericniebl": 105, "error": [34, 73, 171, 237, 239, 254, 263, 285, 302, 318, 326, 454, 456, 458, 477, 479, 480, 482, 510, 521, 525, 533, 535], "error_": 38, "ess": [25, 26, 146, 152, 166, 167, 178, 230, 254, 271, 272, 281, 384], "estim": [4, 6, 24, 25, 26, 27, 43, 67, 94, 100, 102, 122, 152, 178, 229, 254, 255, 257, 261, 270, 311, 434, 447, 449, 451, 454, 455, 456, 457, 458, 459, 475, 477, 479, 480, 482, 488, 524, 525], "estimatea": [454, 456, 458], "estimated_pos": 173, "estimatestd": [26, 173, 482], "estimation_typ": [26, 43, 44], "eta_hit": 32, "eta_short": 32, "eth": 302, "eugen": 59, "ev": [451, 456, 457], "eval": 173, "evalu": [29, 43, 230, 393, 488], "even": [1, 3, 6, 75, 438], "evenli": [20, 108, 230, 428, 477, 479, 480], "eventu": 6, "everi": [19, 26, 146, 174, 175, 178, 230, 254, 281, 286, 382], "every_n": [26, 146, 178, 230, 280, 281, 380, 382, 482], "every_n_fn": [26, 27, 116, 174, 175, 202, 216, 229, 261, 381, 482], "every_n_fnimplement": [175, 229], "every_n_fninlin": 381, "every_n_polici": [27, 116, 174, 175, 186, 194, 202, 216, 229, 261, 383], "every_n_policyconstexpr": 175, "every_n_policyimplement": [175, 229], "every_n_policyinlin": 383, "every_n_policyinlineexplicit": 383, "every_nconstexpr": [26, 175, 482], "every_npolici": [26, 175], "evolv": 230, "exact": [86, 438], "exactli": [105, 249, 429], "exampl": [1, 2, 6, 228, 254, 470, 504], "except": [6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 65, 79, 81, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 454, 456, 458, 475, 477, 482, 486, 488, 509, 510, 521, 524, 533, 535], "exec": 5, "execut": [26, 27, 43, 44, 229, 261, 265, 266, 286, 287, 296, 297, 340, 342, 344, 346, 348, 350, 447, 449, 451, 454, 456, 458, 474, 475, 477, 479, 480, 482, 488, 489], "execution_polici": [26, 43, 44, 477, 479, 480, 482, 488, 489], "execution_policy_": [26, 482], "execution_policy_vari": [449, 451, 454, 456, 482, 488, 489, 499, 502], "execution_policy_variantbeluga_amcl": [455, 457], "execution_policy_variantexecut": 482, "execution_policy_variantget": [449, 451], "execution_policy_variantstd": 482, "execution_policypolici": 43, "execution_policyvari": 488, "executionpolici": [26, 44, 180, 189, 190, 195, 198, 203, 207, 211, 217, 223, 229, 266, 287, 297, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 474, 475], "executionpolicyan": [340, 344, 348], "executionpolicyexecut": 43, "executionpolicyvari": [458, 474, 475], "executionpolicyvariantbeluga_amcl": 459, "executionpolicyvariantget": 475, "executionpolicyvariantstd": 475, "executionpolicyvariantsupport": 475, "exercis": 3, "exhibit": 65, "exist": [1, 27, 65, 98, 105, 229, 254, 261, 264, 299, 340, 344, 348, 362, 363, 412, 430, 435, 436, 479, 480], "exp": [32, 34, 239, 243, 249, 263], "expect": [2, 32, 73, 173, 316, 438, 479, 480, 524], "expect_that": 302, "expens": [55, 237], "experi": 55, "explain": [228, 470, 504], "explicit": [32, 34, 38, 39, 41, 72, 122, 175, 177, 232, 239, 243, 251, 253, 270, 282, 291, 293, 299, 307, 309, 438, 442, 449, 475, 509, 521, 524], "exploit": 173, "explor": [230, 472, 506], "exponenti": [25, 27, 69, 152, 176, 177, 178, 229, 249, 254, 261, 434, 477, 479, 480, 525], "exponential_filt": [24, 25, 69, 152, 178, 434], "exponentialfilt": [70, 116, 176, 177, 186, 194, 202, 204, 216, 218, 254, 434], "exponentialfiltercal": [177, 229, 434], "exponentialfilterconstexpr": 177, "exponentialfilterinlin": 70, "exponentialfilterinlineexplicit": 70, "express": [12, 18, 19, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 338, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "extend": [2, 3, 75, 105, 230, 264], "extens": [511, 517, 519, 524, 532, 533, 534, 535], "extent": 13, "extern": [34, 235, 237, 239, 398, 420, 480, 505], "extra": [102, 438], "extract": [372, 408, 511, 534, 535], "extrapol": [65, 254], "extrins": [479, 480], "f": [16, 17, 21, 27, 28, 38, 40, 41, 66, 116, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 200, 202, 203, 204, 205, 211, 214, 216, 217, 218, 220, 221, 222, 224, 229, 254, 255, 261, 426, 499], "face": [2, 249], "factor": [4, 69, 173, 230, 265, 266, 340, 341, 342, 343], "factorth": 340, "fail": [251, 480], "fall": 254, "fals": [26, 38, 41, 65, 79, 81, 165, 254, 268, 309, 314, 382, 384, 391, 429, 446, 449, 451, 454, 456, 458, 475, 477, 479, 480, 482, 525], "false_typ": [30, 229, 277, 284, 299, 436], "famili": 4, "far_end_cel": 293, "far_end_pose_in_local_fram": 293, "farrai": 65, "fast": [438, 477, 479, 480, 482, 525], "fast_averag": 434, "fast_filter_": 434, "favor": 3, "feasibl": 264, "featur": [1, 40, 41, 57, 65, 254, 472, 478, 480], "few": [1, 2, 4, 6, 65, 243], "fewer": 1, "fibonacci": 309, "field": [27, 77, 153, 178, 229, 230, 242, 243, 254, 261, 301, 447, 480], "fifo": 65, "figur": 254, "file": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 454, 456, 458, 463, 488, 490, 492, 496, 525, 527, 529, 530], "filesystem": 264, "fill": [41, 65, 66, 189, 195, 228, 470, 504, 535], "fillvoid": 41, "filter": [4, 11, 25, 26, 27, 42, 43, 69, 75, 102, 152, 172, 176, 177, 178, 229, 230, 236, 237, 240, 241, 254, 261, 267, 268, 314, 428, 429, 430, 434, 449, 451, 454, 456, 458, 475, 477, 482, 487, 488, 490, 506, 509, 524, 525, 537], "filter_funct": 429, "final": [313, 449, 454, 458, 475], "find": [6, 34, 73, 98, 237, 239, 264, 307, 435, 436], "find_closest_bearing_landmark": [34, 73, 74, 189, 195, 237], "find_closest_bearing_landmarkstd": [34, 237], "find_nearest_landmark": [73, 74, 189, 195, 237, 239], "find_nearest_landmarkstd": [237, 239], "finder": [27, 31, 32, 55, 77, 90, 153, 178, 229, 230, 242, 243, 254, 261, 264, 301], "finit": [13, 291], "firefox": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "first": [1, 5, 6, 32, 38, 41, 61, 65, 66, 96, 105, 106, 165, 243, 282, 398, 414, 428, 438, 451, 456, 479, 480], "first_": 299, "first_map_onli": [479, 480], "first_rot": [122, 270], "first_rotation_param": 122, "firstiter": 65, "fit": [41, 65, 228, 470, 504], "fit_point": 264, "fix": [38, 63, 65, 524], "flag": [40, 41, 43, 65, 254, 456, 479, 488], "flatland": 6, "flatten": [12, 67, 122, 254], "flip": 3, "flipped_rot": [122, 270], "float": [254, 263, 332, 479, 480, 509, 523, 524], "floating_point_rang": 477, "floor": [295, 308, 309], "floor_and_fibo_hash": [308, 309], "floor_and_fibo_hashconstexpr": 309, "flow": 3, "fmod": 524, "fn": [16, 21, 30, 204, 218, 229, 282, 287, 290, 291, 338, 339, 344, 345, 346, 347, 393, 394, 395, 396, 404, 405, 407], "fn_": 291, "fn_return_": 291, "fna": [344, 404, 406], "fnfn": 404, "fnthe": 406, "focu": 11, "follow": [4, 5, 6, 16, 18, 19, 21, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 228, 249, 270, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 438, 447, 454, 456, 458, 470, 488, 490, 492, 504, 525, 527, 529, 530], "footprint": [34, 239], "forc": [26, 43, 479, 480, 482, 488], "force_upd": [26, 43, 44, 189, 195, 482, 488, 489, 499, 501], "force_update_": [26, 482], "force_updatevoid": [26, 482], "foremost": 6, "form": [173, 254], "format": 305, "formula": [32, 243, 479, 480], "fortun": 6, "forward": [71, 122, 169, 170, 179, 229, 232, 254, 266, 270, 272, 282, 284, 287, 291, 297, 299, 313, 367, 393, 398, 399, 404, 406, 420, 421, 422, 431, 436, 446, 524], "forward_iter": [38, 63], "forward_iterator_tag": [38, 63], "forward_lik": [178, 254, 255, 257, 283, 284], "forward_likeconstexpr": 179, "forwhich": [228, 470, 504], "found": [1, 18, 73, 398, 420, 435, 436, 479, 480], "fox": [42, 487, 537], "fox01": [479, 480, 537], "fr": 59, "fraction": 254, "frame": [14, 17, 34, 47, 51, 52, 55, 57, 73, 75, 77, 90, 96, 187, 189, 234, 235, 237, 239, 241, 253, 254, 268, 318, 324, 328, 332, 477, 479, 480, 488, 490, 492, 493, 509, 510, 512, 521], "frame_id": [479, 480, 510, 512], "frame_idfram": 512, "frameframecoordin": 268, "frameplan": 51, "framework": 1, "free": [17, 18, 51, 59, 86, 96, 268, 521, 527], "free_at": [17, 51, 52, 189, 195, 268, 293, 492, 493], "free_atbool": 268, "free_cel": [17, 51, 52, 189, 195, 253, 268, 492, 493], "free_cellsauto": 268, "free_near": [17, 51, 52, 189, 195, 268, 492, 493], "free_nearbool": 268, "free_states_": 253, "friend": [30, 38, 41, 61, 62, 66, 71, 72, 80, 232, 251, 263, 282, 291, 299, 332, 333, 338, 395], "from": [3, 4, 14, 17, 19, 25, 27, 32, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 122, 152, 164, 169, 173, 178, 228, 229, 230, 232, 239, 243, 248, 249, 251, 254, 261, 266, 270, 276, 277, 287, 290, 291, 297, 298, 299, 302, 308, 309, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 430, 437, 438, 447, 449, 451, 454, 456, 458, 470, 475, 477, 479, 480, 482, 488, 490, 492, 504, 511, 524, 525, 527, 529, 530, 534, 535], "from_valu": 477, "from_vector": [189, 195, 249, 251, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "from_vectorstat": 249, "frommsg": [511, 514, 515, 519, 534, 535], "frommsgvoid": 535, "front": [41, 65, 66, 189, 195, 254], "frontconstexpr": 41, "full": [3, 41, 65, 66, 96, 189, 195, 254, 480], "fullconstexpr": 41, "fulli": [6, 254], "function": [3, 4, 6, 18, 19, 27, 28, 29, 30, 32, 34, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 122, 164, 166, 172, 175, 184, 229, 230, 239, 243, 250, 252, 254, 258, 261, 262, 264, 270, 272, 274, 276, 277, 282, 284, 286, 290, 291, 296, 299, 302, 304, 308, 311, 312, 313, 320, 332, 338, 340, 342, 344, 346, 348, 350, 352, 355, 358, 360, 362, 364, 366, 368, 369, 372, 375, 377, 380, 382, 384, 386, 388, 391, 393, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 430, 435, 436, 437, 438, 453, 454, 456, 458, 466, 474, 475, 484, 488, 490, 492, 500, 506, 511, 512, 516, 517, 518, 519, 523, 524, 527, 530, 532, 534, 535], "functor": [2, 524, 530], "further": [11, 55, 77, 96], "furthermor": [3, 6], "futur": [19, 477, 479, 480], "g": [3, 13, 15, 17, 19, 20, 38, 40, 41, 65, 66, 105, 254, 255, 465, 467, 469, 524], "g1": 19, "g2": 19, "gap": 2, "gaussian": [32, 100, 243, 249, 316, 330, 479, 480], "ga\u0161per": 39, "gen": [122, 270, 291, 311], "gener": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "generatoran": [79, 81], "generatorth": [79, 81], "gentle2009computationalstatist": 251, "geometri": [234, 235, 252, 253], "geometry_msg": [448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 474, 475, 477, 479, 480, 510, 511, 534, 535], "get": [4, 5, 40, 41, 45, 49, 51, 98, 108, 112, 169, 170, 237, 254, 255, 257, 268, 284, 291, 299, 309, 332, 398, 399, 436, 438, 449, 451, 454, 456, 458, 475, 479, 480, 490, 492, 521], "get_default_neighbors_kernel": [264, 334], "get_execution_polici": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "get_execution_policyauto": 475, "get_execution_policystat": [449, 451], "get_initial_estim": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "get_initial_estimateauto": [449, 451, 475], "get_map_client_": [451, 456, 465, 469], "get_map_client_beluga_amcl": 457, "get_map_client_map": 451, "get_map_client_ro": 451, "get_motion_model": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "get_motion_modelauto": [449, 451, 475], "get_random_engin": [287, 291, 299, 404, 405, 406, 407, 412, 413], "get_random_state_gener": 26, "get_sensor_model": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "get_sensor_modelauto": [449, 451], "get_sensor_modelbeluga": 475, "getconstexpr": 41, "getmap": [450, 451, 479], "getsimpleextentdim": 264, "getspac": 264, "getyaw": [521, 535], "giorgio": [42, 487, 537], "git": 5, "github": [5, 32, 105, 243, 524], "given": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 34, 40, 41, 43, 45, 49, 51, 53, 65, 67, 69, 71, 73, 79, 94, 96, 98, 100, 108, 110, 112, 114, 122, 166, 167, 172, 173, 177, 229, 230, 232, 237, 239, 245, 251, 254, 261, 265, 268, 270, 272, 276, 277, 290, 293, 295, 296, 298, 299, 307, 309, 311, 344, 348, 352, 360, 416, 428, 431, 436, 445, 449, 451, 454, 456, 458, 475, 482, 488, 512, 521, 527], "global": [14, 17, 449, 451, 454, 456, 477, 479, 480], "global_frame_id": [477, 479, 480], "global_loc": 479, "global_localization_callback": [449, 451, 454, 455, 456, 457, 465, 467], "global_localization_callbackbool": 451, "global_localization_callbackvoid": 449, "global_localization_server_": [449, 451, 454, 456, 465, 469], "global_localization_server_beluga_amcl": [455, 457], "global_localization_server_glob": [449, 451], "global_localization_server_rclcpp": 449, "global_localization_server_ro": 451, "glpuga": [32, 243], "gmock": [302, 303], "go": [22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 117, 118, 119, 120, 121, 122, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 471, 473, 474, 475, 481, 482, 485, 486, 505, 507, 508, 509, 520, 521, 523, 524, 532, 533, 534, 535], "goe": 2, "golden": 309, "good": [1, 4, 32, 254, 316], "googl": 537, "googletest": 302, "govern": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "grai": [228, 470, 504], "graph": [22, 24, 29, 31, 33, 35, 37, 40, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 474, 481, 485, 508, 520, 523, 532, 534], "graphic": [229, 471, 505], "great": 3, "greater": [47, 65, 105, 414, 428], "green": [228, 470, 504], "grid": [13, 15, 17, 20, 27, 32, 42, 45, 49, 51, 53, 55, 56, 77, 78, 86, 87, 90, 96, 97, 98, 108, 119, 120, 154, 178, 229, 243, 244, 245, 252, 253, 254, 261, 264, 267, 268, 293, 294, 295, 306, 307, 441, 442, 447, 449, 451, 454, 456, 458, 475, 479, 480, 483, 487, 488, 492, 493, 505, 517, 520, 521, 527, 537], "grid_": [32, 293, 521], "gridgrid": 96, "gridnew": 77, "gridoccup": [55, 77, 492], "gridth": 86, "grisetti": [42, 487, 537], "ground": 1, "group": [110, 173, 249, 309, 447], "gsb07": [479, 480, 537], "gt": [12, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 50, 52, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 72, 73, 76, 78, 80, 82, 85, 87, 89, 91, 93, 94, 97, 99, 100, 102, 106, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 179, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 322, 324, 326, 328, 330, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 356, 359, 361, 370, 371, 373, 374, 376, 379, 380, 382, 384, 386, 389, 392, 394, 395, 396, 398, 399, 402, 403, 404, 405, 407, 408, 410, 411, 413, 414, 416, 418, 420, 421, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 470, 474, 475, 477, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 499, 501, 503, 504, 505, 508, 509, 510, 511, 512, 517, 519, 520, 521, 523, 524, 525, 527, 531, 532, 533, 534, 535], "gtest": [156, 178, 302, 433], "guard": [171, 285], "guid": [107, 250, 251, 252, 253, 254, 437, 438], "guidelin": 438, "h": [28, 39, 116, 181, 184, 196, 197, 210, 255, 264, 302, 303, 448, 449, 450, 451, 465, 467, 474, 475, 477, 499, 510, 519, 520, 521, 533, 534, 535], "h5": 264, "h5cpp": [264, 474, 475], "h5f_acc_rdonli": 264, "h5file": 264, "ha": [1, 19, 75, 105, 179, 251, 254, 274, 388, 391], "hack": 32, "half": [271, 477, 479, 480, 525], "handl": 173, "handle_map_with_default_initial_pos": [451, 456, 457, 465, 467], "handle_map_with_default_initial_posevoid": 451, "happen": [26, 314, 477, 479, 480, 482, 524, 525], "hardwar": 6, "has_common_tuple_typ": [27, 116, 229, 254, 261, 363, 435, 436], "has_common_tuple_type_v": [254, 255, 260, 435, 436], "has_common_tuple_type_vconstexpr": 436, "has_common_tuple_type_vconveni": 436, "has_common_tuple_typemeta": 436, "has_member_st": [284, 398], "has_member_state_v": 284, "has_member_variable_st": [284, 398], "has_member_variable_state_v": 284, "has_member_variable_weight": [284, 420], "has_member_variable_weight_v": 284, "has_member_weight": [284, 420], "has_member_weight_v": 284, "has_non_member_st": [284, 398], "has_non_member_state_v": 284, "has_non_member_weight": [284, 420], "has_non_member_weight_v": 284, "has_single_el": [27, 116, 229, 254, 261, 284, 365, 420, 435, 436], "has_single_element_v": [254, 255, 260, 435, 436], "has_single_element_vconstexpr": 436, "has_single_element_vconveni": 436, "has_single_elementmeta": [284, 436], "has_stat": 277, "has_state_v": 277, "has_valu": [264, 268], "has_weight": 277, "has_weight_v": 277, "hash": [25, 27, 43, 92, 110, 112, 114, 116, 152, 178, 202, 216, 229, 254, 261, 264, 308, 309, 312, 313, 358, 397, 416, 422, 423, 431], "hash_combin": 358, "hash_impl": [308, 309], "hash_implconstexpr": 309, "hasher": [43, 110, 112, 114, 309, 416, 417, 431], "hashera": 416, "hasherhash": 416, "hasn": 480, "have": [3, 4, 6, 13, 18, 19, 65, 71, 75, 105, 173, 228, 237, 249, 254, 360, 393, 408, 438, 470, 504], "hawksbil": 11, "hdf5": [264, 477], "head": [12, 41, 249, 524], "head_index": 41, "header": [171, 285, 302, 479, 480, 510, 512], "heading_rot": [122, 270], "heavili": 3, "height": [13, 45, 49, 51, 108, 109, 120, 197, 210, 239, 245, 442, 492, 493, 499, 501, 521], "height_": 442, "heightstd": [442, 521], "help": [435, 477, 479, 480, 482, 525, 536], "helper": [92, 151, 178, 229, 254, 284, 312, 451, 456], "here": [2, 27, 32, 105, 178, 180, 182, 183, 185, 186, 189, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 254, 255, 261, 275, 330, 452, 464, 465, 476, 483, 498, 499, 514, 517, 522], "hidden": [30, 228, 338, 470, 504], "hierarchi": [28, 453, 484], "high": 4, "higher": [2, 3, 90, 330], "histogram": 524, "histori": 6, "hit": [6, 32, 55, 75, 77, 90, 96, 243, 264, 316, 330, 479, 480], "hold": 13, "home": [6, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 454, 456, 458, 488, 490, 492, 525, 527, 529, 530], "homogen": [41, 425], "how": [5, 26, 228, 230, 254, 314, 322, 336, 470, 477, 479, 480, 504], "howev": [4, 65], "hpp": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 178, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 454, 456, 458, 463, 464, 488, 490, 492, 496, 498, 506, 525, 527, 529, 530], "hppaction": 123, "hppassign": 123, "hppauxiliar": [34, 178, 237, 239], "hppbeam_model": 128, "hppbearing_sensor_model": 128, "hppbresenham": 132, "hppcircular_arrai": 124, "hppconcept": [120, 178, 243, 245, 253, 268, 307, 442], "hppcontain": 124, "hppdata": [128, 139, 142], "hppdefin": [178, 281], "hppdifferential_drive_model": 125, "hppdistance_map": 140, "hppeffective_sample_s": 138, "hppevery_n": 126, "hppgener": [486, 498], "hppimplement": [23, 25, 32, 36, 41, 118, 122, 167, 178, 243, 247, 251, 264, 266, 270, 272, 277, 279, 284, 287, 289, 293, 297, 299, 301, 311, 429, 431, 433, 434, 438, 440, 444, 482, 486, 498], "hppinclud": [26, 36, 178, 438, 498], "hppindexing_iter": 135, "hpplandmark": 178, "hpplandmark_detection_typ": [142, 143], "hpplandmark_sensor_model": [128, 142], "hpplikelihood_field_model": [128, 140, 141], "hppmessag": [486, 498, 524], "hppmotion": 125, "hppmultivariate_normal_distribut": 127, "hppmultivariate_uniform_distribut": 127, "hppndt_sensor_model": 141, "hppnormal": 123, "hppoccupancy_grid": 141, "hppomnidirectional_drive_model": [125, 137], "hppon_effective_size_drop": 126, "hppon_mot": 126, "hppparticl": [131, 134], "hppparticle_trait": [130, 133, 144], "hpppolici": 126, "hpppropag": [123, 130, 131], "hpprandom": [127, 128], "hppraycast": 140, "hppreweight": [123, 130, 131], "hppro": 464, "hppsensor": 128, "hppsophus_match": 129, "hppsophus_print": 129, "hppsparse_value_grid": 141, "hppstationary_model": [125, 137], "hpptake_while_kld": 144, "hpptest": 129, "hppthrun_recovery_probability_estim": [133, 134], "hpptuple_trait": 137, "hpptuple_vector": 124, "hpputil": [486, 498], "hppvalue_grid": 141, "hppzip": 136, "hsize_t": 264, "hsl_and_hsv": 524, "hsv_to_rgb_altern": 524, "html": [309, 358], "http": [5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 105, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 352, 358, 366, 398, 420, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535, 537], "hue": [523, 524], "humbl": 11, "hypot": 32, "i": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 196, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 356, 358, 359, 361, 362, 363, 364, 365, 366, 370, 371, 373, 374, 376, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 490, 491, 492, 493, 496, 498, 499, 504, 505, 506, 507, 508, 509, 510, 514, 517, 519, 520, 521, 522, 523, 524, 525, 526, 528, 531, 532, 533, 534, 535, 536], "id": [237, 308, 309, 438, 479, 480, 510, 512, 524, 537], "idea": 298, "ident": 19, "identif": 239, "identifi": [38, 53, 168, 429, 535], "idiom": [2, 3], "idsindex": 308, "ie": [59, 98, 108, 154, 178, 244, 268, 307, 442, 479, 480, 492, 519, 521, 524, 534, 535], "ieee": [42, 487, 537], "ifdef": 285, "ifndef": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "ignor": [100, 239, 479, 480], "ill": 254, "imag": 57, "implement": [1, 2, 3, 4, 18, 22, 26, 27, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 61, 65, 69, 79, 96, 98, 102, 105, 117, 119, 120, 121, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 163, 164, 166, 169, 172, 174, 176, 177, 178, 229, 230, 231, 238, 240, 242, 243, 244, 245, 248, 250, 252, 253, 254, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 283, 286, 287, 290, 291, 292, 294, 296, 297, 298, 302, 304, 306, 307, 308, 310, 312, 314, 338, 340, 342, 344, 346, 348, 350, 366, 380, 382, 384, 386, 388, 395, 404, 406, 408, 410, 412, 414, 416, 418, 428, 429, 430, 431, 434, 435, 437, 438, 441, 442, 443, 445, 446, 447, 479, 480, 481, 482, 483, 486, 488, 496, 498, 505, 506, 508, 512, 517, 520, 525], "impli": [12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "implicit": [92, 251], "import": [4, 55, 57, 75, 77, 90, 243, 254, 286, 296, 348, 479, 480], "improv": [42, 487, 537], "imput": 42, "ina": 519, "inact": [449, 454, 458, 475], "inc": [12, 23, 25, 26, 30, 32, 34, 36, 38, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "includ": [4, 13, 15, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 178, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 447, 454, 455, 456, 457, 458, 459, 464, 488, 489, 490, 491, 492, 493, 498, 525, 526, 527, 528, 529, 530, 531], "includebeluga": [12, 22, 23, 24, 25, 35, 36, 117, 118, 123, 124, 125, 126, 127, 128, 129, 147, 168, 246, 247, 280, 281, 283, 284, 288, 289, 300, 301, 432, 433, 439, 440, 443, 444], "includebeluga_amcl": [448, 449, 450, 451, 463, 474, 475, 477], "includebeluga_ro": [481, 482, 485, 486, 496, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "includebelugaact": [29, 30, 130, 131, 155, 265, 266, 286, 287, 296, 297], "includebelugaalgorithm": [26, 132, 133, 134, 152, 164, 165, 166, 167, 172, 173, 176, 177, 292, 293, 308, 309, 434], "includebelugaalgorithmraycast": [37, 38, 163], "includebelugacontain": [40, 41, 135, 136, 149, 437, 438], "includebelugadetail": [159, 171, 285], "includebelugamot": [121, 122, 137, 157, 269, 270, 310, 311], "includebelugapolici": [138, 146, 174, 175, 271, 272, 273, 274, 282], "includebelugarandom": [139, 160, 248, 249, 250, 251, 252, 253], "includebelugasensor": [31, 32, 33, 34, 140, 141, 142, 153, 238, 239, 242, 243, 264], "includebelugasensordata": [119, 120, 143, 154, 236, 237, 240, 241, 244, 245, 263, 267, 268, 294, 295, 306, 307, 441, 442], "includebelugatest": [156, 302, 303, 304, 305], "includebelugatyp": [158, 234, 235], "includebelugatype_trait": [151, 276, 277, 312, 313, 435, 436], "includebelugautil": [150, 179, 231, 232], "includebelugaview": [144, 145, 169, 170, 278, 279, 290, 291, 298, 299, 428, 429, 430, 431, 445, 446], "includeciabatta": [39, 162], "inclus": 102, "incorpor": 4, "incorrect": [102, 249], "increment": [71, 232, 382], "independ": [75, 251, 298], "index": [13, 15, 17, 27, 28, 41, 45, 49, 50, 51, 52, 65, 66, 72, 98, 108, 109, 112, 114, 150, 165, 178, 185, 198, 202, 211, 216, 217, 218, 219, 222, 224, 229, 231, 232, 243, 245, 254, 261, 264, 268, 400, 429, 435, 436, 453, 484, 492, 493], "index_at": [13, 45, 49, 50, 51, 52, 108, 109, 120, 198, 211, 245, 268, 492, 493], "index_atstd": 245, "index_sequ": [27, 116, 221, 222, 229, 254, 261, 308, 309, 354, 435, 436, 438], "index_sequenceunus": 308, "indexable_": 232, "indexablecontain": 71, "indexcontain": 71, "indexgrid": [49, 51], "indexing_iter": [40, 41, 71, 150, 178], "indexingiter": [41, 65, 72, 116, 185, 198, 202, 211, 216, 217, 218, 219, 222, 224, 229, 231, 232, 254], "indexingiteratora": [41, 232], "indexingiteratorindexingiter": 232, "indexpair": 165, "indic": [15, 17, 49, 51, 65, 112, 114, 268, 298, 477, 479, 480], "indirect": 29, "indirectli": [22, 24, 29, 31, 33, 35, 37, 40, 117, 119, 121, 164, 166, 169, 172, 174, 176, 231, 234, 238, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 435, 437, 439, 441, 443, 445, 481, 508, 520, 523, 532, 534], "indistinguish": 19, "individu": [55, 408], "industri": 1, "inequ": [38, 63, 320], "infer": 1, "infin": 173, "infinit": [19, 173, 249, 291, 298, 299], "inflat": [479, 480], "info": [251, 521], "inform": [4, 26, 34, 42, 43, 239, 251, 254, 309, 348, 372, 482, 487, 488, 524, 537], "inher": 55, "inherit": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 98, 99, 101, 103, 104, 106, 107, 108, 109, 111, 113, 115, 228, 229, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 356, 359, 361, 362, 363, 364, 365, 366, 370, 371, 373, 374, 376, 379, 381, 383, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 399, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 419, 421, 423, 424, 426, 427, 454, 455, 456, 457, 458, 459, 470, 471, 489, 490, 491, 492, 493, 504, 505, 526, 528, 531], "init": [105, 106, 438], "initi": [4, 26, 43, 44, 65, 105, 169, 198, 211, 334, 372, 438, 449, 451, 454, 456, 458, 475, 477, 482, 488, 489, 499, 501], "initial_cov_": 479, "initial_pos": [477, 479, 480], "initial_pose_": 479, "initial_pose_callback": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "initial_pose_callbackvoid": [449, 451, 475], "initial_pose_sub_": [449, 451, 454, 456, 458, 465, 469, 475], "initial_pose_sub_beluga_amcl": [455, 457, 459], "initial_pose_sub_pos": [449, 451, 475], "initial_pose_sub_rclcpp": [449, 475], "initial_pose_sub_ro": 451, "initial_pose_top": [477, 479, 480], "initialize_from_estim": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "initialize_from_estimatebool": [449, 451, 475], "initialize_from_map": [449, 451, 454, 455, 456, 457, 465, 467, 482, 488, 489, 499, 501], "initialize_from_mapbool": [449, 451], "initialize_from_mapvoid": 482, "initializer_list": [105, 106, 438], "initializevoid": [26, 482], "initialpos": [477, 479, 480], "inject": [53, 102], "inlin": [12, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 100, 106, 109, 110, 111, 113, 115, 170, 175, 254, 264, 266, 272, 274, 277, 279, 282, 284, 287, 291, 297, 299, 302, 303, 332, 333, 359, 361, 389, 392, 394, 407, 413, 422, 423, 429, 431, 436, 446, 477, 488, 510, 512, 519, 523, 524, 531, 533, 535], "inlineconstexpr": [29, 65, 102, 105, 112, 114, 169, 174, 254, 265, 271, 273, 278, 286, 290, 296, 298, 340, 344, 348, 360, 382, 384, 386, 391, 393, 402, 404, 406, 412, 414, 416, 428, 430, 445], "inlineconstexprnoexcept": [65, 69, 92, 102, 398, 420], "inlineconstexprprotect": 408, "inlineexplicit": [55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 94, 97, 98, 99, 106, 108, 109, 110, 111, 112, 113, 114, 115, 394, 490, 492, 530, 531], "inlineexplicitconstexpr": [86, 105, 382], "inlineexplicitconstexprnoexcept": 69, "inlineexplicitnoexcept": 96, "inlinenoexcept": [65, 71, 79], "inlinestat": [370, 371, 373, 374, 376], "input": [4, 29, 30, 69, 70, 100, 177, 254, 278, 298, 338, 340, 344, 348, 408, 416, 429, 430, 435, 436, 438], "input_iter": [254, 437, 438], "input_rang": [299, 431, 438], "inputnext": 69, "insert": [26, 230, 290, 291, 314, 404, 406, 431, 438, 524], "insert_iter": [437, 438], "insid": [264, 334], "instal": 6, "instanc": [13, 14, 15, 16, 17, 18, 20, 21, 26, 27, 31, 32, 33, 34, 43, 55, 57, 65, 67, 75, 77, 79, 81, 90, 94, 98, 121, 122, 169, 228, 229, 238, 239, 242, 243, 251, 254, 261, 264, 269, 270, 316, 318, 322, 326, 330, 332, 334, 336, 344, 348, 404, 416, 422, 449, 451, 454, 456, 458, 470, 475, 504, 519], "instanti": [45, 47, 49, 51, 53, 228, 449, 451, 454, 456, 458, 470, 475, 504], "instead": [5, 22, 24, 29, 31, 32, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 79, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 237, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 478, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "int": [4, 13, 17, 20, 30, 38, 45, 46, 49, 50, 51, 52, 53, 54, 63, 64, 71, 72, 98, 99, 108, 109, 120, 166, 167, 168, 228, 232, 245, 249, 254, 263, 264, 266, 268, 284, 287, 295, 297, 304, 305, 307, 332, 334, 338, 340, 342, 344, 346, 348, 350, 358, 359, 372, 398, 416, 420, 431, 470, 477, 492, 493, 504, 509], "int64_t": 264, "int8_t": [40, 41, 254, 521, 527, 528], "integ": [15, 20, 27, 37, 38, 59, 62, 63, 64, 65, 182, 185, 186, 191, 194, 198, 199, 202, 211, 213, 216, 217, 218, 222, 224, 229, 254, 261, 264, 308, 309, 320, 321, 358, 479, 480], "integer_rang": 477, "integerinteg": 61, "integr": [2, 11, 71, 428, 448, 450, 463, 464, 474, 506, 536], "integral_const": [41, 229, 309, 436], "intellig": [42, 487, 537], "intend": [1, 5], "intens": 77, "interchang": 2, "interfac": [3, 27, 36, 39, 105, 147, 154, 178, 229, 230, 240, 254, 261, 300, 437, 452, 478, 483, 486, 496, 498, 506, 523], "intern": [19, 26, 42, 79, 102, 105, 251, 382, 434, 487, 537], "internalcontain": [27, 105, 106, 116, 180, 182, 183, 185, 186, 190, 191, 192, 194, 203, 204, 205, 206, 217, 218, 220, 221, 222, 224, 229, 254, 261, 437, 438], "internalcontainercontain": 105, "interpret": [228, 254, 470, 483, 492, 504, 505, 517, 520, 521, 527], "interspers": 291, "interv": [26, 65, 314, 447, 479, 480, 524], "inth": 519, "intrins": 316, "inv_resolut": 295, "invalid": [43, 79, 81, 251, 488, 510, 521, 533, 535], "invalid_argu": 264, "invers": [122, 237, 239, 243, 263, 270, 274, 293], "invert": [39, 524], "investig": [32, 243], "invis": [228, 470, 504], "invoc": 19, "invok": [30, 65, 79, 338, 416, 431], "invoke_result_t": [26, 165], "involv": 29, "io": 264, "ioformat": 305, "iostream": [304, 305], "iota": [508, 509], "iresult": 308, "iron": 11, "irwini": 11, "is_adding_const": 179, "is_arithmetic_v": [27, 92, 113, 115, 116, 172, 173, 202, 205, 216, 218, 220, 222, 229, 254, 261, 308, 309, 313], "is_base_of_v": [27, 116, 183, 189, 195, 206, 214, 218, 220, 221, 222, 224, 225, 229, 248, 249, 251, 254, 261, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "is_complet": [229, 436], "is_const_v": 179, "is_directori": 264, "is_execution_policy_v": [266, 287, 297, 340, 342, 344, 346, 348, 350], "is_floating_point_v": [241, 263], "is_fre": [17, 268, 499, 501, 521, 527, 528], "is_freestat": 521, "is_invocable_r_v": [282, 393, 394, 431], "is_invocable_v": [26, 287, 291], "is_lvalue_reference_v": [179, 299], "is_nothrow_swappable_v": [41, 65, 66], "is_obstacl": 165, "is_occupi": [17, 268, 499, 501, 521, 527, 528], "is_occupiedstat": 521, "is_particl": 277, "is_particle_range_v": [166, 167, 254, 266, 277, 287, 297, 299, 431, 434], "is_particle_v": 277, "is_random_distribut": 299, "is_random_distribution_v": 299, "is_range_closur": 30, "is_range_closure_v": [30, 338], "is_same_v": [26, 30, 34, 41, 65, 122, 172, 173, 239, 254, 264, 299, 307, 309, 436, 512, 523, 524], "is_tuple_lik": [116, 229, 254, 284, 398, 420, 435, 436], "is_tuple_like_v": [27, 116, 221, 222, 229, 254, 255, 260, 261, 277, 356, 357, 365, 401, 435, 436], "is_tuple_like_vconstexpr": 436, "is_tuple_like_vconveni": 436, "is_tuple_likemeta": [284, 436], "is_unknown": [499, 501, 521, 527, 528], "is_unknownstat": 521, "isapprox": 251, "isbn": 537, "isnan": 241, "issu": [6, 32, 243, 249], "it_": 299, "iter": [26, 27, 37, 38, 40, 41, 43, 61, 62, 64, 65, 66, 71, 72, 105, 116, 150, 178, 185, 198, 202, 211, 216, 217, 218, 222, 224, 229, 231, 232, 254, 261, 291, 298, 314, 320, 321, 404, 406, 429, 437, 438, 445, 482, 488], "iter_mov": [402, 403, 446], "iter_reference_t": [402, 403, 446], "iter_rvalue_reference_t": [402, 403, 446], "iter_value_t": [254, 402, 403, 437, 438, 446], "iter_zip_with": 446, "iterator_categori": [38, 63, 64, 71, 72, 211, 222, 232], "iterator_categorycategori": 232, "iterator_categoryiter": 38, "iterator_categorystd": [38, 232], "iterator_t": [291, 299], "iterator_trait": [41, 65], "iteratorbresenham": [38, 229], "iteratorindexingiter": 41, "iteratorinlin": 64, "iteratorinlineexplicit": 64, "iteratoriter": [38, 41], "ith": [40, 41, 254], "itr": 307, "its": [3, 26, 27, 34, 41, 65, 71, 73, 172, 173, 229, 232, 237, 254, 261, 355, 393, 402, 403, 436, 446, 449, 451, 454, 456, 458, 475, 478], "itself": [2, 3, 30, 165, 449, 454, 458, 475, 477, 480, 512], "j": 254, "jalisco": 11, "jazzi": 11, "journal": 42, "jtc1": 309, "jtsmeaaaqbaj": 537, "jump": [479, 480], "just": [6, 338], "k": [28, 181, 184, 212, 222, 225, 255, 431, 499], "k_i": 477, "kalman": 4, "karrowbodylength": 524, "karrowheadlength": 524, "karrowheadwidth": 524, "karrowlength": 524, "kb": 524, "kbit": 309, "kdefaultangularresolut": 524, "kdefaultkldz": [254, 416, 417, 430, 431], "kdefaultkldzconstexpr": 431, "kdefaultkldzdefault": 431, "kdefaultlinearresolut": 524, "kdefaultneighborkernel2d": 264, "kdefaultneighborkernel3d": 264, "kdefaultprob": [212, 225, 291, 404, 405], "kdefaultprobabilitybeluga": 405, "kdefaultprobabilitydefault": 291, "kdefaultprobabilitystat": 291, "kdefaultthreshold": [212, 225, 272, 384, 385], "kdefaultthresholdbeluga": 385, "kdefaultthresholddefault": 272, "kdefaultthresholdstat": 272, "kdifferentialmodelnam": 477, "keep": [3, 6, 254, 480], "kei": [2, 6, 98, 307], "kept": [65, 105], "kernel": [90, 264, 334], "kextrapolateonread": [40, 41, 254], "key_typ": [98, 99, 212, 222, 264, 307], "key_typekei": 307, "key_typetypenam": 307, "keyword": 39, "kfib": 309, "kflippingrot": 122, "kfreevalu": [499, 503, 521, 527], "kfreevaluebeluga_ro": 528, "kfreevaluefre": 521, "kfreevaluestat": 521, "kg": 524, "kglobal": [51, 253, 268], "kind": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "kindex": 436, "klayoutrevers": [40, 41, 65, 254], "kld": [26, 42, 230, 254, 314, 430, 431, 447, 477, 479, 480, 482, 487, 525, 537], "kld_condit": [254, 255, 257, 416, 430, 431], "kld_conditionauto": 431, "kld_epsilon": [26, 212, 225, 314, 482, 499, 503, 525], "kld_epsilonbeluga": 315, "kld_epsilonbeluga_ro": 526, "kld_epsilondoubl": [26, 482], "kld_epsilonmaximum": 482, "kld_epsilonus": 26, "kld_z": [26, 212, 225, 314, 482, 499, 503, 525], "kld_zbeluga": 315, "kld_zbeluga_ro": 526, "kld_zdoubl": [26, 482], "kld_zupper": 482, "kld_zuse": 26, "klocal": [51, 268], "kmatch": 436, "kminpointspercel": 264, "kminvari": 264, "kmodifi": [38, 59, 60, 188, 212], "kmodifieddefinit": 38, "knav2differentialmodelnam": 477, "knav2omnidirectionalmodelnam": 477, "knone": [40, 41, 65, 254], "know": [291, 438], "known": [2, 57, 75, 322, 336, 447, 449, 451, 454, 456, 458, 475, 479, 480], "koccupiedvalu": [499, 503, 521, 527], "koccupiedvaluebeluga_ro": 528, "koccupiedvalueoccupi": 521, "koccupiedvaluestat": 521, "komnidirectionalmodelnam": 477, "kr": 524, "krolloveronwrit": [40, 41, 254], "ksinglelin": 305, "kstandard": [38, 59, 60, 188, 212], "kstandardstandard": 38, "kstationarymodelnam": 477, "ktupleindexambigu": 436, "ktupleindexnotfound": 436, "kullback": [254, 430], "kunknownvalu": [499, 503, 521, 527], "kunknownvaluebeluga_ro": 528, "kunknownvaluestat": 521, "kunknownvalueunknown": 521, "l": [14, 28, 116, 181, 184, 196, 199, 213, 222, 225, 237, 255, 465, 467, 469, 494, 499], "l2": [90, 332], "l262": 105, "label": [228, 470, 504], "lack": 55, "lambda": 2, "lambda_short": [32, 213, 225, 316, 480], "lambda_shortbeluga": 317, "lambda_shortdoubl": 32, "lambda_shortintrins": 32, "landmark": [27, 33, 34, 57, 73, 74, 75, 153, 154, 158, 178, 229, 230, 234, 235, 236, 237, 238, 239, 254, 261, 301, 324, 328, 447], "landmark_a_bearing_in_sensor": 237, "landmark_a_position_in_world": 237, "landmark_b_bearing_in_sensor": 237, "landmark_b_distance_in_world_squar": 237, "landmark_b_position_in_world": 237, "landmark_b_squared_in_world_squar": 237, "landmark_bearing_in_robot": 239, "landmark_bearing_in_sensor": 34, "landmark_detection_typ": [33, 34, 158, 178, 236, 237, 238, 239, 324, 328], "landmark_in_robot_posit": 239, "landmark_map": [34, 57, 58, 73, 75, 76, 142, 154, 178, 239], "landmark_map_": [34, 239], "landmark_mapmap": [57, 75], "landmark_position_in_sensor": 237, "landmark_position_in_world": 239, "landmark_range_in_robot": 239, "landmark_sensor_model": [75, 153, 178, 300, 301, 326], "landmarkbearing3": [34, 73, 74, 234, 235, 237, 254, 255, 259, 324], "landmarkbearing3bear": [235, 237], "landmarkbearing3eigen": [235, 237], "landmarkbearingdetect": [34, 57, 116, 183, 185, 225, 234, 235, 254, 325], "landmarkbearingdetectionlandmark": [229, 235], "landmarkcategori": [34, 73, 74, 234, 235, 237, 239, 254, 255, 259, 324, 328], "landmarkcategorytyp": [235, 237], "landmarkcategoryuint32_t": [235, 237], "landmarkmap": [33, 34, 58, 74, 76, 116, 182, 189, 191, 195, 199, 200, 202, 207, 213, 214, 216, 217, 220, 222, 223, 226, 229, 236, 237, 238, 239, 254], "landmarkmapbas": [34, 229, 237, 239], "landmarkmapboundari": [73, 74, 234, 235, 237, 254, 255, 259], "landmarkmapboundariesboundari": [235, 237], "landmarkmapboundarieseigen": [235, 237], "landmarkmapclass": [57, 75], "landmarkmapinlin": 74, "landmarkmaplandmarkmap": 237, "landmarkmodelparam": [75, 116, 220, 225, 238, 239, 254, 327], "landmarkmodelparamparamet": [229, 239], "landmarkposition3": [73, 74, 234, 235, 237, 239, 254, 255, 259, 328], "landmarkposition3eigen": [235, 237], "landmarkposition3posit": [235, 237], "landmarkpositiondetect": [73, 75, 116, 183, 185, 225, 234, 235, 237, 239, 254, 329], "landmarkpositiondetectionlandmark": [229, 235], "landmarks_": 237, "landmarks_set_position_data": [73, 74, 213, 222, 237], "landmarks_set_position_datastd": 237, "landmarks_set_position_datavector": 237, "landmarksensormodel": [21, 27, 76, 116, 199, 202, 207, 213, 214, 216, 217, 220, 222, 223, 226, 229, 230, 238, 239, 254, 261, 326], "landmarksensormodel2d": [238, 239, 254, 255, 259], "landmarksensormodel3d": [238, 239, 254, 255, 259], "landmarksensormodelgener": 239, "landmarksensormodellandmarksensormodel": 239, "landmarkslist": 73, "lang": 41, "languag": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "laps": [479, 480], "larg": [1, 4, 237, 438, 480], "larger": 3, "laser": [47, 154, 178, 229, 240, 243, 254, 330, 449, 451, 454, 456, 458, 475, 477, 479, 480, 490, 509], "laser_callback": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "laser_callbackvoid": [449, 451, 475], "laser_lambda_short": 479, "laser_likelihood_max_dist": [479, 480], "laser_max_rang": [477, 479, 480], "laser_min_rang": [477, 479, 480], "laser_model_typ": [479, 480], "laser_scan": [47, 154, 178, 448, 449, 451, 456, 457, 474, 475, 481, 482, 485, 486, 488, 489, 490, 496, 498, 510], "laser_scan_connection_": [449, 451, 454, 456, 458, 465, 469, 475], "laser_scan_connection_beluga_amcl": [455, 457, 459], "laser_scan_connection_connect": [449, 451, 475], "laser_scan_connection_message_filt": [449, 451, 475], "laser_scan_filter_": [449, 451, 454, 456, 458, 465, 469, 475], "laser_scan_filter_beluga_amcl": [455, 457, 459], "laser_scan_filter_std": [449, 451, 475], "laser_scan_filter_transform": [449, 451, 475], "laser_scan_sub_": [449, 451, 454, 456, 458, 465, 469, 475], "laser_scan_sub_beluga_amcl": [455, 457, 459], "laser_scan_sub_las": [449, 451, 475], "laser_scan_sub_message_filt": 451, "laser_scan_sub_std": [449, 475], "laser_scanlas": 488, "laser_sigma_hit": 479, "laser_z_hit": 479, "laser_z_max": 479, "laser_z_rand": 479, "laser_z_short": 479, "laserscan": [2, 47, 275, 449, 450, 451, 454, 455, 456, 457, 458, 459, 475, 479, 480, 482, 483, 486, 488, 489, 491, 494, 496, 498, 499, 501, 502, 505, 506, 508, 509, 510, 512, 517], "laserscanconstsharedptr": [490, 491, 509, 510], "laserscaninlin": 491, "laserscaninlineexplicit": 491, "laserscanlaserscan": 509, "laserscanthin": [482, 505, 509, 510], "last": [6, 41, 65, 66, 105, 106, 254, 322, 336, 414, 428, 438, 454, 456, 458, 479, 480, 482, 525], "last_in": 438, "last_known_estimate_": [449, 451, 454, 456, 458, 465, 469, 475], "last_known_estimate_beluga_amcl": [455, 457, 459], "last_known_estimate_last": [449, 451, 475], "last_known_estimate_std": [449, 451, 475], "last_known_map_": [451, 456, 465, 469], "last_known_map_beluga_amcl": 457, "last_known_map_last": 451, "last_known_map_nav_msg": 451, "last_known_odom_transform_in_map_": [449, 451, 454, 456, 458, 465, 469, 475], "last_known_odom_transform_in_map_beluga_amcl": [455, 457, 459], "last_known_odom_transform_in_map_last": [449, 451, 475], "last_known_odom_transform_in_map_std": [449, 451, 475], "last_out": 438, "lastsentinel": 65, "latch": 480, "latest": 5, "latest_pose_": 274, "launch": 6, "law": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "layer": [102, 512, 513, 517], "layout": [3, 15, 41, 65, 254], "lazili": [169, 230, 278, 393], "lead": 291, "least": [5, 169, 308, 480, 524], "left": [282, 286, 395, 396], "left_hash": 309, "legend": [45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 454, 456, 458, 490, 492], "leibler": [254, 430], "length": [3, 20], "length_error": 41, "length_errorif": 65, "less": [29, 77, 105, 254, 477, 479, 480, 525], "let": 32, "level": [27, 178, 229, 261, 451, 452, 456, 457, 464, 471, 483, 498, 505, 517], "leverag": [2, 478], "lflag": [40, 41, 254], "li": 42, "lib": 358, "librari": [2, 3, 34, 36, 98, 147, 178, 230, 235, 237, 239, 277, 279, 283, 302, 358, 447, 472, 506, 536], "licens": [1, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "lidar": [6, 32, 55, 75, 77, 90, 243, 264, 479, 480, 490, 506], "lie": [249, 264, 334, 447, 480], "lifecycl": [448, 449, 452, 454, 458, 471, 472, 474, 475, 480], "lifecycle_nod": [448, 449, 474, 475], "lifecyclenod": [449, 454, 458, 471, 475, 477], "lifecyclenodeinterfac": [449, 475], "lifecyclepublish": [449, 454, 458, 475], "lifetim": [55, 57, 75, 77, 90, 524], "lifo": 65, "like": [3, 6, 27, 37, 40, 41, 67, 71, 94, 100, 105, 122, 151, 163, 178, 229, 230, 254, 261, 270, 277, 284, 291, 293, 311, 352, 355, 363, 364, 366, 398, 420, 435, 436, 437, 440, 480, 524], "likelihood": [2, 32, 77, 90, 153, 178, 229, 230, 242, 243, 254, 264, 296, 301, 332, 334, 447, 480], "likelihood_at": [90, 91, 199, 213, 263, 264, 332, 333], "likelihood_atdoubl": [263, 264], "likelihood_data": 243, "likelihood_field": [77, 78, 199, 213, 243, 479, 480], "likelihood_field_": 243, "likelihood_field_model": [77, 128, 153, 178, 300, 301, 330], "likelihood_fieldconst": 243, "likelihoodfieldmodel": [2, 21, 27, 78, 116, 199, 202, 207, 213, 214, 216, 217, 220, 222, 223, 226, 229, 230, 242, 243, 254, 261, 330, 482, 488], "likelihoodfieldmodellikelihood": 243, "likelihoodfieldmodellikelihoodfieldmodel": 243, "likelihoodfieldmodelparam": [77, 116, 214, 220, 225, 227, 242, 243, 254, 331], "likelihoodfieldmodelparamparamet": [229, 243], "limit": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 71, 83, 86, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 308, 309, 311, 312, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 480, 482, 486, 509, 510, 521, 524, 525, 533, 535], "limited_rang": 438, "line": [27, 37, 38, 59, 62, 63, 64, 116, 182, 185, 186, 191, 194, 198, 199, 202, 211, 213, 216, 217, 218, 222, 224, 229, 254, 261, 320, 321, 524], "line_list": 524, "linear": [15, 17, 27, 49, 108, 154, 173, 178, 229, 244, 254, 261, 268, 441, 442, 447], "linear_clustering_resolut": [110, 111, 309], "linear_clustering_resolutionclust": 110, "linear_grid": [49, 154, 178, 267, 268, 441, 442], "linear_resolut": [499, 503, 512, 523, 524, 530], "linear_resolutionbeluga_ro": 531, "linear_resolutionconst": 524, "linear_resolutionlinear": 512, "linear_resolutionresolut": 524, "lineargrid2": [17, 49, 275], "linearli": 524, "linebresenham": 38, "linelin": 38, "link": [180, 182, 183, 185, 186, 189, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 255, 302, 465, 499, 514], "linux": 11, "list": [5, 28, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 180, 182, 183, 185, 186, 189, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 229, 255, 262, 275, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 353, 357, 358, 360, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 391, 393, 395, 398, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 425, 453, 454, 456, 458, 465, 471, 476, 484, 488, 490, 492, 499, 505, 514, 518, 522, 524, 525, 527, 530], "listen": [449, 451, 454, 456, 458, 475], "literatur": [264, 334], "littl": 1, "ll": 239, "llvm": [171, 285], "load": [3, 477, 480], "load_from_hdf5_2d": 264, "local": [1, 3, 5, 6, 11, 14, 17, 26, 27, 32, 43, 105, 229, 243, 254, 261, 314, 447, 477, 479, 480, 481, 482, 483, 486, 488, 490, 496, 498, 505, 512, 517, 525], "localization_launch": 6, "localization_map": 6, "localization_params_fil": 6, "locat": 237, "log": [12, 34, 122, 173, 239, 249, 270, 274, 309, 454, 456, 458, 524, 535], "logic": [3, 282, 395], "long": [1, 19, 102], "longer": 3, "longitudin": 336, "longstand": 478, "look": [27, 105, 229, 230, 254, 261, 437], "lookup": 254, "loss": [3, 479, 480, 482, 525], "lot": 438, "low": [4, 438], "lower": [47, 477, 479, 480, 525], "lsquo": 43, "lt": [12, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 50, 52, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 72, 73, 76, 78, 80, 82, 84, 85, 86, 87, 88, 89, 91, 93, 94, 97, 99, 100, 102, 106, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 322, 324, 326, 328, 330, 333, 335, 336, 338, 340, 342, 344, 346, 348, 350, 354, 356, 359, 361, 370, 371, 373, 374, 376, 379, 380, 382, 384, 386, 389, 392, 394, 395, 396, 398, 399, 402, 403, 404, 405, 407, 408, 410, 411, 413, 414, 416, 418, 420, 421, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 470, 474, 475, 477, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 499, 501, 503, 504, 505, 508, 509, 510, 511, 512, 517, 519, 520, 521, 523, 524, 525, 527, 531, 532, 533, 534, 535], "lvalu": [19, 29, 40, 41, 61, 254], "m": [21, 28, 41, 42, 65, 66, 98, 116, 181, 184, 196, 200, 214, 222, 225, 255, 465, 467, 469, 499], "m0": 429, "m1": 429, "m_pi": 32, "m_usedclass": [228, 470, 504], "ma": [42, 487, 537], "macro": [39, 302], "made": 5, "magazin": 42, "mai": [5, 6, 12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 65, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "main": [12, 19, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 119, 120, 121, 122, 164, 165, 166, 167, 169, 172, 173, 174, 176, 177, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 261, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 282, 283, 284, 286, 290, 292, 293, 294, 295, 296, 298, 302, 306, 307, 308, 309, 310, 311, 312, 313, 428, 430, 431, 434, 435, 436, 437, 438, 441, 442, 445, 481, 482, 483, 485, 508, 509, 510, 512, 517, 520, 521, 523, 524], "maintain": [43, 488], "major": [480, 492, 519, 521, 534, 535], "make": [3, 29, 32, 65, 243, 249, 254, 298, 302, 360, 523, 524], "make_action_closur": [30, 266, 287, 297], "make_from_st": [26, 254, 255, 260, 276, 277, 299, 482], "make_from_state_fn": [116, 202, 216, 229, 254, 276, 277, 299, 361], "make_from_state_fnfunct": 277, "make_from_statea": [277, 299], "make_from_stateconstexpr": [277, 299], "make_index_sequ": [309, 352, 436, 438], "make_likelihood_field": 243, "make_opt": [245, 293], "make_origin_transform": 521, "make_pair": 482, "make_particle_filt": [449, 451, 454, 455, 456, 457, 458, 459, 465, 467, 475], "make_particle_filterauto": [449, 451, 475], "make_polici": [175, 254, 255, 260, 272, 274, 282], "make_policy_fn": [175, 254, 272, 274, 282], "make_policyconstexpr": [175, 272, 274, 282], "make_policymak": [175, 272, 274, 282], "make_signed_t": [71, 232, 309], "make_subrang": 438, "make_transform": 251, "make_tupl": 309, "make_unsigned_t": 309, "make_view_closur": [291, 299, 429, 431], "manag": [5, 57, 75, 449, 454, 458, 475, 479, 480], "mani": [1, 2, 3, 26, 314, 477, 479, 480], "manual": [26, 43, 482, 488], "map": [6, 26, 27, 32, 34, 42, 43, 44, 55, 56, 57, 58, 65, 73, 75, 76, 77, 90, 98, 154, 164, 165, 173, 178, 229, 234, 235, 236, 237, 239, 243, 249, 254, 261, 264, 330, 334, 449, 451, 454, 456, 457, 458, 474, 475, 477, 479, 480, 482, 487, 488, 489, 523, 524, 537], "map_boundaries_": 237, "map_callback": [449, 451, 454, 455, 456, 457, 465, 467], "map_callbackvoid": [449, 451], "map_distribution_": 482, "map_limit": [73, 74, 200, 214, 237], "map_limitslandmarkmapboundari": 237, "map_path": 477, "map_servic": 479, "map_sub_": [449, 451, 454, 456, 465, 469], "map_sub_beluga_amcl": [455, 457], "map_sub_occup": [449, 451], "map_sub_rclcpp": 449, "map_sub_ro": 451, "map_timer_": [451, 456, 465, 469], "map_timer_beluga_amcl": 457, "map_timer_callback": [451, 456, 457, 465, 467], "map_timer_callbackvoid": 451, "map_timer_ro": 451, "map_timer_tim": 451, "map_top": [479, 480], "map_typ": [26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 98, 99, 214, 222, 239, 243, 264, 307], "map_typemap": [32, 243, 264], "map_typemaptyp": 307, "map_typeoccupancygrid": [32, 243], "map_typesparsegridt": 264, "map_typeunderli": 307, "map_yaml_path": 6, "mapnew": 55, "mapoccup": 488, "mapped_typ": [90, 98, 99, 214, 222, 264, 307], "mapped_typetypenam": 307, "mapped_typevalu": 307, "maptyp": [99, 185, 193, 204, 205, 212, 214, 218, 220, 222, 229, 254, 306, 307], "maptypeassoci": 98, "margin": 4, "marker": [449, 454, 510, 512, 523, 524], "marker_arrai": [448, 449, 510], "markerarrai": [449, 454, 480, 510, 512, 523, 524], "mask": [40, 41, 254], "match": [3, 4, 34, 55, 65, 67, 86, 94, 100, 112, 114, 122, 239, 270, 311, 435, 436, 480, 512], "matcher": [156, 178, 302, 303, 433], "mathrm": 4, "matric": [304, 447], "matrix": [79, 82, 168, 173, 200, 202, 214, 216, 220, 222, 224, 229, 249, 250, 251, 254, 263, 264, 304, 305, 332, 368, 369, 372, 375, 377, 474, 475, 519, 524, 532, 533, 534, 535], "matrix2": [172, 173, 254], "matrix2xd": [263, 264], "matrix2xi": 264, "matrix3": [26, 172, 173, 254, 482, 519, 534, 535], "matrix3d": [449, 451, 454, 455, 456, 457, 458, 459, 475, 482, 488, 489], "matrix3xd": 263, "matrix_s": [214, 225, 249, 372], "matrix_sizebeluga": 376, "matrix_typ": [81, 82, 214, 222, 251], "matrix_typematrix": 251, "matrix_typeth": 251, "max": [32, 253, 264, 299, 302, 316, 416, 417, 431, 477, 479, 480, 490, 491, 509, 524], "max_beam": [477, 479, 480, 490, 491, 509], "max_beams_": 509, "max_beamsmaximum": 490, "max_bin_weight": 524, "max_el": [296, 297], "max_laser_dist": [214, 225, 243, 330], "max_laser_distancebeluga": 331, "max_laser_distancedoubl": 243, "max_laser_distancemaximum": 243, "max_obstacle_dist": [214, 225, 243, 330], "max_obstacle_distancebeluga": 331, "max_obstacle_distancedoubl": 243, "max_obstacle_distancemaximum": 243, "max_particl": [26, 214, 225, 314, 477, 479, 480, 482, 499, 503, 525], "max_particlesbeluga": 315, "max_particlesbeluga_ro": 526, "max_particlesmaximum": [26, 482], "max_particlesstd": [26, 482], "max_rang": [14, 47, 96, 97, 241, 293, 490, 491, 499, 501, 509], "max_range_": [293, 509], "max_rangeauto": 509, "max_rangemaximum": [96, 490], "max_siz": [41, 65, 66, 200, 214], "max_sizeconstexpr": 41, "maxim": 237, "maximum": [14, 41, 65, 254, 314, 316, 330, 477, 479, 480, 490, 509, 525], "maxmaximum": 416, "maybe_ndt": 264, "maybe_unus": [100, 101, 308, 309, 311], "mcl": [1, 11, 447, 506], "mean": [13, 15, 17, 26, 79, 80, 81, 82, 172, 173, 214, 225, 228, 251, 254, 263, 264, 332, 447, 470, 479, 480, 504], "mean_": 251, "mean_pose_vector": 173, "meana": 81, "meanan": 79, "meanbeluga": 333, "meaneigen": 263, "meanin": 105, "meanmean": 263, "means_dataset": 264, "means_matrix": 264, "meanth": 254, "measur": [4, 21, 26, 32, 43, 44, 55, 57, 75, 77, 90, 91, 96, 230, 263, 264, 296, 332, 333, 334, 479, 480, 482, 490, 509], "measurement_cel": 264, "measurement_typ": [21, 26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 214, 222, 239, 243, 264], "measurement_typemeasur": [32, 34, 239, 243, 264], "measurement_typestd": [32, 34, 239, 243, 264], "measurementmeasur": 43, "mechan": [26, 254, 314], "meet": [79, 81], "member": [18, 19, 27, 28, 36, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 147, 178, 229, 254, 261, 262, 277, 279, 283, 291, 299, 302, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 353, 355, 357, 358, 360, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 391, 393, 395, 398, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 425, 436, 438, 453, 454, 456, 458, 479, 480, 484, 488, 490, 492, 518, 525, 527, 530], "memori": [13, 15, 65, 254, 448, 449, 450, 451, 520, 521, 523, 524], "merit": 254, "messag": [451, 454, 456, 457, 458, 479, 480, 482, 483, 490, 492, 496, 498, 505, 506, 508, 509, 511, 512, 513, 517, 519, 520, 521, 523, 524, 532, 533, 534, 535], "message_filt": [448, 449, 450, 451, 454, 456, 458, 474, 475], "messagea": 512, "messagefilt": [449, 451, 454, 456, 458, 475], "messagemark": 512, "messagemessag": 512, "messageparticl": 512, "meta": [229, 254, 352, 355, 362, 364, 366, 400, 435], "metaprogram": 3, "meter": [14, 26, 96, 98, 110, 307, 314, 477, 479, 480, 490, 492, 512, 521, 524, 530], "method": [1, 4, 42, 43, 61, 77, 105, 249, 251, 254, 398, 420, 435, 436, 451, 456, 488], "metric": [26, 146, 178, 271, 272, 281], "might": 32, "migrat": [4, 478], "min": [41, 122, 237, 243, 253, 254, 270, 293, 299, 314, 416, 417, 430, 431, 490, 491, 509, 524], "min_angl": [274, 386, 387, 391, 392], "min_angle_": 274, "min_angleth": 391, "min_dist": [274, 386, 387, 391, 392], "min_distance_": 274, "min_distanceth": 391, "min_el": 237, "min_likelihood": 90, "min_particl": [26, 214, 225, 314, 477, 479, 480, 482, 499, 503, 525], "min_particlesbeluga": 315, "min_particlesbeluga_ro": 526, "min_particlesminimum": [26, 482], "min_particlesstd": [26, 482], "min_rang": [14, 47, 241, 490, 491, 499, 501, 509], "min_range_": 509, "min_rangeauto": 509, "min_rangeminimum": 490, "min_scale_factor": 524, "minim": [3, 34, 73, 237], "minimization_funct": 237, "minimum": [3, 14, 254, 314, 391, 430, 477, 479, 480, 490, 509, 525], "minimum_likelihood": [214, 225, 264, 334], "minimum_likelihoodbeluga": 335, "minimum_likelihooddoubl": 264, "minimum_likelihoodlikelihood": 264, "minminimum": [254, 416], "miodrag": 42, "misc": 446, "mismatch": 4, "miss": [32, 42, 316], "mit": [42, 487, 537], "mix": 3, "mixin": 39, "mixin_bas": 39, "mixin_impl": 39, "mixtur": [479, 480], "mkdir": 5, "mm": 524, "mobil": [478, 479, 480], "modal": 4, "model": [2, 4, 11, 16, 17, 21, 27, 31, 32, 33, 34, 36, 43, 55, 57, 65, 67, 75, 77, 90, 94, 100, 121, 122, 147, 153, 157, 158, 178, 229, 230, 234, 237, 238, 239, 242, 243, 246, 247, 254, 261, 264, 269, 270, 296, 297, 298, 300, 301, 310, 311, 348, 349, 350, 351, 447, 449, 451, 454, 456, 458, 474, 475, 477, 482, 488], "modela": 348, "modern": [2, 41, 436], "modifi": [59, 71, 232], "modified_": 38, "modul": 447, "modular": 447, "monocular": 57, "mont": [1, 2, 11, 26, 27, 43, 229, 254, 261, 314, 447, 481, 482, 483, 486, 488, 496, 498, 505, 512, 517, 525], "more": [22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 117, 119, 121, 164, 166, 169, 172, 173, 174, 176, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 251, 252, 254, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 474, 481, 485, 488, 490, 492, 508, 511, 512, 513, 519, 520, 523, 525, 527, 529, 530, 532, 534], "most": [1, 3, 34, 65, 449, 454, 458, 475, 480, 524], "mostderiv": 39, "mostli": [263, 332], "motion": [4, 11, 16, 26, 27, 35, 36, 43, 67, 75, 94, 100, 146, 147, 178, 229, 230, 254, 261, 273, 274, 281, 322, 336, 386, 388, 390, 391, 447, 449, 451, 454, 456, 458, 474, 475, 477, 482, 488], "motion_model": [26, 43, 44, 482, 488, 489], "motion_model_": [26, 482], "motion_model_vari": [449, 451, 454, 456, 482, 488, 489, 499, 502], "motion_model_variantbeluga_amcl": [455, 457], "motion_model_variantget": [449, 451], "motion_model_variantmot": 482, "motion_model_variantstd": 482, "motion_modelmot": 43, "motion_modelvari": 488, "motioninclud": 137, "motionmodel": [2, 26, 44, 67, 94, 100, 180, 189, 190, 195, 198, 203, 207, 211, 217, 223, 229, 275, 474, 475], "motionmodelclass": 43, "motionmodelvari": [458, 474, 475], "motionmodelvariantbeluga_amcl": 459, "motionmodelvariantget": 475, "motionmodelvariantstd": 475, "motionmodelvariantsupport": 475, "motionmot": 125, "movabl": 21, "move": [26, 29, 30, 32, 34, 38, 41, 59, 65, 79, 167, 179, 232, 237, 239, 243, 251, 264, 266, 274, 277, 282, 287, 291, 293, 297, 298, 299, 307, 402, 431, 438, 442, 446, 482, 509, 521], "move_tag": [402, 403, 446], "movement": [477, 482, 525], "msg": [448, 449, 454, 455, 458, 459, 474, 475, 477, 480, 490, 491, 492, 493, 509, 510, 511, 512, 519, 521, 523, 524, 532, 533, 534, 535], "msgthe": 519, "mt19937": 299, "mth": [230, 438, 445, 446], "much": [3, 322, 336, 438], "multi": 79, "multimod": 4, "multinomi": [230, 298, 447], "multipl": [4, 237, 293, 296, 382, 438, 524], "multipli": [34, 173, 239, 348], "multivari": [27, 79, 81, 83, 84, 86, 88, 160, 178, 229, 230, 248, 250, 251, 252, 253, 254, 261, 289, 447], "multivariate_distribution_trait": [27, 79, 116, 160, 178, 183, 189, 195, 206, 214, 218, 220, 221, 222, 224, 225, 229, 250, 251, 254, 261, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "multivariate_distribution_traitsforward": [249, 251], "multivariate_normal_distribut": [26, 79, 81, 160, 178, 288, 289], "multivariate_uniform_distribut": [83, 84, 86, 88, 128, 160, 178, 288, 289], "multivariatenormaldistribut": [2, 19, 26, 80, 116, 183, 200, 202, 203, 204, 214, 216, 217, 218, 220, 222, 224, 229, 230, 250, 251, 254, 255, 257, 482], "multivariatenormaldistributionmultivari": [26, 251], "multivariatenormaldistributionmultivariatenormaldistribut": 251, "multivariatenormaldistributionparam": [79, 82, 116, 200, 202, 214, 216, 220, 222, 224, 229, 250, 251, 254], "multivariatenormaldistributionparammultivari": 251, "multivariatenormaldistributionparammultivariatenormaldistributionparam": 251, "multivariateuniformdistribut": [84, 85, 86, 87, 88, 89, 116, 200, 202, 214, 216, 229, 230, 252, 253, 254, 255, 257, 482], "multivariateuniformdistributionconstexpr": 253, "multivariateuniformdistributionmultivariateuniformdistribut": 253, "multivariateuniformdistributionprimari": 253, "mundan": 1, "must": [3, 5, 6, 19, 43, 45, 47, 49, 51, 53, 55, 61, 65, 71, 77, 79, 81, 98, 108, 254, 298, 398, 420, 479, 480, 519], "mutabl": [18, 282, 299, 431, 451], "mutat": [3, 61], "mutex": [450, 451, 456], "mutex_": [451, 456, 465, 469], "mutex_beluga_amcl": 457, "mutex_mutex": 451, "mutex_std": 451, "n": [4, 20, 25, 26, 27, 28, 32, 38, 40, 41, 53, 66, 98, 114, 115, 116, 120, 146, 152, 169, 170, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 229, 230, 237, 254, 255, 261, 263, 264, 281, 294, 295, 306, 307, 308, 309, 332, 359, 382, 426, 438, 445, 446, 460, 465, 467, 469, 524], "n_": [479, 480, 525], "n_eff": 477, "naction": [27, 261], "nahuel": 482, "name": [13, 14, 15, 16, 17, 18, 19, 20, 21, 38, 43, 45, 47, 49, 51, 53, 55, 57, 67, 75, 77, 79, 90, 94, 100, 151, 167, 168, 178, 230, 266, 275, 276, 287, 297, 299, 344, 429, 431, 434, 440, 449, 451, 454, 456, 458, 475, 477, 479, 480, 512, 535], "namebeluga": [52, 60, 493], "namespac": [12, 18, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 119, 120, 121, 122, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 398, 420, 428, 429, 430, 431, 434, 435, 436, 437, 438, 441, 442, 445, 446, 449, 451, 475, 477, 481, 482, 483, 485, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "nan": 47, "native_doubl": 264, "native_int": 264, "natur": [2, 3, 42, 487, 537], "nav": 480, "nav2": [270, 472, 479, 480, 506], "nav2_amcl": [477, 478, 480], "nav_msg": [448, 449, 450, 451, 454, 455, 456, 457, 479, 480, 482, 483, 486, 492, 496, 498, 505, 506, 510, 512, 517, 520, 521], "navig": [479, 480], "nbeluga": 517, "nbeluga_amcl": 452, "nbeluga_rosth": [483, 517], "nbelugath": [27, 261], "nbsp": [29, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 169, 174, 254, 265, 271, 273, 278, 286, 290, 296, 298, 302, 304, 308, 322, 330, 332, 334, 336, 338, 340, 344, 348, 360, 372, 382, 384, 386, 391, 393, 398, 402, 404, 406, 408, 412, 414, 416, 420, 422, 428, 430, 435, 445, 454, 456, 458, 488, 490, 492, 512, 519, 523, 530], "ncovari": 263, "ndash": [42, 487], "ndetail": [27, 261, 483, 517], "ndim": [20, 45, 46, 49, 50, 51, 52, 54, 99, 108, 109, 183, 185, 192, 193, 199, 204, 205, 212, 213, 214, 215, 216, 218, 219, 220, 222, 225, 229, 263, 264, 294, 295, 306, 307, 333, 335, 492, 493, 505], "ndim1": 20, "ndimdimens": [53, 98], "ndt": [27, 90, 229, 254, 261, 263, 264, 332, 452, 458, 463, 464, 471, 474, 475], "ndt_amcl_nod": [458, 463, 464], "ndt_cell": [178, 264, 332, 333, 474, 475], "ndt_cell_typ": [90, 91, 215, 222, 264], "ndt_cell_typendt": 264, "ndt_cell_typetypenam": 264, "ndt_sensor_model": [90, 128, 178, 300, 301, 334, 358, 474, 475], "ndtamcl": [474, 475], "ndtamclnod": [459, 460, 465, 467, 469, 474, 475], "ndtamclnode2d": [471, 475], "ndtamclnodeexplicit": 459, "ndtamclnodendtamclnod": 475, "ndtamclnodeprotect": 459, "ndtamclvari": [458, 459, 474, 475], "ndtamclvariantal": 475, "ndtamclvariantstd": 475, "ndtcell": [116, 183, 199, 213, 214, 215, 216, 219, 220, 222, 225, 229, 254, 263, 264, 333], "ndtcell2d": [254, 255, 259, 263, 264, 474, 475], "ndtcell2dconveni": 264, "ndtcell2dndtcel": 264, "ndtcell2f": [254, 255, 259, 263], "ndtcell3d": [254, 255, 259, 263], "ndtcell3f": [254, 255, 259, 263], "ndtcellrepresent": [263, 264], "ndtmaprepresent": [458, 474, 475], "ndtmaprepresentationt": 264, "ndtmodelparam": [90, 116, 185, 214, 215, 225, 229, 254, 264, 335], "ndtmodelparam2d": [254, 255, 259, 264], "ndtmodelparam3d": [254, 255, 259, 264], "ndtmodelparamparamet": 264, "ndtsensormodel": [27, 91, 116, 199, 201, 202, 213, 214, 215, 216, 217, 220, 222, 226, 229, 254, 261, 264, 334, 458, 474, 475], "ndtsensormodelndt": 264, "ndtsensormodelndtsensormodel": 264, "nearest": [17, 45, 49, 51, 53, 73, 98, 108, 120, 164, 165, 237, 239, 243, 254, 268, 295, 307], "nearest_obstacle_distance_map": [164, 165, 243, 254, 255, 257], "nearest_obstacle_distance_mapauto": [165, 243], "nearest_obstacle_index": 165, "necessari": [3, 5, 6, 43, 264, 477, 479, 480, 488, 525], "necessarili": 65, "need": [0, 2, 3, 19, 30, 55, 105, 107, 174, 237, 254, 273, 291, 299, 402, 429, 447, 477, 479, 480, 519], "neg": 251, "negat": [284, 398, 420], "neigen": 261, "neighbor": [45, 49, 90, 254, 334], "neighborhood": [13, 15, 45, 49, 51, 108, 120, 243, 245], "neighborhood4": [13, 15, 45, 46, 49, 50, 51, 52, 108, 109, 120, 201, 215, 243, 245, 492, 493], "neighborhood4auto": [120, 245], "neighbors_funct": [164, 165, 243, 254], "neighbors_functiongiven": 254, "neighbors_kernel": [215, 225, 264, 334], "neighbors_kernelbeluga": 335, "neighbors_kernelneighbor": 264, "neighbors_kernelstd": 264, "neighborsfunct": [164, 165, 243, 254], "neighborsfunctiona": 254, "neighborst": 254, "nelement": 169, "neural": [42, 487, 537], "never": 1, "new": [4, 19, 32, 34, 39, 55, 57, 75, 77, 81, 92, 105, 173, 230, 239, 243, 251, 254, 277, 338, 348, 360, 408, 438, 445, 446, 447], "new_cap": [105, 106, 438], "new_capnew": 105, "newer": 254, "next": [26, 43, 79, 251, 291, 299, 482, 488], "ninjemi": 11, "nio": 261, "nip": [42, 487, 537], "nmaximum": 65, "nmsgcompat": 517, "nnumber": 308, "node": [32, 448, 449, 452, 454, 458, 471, 472, 474, 475, 477, 479], "node_interfac": [449, 475], "nodelet": [450, 451, 452, 456, 471, 472], "nodeopt": [449, 454, 455, 458, 459, 475], "nodiscard": [26, 32, 34, 38, 39, 41, 120, 122, 177, 179, 232, 237, 239, 241, 243, 245, 249, 251, 253, 263, 264, 268, 270, 291, 293, 295, 299, 307, 311, 438, 442, 482, 509, 521], "noetic": 11, "noexcept": [38, 40, 41, 59, 60, 65, 66, 69, 71, 79, 92, 93, 96, 102, 105, 177, 179, 232, 251, 254, 284, 291, 293, 299, 313, 398, 399, 402, 403, 420, 421, 434, 435, 436, 438, 446, 482], "noexceptbeluga": [60, 66, 70, 72, 80, 93, 97, 103, 106, 399, 421], "noexceptcheck": 232, "noexceptclear": [41, 438], "noexceptcomput": 232, "noexceptconstruct": [177, 293], "noexceptconstructor": 434, "noexceptderefer": 232, "noexceptforward": 232, "noexceptget": 41, "noexcepthelp": 436, "noexceptmov": 251, "noexceptpop": 41, "noexceptpost": 232, "noexceptpr": 232, "noexceptreset": [26, 177, 434], "noexceptreturn": [41, 179, 284, 436, 438], "noexceptrewind": 232, "noexceptupd": 177, "nois": [32, 100, 122, 243, 270, 316, 322, 330, 336, 477, 479, 480], "noisi": [32, 316], "nolint": [38, 41, 168, 171, 179, 251, 285, 305, 313, 429, 436, 446, 535], "nomin": 65, "nomotion_update_callback": [449, 451, 454, 455, 456, 457, 465, 467], "nomotion_update_callbackbool": 451, "nomotion_update_callbackvoid": 449, "nomotion_update_server_": [449, 451, 454, 456, 465, 469], "nomotion_update_server_beluga_amcl": [455, 457], "nomotion_update_server_no": [449, 451], "nomotion_update_server_rclcpp": 449, "nomotion_update_server_ro": 451, "non": [0, 1, 26, 27, 40, 41, 51, 65, 77, 96, 173, 229, 254, 261, 263, 282, 298, 395, 398, 420], "none": [65, 265], "nonneg": [479, 480], "norm": [34, 122, 173, 239, 270, 293], "normal": [4, 22, 23, 26, 27, 32, 34, 79, 81, 155, 160, 173, 178, 229, 230, 237, 239, 249, 250, 251, 254, 261, 263, 289, 332, 340, 342, 430, 431, 447, 477, 479, 480, 482, 525], "normal_distribut": [2, 81, 82, 122, 230, 251, 270, 311], "normalize_and_squar": 167, "normalize_base_fn": [116, 202, 216, 265, 266, 341, 342, 343], "normalize_base_fnimplement": [229, 266], "normalize_base_fninlin": [341, 343], "normalize_fn": [116, 202, 216, 265, 266, 343], "normalize_fnimplement": [229, 266], "normalize_fninlin": 343, "normalizeconstexpr": 266, "normalized_weight": [167, 172, 173, 254], "normalized_weights_view": 173, "normalized_weightsrang": 254, "normalizedefinit": 266, "note": [18, 51, 53, 65, 264, 490], "notethi": [55, 57, 75, 77], "noth": 105, "notic": [34, 173, 239], "now": [5, 309], "nowher": [71, 232], "npolici": [27, 261], "nsophu": 261, "nsophussophu": 517, "nstate_detail": [27, 261], "nstd": [27, 261], "ntest": 261, "ntf2tf2": 517, "nth": 230, "nullari": 291, "nullopt": [26, 43, 45, 49, 73, 98, 120, 237, 245, 293, 307, 458, 475, 482, 488], "nullptr": [232, 264, 458, 475, 509], "num_dim": [90, 215, 225, 263, 264, 332], "num_dimbeluga": 333, "num_dimnumb": 263, "num_dimstat": 263, "number": [4, 11, 26, 84, 86, 88, 98, 108, 173, 228, 230, 237, 254, 271, 304, 307, 309, 314, 332, 344, 404, 406, 408, 412, 430, 442, 470, 477, 479, 480, 482, 490, 504, 524, 525], "number_of_non_zero_weight": 173, "numer": [27, 93, 116, 151, 166, 167, 172, 173, 178, 201, 202, 215, 216, 229, 254, 261, 265, 266, 283, 284, 312, 313, 423, 434, 447, 475], "numeric_limit": [27, 92, 116, 173, 229, 261, 266, 309, 312, 313, 424, 431, 434, 477, 490, 491, 509], "numericconstexpr": 313, "numerichelp": [284, 313], "nview": [27, 261], "nweight_detail": [27, 261], "o": [5, 28, 32, 65, 116, 181, 184, 196, 202, 216, 237, 243, 254, 255, 263, 304, 305, 332, 333, 438, 465, 467, 486, 494, 496, 498, 499, 506, 523], "object": [18, 19, 23, 27, 29, 30, 32, 34, 79, 81, 92, 122, 145, 155, 167, 169, 173, 174, 175, 178, 229, 230, 237, 239, 243, 251, 254, 261, 264, 265, 266, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 290, 291, 296, 297, 298, 299, 309, 311, 338, 340, 342, 344, 346, 348, 350, 360, 380, 384, 386, 393, 395, 398, 402, 404, 406, 410, 412, 414, 416, 418, 420, 428, 429, 430, 431, 435, 436, 438, 444, 445, 446], "observ": 1, "obstacl": [17, 25, 32, 51, 152, 164, 165, 178, 243, 254, 268, 316, 330, 479, 480], "obstacle_data": [17, 51, 52, 202, 216, 243, 268, 492, 493], "obstacle_dataauto": 268, "obstacle_map": [164, 165, 243, 254], "obstacle_mapa": 254, "obtain": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 230, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 278, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "occup": [17, 27, 32, 51, 55, 77, 86, 96, 154, 178, 229, 243, 252, 253, 254, 261, 267, 447, 449, 451, 454, 456, 458, 475, 479, 480, 483, 492, 505, 517, 520, 521, 527], "occupancy_grid": [51, 128, 139, 154, 178, 242, 243, 252, 253, 448, 449, 481, 482, 485, 486, 492, 496, 498, 510, 527], "occupancygrid": [2, 27, 31, 32, 56, 78, 87, 97, 116, 182, 183, 191, 192, 199, 200, 202, 204, 206, 207, 213, 214, 216, 217, 218, 220, 221, 222, 223, 226, 229, 242, 243, 252, 253, 254, 261, 292, 293, 449, 450, 451, 454, 455, 456, 457, 479, 480, 482, 483, 486, 488, 489, 493, 494, 496, 498, 499, 501, 503, 505, 506, 510, 512, 517, 520, 521, 527, 528], "occupancygrid2d": [2, 51, 55, 77, 275], "occupancygrida": [86, 96], "occupancygridconstsharedptr": [492, 493, 510, 521], "occupancygridinlin": 493, "occupancygridinlineexplicit": 493, "occupancygridinlinestat": 493, "occupancygridoccupancygrid": 521, "occupancygridthin": [482, 505, 510, 521], "occupancygridtyp": [55, 77], "occupi": [17, 521, 527], "occur": [454, 456, 458], "odom": [449, 451, 454, 456, 458, 475, 477, 479, 480], "odom_alpha1": 479, "odom_alpha2": 479, "odom_alpha3": 479, "odom_alpha4": 479, "odom_alpha5": 479, "odom_frame_id": [477, 479, 480], "odometri": [6, 27, 67, 94, 100, 121, 122, 157, 178, 229, 230, 247, 254, 261, 269, 270, 311, 322, 336, 477, 479, 480, 488], "off": [5, 102], "offici": 5, "offset": [71, 72, 232, 243, 264], "often": 3, "old": 264, "older": [254, 479], "oldest": 65, "omit": 6, "omni": 479, "omni_motion_model": 270, "omnidirect": [27, 94, 157, 178, 229, 230, 247, 254, 261, 269, 270, 447, 477], "omnidirectional_dr": [477, 479, 480], "omnidirectional_drive_model": [94, 157, 178, 246, 247, 336, 474, 475], "omnidirectionaldrivemodel": [16, 27, 95, 116, 183, 202, 216, 217, 220, 222, 229, 230, 254, 261, 269, 270, 336, 474, 475, 482, 488], "omnidirectionaldrivemodelinlin": 95, "omnidirectionaldrivemodelinlineexplicit": 95, "omnidirectionaldrivemodelomnidirectionaldrivemodel": 270, "omnidirectionaldrivemodelparam": [94, 116, 185, 218, 220, 221, 225, 254, 269, 270, 337], "omnidirectionaldrivemodelparamparamet": [229, 270], "omnidirectionaldrivemodelsampl": [229, 270], "omnimotionmodel": [477, 480], "on_activ": [449, 454, 455, 458, 459, 465, 467, 475], "on_activatecallbackreturn": [449, 475], "on_cleanup": [449, 454, 455, 458, 459, 465, 467, 475], "on_cleanupcallbackreturn": [449, 475], "on_configur": [449, 454, 455, 458, 459, 465, 467, 475], "on_configurecallbackreturn": [449, 475], "on_deactiv": [449, 454, 455, 458, 459, 465, 467, 475], "on_deactivatecallbackreturn": [449, 475], "on_effective_size_drop": [26, 146, 178, 230, 280, 281, 384, 482], "on_effective_size_drop_polici": [26, 27, 116, 202, 212, 216, 225, 229, 261, 271, 272, 385], "on_effective_size_drop_policyimplement": [229, 272], "on_effective_size_drop_policyinlin": 385, "on_effective_size_drop_policystat": 385, "on_effective_size_dropconstexpr": [26, 272], "on_effective_size_droppolici": [26, 272], "on_mot": [26, 146, 178, 230, 280, 281, 386, 388, 390, 391, 482], "on_motion_fn": [26, 27, 116, 202, 216, 229, 261, 273, 274, 387, 482], "on_motion_fnimplement": [229, 274], "on_motion_fninlin": 387, "on_motion_polici": [27, 116, 202, 216, 229, 261, 273, 274, 389], "on_motion_policy_bas": [27, 116, 202, 216, 229, 261, 273, 274, 391, 392], "on_motion_policy_baseconstexpr": 274, "on_motion_policy_baseprimari": 274, "on_motion_policybas": 274, "on_motionconstexpr": [26, 274, 482], "on_motionpolici": [26, 274], "on_shutdown": [449, 454, 455, 458, 459, 465, 467, 475], "on_shutdowncallbackreturn": [449, 475], "onc": [6, 29, 429, 482], "one": [6, 27, 37, 38, 61, 63, 79, 86, 105, 229, 254, 261, 299, 393, 410, 479, 480, 524], "oner": 3, "ones": 447, "oninit": [451, 456, 457, 465, 467], "oninitvoid": 451, "onli": [5, 12, 38, 57, 63, 65, 71, 92, 100, 105, 122, 237, 254, 264, 298, 302, 308, 477, 479, 480, 524, 525], "op": [65, 338], "opac": 524, "open": [6, 11, 309, 447], "opendataset": 264, "oper": [2, 30, 32, 34, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 122, 175, 177, 202, 216, 219, 230, 232, 239, 243, 251, 253, 254, 255, 257, 263, 264, 266, 270, 272, 274, 277, 282, 284, 287, 291, 297, 299, 304, 305, 309, 311, 313, 320, 321, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 358, 359, 360, 361, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 431, 434, 446, 483, 490, 499, 501, 505, 517, 524, 529, 530, 531], "opera": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "opt": [5, 29], "opt_landmark_bearing_in_sensor": 34, "opt_landmark_position_in_world": 239, "optim": [3, 27, 37, 38, 59, 229, 237, 254, 261, 438], "optin": 41, "option": [13, 15, 26, 34, 43, 44, 65, 73, 96, 98, 119, 120, 237, 239, 244, 245, 269, 270, 274, 290, 291, 292, 293, 306, 307, 448, 449, 451, 454, 455, 456, 457, 458, 459, 474, 475, 481, 482, 488, 489], "order": [2, 29, 39, 266, 287, 297, 340, 342, 344, 346, 348, 350, 477], "org": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 358, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "organ": 230, "orient": [173, 521, 524, 535], "origin": [14, 17, 51, 96, 243, 268, 277, 293, 482, 490, 491, 492, 493, 499, 501, 509, 521], "origin_": [509, 521], "originconst": [509, 521], "originlas": 490, "osan": 304, "ostream": [263, 304, 305, 332, 333], "other": [2, 4, 19, 38, 41, 43, 63, 64, 65, 66, 71, 72, 79, 80, 81, 82, 228, 230, 232, 251, 266, 286, 287, 291, 297, 320, 321, 340, 342, 344, 346, 348, 350, 393, 404, 414, 416, 429, 431, 435, 445, 470, 479, 480, 504, 524], "otheranoth": 79, "otherdistribut": 79, "otherparamet": 81, "otherwis": [41, 45, 49, 65, 79, 81, 105, 382, 384, 391, 454, 456, 458], "our": 6, "out": [1, 3, 6, 41, 43, 512, 519, 533, 534, 535], "out_of_rang": [41, 98], "out_of_rangeif": 65, "outa": 519, "output": [27, 69, 177, 229, 254, 261, 304, 402, 434, 445, 446], "output_": 177, "outth": 519, "over": [3, 4, 20, 102, 105, 230, 237, 428, 479, 480, 486, 496, 498, 506, 523], "overhead": 3, "overload": [18, 30, 38, 40, 41, 59, 63, 92, 105, 175, 230, 254, 263, 266, 282, 284, 287, 297, 302, 320, 332, 338, 340, 342, 344, 346, 348, 350, 380, 382, 384, 386, 393, 398, 402, 404, 410, 414, 416, 418, 420, 438, 446, 486, 496, 498, 506, 511, 517, 519, 524, 532, 533, 534, 535], "overrid": [449, 451, 454, 455, 456, 457, 458, 459, 475], "overridebeluga_amcl": [455, 457, 459], "overridecallback": [449, 451, 475], "overwrit": [65, 254], "overwritten": 254, "ow": 3, "own": 17, "p": [4, 5, 13, 17, 18, 19, 20, 28, 45, 46, 49, 50, 51, 52, 53, 54, 98, 99, 108, 109, 116, 120, 181, 184, 196, 203, 217, 222, 254, 268, 295, 307, 430, 431, 465, 467, 469, 477, 479, 480, 482, 492, 493, 499, 525], "p0": [38, 59, 60, 61, 62], "p0_": 38, "p0line": 61, "p0start": 59, "p1": [38, 59, 60, 61, 62], "p1_": 38, "p1end": 59, "p1line": 61, "p2593r1": 309, "packag": [5, 478], "page": [27, 42, 228, 229, 254, 261, 276, 277, 378, 470, 487, 504], "pair": [26, 32, 41, 43, 55, 65, 71, 77, 98, 172, 173, 243, 254, 307, 429, 445, 449, 451, 454, 455, 456, 457, 458, 459, 475, 482, 488, 489], "paper": 309, "par": [477, 479, 480], "parallel": [447, 479, 480], "parallel_polici": [26, 474, 475, 482, 488], "param": [19, 26, 32, 34, 43, 44, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 79, 80, 90, 91, 94, 95, 122, 203, 217, 239, 243, 245, 251, 264, 270, 482, 488, 489], "param_typ": [19, 32, 34, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 79, 80, 90, 91, 94, 95, 122, 217, 222, 239, 243, 251, 264, 270], "param_typebearingmodelparam": 34, "param_typedifferentialdrivemodelparam": 122, "param_typelandmarkmodelparam": 239, "param_typelikelihoodfieldmodelparam": 243, "param_typemultivariatenormaldistributionparam": 251, "param_typendtmodelparam": 264, "param_typeomnidirectionaldrivemodelparam": 270, "param_typeparamet": [34, 122, 239, 243, 264, 270], "param_typeth": 251, "paramconst": 251, "paramet": [6, 19, 26, 27, 31, 32, 33, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 121, 169, 228, 229, 238, 242, 250, 251, 254, 261, 263, 264, 269, 270, 298, 302, 304, 308, 314, 316, 318, 322, 326, 330, 334, 336, 340, 344, 348, 360, 382, 384, 388, 390, 391, 404, 406, 412, 414, 416, 422, 424, 449, 451, 454, 456, 458, 470, 475, 477, 481, 482, 483, 488, 490, 492, 504, 505, 512, 517, 519, 525, 530], "parameter": 298, "parameterdescriptor": 477, "parametervalu": 477, "parametr": [19, 449, 451, 454, 456, 458, 475], "params_": [26, 32, 34, 90, 122, 239, 243, 251, 264, 270, 482], "params_path": 6, "paramsdistribut": 79, "paramsnew": 79, "paramsparamet": [43, 55, 57, 67, 75, 77, 90, 94, 488], "paramsth": 79, "paramvoid": 251, "parent": 165, "part": [4, 26, 173, 254, 314], "partial": [3, 474], "particl": [4, 11, 16, 21, 25, 26, 27, 32, 34, 42, 43, 44, 55, 57, 67, 75, 77, 90, 94, 100, 102, 122, 145, 151, 152, 166, 167, 172, 173, 178, 202, 203, 216, 217, 229, 230, 239, 243, 254, 261, 264, 265, 266, 270, 271, 275, 276, 277, 283, 284, 286, 287, 296, 297, 298, 299, 308, 309, 311, 314, 344, 348, 361, 378, 384, 397, 398, 408, 416, 420, 430, 431, 434, 440, 443, 444, 447, 449, 451, 454, 456, 458, 474, 475, 477, 482, 486, 487, 488, 489, 496, 498, 499, 501, 506, 512, 523, 524, 525, 537], "particle_cloud": [6, 480, 485, 486, 496, 498, 506, 529, 530], "particle_cloud_pub_": [449, 451, 454, 456, 458, 465, 469, 475], "particle_cloud_pub_beluga_amcl": [455, 457, 459], "particle_cloud_pub_particl": [449, 451, 475], "particle_cloud_pub_rclcpp_lifecycl": [449, 475], "particle_cloud_pub_ro": 451, "particle_cloud_timer_": [451, 456, 465, 469], "particle_cloud_timer_beluga_amcl": 457, "particle_cloud_timer_callback": [451, 456, 457, 465, 467], "particle_cloud_timer_callbackvoid": 451, "particle_cloud_timer_ro": 451, "particle_cloud_timer_tim": 451, "particle_filter_": [449, 451, 454, 456, 458, 465, 469, 475], "particle_filter_beluga_amcl": [455, 457, 459], "particle_filter_particl": [449, 451, 475], "particle_filter_std": [449, 451, 475], "particle_mark": 480, "particle_markers_pub_": [449, 454, 465, 469], "particle_markers_pub_beluga_amcl": 455, "particle_markers_pub_particl": 449, "particle_markers_pub_rclcpp_lifecycl": 449, "particle_trait": [116, 151, 166, 167, 178, 220, 222, 226, 229, 254, 265, 266, 286, 287, 296, 297, 298, 299, 360, 379, 430, 431, 434, 439, 440, 524], "particle_traitscommon": 277, "particle_typ": [26, 229, 482, 488, 489, 499, 502], "particle_typestd": 482, "particle_typeweight": 482, "particlecloud": 479, "particlefilt": [16, 21], "particles_": [26, 229, 482], "particlesa": 512, "particlesconst": [26, 482], "particlesdistribut": 512, "particlespos": 512, "particleth": 254, "particletyp": [26, 44, 180, 189, 190, 195, 198, 203, 207, 211, 217, 223, 229], "particletypeful": 43, "particular": [98, 480], "particularli": [322, 330], "pass": [393, 402], "past": [37, 38, 41, 61, 63, 65, 71, 320], "path": [5, 264, 477, 478], "path_to_hdf5_fil": 264, "pattern": [2, 92], "per": [110, 309, 449, 451, 454, 456, 458, 475, 524], "percentag": [272, 384, 480], "percept": [243, 330], "perfect_odometri": 6, "perform": [4, 6, 11, 43, 55, 77, 96, 105, 174, 243, 254, 270, 273, 477, 488], "period": [174, 449, 451, 454, 456, 458, 475, 480], "permiss": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "petar": 42, "pf_err": [477, 479, 480], "pf_z": [477, 479, 480], "phantom": 92, "phantomtyp": [27, 93, 116, 201, 202, 215, 216, 229, 261, 312, 313, 423], "phantomtypeempti": 92, "phantomtypephantom": [422, 424], "physic": 55, "pi": [11, 13, 17, 45, 46, 49, 50, 51, 52, 53, 54, 98, 99, 108, 109, 120, 122, 243, 245, 268, 270, 295, 477, 479, 480, 482, 492, 493, 525], "pictur": 6, "pigrid": [45, 49, 51, 53], "pipelin": [429, 474], "pkg": [5, 6], "place": [3, 71, 122, 232, 270, 322, 336], "plai": 6, "plainmatrix": [249, 372], "plane": [34, 45, 49, 51, 53, 98, 108, 239, 245, 268, 295, 307, 490], "platform": [11, 264, 479, 480], "pleas": 0, "plenti": [2, 6], "plu": [32, 167, 173, 243, 264], "plugin": 480, "point": [18, 26, 27, 32, 34, 38, 41, 47, 55, 56, 59, 61, 65, 71, 75, 77, 78, 90, 91, 122, 167, 173, 228, 229, 232, 239, 241, 243, 254, 261, 263, 264, 270, 277, 279, 283, 284, 287, 309, 311, 314, 332, 398, 420, 431, 470, 504, 510, 519, 524, 532, 533, 535], "pointer": [38, 41, 63, 64, 65, 66, 71, 72, 217, 222, 232], "pointerdecltyp": 232, "pointerpoint": 38, "pointervalu": [41, 232], "pointervalue_typ": 41, "pointervector2": 38, "points2d": [55, 77], "points_in_cartesian_coordin": [47, 48, 203, 217, 241, 482, 490, 491], "points_in_cartesian_coordinatesauto": 241, "points_in_cel": 264, "points_in_polar_coordin": [47, 48, 203, 217, 241, 490, 491], "points_in_polar_coordinatesauto": 241, "points_view": 264, "pointslidar": 90, "polar": [47, 241], "polici": [2, 11, 26, 27, 35, 36, 43, 116, 147, 178, 186, 194, 202, 203, 212, 216, 217, 225, 229, 230, 254, 261, 265, 266, 286, 287, 296, 297, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 447, 449, 451, 454, 456, 458, 474, 475, 477, 479, 480, 482, 488], "policiesinclud": 138, "policiespolici": 126, "policy_bas": [116, 216, 219, 254, 282, 396], "policy_basefriend": 396, "policy_baseimplement": [229, 282], "policyconstexpr": 282, "policyfn": [202, 203, 216, 217, 229, 282, 394], "policyforward": [26, 266, 272, 282, 287, 297], "policypolici": 282, "policyth": [340, 344, 348], "polymorph": 3, "pop": [65, 165], "pop_back": [41, 65, 66, 203, 217], "pop_backstd": 41, "pop_front": [41, 65, 66, 203, 217], "pop_frontstd": 41, "popul": [298, 477, 479, 480, 482, 525], "popular": [1, 6], "port": 480, "portion": 20, "pose": [6, 26, 34, 43, 44, 67, 73, 84, 86, 88, 94, 100, 122, 172, 173, 202, 216, 229, 235, 237, 239, 253, 254, 270, 273, 274, 311, 318, 328, 389, 391, 447, 449, 451, 454, 456, 458, 475, 477, 482, 488, 489, 510, 511, 512, 519, 521, 523, 524, 525, 534, 535], "pose_arrai": [448, 449, 474, 475, 510], "pose_pub_": [449, 451, 454, 456, 458, 465, 469, 475], "pose_pub_beluga_amcl": [455, 457, 459], "pose_pub_estim": [449, 451, 475], "pose_pub_rclcpp_lifecycl": [449, 475], "pose_pub_ro": 451, "pose_stamp": 477, "pose_to_weighted_eigen_vector": 173, "pose_with_covariance_stamp": [448, 449, 474, 475], "posearrai": [449, 454, 458, 475, 479, 480, 510, 512, 523, 524], "posesa": 254, "posespos": 254, "poseth": [254, 388, 390], "posewithcovariancestamp": [449, 450, 451, 454, 455, 456, 457, 458, 459, 475, 479, 480], "posit": [65, 71, 75, 232, 234, 237, 239, 254, 268, 309, 447, 521, 535], "possibl": [2, 4, 16, 17, 21, 416, 431], "possibli": [13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 98, 230, 254, 284, 393, 435, 436], "post": [38, 63, 71, 477, 479, 480], "posterior": [4, 254, 344], "potenti": 71, "power": [2, 6], "pplane": [45, 51, 53], "practic": 291, "practition": 1, "pre": [71, 77, 332], "precalcul": 34, "precis": 524, "precomput": 86, "predic": [2, 230, 393], "predict": 4, "predtyp": 264, "prefigur": 4, "prefix": [6, 38, 63], "presenc": [40, 41, 254], "present": [98, 264, 307, 334], "preserv": 2, "press": [42, 487, 537], "prev": [274, 291, 391, 392], "prev_error_": 38, "prevent": [32, 43, 477, 488], "previou": [4, 67, 94, 100, 122, 270, 311, 391], "previous": 254, "previous_orient": [122, 270], "previous_pos": [122, 270], "previous_pose_pose_2d": 122, "prevth": 391, "primari": [83, 104, 229, 254, 390], "primarili": 11, "primit": [26, 32, 34, 35, 36, 122, 147, 164, 165, 167, 172, 173, 178, 239, 243, 264, 270, 276, 277, 278, 279, 287, 309, 311, 313, 398, 420, 431, 474, 475, 523, 524], "print": 304, "printer": [156, 178, 304, 433], "prior": [4, 344, 429], "priority_queu": 165, "privat": [26, 32, 34, 38, 41, 122, 175, 177, 228, 232, 237, 239, 243, 251, 253, 264, 270, 274, 291, 293, 299, 307, 309, 313, 434, 438, 442, 470, 482, 504, 509, 521], "privatebas": [228, 470, 504], "prob": 524, "probabilist": [6, 42, 55, 67, 75, 77, 102, 230, 239, 316, 322, 326, 330, 487, 537], "probabilityth": [404, 406], "probabl": [2, 4, 17, 19, 26, 27, 34, 102, 229, 230, 239, 243, 254, 261, 290, 291, 330, 404, 405, 406, 407, 408, 434, 477, 479, 480, 482, 524, 525], "problem": [42, 264], "proceed": [5, 42, 487, 537], "process": [4, 42, 43, 454, 456, 458, 477, 479, 480, 487, 537], "produc": [29, 43, 230], "product": 237, "profession": 0, "program": [2, 3, 254], "proj": 431, "project": [5, 34, 59, 237, 239, 249, 478], "prologu": [171, 178], "proof": [1, 237], "propag": [2, 4, 16, 22, 23, 26, 27, 155, 178, 229, 230, 261, 277, 344, 346, 482], "propagate_base_fn": [116, 202, 216, 286, 287, 345, 346, 347], "propagate_base_fnimplement": [229, 287], "propagate_base_fninlin": [345, 347], "propagate_fn": [116, 202, 216, 286, 287, 347], "propagate_fnimplement": [229, 287], "propagate_fninlin": 347, "propagateconstexpr": 287, "propagatedefinit": 287, "properti": [179, 254, 303], "proport": [254, 524], "propos": [4, 6], "protect": [228, 299, 408, 410, 449, 451, 454, 456, 458, 470, 475, 504], "protectedbas": [228, 470, 504], "protocol": 366, "prototyp": 254, "provid": [3, 18, 39, 43, 71, 77, 79, 81, 86, 92, 105, 243, 253, 254, 302, 391, 438, 447, 472, 478, 479, 480, 488, 506, 524], "provis": 6, "proxi": 524, "ptrdiff_t": [38, 41, 63, 65, 105, 173, 438], "public": [26, 32, 34, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 120, 122, 175, 177, 228, 232, 237, 239, 241, 243, 245, 251, 253, 264, 266, 268, 270, 274, 277, 282, 287, 291, 293, 295, 297, 299, 307, 309, 311, 313, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 353, 357, 358, 360, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 391, 393, 398, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 425, 434, 438, 442, 449, 451, 454, 458, 470, 475, 482, 488, 490, 492, 504, 509, 521, 525, 527, 530], "publicbas": [228, 470, 504], "publish": [6, 449, 451, 454, 456, 458, 475, 477, 524], "pull": 524, "punish": 438, "pure": 6, "purpl": [228, 470, 480, 504, 524], "purpos": [1, 263, 332], "push": [40, 41, 65, 165, 254], "push_back": [41, 65, 66, 105, 106, 203, 217, 245, 254, 264, 438, 524], "push_back_impl": 438, "push_backconstexpr": 438, "push_backstd": 41, "push_front": [41, 65, 66, 203, 217, 254], "push_frontstd": 41, "put": 2, "py": 6, "pz": 32, "q": 4, "qo": [6, 480], "qualiti": [1, 11], "quantil": [254, 430, 431, 477, 479, 480, 482, 525], "quaternion": 535, "queri": 239, "queue": [164, 165], "quickmcl": [32, 243], "quit": [6, 438], "quot": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "r": [0, 5, 17, 20, 28, 105, 106, 116, 181, 184, 196, 204, 218, 222, 225, 255, 277, 302, 303, 438, 499, 524], "r1": 293, "radian": [14, 26, 110, 314, 391, 477, 512, 524, 530], "rai": [27, 32, 55, 77, 96, 229, 243, 254, 261, 292, 293, 330], "rainbow": 524, "raison": 1, "ramiro": [32, 264], "random": [3, 13, 15, 19, 26, 27, 31, 32, 33, 34, 35, 36, 41, 43, 71, 79, 81, 83, 84, 86, 88, 102, 121, 122, 147, 150, 178, 229, 231, 232, 238, 239, 242, 243, 254, 261, 269, 270, 286, 287, 290, 291, 298, 299, 310, 311, 314, 316, 330, 344, 367, 368, 369, 372, 375, 377, 404, 406, 408, 410, 412, 474, 475, 477, 479, 480, 525], "random_access_iterator_tag": [71, 232], "random_access_rang": [298, 299], "random_interspers": [26, 27, 145, 178, 229, 230, 261, 404, 406, 443, 444, 482], "random_intersperse_fn": [116, 202, 212, 216, 225, 290, 291, 405], "random_intersperse_fnimplement": [229, 291], "random_intersperse_fninlin": 405, "random_intersperse_fnstat": 405, "random_intersperse_view": [116, 204, 218, 229, 290, 291, 407], "random_intersperse_viewconstexpr": 291, "random_intersperse_viewimplement": 291, "random_intersperse_viewrandom_intersperse_view": 291, "random_intersperseconstexpr": 291, "random_interspersedefinit": 291, "random_probability_estimator_": [26, 482], "random_st": [26, 482], "random_state_gener": [26, 43, 44], "random_state_generator_": 26, "random_state_generator_typ": 26, "random_state_generatora": 43, "random_state_prob": [26, 482], "randominclud": 139, "randomli": [298, 430], "randomnumberdistribut": [19, 412], "randomrandom": 127, "randomstatedistribut": [79, 275], "randomstategener": [26, 44, 180, 189, 190, 195, 198, 203, 207, 211, 217, 223, 229, 474, 475], "randomstategeneratora": 43, "randomstategeneratorstd": 475, "randomstategeneratortyp": 475, "rang": [3, 13, 14, 15, 17, 20, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 59, 61, 63, 65, 75, 77, 83, 86, 90, 96, 98, 99, 102, 103, 105, 106, 108, 109, 145, 147, 153, 155, 164, 165, 166, 167, 169, 170, 172, 173, 178, 204, 205, 218, 220, 229, 230, 236, 237, 238, 239, 240, 241, 242, 243, 253, 254, 261, 263, 264, 265, 266, 267, 268, 271, 272, 276, 277, 278, 279, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 316, 320, 326, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 384, 385, 398, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 428, 429, 430, 431, 434, 437, 438, 444, 445, 446, 447, 477, 479, 480, 481, 482, 490, 491, 492, 493, 499, 501, 508, 509, 512, 523, 524], "range_": 299, "range_access": [291, 299], "range_difference_t": 299, "range_error": 239, "range_error_prob": 239, "range_max": 509, "range_min": 509, "range_v3_major": [171, 285], "range_v3_minor": [171, 285], "range_value_t": [172, 173, 241, 254, 277, 287, 291, 299, 431, 512, 523, 524], "rangea": [102, 254, 404, 406, 412, 414], "rangean": [340, 344, 348, 416], "ranger": 11, "rangerang": 254, "ranges_value_t": 402, "rangesauto": 509, "rangesourc": [414, 416], "rangesv3": 3, "rangeth": [254, 384, 404, 406, 412], "rao": [42, 487, 537], "rarr": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "raspberri": 11, "rate": [102, 477, 479, 480, 482, 525], "rather": [65, 254, 408], "ratio": [102, 309, 524], "raw_difference_typ": 232, "ray2d": [32, 97, 116, 183, 192, 204, 206, 218, 221, 229, 254, 292, 293], "ray2dcast": [32, 293], "ray2dray2d": 293, "raycast": [24, 25, 31, 32, 59, 61, 63, 96, 152, 178, 320], "raycastingraycast": 132, "raytrac": [37, 55, 163, 178, 293], "rbegin": [41, 65, 66, 204, 218], "rbeginconstexpr": 41, "rcl_interfac": 477, "rclcpp": [449, 454, 455, 458, 459, 475, 477, 510], "rclcpp_lifecycl": [448, 449, 454, 455, 458, 459, 474, 475, 477], "re": [1, 32, 39, 77, 173, 266, 287, 297, 340, 342, 344, 346, 348, 350, 449, 451, 454, 455, 456, 458, 475, 479, 480], "reach": [41, 65, 254, 438], "react": 254, "read": [4, 32, 55, 65, 264, 291, 299, 316, 479, 480], "read_onli": 477, "readabl": [3, 38, 41, 168, 429, 535], "readi": 506, "real": [79, 98, 307], "receiv": 477, "recommend": [6, 102], "recov": [34, 102, 477, 479, 480, 482, 525], "recoveri": [26, 314], "recovery_alpha_fast": [477, 479, 480], "recovery_alpha_slow": [477, 479, 480], "recur": 2, "recurs": 4, "red": [228, 470, 480, 504, 524], "reduc": 477, "ref": [291, 299, 482], "refer": [11, 15, 18, 26, 28, 34, 38, 41, 64, 66, 72, 179, 181, 184, 196, 218, 222, 230, 232, 235, 237, 239, 243, 258, 262, 284, 291, 299, 436, 446, 453, 466, 472, 482, 484, 500, 506, 516, 518, 521], "reference_typ": [105, 106, 218, 222, 438], "reference_typerang": 438, "reference_typerefer": 438, "reference_wrapp": [291, 299, 404, 405, 410, 411], "referencedecltyp": 232, "referencefin": 92, "referencerefer": 38, "referencevalu": [41, 232], "referencevalue_typ": 41, "referencevector2": 38, "regardless": 96, "region": [4, 27, 84, 88, 229, 252, 253, 254, 261], "regular": [2, 13, 17, 20, 27, 53, 98, 120, 154, 178, 229, 254, 261, 264, 294, 306, 307], "regular_grid": [53, 119, 120, 154, 178, 306, 307], "regulargrid": [13, 53, 275], "regularli": [3, 53, 229, 254, 294], "reinitialize_global_loc": 480, "reinterpret_cast": 264, "rel": [1, 57, 237, 322, 336, 479, 480], "relat": [0, 6, 28, 145, 167, 178, 184, 228, 266, 278, 287, 297, 299, 338, 434, 444, 447, 470, 504], "relationfil": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "releas": 5, "relev": 65, "reli": [2, 3, 57, 77, 254], "reliabl": [6, 480], "reloc": [449, 451, 454, 456], "remain": 438, "remap": 480, "rememb": 5, "remov": [39, 438, 482], "remove_cv_t": [71, 232], "remove_reference_t": [71, 179, 232], "rend": [41, 65, 66, 204, 218], "rendconstexpr": 41, "renorm": 173, "rep": 11, "repeat": [19, 65, 451, 456], "repeat_n": [172, 173], "replac": [4, 105, 145, 178, 298, 438, 444], "replic": 524, "report": 490, "repres": [4, 16, 17, 21, 43, 55, 73, 77, 79, 81, 90, 98, 112, 114, 228, 234, 235, 237, 254, 309, 408, 454, 456, 458, 470, 480, 504, 524], "represent": [32, 55, 57, 75, 77, 90, 173, 229, 243, 249, 254, 264, 332, 368, 369, 372, 375, 377, 474], "reproduc": 3, "req": [449, 454, 455], "request": [449, 451, 454, 455, 456, 457, 479, 480], "request_head": [449, 454, 455], "request_nomotion_upd": [479, 480], "requir": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 63, 65, 67, 75, 77, 79, 81, 90, 94, 100, 118, 120, 122, 151, 165, 167, 168, 170, 171, 173, 175, 177, 178, 179, 229, 230, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 261, 263, 264, 266, 268, 270, 272, 274, 275, 276, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 298, 299, 301, 303, 305, 307, 309, 311, 313, 320, 344, 378, 404, 406, 412, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 480, 482, 486, 488, 509, 510, 512, 521, 524, 525, 533, 535], "resampl": [4, 11, 26, 42, 43, 102, 230, 254, 298, 314, 384, 408, 447, 477, 479, 480, 482, 488, 524, 525], "resample_interv": [26, 218, 225, 314, 477, 479, 480, 482, 499, 503, 525], "resample_intervalbeluga": 315, "resample_intervalbeluga_ro": 526, "resample_intervalfilt": 26, "resample_intervalnumb": 482, "resample_intervalstd": [26, 482], "resample_policy_": [26, 482], "research": [0, 1], "reserv": [105, 106, 204, 218, 264, 438, 524], "reserveconstexpr": 438, "reset": [19, 26, 69, 70, 79, 80, 102, 103, 177, 204, 218, 251, 291, 434, 479, 480, 482], "resetconstexpr": [26, 177, 434, 482], "resetvoid": 251, "resiz": [105, 106, 204, 218, 438, 477], "resizeconstexpr": 438, "resolut": [20, 45, 49, 51, 53, 98, 99, 108, 109, 110, 112, 113, 114, 115, 204, 218, 243, 264, 295, 307, 308, 309, 442, 477, 479, 480, 482, 483, 492, 493, 499, 501, 505, 511, 512, 517, 519, 521, 523, 524, 525, 530, 532, 533, 534, 535], "resolution_": [307, 309, 442], "resolution_dataset": 264, "resolution_in_each_axis_t": [112, 113, 114, 115, 218, 222, 309], "resolution_in_each_axis_tstd": 309, "resolution_in_each_axis_ttyp": 309, "resolutiondoubl": [307, 442, 521], "resolutiongrid": [98, 108], "resolutionstd": [112, 114], "resolutionth": 308, "respect": [2, 4, 65], "respons": [449, 451, 454, 455, 456, 457], "rest": [1, 5, 39, 480], "restor": 479, "restore_default": 479, "result": [3, 4, 19, 29, 30, 39, 79, 83, 92, 120, 173, 228, 245, 249, 250, 251, 254, 291, 308, 338, 368, 369, 372, 375, 377, 393, 431, 470, 479, 480, 482, 504], "result_typ": [19, 79, 80, 218, 222, 249, 250, 251, 254, 291, 299, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "result_typesophu": 249, "result_typeth": [249, 251], "result_typetypenam": [249, 251], "ret": 264, "retri": 480, "retriev": [13, 51], "return": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 30, 32, 34, 38, 39, 41, 43, 55, 57, 61, 65, 73, 75, 77, 79, 90, 96, 98, 105, 120, 122, 164, 165, 167, 169, 170, 172, 173, 175, 177, 179, 229, 230, 232, 237, 239, 241, 243, 245, 249, 251, 253, 254, 261, 263, 264, 266, 268, 270, 272, 274, 276, 277, 282, 284, 287, 291, 293, 295, 297, 299, 303, 305, 307, 308, 309, 311, 313, 340, 342, 344, 346, 348, 350, 357, 360, 364, 366, 382, 388, 391, 400, 402, 404, 406, 414, 416, 428, 429, 430, 431, 434, 435, 436, 438, 442, 445, 446, 454, 456, 458, 482, 488, 509, 510, 521, 524, 533, 535], "returnsa": [55, 57, 67, 75, 77, 84, 86, 88, 90, 94, 100, 254, 519], "returnsan": [43, 488], "returnscel": [45, 49], "returnsdist": 96, "returnsful": 96, "returnsgrid": 53, "returnsplan": [49, 51, 53], "returnsrang": [45, 49, 51, 53], "returnssize_t": 422, "returnssubtend": 59, "returnsth": [73, 79, 81, 102, 110, 112, 114, 254, 308, 360, 519], "returnstru": [79, 81, 382, 384, 391, 454, 456, 458], "reus": [1, 2], "reusabl": [2, 3, 447, 472], "revers": [41, 65, 254], "reverse_iter": [41, 65, 66, 218, 222], "reverse_iteratorrevers": 41, "reverse_iteratorstd": 41, "reversed_": 38, "revisit": 264, "reweight": [21, 22, 23, 26, 27, 155, 178, 229, 230, 261, 348, 350, 482], "reweight_base_fn": [116, 202, 216, 296, 297, 349, 350, 351], "reweight_base_fnimplement": [229, 297], "reweight_base_fninlin": [349, 351], "reweight_fn": [116, 202, 216, 296, 297, 351], "reweight_fnimplement": [229, 297], "reweight_fninlin": 351, "reweightconstexpr": 297, "reweightdefinit": 297, "rewind": 71, "rflag": [40, 41, 254], "rgba": [523, 524], "rh": 263, "right": [282, 395, 396], "right_hash": 309, "rigidli": [479, 480], "rmw_request_id_t": [449, 454, 455], "ro": [1, 6, 11, 32, 448, 449, 450, 451, 452, 454, 456, 457, 458, 463, 471, 472, 474, 475, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "robot": [1, 11, 34, 42, 55, 67, 75, 77, 102, 235, 239, 316, 318, 322, 326, 328, 330, 447, 477, 478, 479, 480, 487, 537], "robot_model_typ": [477, 479, 480], "robot_pose_in_world": [34, 239], "robust": 102, "roll": [40, 254], "rollingwindow": [26, 40, 41, 254, 255, 259, 482], "rollov": 65, "ros2": [5, 6, 524], "ros2_common": 464, "ros_distro": 5, "rosdep": 5, "roslaunch": 6, "rospack": 6, "rosrun": 6, "rotat": [12, 86, 110, 122, 173, 249, 254, 270, 308, 309, 322, 336, 391, 477, 479, 480, 521, 524, 525, 530, 535], "rotation_noise_from_rot": [122, 218, 225, 270, 322, 336], "rotation_noise_from_rotationbeluga": [323, 337], "rotation_noise_from_rotationdoubl": [122, 270], "rotation_noise_from_rotationrot": [122, 270], "rotation_noise_from_transl": [122, 218, 225, 270, 322, 336], "rotation_noise_from_translationbeluga": [323, 337], "rotation_noise_from_translationdoubl": [122, 270], "rotation_noise_from_translationrot": [122, 270], "rotation_param": 270, "rotation_vari": [122, 270], "rotz": [12, 34, 239], "roughli": [229, 471, 505], "routin": 243, "row": [249, 251, 304, 305, 492, 519, 521, 534, 535], "rowsatcompiletim": [249, 251, 372], "rowsth": 304, "rowwis": 264, "rsquo": 43, "rtabmap": 6, "rule": 4, "run": 11, "runner": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 454, 456, 458, 488, 490, 492, 525, 527, 529, 530], "runtim": [3, 243, 482, 488], "runtime_error": 251, "runtime_errorif": [43, 79, 81, 488], "rvalu": [29, 40, 61, 254, 287], "rviz": [6, 524], "rviz2": 6, "safari": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "safeti": 92, "same": [18, 47, 65, 71, 79, 96, 98, 237, 254, 264, 270, 308, 332, 393, 479, 480], "same_category_landmarks_view": 237, "sampl": [2, 3, 4, 16, 25, 26, 27, 34, 42, 67, 83, 86, 94, 100, 102, 121, 122, 145, 146, 152, 166, 173, 178, 229, 230, 254, 261, 264, 269, 270, 271, 272, 281, 286, 311, 314, 344, 408, 410, 412, 416, 430, 443, 444, 479, 480, 482, 487, 512, 523, 524, 537], "sample_base_fn": [116, 205, 220, 298, 299, 409, 410], "sample_base_fnimplement": [229, 299], "sample_base_fninlineprotect": [409, 411], "sample_count": 173, "sample_fn": [116, 202, 216, 298, 299, 411], "sample_fnimplement": [229, 299], "sample_fninlin": 411, "sample_from_distribut": [205, 220, 299, 408, 409, 410, 411], "sample_from_distributionconstexpr": 299, "sample_from_rang": [205, 220, 299, 408, 409, 410, 411], "sample_from_rangeconstexpr": 299, "sample_mean_and_covari": 173, "sample_view": [116, 205, 220, 229, 298, 299, 413], "sample_viewconstexpr": 299, "sample_viewimplement": 299, "sample_viewsample_view": 299, "sampleconstexpr": 299, "sampledefinit": 299, "sampleuniform": 253, "sampling_fn_2d": 122, "sampling_fn_3d": 122, "satisfi": [13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 45, 47, 49, 51, 53, 55, 57, 67, 75, 77, 90, 94, 100, 105, 230, 254, 344, 393, 404, 406, 412, 430, 431, 512], "satur": 523, "save": [243, 451, 456], "save_pose_r": 479, "save_pose_timer_": [451, 456, 465, 469], "save_pose_timer_beluga_amcl": 457, "save_pose_timer_callback": [451, 456, 457, 465, 467], "save_pose_timer_callbackvoid": 451, "save_pose_timer_ro": 451, "save_pose_timer_tim": 451, "sc22": 309, "scalar": [14, 26, 27, 38, 61, 63, 79, 81, 116, 168, 172, 173, 183, 199, 202, 213, 214, 215, 216, 219, 220, 222, 225, 229, 241, 249, 251, 254, 261, 263, 264, 273, 274, 302, 303, 304, 305, 308, 320, 333, 368, 369, 372, 375, 377, 386, 387, 392, 482, 483, 490, 491, 494, 499, 501, 502, 503, 505, 509, 511, 512, 517, 519, 523, 524, 531, 532, 533, 534, 535], "scalar_typ": [79, 80, 81, 82, 90, 220, 222, 249, 251, 263, 264, 332, 333, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "scalar_typeflo": 263, "scalar_typescalar": 263, "scalar_typeth": [249, 251], "scalar_typetypenam": [249, 251], "scalara": 254, "scalardoubl": 509, "scalarrang": 509, "scalarsa": 254, "scalarsrang": 254, "scalarth": [254, 302, 304, 391], "scale": [90, 264, 332, 334, 480, 524], "scale_factor": 524, "scan": [27, 47, 154, 178, 229, 240, 241, 254, 261, 449, 451, 454, 456, 458, 475, 477, 479, 480, 488, 490, 491, 509], "scan_": 509, "scan_frame_id": [479, 480], "scan_top": [477, 479, 480], "scanlas": 490, "scatter": 1, "scenario": [174, 271, 273], "se": [84, 88, 160, 178, 252, 253, 289, 447, 482, 483, 488, 505, 517, 523, 530], "se2": [12, 26, 27, 31, 32, 33, 34, 90, 116, 121, 122, 172, 173, 202, 216, 229, 238, 239, 242, 243, 248, 249, 252, 253, 254, 261, 263, 264, 269, 270, 273, 274, 292, 293, 302, 303, 304, 305, 308, 309, 310, 311, 332, 333, 377, 386, 392, 450, 451, 474, 475, 477, 482, 483, 494, 499, 501, 503, 505, 511, 512, 517, 519, 520, 521, 523, 524, 531, 534, 535], "se2bas": [27, 116, 183, 189, 195, 206, 218, 220, 221, 222, 224, 229, 248, 249, 254, 261, 374], "se2d": [12, 17, 27, 32, 33, 34, 55, 67, 77, 84, 85, 87, 94, 96, 97, 100, 111, 116, 121, 122, 200, 202, 205, 214, 216, 220, 229, 238, 239, 243, 252, 253, 254, 261, 270, 293, 308, 309, 311, 449, 451, 454, 455, 456, 457, 458, 459, 475, 482, 488, 489, 492, 521], "se2near": [302, 303], "se2nearauto": 303, "se3": [12, 33, 34, 90, 121, 122, 236, 237, 248, 249, 252, 253, 254, 263, 264, 332, 333, 369, 508, 509, 511, 512, 519, 523, 524, 534, 535], "se3bas": [27, 116, 183, 189, 195, 206, 218, 220, 221, 222, 224, 229, 248, 249, 254, 261, 371], "se3d": [12, 14, 27, 33, 34, 67, 73, 88, 89, 116, 121, 122, 200, 202, 214, 216, 229, 237, 238, 239, 252, 253, 254, 261, 318, 490, 491, 509], "search": 237, "sec": 524, "second": [32, 105, 165, 243, 282, 307, 393, 477, 479, 480], "second_rot": [122, 270], "second_rotation_param": 122, "section": [254, 326], "see": [11, 12, 16, 19, 21, 23, 25, 26, 27, 30, 32, 34, 36, 38, 39, 41, 55, 57, 59, 67, 75, 77, 90, 94, 96, 102, 105, 118, 120, 122, 151, 165, 167, 168, 170, 171, 173, 175, 177, 178, 179, 229, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 261, 263, 264, 266, 268, 270, 272, 274, 276, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 316, 322, 326, 330, 352, 358, 366, 378, 398, 420, 429, 430, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "seed": 264, "seem": [254, 264], "seen": [1, 524], "select": [26, 314, 436, 447, 479, 480, 482, 488, 525], "selective_resampl": [26, 220, 225, 314, 477, 479, 480, 482, 499, 503, 525], "selective_resamplingbeluga": 315, "selective_resamplingbeluga_ro": 526, "selective_resamplingbool": [26, 482], "selective_resamplingwheth": [26, 482], "self": [39, 120, 241, 245, 268, 295, 307], "self_typ": 39, "selfadjointeigensolv": 251, "semant": 19, "semiregular_box_t": 291, "sensor": [4, 11, 14, 21, 26, 27, 35, 36, 43, 45, 47, 49, 51, 53, 55, 57, 73, 75, 77, 90, 98, 108, 147, 178, 229, 230, 234, 235, 252, 253, 254, 261, 296, 316, 318, 324, 326, 330, 332, 334, 348, 358, 447, 449, 451, 454, 456, 458, 474, 475, 480, 482, 488, 508, 509, 520, 521], "sensor_model": [26, 43, 44, 482, 488, 489], "sensor_model_": [26, 482], "sensor_model_vari": [449, 451, 454, 456, 482, 488, 489, 499, 502], "sensor_model_variantbeluga_amcl": [455, 457], "sensor_model_variantget": [449, 451], "sensor_model_variantsensor": 482, "sensor_model_variantstd": 482, "sensor_modelsensor": 43, "sensor_modelvari": 488, "sensor_msg": [448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 474, 475, 479, 480, 482, 483, 486, 490, 496, 498, 505, 506, 508, 509, 510, 512, 517], "sensor_pose_in_robot": [34, 220, 225, 318], "sensor_pose_in_robotbeluga": 319, "sensor_pose_in_robotpos": 34, "sensor_pose_in_robotsophu": 34, "sensor_pose_in_world": [34, 73, 74, 237], "sensor_pose_in_worldth": 73, "sensorinclud": [140, 141, 142], "sensormodel": [2, 26, 44, 55, 57, 75, 77, 90, 180, 189, 190, 195, 198, 203, 207, 211, 217, 223, 229, 275], "sensormodelclass": 43, "sensormultivariate_uniform_distribut": 139, "sensorsensor": 128, "sentinel": [27, 37, 38, 41, 61, 63, 64, 65, 66, 116, 202, 216, 229, 261, 321], "sentinel_for": [38, 320], "sentinelinlin": 321, "sentinelpast": [38, 229], "separ": [6, 305], "seq": [26, 43, 44, 266, 287, 297, 477, 479, 480, 482, 488, 489], "sequenc": [4, 19, 79, 480], "sequenced_polici": [26, 43, 474, 475, 482, 488], "sequences_": 438, "sequenti": [42, 447, 479, 480], "seri": [42, 487, 537], "server": [449, 450, 451, 454, 456, 479, 480], "servic": [0, 449, 451, 454, 456], "servicecli": [451, 456], "serviceserv": [451, 456], "set": [4, 6, 19, 26, 27, 43, 55, 79, 81, 90, 102, 229, 230, 250, 251, 254, 261, 270, 430, 447, 449, 451, 454, 456, 458, 475, 477, 479, 480, 482, 488, 524], "set_initial_pos": [477, 479, 480], "set_map": 479, "set_map_callback": [451, 456, 457, 465, 467], "set_map_callbackbool": 451, "set_map_server_": [451, 456, 465, 469], "set_map_server_beluga_amcl": 457, "set_map_server_map": 451, "set_map_server_ro": 451, "setmap": [450, 451, 456, 457, 479], "setup": 5, "sever": [5, 438], "shape": 2, "share": 6, "shared_ptr": [449, 454, 455], "sharedptr": [449, 454, 455, 458, 459, 475], "shift": 308, "short": [32, 102, 282, 316, 395, 479, 480], "shorthand": [107, 229, 254, 437], "should": [18, 98, 237, 249, 251, 263, 382, 384, 391, 393, 430, 477, 479, 480], "should_interspers": 291, "show": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "shown": [4, 228, 470, 504], "shutdown": [479, 480], "side": [3, 20], "sigma_bear": [34, 220, 225, 239, 318, 326], "sigma_bearingbeluga": [319, 327], "sigma_bearingdoubl": [34, 239], "sigma_bearingstandard": [34, 239], "sigma_hit": [32, 220, 225, 243, 316, 330, 480], "sigma_hitbeluga": [317, 331], "sigma_hitdoubl": [32, 243], "sigma_hitstandard": [32, 243], "sigma_rang": [220, 225, 239, 326], "sigma_rangebeluga": 327, "sigma_rangedoubl": 239, "sigma_rangestandard": 239, "sign": 71, "signal": 42, "signed_typ": 309, "signed_valu": 309, "signific": 308, "similar": [19, 179, 249, 254], "simpl": [3, 478], "simplest": 6, "simpli": 1, "simplifi": [2, 270], "sin": [241, 535], "sin_apertur": [34, 239], "sin_theta": 243, "sinc": [4, 41, 254, 408, 425], "singl": [27, 40, 41, 229, 254, 261, 284, 364, 435, 436, 479, 480, 524], "size": [20, 25, 26, 41, 65, 66, 71, 98, 99, 105, 106, 108, 109, 146, 152, 165, 166, 173, 178, 205, 220, 230, 245, 253, 254, 264, 271, 272, 281, 298, 299, 307, 372, 412, 414, 428, 429, 431, 434, 438, 442, 492, 493, 499, 501, 509, 512, 521, 523, 524], "size_": 41, "size_t": [13, 15, 17, 26, 38, 40, 41, 49, 50, 51, 52, 65, 98, 105, 108, 109, 110, 112, 114, 165, 169, 170, 175, 243, 245, 253, 254, 264, 268, 283, 284, 307, 308, 309, 313, 314, 353, 358, 380, 381, 382, 383, 414, 415, 416, 417, 422, 425, 427, 429, 430, 431, 434, 435, 436, 438, 442, 482, 490, 491, 492, 493, 509, 512, 519, 521, 523, 524, 525, 534, 535], "size_typ": [41, 65, 66, 71, 105, 106, 220, 222, 232, 438], "size_types": [41, 438], "size_typestd": [41, 438], "sizeconstexpr": [41, 438], "sized_rang": [272, 298, 299, 434, 438, 524], "sizeof": [112, 308, 309, 436, 438], "sizesampl": 512, "sizestd": [307, 442, 521], "skip": 480, "slam": 6, "slow": [477, 479, 480, 482, 525], "slow_averag": 434, "slow_filter_": 434, "slower": [243, 293], "small": [249, 480], "smooth": [55, 69, 77], "so": [1, 17, 18, 34, 39, 107, 239, 254, 298, 309, 393, 398, 420, 435, 438, 524], "so2": [12, 31, 32, 34, 86, 121, 122, 173, 238, 239, 242, 243, 249, 263, 264, 269, 270, 274, 292, 293, 302, 303, 304, 305, 309, 310, 311, 368, 520, 521, 524, 535], "so2bas": [27, 116, 183, 189, 195, 206, 218, 220, 221, 222, 224, 229, 248, 249, 254, 261, 373], "so2d": [32, 96, 97, 122, 253, 270, 293, 311, 521], "so2near": [302, 303], "so2nearauto": 303, "so3": [248, 249, 263, 375, 535], "so3bas": [27, 116, 183, 189, 195, 206, 218, 220, 221, 222, 224, 229, 248, 249, 254, 261, 370], "so3d": [12, 34, 239, 253], "softwar": [2, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "solut": [6, 447], "solver": [251, 447], "some": [3, 13, 16, 21, 100, 254, 287], "someth": 524, "soon": [7, 8, 9, 10, 538, 539, 540, 541], "sophu": [3, 12, 14, 17, 26, 27, 31, 32, 33, 34, 55, 67, 73, 77, 84, 85, 86, 87, 88, 89, 90, 94, 96, 97, 100, 110, 111, 116, 121, 122, 156, 172, 173, 178, 183, 189, 195, 200, 202, 205, 206, 214, 216, 218, 220, 221, 222, 224, 229, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 252, 253, 254, 261, 263, 264, 269, 270, 273, 274, 292, 293, 302, 303, 304, 305, 308, 309, 310, 311, 318, 332, 333, 368, 369, 370, 371, 373, 374, 375, 377, 391, 392, 433, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 474, 475, 477, 482, 483, 486, 488, 489, 490, 491, 492, 494, 496, 498, 499, 501, 503, 505, 506, 508, 509, 512, 514, 515, 517, 519, 520, 521, 523, 524, 525, 530, 531, 534, 535], "sophus_match": [156, 178, 432, 433], "sophus_print": [156, 178, 432, 433], "sophussophu": [524, 535], "sort": [2, 229, 471, 505], "sourc": [6, 11, 22, 24, 29, 31, 33, 35, 37, 40, 96, 117, 119, 121, 164, 166, 169, 172, 174, 176, 230, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 404, 428, 430, 432, 435, 437, 439, 441, 443, 445, 447, 448, 450, 474, 481, 485, 508, 520, 523, 532, 534], "source_cell_": 293, "source_pos": [96, 97, 293], "source_pose_in_local_frame_": 293, "source_posepos": 96, "source_posit": 293, "space": [12, 13, 14, 15, 17, 20, 27, 53, 59, 61, 84, 86, 88, 120, 122, 160, 178, 229, 230, 252, 253, 254, 261, 273, 274, 289, 294, 295, 307, 386, 391, 428, 447, 477, 479, 480], "spare": 3, "spars": [27, 90, 98, 154, 178, 229, 254, 261, 264, 306, 307], "sparse_value_grid": [98, 128, 154, 178, 264, 474, 475], "sparsegridt": [91, 199, 201, 202, 213, 214, 215, 216, 217, 220, 222, 226, 229, 264], "sparsegridttyp": 90, "sparsevaluegrid": [90, 99, 116, 185, 193, 204, 205, 212, 214, 218, 220, 222, 229, 254, 264, 306, 307, 475], "sparsevaluegrid2": [254, 255, 259, 306, 307, 474, 475], "sparsevaluegrid3": [254, 255, 259, 306, 307], "sparsevaluegridgener": [264, 307], "sparsevaluegridsparsevaluegrid": 307, "spatial": [4, 25, 43, 110, 112, 114, 152, 178, 237, 254, 308, 309, 416, 479, 480, 525], "spatial_hash": [24, 25, 26, 43, 44, 110, 111, 112, 113, 114, 115, 116, 152, 178, 202, 205, 216, 218, 220, 222, 229, 254, 482, 523, 524], "spatial_hashcal": 309, "spatial_hasher_": [26, 482], "spatial_hasher_typ": [26, 43, 44], "spatial_hashera": 43, "spatial_hashspatial_hash": 309, "spatial_resolution_": [479, 480], "spatial_resolution_i": [477, 482, 499, 503, 525], "spatial_resolution_theta": [477, 482, 499, 503, 525], "spatial_resolution_thetabeluga_ro": 526, "spatial_resolution_thetadoubl": 482, "spatial_resolution_thetaspati": 482, "spatial_resolution_x": [477, 482, 499, 503, 525], "spatial_resolution_xbeluga_ro": 526, "spatial_resolution_xdoubl": 482, "spatial_resolution_xspati": 482, "spatial_resolution_ybeluga_ro": 526, "spatial_resolution_ydoubl": 482, "spatial_resolution_yspati": 482, "speak": 92, "special": [3, 27, 40, 84, 86, 88, 90, 92, 110, 112, 114, 229, 248, 252, 253, 254, 261, 273, 308, 312, 352, 353, 357, 363, 365, 368, 369, 372, 375, 377, 391, 401, 422, 424, 425, 427, 435, 474, 483, 505, 517, 519, 523, 524, 530], "specif": [2, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 96, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 230, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "specifi": [18, 19, 105, 174, 228, 230, 254, 265, 272, 273, 330, 382, 384, 391, 438, 470, 479, 504], "speed": 6, "spiral": 102, "spread": 309, "sqrt": [32, 122, 173, 243, 270, 431], "squared_dist": 243, "squared_max_dist": 243, "squared_weight_sum": 173, "squarednorm": [237, 243], "src": [5, 474, 475], "srv": [448, 449, 454, 455, 474, 475, 480], "ss": [16, 264], "stachniss": [42, 487, 537], "stack": 3, "staff": 0, "stamp": [510, 512], "stamp_messag": [510, 512, 514, 515], "stamp_messagemessag": 510, "stand": 1, "standalon": [479, 480], "standard": [2, 3, 19, 34, 38, 59, 81, 98, 172, 173, 230, 235, 237, 239, 254, 316, 318, 326, 330, 430, 431, 477, 479, 480, 482, 521, 525, 527], "start": [1, 61, 96, 254, 438], "state": [4, 16, 18, 19, 21, 25, 26, 27, 32, 33, 34, 43, 55, 57, 67, 75, 77, 79, 86, 90, 94, 96, 100, 102, 110, 111, 122, 152, 172, 178, 202, 216, 229, 230, 238, 239, 243, 251, 254, 255, 260, 261, 264, 270, 276, 277, 278, 279, 283, 284, 286, 287, 296, 297, 299, 308, 309, 311, 344, 348, 361, 378, 393, 397, 398, 399, 416, 431, 434, 449, 454, 455, 458, 459, 474, 475, 480, 482, 488, 512, 523, 524], "state_detail": [32, 34, 116, 122, 202, 216, 229, 239, 243, 254, 264, 270, 277, 279, 283, 284, 287, 309, 311, 398, 399, 431, 524], "state_fn": [32, 34, 116, 122, 202, 216, 239, 243, 254, 264, 270, 277, 279, 283, 284, 287, 309, 311, 399, 431, 524], "state_fncustom": [229, 284], "state_fninlin": 399, "state_t": [254, 255, 259, 276, 277, 360, 431, 512, 523, 524], "state_ttyp": [277, 431], "state_ttypenam": [277, 431, 524], "state_typ": [16, 21, 26, 32, 34, 43, 44, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 90, 91, 94, 95, 100, 101, 122, 220, 222, 229, 239, 243, 254, 264, 270, 276, 277, 311, 378, 379, 431, 474, 475, 524], "state_type2d": [122, 270, 311], "state_typesophu": [32, 243, 270, 311], "state_typest": [32, 34, 239, 243, 264], "state_typestatetyp": [34, 122, 239], "state_typestd": [264, 277], "state_typeth": 277, "stateconstexpr": [32, 34, 122, 239, 243, 264, 270, 277, 279, 284, 287, 309, 311, 431, 524], "statecustom": [32, 34, 122, 239, 243, 264, 270, 277, 279, 284, 287, 309, 311, 431], "statehistogram": 524, "statesamplingfunct": [16, 67, 94, 100, 287, 344, 345, 346, 347], "statesamplingfunctiona": 344, "statesconstexpr": [279, 299, 524], "statesdefinit": [279, 299], "stateth": 110, "statetyp": [33, 34, 58, 68, 76, 121, 122, 182, 183, 185, 191, 193, 199, 202, 207, 213, 214, 216, 217, 220, 222, 223, 226, 229, 238, 239], "statetypetyp": [57, 67, 75], "stateweightingfunct": [21, 55, 57, 75, 77, 90], "static": [55, 77, 122, 243, 249, 251, 253, 263, 264, 270, 272, 291, 305, 311, 332, 333, 368, 369, 372, 375, 376, 377, 384, 404, 436, 446, 449, 451, 454, 456, 492, 521, 527], "static_assert": [26, 41, 122, 241, 249, 251, 263, 264, 272, 277, 287, 291, 297, 299, 307, 309, 431, 434, 438, 524], "static_cast": [38, 39, 41, 120, 173, 232, 245, 264, 272, 299, 309, 431, 434, 436, 438, 509, 524, 533, 535], "static_map": 479, "staticconstexpr": 372, "stationari": [27, 100, 157, 178, 229, 247, 254, 261, 310, 311, 477, 479, 480], "stationary_model": [100, 157, 178, 246, 247, 474, 475], "stationarymodel": [16, 101, 116, 183, 202, 216, 220, 222, 254, 310, 311, 474, 475, 482, 488], "stationarymodela": [229, 311], "stationarymodelinlin": 101, "statisfi": [230, 430], "statist": [42, 447], "statu": [451, 456, 457], "std": [2, 13, 15, 17, 26, 27, 30, 32, 34, 38, 40, 41, 43, 44, 45, 49, 50, 51, 52, 55, 57, 59, 63, 65, 66, 67, 71, 73, 75, 77, 79, 81, 82, 90, 92, 94, 96, 98, 100, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 120, 122, 145, 165, 166, 167, 168, 169, 170, 172, 173, 175, 178, 179, 180, 182, 183, 185, 186, 189, 190, 191, 192, 194, 195, 202, 203, 204, 205, 206, 214, 216, 217, 218, 220, 221, 222, 224, 225, 229, 230, 232, 237, 239, 241, 243, 245, 248, 249, 251, 253, 254, 261, 263, 264, 266, 268, 270, 272, 274, 277, 282, 283, 284, 287, 291, 293, 297, 298, 299, 304, 305, 307, 308, 309, 311, 312, 313, 314, 332, 333, 334, 338, 340, 342, 344, 346, 348, 350, 352, 353, 354, 356, 357, 363, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 393, 394, 398, 399, 401, 402, 403, 404, 405, 410, 411, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 442, 444, 446, 447, 449, 451, 454, 455, 456, 457, 458, 459, 474, 475, 477, 482, 483, 488, 489, 490, 491, 492, 493, 505, 509, 510, 512, 517, 519, 521, 523, 524, 525, 527, 528, 529, 530, 534, 535], "std_msg": 510, "std_srv": [448, 449, 450, 451, 454, 455, 456, 457, 474, 475, 479, 480], "std_warn_level_": 479, "stdexcept": [40, 41, 264], "stdhash": [422, 423], "stdnumeric_limit": 424, "stdtuple_el": [425, 426], "stdtuple_s": 427, "step": [4, 43, 102, 477, 479, 480, 488, 525], "step_": 38, "step_to": 38, "still": 524, "stl": [230, 287], "storag": [65, 105, 154, 178, 244, 268, 442], "store": [98, 173, 243, 307, 479], "storeag": [492, 521], "str": 264, "strafe": [270, 336, 477, 479, 480], "strafe_noise_from_transl": [220, 225, 270, 336], "strafe_noise_from_translationbeluga": 337, "strafe_noise_from_translationdoubl": 270, "strafe_noise_from_translationtransl": 270, "strafe_param": 270, "strategi": 42, "stream": [40, 41, 254, 304], "streamlin": 6, "streamprecis": 305, "strictli": [3, 71, 92, 232], "string": [477, 479, 480], "string_view": [449, 451, 454, 455, 456, 457, 477, 510, 512], "stringstream": 264, "strive": 3, "strong": [11, 254], "strongli": [26, 27, 92, 151, 178, 229, 254, 261, 283, 284, 312, 313], "strongly_typed_numer": [92, 151, 178, 283, 284, 422, 424], "struct": [26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 63, 92, 121, 122, 165, 174, 175, 228, 234, 235, 238, 239, 242, 243, 248, 249, 254, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 282, 283, 284, 286, 287, 290, 291, 296, 297, 298, 299, 308, 309, 312, 313, 428, 429, 430, 431, 435, 436, 445, 446, 452, 470, 475, 481, 482, 483, 492, 504, 512, 520, 521, 523, 524], "structur": [3, 15, 34, 65, 237, 239, 447, 506], "subclass": 506, "subscrib": [6, 448, 449, 450, 451, 454, 456, 458, 474, 475, 477], "subscript": [71, 449, 454, 458, 475], "subsequ": 5, "subset": 98, "substanti": 1, "substitut": 270, "success": [251, 454, 456, 458], "sudo": 5, "suffici": 309, "suit": 447, "suitabl": [6, 512, 523], "sum": [265, 340, 477, 479, 480, 525], "super": [228, 470, 504], "supercov": 59, "support": [1, 3, 5, 13, 39, 57, 67, 71, 75, 122, 230, 249, 264, 277, 287, 291, 298, 344, 447, 474, 475, 479, 480, 482, 488], "sure": [29, 302], "surject": 53, "surpass": 391, "surpris": 3, "svg": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "swap": [38, 40, 41, 65, 66, 205, 220, 254, 255, 257], "swapconstexpr": [38, 41], "swapvoid": 41, "symmetr": [79, 81, 122, 173, 251, 270], "symmetri": [38, 320], "synchron": [449, 451, 454, 456, 458, 475], "synthet": [6, 42, 487, 537], "system": [4, 5, 20, 42, 230, 243, 477, 480, 487, 536, 537], "t": [2, 4, 5, 6, 16, 17, 19, 21, 27, 28, 29, 30, 38, 39, 40, 41, 43, 66, 80, 93, 98, 109, 115, 116, 168, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 248, 249, 250, 251, 253, 254, 255, 261, 264, 276, 277, 284, 293, 299, 302, 303, 304, 305, 308, 309, 312, 313, 353, 354, 370, 371, 373, 374, 376, 379, 398, 399, 410, 411, 420, 421, 423, 426, 431, 435, 436, 437, 438, 441, 442, 465, 467, 469, 470, 480, 504, 505, 524], "t1": 293, "t2": 293, "tabl": [316, 322, 330, 480], "tag": [38, 63], "tail": [39, 249], "tail_index_": 41, "take": [19, 71, 96, 230, 254, 291, 298, 299, 393, 398, 404, 406, 410, 414, 416, 420, 428, 430, 431, 437, 438], "take_evenli": [27, 145, 178, 229, 230, 261, 414, 443, 444, 508, 509], "take_evenly_fn": [116, 202, 216, 415, 428, 429], "take_evenly_fnimplement": [229, 429], "take_evenly_fninlin": 415, "take_evenlyconstexpr": 429, "take_evenlydefinit": 429, "take_exactli": [26, 481, 482, 523, 524], "take_whil": [37, 38, 292, 293, 430, 431], "take_while_kld": [26, 27, 145, 178, 229, 230, 261, 416, 443, 444, 482], "take_while_kld_fn": [116, 202, 216, 417, 430, 431], "take_while_kld_fnimplement": [229, 431], "take_while_kld_fninlin": 417, "take_while_kldconstexpr": 431, "take_while_klddefinit": 431, "taken": [254, 298], "tan": 524, "tani": 108, "target": [4, 5, 11, 71, 232, 254], "target_s": 431, "tbf05": [479, 480, 537], "tbuilt": 92, "technic": 338, "techniqu": [3, 42, 487, 537], "telement": 65, "teleop_twist_keyboard": 6, "teleoper": 6, "templ": [228, 470, 504], "templat": [2, 26, 27, 30, 32, 33, 34, 38, 39, 40, 41, 59, 63, 84, 88, 94, 100, 102, 120, 122, 164, 165, 166, 167, 168, 169, 170, 172, 173, 179, 228, 229, 232, 238, 239, 241, 243, 245, 249, 250, 251, 252, 253, 254, 261, 263, 264, 266, 268, 270, 272, 274, 276, 277, 282, 284, 287, 291, 293, 294, 295, 297, 299, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 320, 338, 340, 342, 344, 346, 348, 350, 384, 386, 395, 398, 402, 404, 408, 410, 414, 416, 418, 420, 429, 431, 434, 435, 436, 437, 438, 442, 446, 447, 470, 474, 475, 482, 488, 504, 510, 511, 512, 519, 523, 524, 532, 533, 534, 535], "term": [1, 102, 249], "termin": 6, "test": [5, 147, 178], "testingtest": 129, "textual": [233, 473, 507], "tf": [12, 122, 254, 263, 332, 333, 454, 456, 458], "tf2": [477, 506, 514, 515, 520, 521, 524, 532, 533, 534, 535], "tf2_eigen": [485, 486, 496, 498, 506, 523, 524, 535], "tf2_geometry_msg": [521, 533, 535], "tf2_ro": [448, 449, 450, 451, 454, 456, 458, 474, 475, 477], "tf2_sophu": [477, 485, 486, 496, 498, 506, 523, 524], "tf2tf2": [533, 535], "tf_broadcast": [477, 479, 480], "tf_broadcaster_": [449, 451, 454, 456, 458, 465, 469, 475], "tf_broadcaster_beluga_amcl": [455, 457, 459], "tf_broadcaster_std": [449, 451, 475], "tf_broadcaster_transform": [449, 451, 475], "tf_buffer_": [449, 451, 454, 456, 458, 465, 469, 475], "tf_buffer_beluga_amcl": [455, 457, 459], "tf_buffer_std": [449, 451, 475], "tf_buffer_transform": [449, 451, 475], "tf_listener_": [449, 451, 454, 456, 458, 465, 469, 475], "tf_listener_beluga_amcl": [455, 457, 459], "tf_listener_std": [449, 451, 475], "tf_listener_transform": [449, 451, 475], "than": [29, 47, 65, 77, 105, 254, 330, 408, 414, 428, 445, 477, 479, 480, 524, 525], "thei": [4, 13, 15, 17, 79, 230, 243, 255, 445, 514, 524], "them": [2, 5, 65, 308, 447, 524], "therebi": 102, "therefor": 4, "theta": [110, 241, 477, 479, 480, 535], "theta_clustering_resolut": [110, 111, 309], "theta_clustering_resolutionclust": 110, "thi": [1, 2, 3, 4, 6, 12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 490, 491, 492, 493, 504, 505, 506, 507, 508, 509, 510, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "thin": [479, 480, 490, 492, 506, 508, 512, 520], "thing": 237, "those": [1, 2, 105, 237, 438], "though": [1, 105], "thousand": 6, "thread_loc": [122, 270, 311], "threadsaf": [26, 27, 40, 41, 65, 229, 254, 261], "three": [299, 410], "threshold": [122, 230, 270, 271, 272, 273, 322, 336, 384, 385, 391, 479], "thresholdpercentag": 384, "through": [5, 228, 249, 309, 470, 504, 519], "throughout": 2, "throughput": 3, "throw": [41, 98, 251, 264], "thrun": [42, 487, 537], "thrun_recovery_probability_estim": [24, 25, 26, 102, 178], "thrunrecoveryprobabilityestim": [26, 103, 116, 202, 204, 206, 216, 218, 221, 254, 434, 482], "thrunrecoveryprobabilityestimatorconstexpr": 434, "thrunrecoveryprobabilityestimatorinlin": 103, "thrunrecoveryprobabilityestimatorrandom": [26, 229, 434], "thu": [5, 13, 15, 20, 55, 57, 75, 77, 90, 254], "tiancheng": 42, "tie": [34, 239], "tim": 309, "time": [3, 4, 26, 27, 37, 38, 61, 63, 65, 102, 110, 112, 114, 229, 230, 237, 254, 261, 291, 298, 309, 314, 438, 477, 479, 480, 492, 510, 512, 521], "timelin": 11, "timer": [451, 454, 456, 458], "timer_": [449, 454, 458, 465, 469, 475], "timer_beluga_amcl": [455, 459], "timer_callback": [449, 454, 455, 458, 459, 465, 467, 475], "timer_callbackvoid": [449, 475], "timer_rclcpp": [449, 475], "timer_tim": [449, 475], "timerbas": [449, 454, 458, 475], "timerev": [451, 456, 457], "timestamp": [510, 512], "timestamptim": 512, "tnumer": 422, "to2d": [12, 122, 254, 255, 257], "to2dsophu": [12, 122], "to3d": [12, 122, 254, 255, 257], "to3dsophu": [12, 122], "to_cel": 264, "to_likelihood": 243, "to_the_cub": 243, "to_valu": 477, "to_vector": [206, 221, 249, 251, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "to_vectorstat": 249, "todo": [32, 243, 264, 482], "togeth": 524, "tomsg": [511, 514, 515, 519, 524, 532, 533, 534, 535], "tomsgbeluga_ro": [524, 533, 535], "too": [51, 173, 438, 480, 524], "tool": [3, 5], "toolbox": 6, "toolkit": [1, 11], "top": [165, 447], "topic": [6, 477], "topleftcorn": 173, "total": [102, 254, 265, 340], "total_weight": [167, 266, 434], "trace": [55, 77, 96, 97, 206, 221, 293], "traceauto": 293, "track": 254, "trade": 3, "trait": [3, 27, 36, 122, 147, 151, 160, 167, 178, 229, 248, 251, 254, 261, 266, 270, 276, 277, 284, 287, 297, 299, 311, 378, 431, 434, 435, 438, 439, 440, 492, 520, 521, 527], "transact": [42, 487, 537], "transform": [12, 14, 17, 26, 31, 32, 33, 34, 122, 169, 170, 172, 173, 237, 238, 239, 240, 241, 242, 243, 254, 263, 266, 267, 268, 278, 279, 287, 294, 295, 297, 299, 332, 449, 451, 454, 456, 458, 475, 477, 482, 490, 509, 510, 511, 519, 534, 535], "transform_": 251, "transform_broadcast": [448, 449, 450, 451, 474, 475], "transform_listen": [448, 449, 450, 451, 474, 475], "transform_reduc": [32, 34, 173, 239, 243, 264], "transform_toler": [477, 479, 480], "transformbroadcast": [449, 451, 454, 456, 458, 475], "transformlisten": [449, 451, 454, 456, 458, 475], "transient": [6, 480], "transit": [230, 286, 449, 454, 458, 475], "translat": [12, 34, 86, 110, 122, 173, 239, 243, 249, 254, 263, 270, 274, 293, 303, 305, 309, 322, 332, 336, 391, 477, 479, 480, 521, 524, 525, 530, 535], "translation_noise_from_rot": [122, 221, 225, 270, 322, 336], "translation_noise_from_rotationbeluga": [323, 337], "translation_noise_from_rotationdoubl": [122, 270], "translation_noise_from_rotationtransl": [122, 270], "translation_noise_from_transl": [122, 221, 225, 270, 322, 336], "translation_noise_from_translationbeluga": [323, 337], "translation_noise_from_translationdoubl": [122, 270], "translation_noise_from_translationtransl": [122, 270], "translation_param": [122, 270], "translation_view": 173, "translations_view": 173, "translationtyp": 524, "transpos": [251, 263, 264], "treat": [122, 270, 408], "triangl": 524, "triangle_list": 524, "trigger": [26, 146, 174, 175, 178, 230, 254, 271, 272, 273, 274, 281, 382, 384, 386, 391, 480], "trinari": [521, 527], "tro": 537, "troubleshoot": 6, "true": [6, 17, 19, 26, 27, 38, 41, 43, 51, 65, 71, 105, 165, 229, 254, 261, 268, 274, 284, 364, 366, 382, 388, 391, 429, 435, 436, 438, 477, 479, 480, 482, 524, 525], "true_typ": [30, 229, 277, 284, 299, 436], "truncat": [228, 470, 504], "try": [2, 6, 22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 98, 104, 107, 108, 117, 119, 121, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 160, 161, 164, 166, 169, 172, 174, 176, 228, 231, 233, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 340, 342, 344, 346, 348, 350, 362, 363, 364, 365, 366, 388, 390, 393, 395, 401, 406, 408, 410, 412, 424, 427, 428, 430, 431, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 470, 473, 474, 481, 485, 490, 492, 504, 507, 508, 520, 523, 532, 534], "tthe": [79, 83, 254, 302, 304], "ttupl": 308, "tunderli": [92, 422, 424], "tune": 6, "tupl": [2, 26, 27, 43, 67, 94, 100, 104, 106, 107, 110, 112, 113, 116, 118, 121, 122, 149, 151, 169, 170, 178, 180, 182, 183, 185, 186, 190, 191, 192, 194, 202, 203, 204, 205, 206, 216, 217, 218, 220, 221, 222, 224, 229, 230, 241, 254, 261, 267, 268, 269, 270, 277, 283, 284, 308, 309, 310, 311, 352, 353, 355, 357, 362, 363, 364, 365, 366, 398, 400, 401, 402, 403, 420, 435, 436, 437, 438, 440, 445, 446, 447, 474, 475, 482, 488], "tuple_el": [27, 40, 41, 116, 221, 222, 229, 261, 425, 426], "tuple_element_t": [353, 436], "tuple_index": [27, 116, 229, 254, 261, 401, 435, 436], "tuple_index_found": [27, 116, 229, 261, 435, 436], "tuple_index_foundconstexpr": 436, "tuple_index_help": [435, 436], "tuple_index_helperconstexpr": 436, "tuple_index_t": [254, 255, 259, 435, 436], "tuple_index_tconveni": 436, "tuple_index_ttypenam": 436, "tuple_index_v": [254, 255, 260, 435, 436], "tuple_index_vconstexpr": 436, "tuple_index_vconveni": 436, "tuple_indexmeta": 436, "tuple_s": [27, 40, 41, 116, 229, 261, 427, 436], "tuple_size_v": [284, 352, 398, 436], "tuple_trait": [121, 122, 151, 178, 269, 270, 276, 277, 283, 284, 310, 311, 352, 353, 355, 357, 362, 363, 364, 365, 366, 400, 401, 439, 440], "tuple_vector": [104, 105, 107, 117, 118, 149, 168, 178, 251], "tuplecontain": [105, 106, 116, 180, 182, 183, 185, 186, 190, 191, 192, 194, 203, 204, 205, 206, 217, 218, 220, 221, 222, 224, 229, 254, 437, 438], "tuplecontainerconstexpr": 438, "tuplecontainerprimari": 438, "tuplelik": [27, 116, 221, 222, 229, 254, 261, 284, 356, 365, 401, 435, 436], "tupletupl": [112, 169], "tuplevector": [2, 26, 43, 116, 229, 230, 254, 255, 257, 437, 438, 474, 475, 482], "tuplevectorshorthand": 438, "tuplevectortuplevector": 438, "twice": 429, "two": [2, 4, 6, 18, 27, 40, 41, 65, 75, 79, 173, 228, 229, 254, 261, 299, 322, 336, 352, 393, 410, 436, 438, 470, 481, 486, 488, 496, 498, 504], "two_d_sampling_fn": 122, "two_epsilon": 431, "two_squared_sigma": 243, "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 32, 33, 34, 36, 38, 39, 40, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 106, 107, 108, 113, 114, 116, 119, 120, 122, 147, 151, 156, 167, 172, 173, 176, 177, 178, 180, 182, 183, 185, 186, 190, 191, 192, 194, 202, 203, 204, 205, 206, 216, 217, 218, 220, 221, 222, 224, 229, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 253, 254, 261, 263, 264, 266, 267, 268, 270, 276, 277, 283, 284, 287, 294, 295, 297, 299, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 324, 328, 332, 352, 353, 354, 355, 356, 357, 360, 362, 363, 364, 366, 368, 369, 372, 375, 377, 378, 384, 388, 390, 391, 398, 400, 402, 404, 406, 420, 422, 424, 425, 426, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 456, 474, 482, 483, 486, 488, 490, 492, 496, 498, 505, 506, 508, 509, 510, 512, 517, 519, 520, 521, 523, 524, 530, 532, 533, 534, 535], "type_trait": [26, 35, 36, 40, 41, 92, 121, 122, 147, 166, 167, 178, 231, 232, 263, 264, 265, 266, 269, 270, 282, 283, 284, 286, 287, 290, 291, 296, 297, 298, 299, 306, 307, 308, 309, 310, 311, 352, 353, 355, 357, 360, 362, 363, 364, 365, 366, 378, 400, 401, 422, 424, 430, 431, 434, 437, 438, 523, 524], "type_traitsdifferential_drive_model": 137, "type_traitseffective_sample_s": 133, "type_traitsnorm": 130, "type_traitssampl": 144, "typecommon": 436, "typedef": [19, 28, 33, 40, 105, 121, 184, 234, 238, 254, 258, 262, 276, 283, 294, 306, 435, 437, 453, 466, 474, 484, 500], "typedefbeluga": [56, 58, 64, 66, 68, 72, 74, 76, 78, 80, 82, 91, 95, 99, 101, 106, 113, 115, 333, 354, 356, 370, 371, 373, 374, 376, 379], "typedefbeluga_amcl": 457, "typedefbeluga_ro": [489, 491], "typedefstd": 426, "typenam": [26, 38, 39, 40, 41, 43, 45, 47, 49, 51, 53, 61, 63, 65, 67, 71, 79, 81, 90, 93, 94, 96, 98, 100, 105, 108, 120, 122, 168, 172, 173, 201, 202, 215, 216, 229, 232, 241, 245, 249, 250, 251, 254, 263, 264, 268, 270, 276, 277, 291, 293, 294, 295, 299, 306, 307, 309, 311, 312, 313, 320, 332, 352, 353, 363, 366, 368, 369, 372, 375, 377, 397, 404, 406, 412, 422, 424, 425, 427, 435, 436, 437, 438, 442, 474, 475, 512, 519, 523, 524, 530, 534, 535], "typereturn": 436, "typesbearing_sensor_model": 142, "typesel": 105, "typeslandmark_map": 143, "typestd": 436, "typet": 41, "typic": [2, 479, 480, 490, 506], "u": [16, 27, 28, 41, 79, 80, 116, 179, 181, 184, 196, 207, 221, 222, 223, 225, 229, 251, 254, 261, 299, 353, 354, 410, 411, 435, 436, 465, 467, 499], "u_": 4, "u_t": 4, "ubuntu": 5, "uij": 263, "uint32_t": [234, 235, 254, 309, 451, 456, 457], "uint64_t": 309, "uint8_t": [38, 51, 59, 268], "unary_fn": 287, "unaryexpr": 251, "unchang": 286, "unconfigur": [449, 454, 458, 475], "undef": 171, "undefin": [65, 71, 105], "under": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "underli": [41, 65, 77, 92, 98, 313, 422, 474, 492, 521], "underlying_hasher_": 309, "underlying_typ": 92, "underlying_type_t": 41, "underlying_typetag": 92, "undocu": [228, 470, 504], "unexpect": [32, 316], "uniform": [27, 79, 81, 83, 84, 86, 88, 160, 178, 229, 230, 252, 253, 254, 261, 289, 298, 408, 447, 479, 480], "uniform_distribut": 230, "uniform_int_distribut": [253, 299], "uniform_real_distribut": 253, "uniformli": 86, "uniformrandombitgener": [19, 79, 81, 404, 406, 412], "union": [27, 452, 483], "unique_ptr": [449, 451, 454, 455, 456, 457, 458, 459, 475], "unit": [173, 524], "unit_complex": [173, 243, 293, 303, 305], "unit_quaternion": 535, "unitari": [79, 251], "uniti": 524, "unitless": [26, 314], "unitx": 524, "unknown": [291, 521, 527], "unknown_space_occupancy_likelihood_cub": 243, "unknown_space_occupancy_prob": 243, "unless": [3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "unlik": [298, 445, 479], "unnecessarili": 438, "unnorm": 4, "unordered_map": [264, 474, 475, 524], "unordered_set": [430, 431], "unpack": 308, "unreachable_sentinel_t": 299, "unsign": 309, "unsigned_typ": 309, "unsigned_valu": 309, "until": [65, 430, 438], "unwrap": [3, 291, 299, 404, 410], "up": [1, 4, 5, 6, 254], "updat": [4, 5, 26, 32, 34, 43, 44, 55, 57, 69, 75, 77, 100, 102, 207, 223, 230, 239, 243, 254, 286, 296, 314, 322, 336, 348, 434, 449, 451, 454, 456, 458, 475, 477, 479, 480, 482, 488, 489, 499, 501, 524, 525], "update_covariance_diagnost": [451, 456, 457, 465, 467], "update_covariance_diagnosticsvoid": 451, "update_map": [26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 207, 223, 239, 243, 482, 488, 489, 499, 501], "update_mapvoid": [26, 32, 34, 239, 243, 482], "update_min_a": [26, 223, 225, 314, 477, 479, 480, 482, 499, 503, 525], "update_min_abeluga": 315, "update_min_abeluga_ro": 526, "update_min_adoubl": [26, 482], "update_min_amin": 26, "update_min_arot": 482, "update_min_d": [26, 223, 225, 314, 477, 479, 480, 482, 499, 503, 525], "update_min_dbeluga": 315, "update_min_dbeluga_ro": 526, "update_min_ddoubl": [26, 482], "update_min_dmin": 26, "update_min_dtransl": 482, "update_policy_": [26, 482], "updateauto": [26, 482], "upgrad": 5, "upon": [479, 480], "upper": [254, 430, 431, 477, 479, 480, 525], "upstream": 5, "url": 537, "urng": [16, 84, 85, 86, 87, 88, 89, 204, 205, 218, 220, 229, 253, 290, 291, 298, 299, 404, 405, 407, 408, 409, 410, 411, 413], "urnga": [404, 406, 412], "urngth": [84, 86, 88], "us": [2, 4, 5, 6, 12, 14, 15, 16, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 43, 51, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81, 90, 92, 94, 98, 100, 102, 105, 110, 112, 114, 118, 120, 121, 122, 147, 165, 167, 168, 170, 171, 173, 174, 175, 177, 178, 179, 228, 229, 230, 232, 234, 235, 237, 238, 239, 241, 242, 243, 245, 247, 249, 251, 253, 254, 261, 263, 264, 266, 268, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 311, 313, 314, 316, 318, 326, 330, 332, 334, 340, 342, 344, 348, 353, 357, 368, 369, 372, 375, 377, 378, 384, 393, 404, 412, 416, 425, 429, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 446, 447, 449, 451, 456, 470, 474, 475, 477, 479, 480, 482, 486, 488, 490, 504, 509, 510, 519, 521, 524, 525, 533, 535], "usa": [42, 487, 537], "usag": [39, 92], "use_composit": 6, "use_map_top": [479, 480], "user": [2, 3, 18, 29, 265, 447, 483, 505, 517, 523, 530], "usual": 506, "uth": [79, 254], "util": [26, 33, 34, 37, 38, 40, 41, 71, 147, 178, 236, 237, 250, 251, 254, 283, 284, 286, 287, 290, 291, 292, 293, 298, 299, 308, 309, 352, 366, 402, 432, 435, 436, 441, 442, 445, 448, 449, 450, 451, 477, 481, 482, 496, 506, 520, 521, 523, 534, 535], "utilitycircular_arrai": 135, "v": [17, 28, 116, 181, 184, 196, 208, 222, 224, 249, 255, 299, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 410, 411, 494, 499, 524], "v3": [26, 29, 30, 31, 32, 33, 34, 37, 38, 41, 65, 105, 164, 165, 166, 167, 169, 170, 172, 173, 230, 236, 237, 238, 239, 240, 241, 242, 243, 263, 265, 266, 267, 268, 271, 272, 276, 277, 278, 279, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 428, 429, 430, 431, 434, 437, 438, 445, 446, 481, 482, 508, 509, 523, 524], "valid": [16, 18, 19, 21, 43, 254, 264, 477, 479, 480], "valu": [13, 14, 15, 17, 19, 20, 27, 30, 32, 38, 40, 41, 47, 63, 65, 66, 69, 71, 79, 81, 92, 98, 105, 106, 108, 154, 164, 165, 169, 173, 178, 179, 229, 230, 243, 254, 261, 264, 265, 268, 277, 284, 286, 290, 291, 298, 299, 302, 304, 306, 307, 308, 309, 316, 330, 334, 360, 361, 372, 404, 406, 431, 435, 436, 438, 441, 442, 479, 480, 483, 490, 492, 505, 509, 512, 517, 519, 520, 521, 523, 527, 528], "value_": 313, "value_grid": [108, 128, 154, 178, 242, 243], "value_or": [32, 243, 291], "value_trait": [17, 51, 268, 492, 493, 499, 501, 521], "value_traitsstat": 521, "value_typ": [38, 41, 63, 64, 65, 66, 71, 72, 98, 105, 106, 222, 224, 232, 438], "value_typeiter": 38, "value_typestd": [232, 438], "value_typet": 41, "value_typevalu": [41, 232, 438], "value_typevector2": 38, "valuea": 254, "valuebeluga": 60, "valuegrid2": [109, 116, 185, 193, 197, 204, 205, 208, 209, 210, 218, 220, 224, 226, 229, 243, 254, 441, 442], "valuegrid2gener": 442, "valuegrid2valuegrid2": 442, "valueinput": 308, "valueth": [105, 308, 360], "valuetrait": [492, 494, 499, 501, 503, 520, 521, 528], "valuetraitsinlinestat": 528, "valuetraitsstat": 528, "valuetraitstrait": [505, 521], "vari": 1, "variabl": [28, 29, 79, 81, 169, 174, 184, 228, 254, 258, 262, 265, 270, 271, 273, 276, 278, 283, 286, 290, 296, 298, 398, 420, 428, 430, 435, 436, 445, 453, 466, 470, 484, 500, 504], "varianc": [173, 254], "variant": [4, 38, 59, 60, 61, 62, 187, 224, 435, 474, 475, 481, 482, 488], "variant_": 38, "variantbresenham": 61, "variantvariantbresenham": 38, "variat": 1, "vector": [2, 20, 26, 27, 31, 32, 33, 34, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 61, 73, 75, 77, 79, 82, 90, 98, 99, 105, 107, 108, 109, 119, 120, 164, 165, 168, 173, 200, 202, 214, 216, 220, 222, 224, 229, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 249, 250, 251, 253, 254, 255, 259, 261, 263, 264, 267, 268, 295, 307, 324, 332, 334, 358, 359, 368, 369, 372, 375, 377, 437, 438, 441, 442, 447, 482, 492, 493, 520, 521], "vector2": [37, 38, 62, 63, 64, 172, 173, 182, 185, 186, 191, 194, 198, 199, 202, 211, 213, 216, 217, 218, 222, 224, 229, 241, 254, 302, 303, 320, 321, 519, 524, 532, 533, 535], "vector22d": 61, "vector2d": [13, 15, 17, 45, 46, 49, 50, 51, 52, 61, 108, 109, 120, 122, 245, 253, 263, 268, 270, 311, 492, 493, 521], "vector2i": [13, 17, 38, 45, 46, 49, 50, 51, 52, 59, 60, 108, 109, 120, 245, 264, 268, 293, 334, 474, 475, 492, 493], "vector2ipoint": 59, "vector2near": [302, 303], "vector2nearauto": 303, "vector3": [173, 302, 303, 535], "vector3d": [12, 34, 234, 235, 237, 239, 253, 254, 263, 482], "vector3i": [264, 334], "vector3near": [302, 303], "vector3nearauto": 303, "vector4": 173, "vector_typ": [79, 80, 81, 82, 222, 224, 229, 249, 251, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "vector_typeth": [249, 251], "vector_typetypenam": [249, 251], "vector_typevector": 251, "vectorshorthand": [168, 251, 438], "vectorstd": [168, 251, 438], "veri": [5, 19, 237], "verifi": [254, 430, 431], "version": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 75, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "vertex_color": 524, "vertic": 524, "via": [43, 479, 480], "view": [2, 3, 14, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 116, 147, 164, 165, 166, 167, 172, 173, 178, 202, 204, 205, 212, 216, 218, 220, 225, 229, 230, 236, 237, 238, 239, 240, 241, 242, 243, 261, 263, 265, 266, 267, 268, 277, 286, 287, 292, 293, 294, 295, 296, 297, 338, 344, 346, 348, 350, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 434, 437, 438, 447, 481, 482, 508, 509, 523, 524], "view_": [38, 63, 291, 299], "view_adaptor": [229, 291], "view_closur": [30, 298, 299, 338], "view_facad": [229, 299], "view_interfac": [38, 229], "viewseffective_sample_s": 134, "viewsinclud": 144, "viewsnorm": 131, "viewstuple_vector": 136, "vision": 1, "visit": [165, 482], "visual": [228, 470, 480, 504, 512, 523], "visualization_msg": [448, 449, 454, 480, 510], "void": [26, 27, 30, 32, 34, 38, 40, 41, 43, 55, 57, 65, 69, 75, 77, 79, 102, 105, 111, 113, 115, 116, 177, 202, 205, 216, 218, 220, 222, 229, 239, 243, 249, 251, 254, 261, 277, 284, 291, 299, 308, 309, 355, 362, 364, 367, 397, 400, 434, 436, 438, 449, 451, 454, 456, 458, 475, 477, 482, 488, 511, 519, 534, 535], "void_t": [27, 116, 229, 254, 261, 277, 284, 299, 435, 436], "volatil": 6, "w": [4, 5, 21, 28, 42, 116, 181, 184, 196, 209, 222, 226, 254, 255, 266, 297, 299, 352, 366, 398, 420, 487, 499, 524, 535, 537], "w_i": [479, 480, 525], "w_t": 4, "wa": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 228, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 454, 456, 458, 470, 479, 480, 488, 490, 492, 504, 525, 527, 529, 530], "wai": [92, 309], "wait": [479, 480], "want": [5, 32, 478], "warn": 479, "warranti": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "we": [6, 30, 32, 34, 105, 107, 239, 243, 264, 291, 348, 438, 482, 524], "weight": [4, 18, 21, 26, 27, 32, 34, 43, 55, 57, 75, 77, 90, 102, 166, 167, 172, 173, 229, 230, 239, 243, 254, 255, 259, 260, 261, 264, 265, 266, 272, 276, 277, 278, 279, 283, 284, 286, 296, 297, 298, 299, 316, 330, 340, 348, 360, 378, 408, 409, 410, 411, 420, 421, 434, 447, 474, 475, 477, 479, 480, 482, 488, 512, 523, 524, 525], "weight_detail": [116, 167, 173, 202, 216, 229, 254, 277, 279, 283, 284, 420, 421, 524], "weight_fn": [116, 167, 173, 202, 216, 254, 277, 279, 283, 284, 421, 524], "weight_fncustom": [229, 284], "weight_fninlin": 421, "weight_t": [254, 255, 259, 276, 277, 512, 523, 524], "weight_ttyp": 277, "weight_ttypenam": [277, 524], "weight_typ": [21, 32, 34, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 222, 226, 239, 243, 254, 264, 276, 277, 378, 379, 524], "weight_typedoubl": [32, 34, 239, 243, 264], "weight_typestd": 277, "weight_typeth": 277, "weight_typeweight": [32, 34, 239, 243, 264], "weightconstexpr": [167, 173, 277, 279, 284, 524], "weightcustom": [167, 173, 277, 279, 284], "weighted_mean": 173, "weighted_sampl": 173, "weighted_sd": 173, "weighted_squared_devi": 173, "weightnumer": [26, 475, 524], "weights_sum": 173, "weights_view": 173, "weightsa": 254, "weightsconstexpr": [279, 299, 524], "weightsdefinit": [279, 299], "weightspos": 254, "weightsrang": [172, 173, 254], "weightsrangea": 254, "weightt": [26, 44, 180, 189, 190, 195, 198, 203, 207, 211, 217, 223, 229], "weighttag": [26, 254, 283, 284, 475, 524], "weightttyp": 43, "weightweight": 26, "well": [2, 27, 229, 254, 261, 276, 277, 378, 447], "were": [270, 479], "wg21": 309, "what": [18, 92, 102, 105, 254, 302, 524], "wheel": 11, "when": [2, 3, 4, 6, 16, 26, 41, 43, 45, 47, 49, 51, 53, 57, 65, 75, 79, 105, 230, 243, 254, 264, 271, 298, 314, 330, 382, 398, 402, 420, 438, 477, 479, 480, 482, 525], "where": [4, 18, 34, 164, 165, 173, 174, 230, 239, 243, 254, 271, 273, 382, 414, 416, 438, 445, 446, 477, 479, 480, 482, 525], "wherea": 480, "wherev": 2, "whether": [13, 43, 314, 454, 456, 458, 477, 479, 480, 488, 525], "which": [2, 4, 5, 19, 20, 22, 24, 26, 27, 29, 31, 33, 35, 37, 40, 86, 96, 117, 119, 121, 164, 166, 169, 172, 174, 176, 179, 228, 229, 231, 234, 238, 242, 244, 246, 248, 250, 252, 254, 261, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 363, 384, 404, 406, 428, 430, 435, 437, 439, 441, 443, 445, 470, 477, 479, 480, 481, 490, 504, 508, 520, 523, 524, 532, 534], "whichev": 90, "while": [2, 4, 41, 165, 230, 430], "whole": 237, "whose": [27, 229, 254, 261, 284, 400, 435, 436, 512], "why": [32, 243], "wide": [1, 2, 3, 447], "width": [13, 45, 49, 51, 108, 109, 120, 209, 226, 243, 245, 442, 492, 493, 499, 501, 521], "width_": 442, "widthgrid": 108, "widthstd": [442, 521], "wiki": [173, 251, 524], "wikipedia": [173, 251, 524], "wild": 1, "window": [40, 254], "wise": [3, 478], "within": [84, 88, 228, 253, 470, 504], "without": [3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 98, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 479, 480, 482, 486, 509, 510, 521, 524, 533, 535], "wolfram": [42, 487, 537], "word": [2, 6, 79], "work": [2, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 230, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 454, 456, 458, 480, 488, 490, 492, 525, 527, 529, 530], "workflow": [5, 6], "world": [34, 73, 234, 235, 237, 239, 254], "world_in_sensor_transform": 237, "world_pose_typ": [34, 73, 74, 222, 226, 237], "world_pose_typesophu": 237, "world_pose_typetyp": 237, "world_to_likelihood_field_transform_": 243, "wors": 65, "worth": 6, "would": 19, "wrap": 506, "wrapper": [479, 480, 482, 483, 486, 490, 492, 496, 498, 505, 506, 508, 509, 510, 512, 517, 520, 521], "write": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 65, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 480, 482, 486, 509, 510, 521, 524, 533, 535], "www": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 358, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "x": [4, 12, 13, 17, 19, 20, 32, 34, 38, 45, 46, 49, 50, 51, 52, 61, 108, 109, 110, 120, 122, 173, 239, 241, 243, 245, 249, 253, 268, 270, 274, 303, 309, 477, 479, 480, 482, 492, 493, 519, 521, 524, 525, 533, 535], "x10": 243, "x_": [4, 38], "x_0": 4, "x_clustering_resolut": [110, 111, 309], "x_clustering_resolutionclust": 110, "x_distribution_": 253, "x_offset": 243, "x_t": 4, "xa": 479, "xi": [13, 17, 19, 20, 45, 46, 49, 50, 51, 52, 108, 109, 120, 245, 268, 492, 493], "xigrid": [45, 51], "xml": 6, "xplane": [45, 51], "xspan_": 38, "xstep_": 38, "xx": 479, "xy": [173, 477, 479, 480], "xyaw": [477, 480], "y": [5, 12, 13, 17, 19, 32, 34, 38, 41, 45, 46, 49, 50, 51, 52, 61, 65, 108, 109, 110, 120, 122, 173, 239, 241, 243, 245, 253, 268, 270, 274, 303, 309, 477, 479, 480, 482, 492, 493, 519, 521, 524, 525, 533, 535], "y_": 38, "y_clustering_resolut": [110, 111, 309], "y_clustering_resolutionclust": 110, "y_distribution_": 253, "y_offset": 243, "ya": 479, "yaw": [173, 477, 479, 480, 519], "yellow": [228, 470, 504], "yet": [1, 524], "yi": [13, 17, 45, 46, 49, 50, 51, 52, 108, 109, 120, 245, 268, 492, 493], "yield": [71, 232], "yigrid": [45, 51], "you": [0, 5, 6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 254, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 302, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "your": [5, 6], "your_typ": 92, "yplane": [45, 51], "yspan_": 38, "ystep_": 38, "yy": 479, "yyaw": [477, 480], "z": [12, 28, 32, 34, 116, 122, 181, 184, 225, 227, 239, 249, 253, 254, 303, 416, 417, 430, 431, 482, 524, 525, 535], "z_": 4, "z_distribution_": 253, "z_hit": [32, 225, 227, 243, 316, 330, 480], "z_hitbeluga": [317, 331], "z_hitdoubl": [32, 243], "z_hitweight": [32, 243], "z_max": [32, 225, 227, 316, 480], "z_maxbeluga": 317, "z_maxdoubl": 32, "z_maxweight": 32, "z_mean": 32, "z_rand": [32, 225, 227, 316, 480], "z_randbeluga": 317, "z_randdoubl": 32, "z_random": [225, 227, 243, 330], "z_randombeluga": 331, "z_randomdoubl": 243, "z_randomweight": 243, "z_randweight": 32, "z_short": [32, 225, 227, 316, 480], "z_shortbeluga": 317, "z_shortdoubl": 32, "z_shortweight": 32, "z_t": 4, "zero": [3, 12, 69, 79, 122, 173, 177, 239, 251, 254, 414, 428, 434, 480, 524], "zip": [27, 145, 178, 229, 230, 240, 241, 261, 263, 277, 402, 418, 437, 438, 443, 444, 523, 524], "zip_fn": [116, 202, 216, 419, 438, 445, 446], "zip_fnimplement": [229, 446], "zip_fninlin": 419, "zip_view": [264, 418, 446], "zip_with_view": 402, "zipconstexpr": [438, 446], "zipgiven": [438, 446], "zsee": 416, "zupper": 254, "\u00eatre": 1, "\u03b7": 4, "\u2124": 59}, "titles": ["Contact", "Rationale", "Architecture", "Design principles", "Key concepts", "Installation", "Quickstart", "Benchmarking Beluga", "Extending Beluga", "Profiling Beluga", "Using Beluga AMCL on an AMR", "Overview", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File", "Beluga: Beluga named requirements: DenseGrid2", "Beluga: Beluga named requirements: LaserScan", "Beluga: Beluga named requirements: LinearGrid2", "Beluga: Beluga named requirements: MotionModel", "Beluga: Beluga named requirements: OccupancyGrid2d", "Beluga: Beluga named requirements: Particle", "Beluga: Beluga named requirements: RandomStateDistribution", "Beluga: Beluga named requirements: RegularGrid", "Beluga: Beluga named requirements: SensorModel", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File", "Beluga: Class List", "Classes", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File", "Beluga: Bibliography", "Beluga: beluga::Amcl&amp;lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseDenseGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLaserScan&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLinearGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseOccupancyGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseRegularGrid&amp;lt; Derived, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BeamSensorModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BearingSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i Class Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator Class Reference", "Beluga: Member List", "Beluga: beluga::CircularArray&amp;lt; T, N, F &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModel&amp;lt; StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::ExponentialFilter Class Reference", "Beluga: Member List", "Beluga: beluga::IndexingIterator&amp;lt; Indexable, Index &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LandmarkMap Class Reference", "Beluga: Member List", "Beluga: beluga::LandmarkSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistribution&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistributionParam&amp;lt; Vector, Matrix &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; T, Constraint &amp;gt; Class Template Reference", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, Eigen::AlignedBox2d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE3d, Eigen::AlignedBox3d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::NDTSensorModel&amp;lt; SparseGridT &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Numeric&amp;lt; T, PhantomType, typename &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::Ray2d&amp;lt; OccupancyGrid, Algorithm &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::SparseValueGrid&amp;lt; MapType, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::StationaryModel Class Reference", "Beluga: Member List", "Beluga: beluga::ThrunRecoveryProbabilityEstimator Class Reference", "Beluga: Member List", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, T &amp;gt; Class Template Reference", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, std::tuple&amp;lt; Types... &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::TupleVector&amp;lt; T &amp;gt; Class Template Reference", "Beluga: beluga::ValueGrid2&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE2d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Tuple&amp;lt; Types... &amp;gt;, std::enable_if_t&amp;lt;(std::is_arithmetic_v&amp;lt; Types &amp;gt; &amp;amp;&amp;amp;...), void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; std::array&amp;lt; T, N &amp;gt;, std::enable_if_t&amp;lt; std::is_arithmetic_v&amp;lt; T &amp;gt;, void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: Class Index", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; actions Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; containers Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; motion Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; policies Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; random Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; testing Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; raycasting Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; utility Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; data Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference", "Beluga: _doxygen Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File", "Beluga: File List", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File", "Beluga: Class Members", "All", "Beluga: Class Members", "Beluga: Class Members", "Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Enumerations", "Beluga: Class Members - Enumerator", "Beluga: Class Members", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Related Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Typedefs", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Variables", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Graph Legend", "Beluga: Class Hierarchy", "Beluga: API Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File", "Beluga: Class Hierarchy", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File", "Beluga: beluga Namespace Reference", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace List", "Namespaces", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File", "Beluga: Related Pages", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File", "Beluga: beluga::AmclParams Struct Reference", "Beluga: Member List", "Beluga: beluga::BeamModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::BearingModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator::sentinel Struct Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkBearingDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkPositionDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::NDTCell&amp;lt; NDim, Scalar &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::NDTModelParam&amp;lt; NDim &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::assign_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::common_tuple_type&amp;lt; T, U, Is &amp;gt; Struct Template Reference", "Beluga: beluga::common_tuple_type&amp;lt; T, U, std::index_sequence&amp;lt; I... &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; T, class &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::detail::CellHasher&amp;lt; N &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::detail::make_from_state_fn&amp;lt; Particle, State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::has_common_tuple_type&amp;lt; typename, typename, typename &amp;gt; Struct Template Reference", "Beluga: beluga::has_common_tuple_type&amp;lt; T, U, std::void_t&amp;lt; common_tuple_type_t&amp;lt; T, U &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::is_tuple_like&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Eigen::EigenBase&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::particle_traits&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_effective_size_drop_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy&amp;lt; PolicyFn &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy_base Struct Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::state_detail::state_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::views::detail::as_common_tuple_indirect_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_view&amp;lt; Range, Fn, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_view&amp;lt; Range, Distribution, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_evenly_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_while_kld_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::zip_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::weight_detail::weight_fn Struct Reference", "Beluga: Member List", "Beluga: std::hash&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::numeric_limits&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: std::tuple_element&amp;lt; I, beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::tuple_size&amp;lt; beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File", "Overview", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File", "Beluga AMCL: Class List", "Classes", "Beluga AMCL: beluga_amcl::AmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::AmclNodelet Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::NdtAmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: Class Index", "Beluga AMCL: _doxygen Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference", "Beluga AMCL: File List", "Beluga AMCL: Class Members", "Class Members", "Beluga AMCL: Class Members - Functions", "Beluga AMCL: Class Members - Typedefs", "Beluga AMCL: Class Members - Variables", "Beluga AMCL: Graph Legend", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: API Reference", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File", "Beluga AMCL: Related Pages", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File", "Overview", "ROS Reference", "ROS 2 Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File", "Beluga ROS: Class List", "Classes", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File", "Beluga ROS: Bibliography", "Beluga ROS: beluga_ros::Amcl Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::LaserScan Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid Class Reference", "Beluga ROS: Member List", "Beluga ROS: Class Index", "Beluga ROS: _doxygen Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include Directory Reference", "Beluga ROS: File List", "Beluga ROS: Class Members", "Class Members", "Beluga ROS: Class Members - Functions", "Beluga ROS: Class Members - Typedefs", "Beluga ROS: Class Members - Variables", "Beluga ROS: Graph Legend", "Beluga ROS: Class Hierarchy", "Beluga ROS: API Reference", "Beluga ROS: Class Hierarchy", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File", "Beluga ROS: Sophus Namespace Reference", "Beluga ROS: beluga_ros Namespace Reference", "Beluga ROS: beluga_ros::msg Namespace Reference", "Beluga ROS: Namespace Members", "Beluga ROS: Namespace Members", "Namespace Members", "Beluga ROS: Namespace List", "Namespaces", "Beluga ROS: tf2 Namespace Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File", "Beluga ROS: Related Pages", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File", "Beluga ROS: beluga_ros::AmclParams Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid::ValueTraits Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; T &amp;gt; Struct Template Reference", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga ROS: Member List", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File", "Overview", "Bibliography", "Features", "Releases", "Using Beluga with Nav2", "Primer on Particle Filtering with Beluga"], "titleterms": {"2": 480, "3d_embed": 12, "_doxygen": [148, 461, 495], "abstract": 2, "action": [22, 23, 29, 30, 123, 130, 131, 155, 265, 266, 286, 287, 296, 297], "adapt": 2, "advertis": [479, 480], "algorithm": [24, 25, 26, 37, 38, 96, 132, 133, 134, 138, 140, 152, 163, 164, 165, 166, 167, 172, 173, 176, 177, 292, 293, 308, 309, 434], "alignedbox2d": 84, "alignedbox3d": 88, "all": 181, "almost_equal_to": 529, "amcl": [10, 43, 472, 481, 482, 488], "amcl_cor": 26, "amcl_nod": [448, 449], "amcl_nodelet": [450, 451], "amclnod": [454, 480], "amclnodelet": [456, 479], "amclparam": [314, 525], "amp": 112, "amr": 10, "an": 10, "architectur": 2, "arg": [357, 365, 401], "as_common_tuple_indirect_fn": 402, "assign": [29, 30], "assign_fn": 338, "awar": 3, "base": 2, "basedensegrid2": 45, "baselaserscan": 47, "baselineargrid2": 49, "baseoccupancygrid2": 51, "baseregulargrid": 53, "beam_model": [31, 32], "beammodelparam": 316, "beamsensormodel": 55, "bearing_sensor_model": [33, 34], "bearingmodelparam": 318, "bearingsensormodel": 57, "beluga": [5, 6, 7, 8, 9, 10, 12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 462, 463, 472, 474, 475, 477, 481, 482, 485, 486, 496, 497, 506, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535, 540, 541], "beluga_amcl": [448, 449, 450, 451, 462, 463, 474, 475, 477, 479, 480], "beluga_ro": [481, 482, 485, 486, 496, 497, 508, 509, 510, 512, 520, 521, 523, 524, 532, 533, 534, 535], "benchmark": 7, "bibliographi": [42, 487, 537], "binari": 5, "bound": 3, "bresenham": [37, 38], "bresenham2i": 59, "broadcast": [479, 480], "build": 5, "call": 479, "carlo": 4, "cellhash": 358, "center": 3, "ciabatta": [39, 162], "circular_arrai": [40, 41], "circulararrai": [65, 425, 427], "class": [27, 28, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 116, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 233, 355, 364, 400, 452, 453, 454, 456, 458, 460, 465, 466, 467, 468, 469, 471, 473, 483, 484, 488, 490, 492, 494, 499, 500, 501, 502, 503, 505, 507], "clone": 5, "common_tuple_typ": 352, "common_tuple_type_t": 363, "compat": [479, 480], "concept": 4, "consist": 3, "constraint": 83, "contact": 0, "contain": [40, 41, 117, 118, 124, 135, 136, 149, 437, 438], "crtp": 2, "data": [2, 119, 120, 141, 143, 154, 236, 237, 240, 241, 244, 245, 263, 267, 268, 294, 295, 306, 307, 441, 442], "decay_t": 357, "decay_tuple_lik": 355, "dense_grid": [119, 120], "densegrid2": 13, "depend": [5, 447], "deriv": [45, 47, 49, 51, 53], "design": 3, "detail": [159, 171, 285], "differential_drive_model": [121, 122], "differentialdrivemodel": 67, "differentialdrivemodelparam": 322, "directori": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 461, 462, 463, 495, 496, 497], "distance_map": [164, 165], "distribut": [2, 5, 412], "easi": 3, "effective_sample_s": [166, 167], "eigen_compat": 168, "eigenbas": 372, "element": [169, 170], "enabl": [367, 397], "enumer": [187, 188], "epilogu": 171, "estim": [172, 173], "evalu": 3, "every_n": [174, 175], "every_n_fn": 380, "every_n_polici": 382, "executionpolici": 43, "exponential_filt": [176, 177], "exponentialfilt": 69, "extend": 8, "f": [65, 425, 427], "featur": [11, 447, 538], "file": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 119, 120, 121, 122, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 464, 474, 475, 477, 481, 482, 485, 486, 498, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "filter": [479, 480, 541], "fn": 406, "focus": 3, "form": 2, "forward_lik": 179, "from": 5, "function": [2, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 467, 501], "graph": [228, 470, 504], "gt": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 96, 98, 104, 105, 107, 108, 110, 112, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 332, 334, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 388, 390, 391, 393, 397, 400, 401, 406, 412, 422, 424, 425, 427, 529, 530], "has_common_tuple_typ": 362, "has_single_el": 364, "hierarchi": [229, 233, 471, 473, 505, 507], "home": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 462, 463, 474, 475, 477, 481, 482, 485, 486, 496, 497, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "hpp": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 119, 120, 121, 122, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 474, 475, 477, 481, 482, 485, 486, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "i": [352, 353], "includ": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 462, 463, 474, 475, 477, 481, 482, 485, 486, 496, 497, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "index": [71, 116, 460, 494], "index_sequ": 353, "indexing_iter": [231, 232], "indexingiter": 71, "initi": [479, 480], "instal": 5, "integ": 61, "interfac": [479, 480], "internalcontain": 104, "is_arithmetic_v": [112, 114], "is_tuple_lik": 366, "iter": 63, "kei": 4, "landmark_detection_typ": [234, 235], "landmark_map": [236, 237], "landmark_sensor_model": [238, 239], "landmarkbearingdetect": 324, "landmarkmap": [57, 73, 75], "landmarkmodelparam": 326, "landmarkpositiondetect": 328, "landmarksensormodel": 75, "laser_scan": [240, 241, 508, 509], "laserscan": [14, 490], "lazi": 3, "legend": [228, 470, 504], "like": 2, "likelihood_field_model": [242, 243], "likelihoodfieldmodel": 77, "likelihoodfieldmodelparam": 330, "line": 61, "linear_grid": [244, 245], "lineargrid2": 15, "list": [27, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 106, 109, 111, 113, 115, 178, 261, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 354, 356, 359, 361, 370, 371, 373, 374, 376, 379, 381, 383, 385, 387, 389, 392, 394, 396, 399, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 426, 452, 455, 457, 459, 464, 483, 489, 491, 493, 498, 517, 526, 528, 531], "local": 4, "lt": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 90, 92, 96, 98, 104, 105, 107, 108, 112, 114, 332, 334, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 388, 390, 391, 393, 397, 400, 401, 406, 412, 422, 424, 425, 427, 529, 530], "make_from_state_fn": 360, "maptyp": 98, "matrix": 81, "member": [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 106, 109, 111, 113, 115, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 255, 256, 257, 258, 259, 260, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 354, 356, 359, 361, 370, 371, 373, 374, 376, 379, 381, 383, 385, 387, 389, 392, 394, 396, 399, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 426, 455, 457, 459, 465, 466, 467, 468, 469, 489, 491, 493, 499, 500, 501, 502, 503, 514, 515, 516, 526, 528, 531], "memori": 3, "messag": 510, "misc": [479, 480], "model": [479, 480], "mont": 4, "motion": [121, 122, 125, 137, 157, 246, 247, 269, 270, 310, 311, 479, 480], "motionmodel": [16, 43], "msg": 513, "multivariate_distribution_trait": [248, 249, 367], "multivariate_normal_distribut": [250, 251], "multivariate_uniform_distribut": [252, 253], "multivariatenormaldistribut": 79, "multivariatenormaldistributionparam": 81, "multivariateuniformdistribut": 83, "n": [65, 358, 425, 427], "namespac": [254, 255, 256, 257, 258, 259, 260, 261, 262, 511, 512, 513, 514, 515, 516, 517, 518, 519], "nav2": 540, "ndim": [53, 98, 332, 334], "ndt_amcl_nod": [474, 475], "ndt_cell": 263, "ndt_sensor_model": 264, "ndtamclnod": 458, "ndtcell": 332, "ndtmodelparam": 334, "ndtsensormodel": 90, "node": 480, "nodelet": 479, "normal": [265, 266], "normalize_base_fn": 340, "normalize_fn": 342, "note": [479, 480], "numer": [92, 422, 424], "observ": [479, 480], "occupancy_grid": [267, 268, 520, 521], "occupancygrid": [55, 77, 86, 96, 492], "occupancygrid2d": 17, "omnidirectional_drive_model": [269, 270], "omnidirectionaldrivemodel": 94, "omnidirectionaldrivemodelparam": 336, "on_effective_size_drop": [271, 272], "on_effective_size_drop_polici": 384, "on_mot": [273, 274], "on_motion_fn": 386, "on_motion_polici": 388, "on_motion_policy_bas": 390, "output": 6, "over": 6, "overview": [11, 447, 478, 536], "page": [275, 476, 522], "paramet": [479, 480], "particl": [18, 278, 279, 360, 479, 480, 541], "particle_cloud": [523, 524], "particle_trait": [276, 277, 378], "particletyp": 43, "perform": 3, "phantomtyp": [92, 422, 424], "polici": [126, 138, 146, 174, 175, 271, 272, 273, 274, 280, 281, 282, 393], "policy_bas": 395, "policyfn": 393, "pose": [388, 390, 479, 480], "prerequisit": 6, "primer": 541, "primit": [283, 284], "principl": 3, "profil": 9, "prologu": 285, "propag": [286, 287], "propagate_base_fn": 344, "propagate_fn": 346, "publish": [479, 480], "quickstart": 6, "random": [127, 139, 160, 248, 249, 250, 251, 252, 253, 288, 289], "random_interspers": [290, 291], "random_intersperse_fn": 404, "random_intersperse_view": 406, "randomstatedistribut": 19, "randomstategener": 43, "rang": [2, 406, 412], "rational": 1, "ray2d": 96, "raycast": [37, 38, 132, 163, 292, 293], "re": 3, "record": 6, "refer": [22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 108, 110, 112, 114, 117, 119, 121, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 172, 174, 176, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 265, 267, 269, 271, 273, 276, 278, 280, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 428, 430, 432, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 461, 462, 463, 474, 479, 480, 481, 485, 488, 490, 492, 495, 496, 497, 508, 511, 512, 513, 519, 520, 523, 525, 527, 529, 530, 532, 534], "regular_grid": [294, 295], "regulargrid": 20, "relat": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 219, 275, 476, 522], "releas": 539, "repositori": 5, "reweight": [296, 297], "reweight_base_fn": 348, "reweight_fn": 350, "ro": [5, 479, 480, 506], "robot": 6, "ros2_common": 477, "run": 6, "runner": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 462, 463, 474, 475, 477, 481, 482, 485, 486, 496, 497, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "sampl": [298, 299], "sample_base_fn": 408, "sample_fn": 410, "sample_view": 412, "scalar": [332, 391, 530], "se2": [391, 530], "se2bas": 377, "se2d": [86, 110], "se3bas": 369, "sensor": [31, 32, 33, 34, 119, 120, 128, 139, 140, 141, 142, 143, 153, 154, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 263, 264, 267, 268, 294, 295, 300, 301, 306, 307, 441, 442], "sensormodel": [21, 43], "sentinel": 320, "servic": [479, 480], "simul": 6, "so2bas": 368, "so3bas": 375, "sophu": 511, "sophus_match": [302, 303], "sophus_print": [304, 305], "sourc": [5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 118, 120, 122, 165, 167, 168, 170, 171, 173, 175, 177, 179, 232, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 274, 277, 279, 281, 282, 284, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 429, 431, 433, 434, 436, 438, 440, 442, 444, 446, 449, 451, 475, 477, 482, 486, 509, 510, 521, 524, 533, 535], "sparse_value_grid": [306, 307], "sparsegridt": 90, "sparsevaluegrid": 98, "spatial_hash": [308, 309, 397], "state": 360, "state_fn": 398, "statetyp": [57, 67, 75], "static": 3, "stationary_model": [310, 311], "stationarymodel": 100, "stl": [2, 3], "strongly_typed_numer": [312, 313], "struct": [314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 380, 382, 384, 386, 388, 390, 391, 393, 395, 397, 398, 400, 401, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 525, 527, 529, 530], "subscrib": [479, 480], "support": 11, "t": [65, 79, 83, 92, 104, 107, 108, 114, 352, 355, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 397, 400, 401, 422, 424, 425, 427, 529], "take_evenli": [428, 429], "take_evenly_fn": 414, "take_while_kld": [430, 431], "take_while_kld_fn": 416, "templat": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 86, 90, 92, 96, 98, 104, 105, 107, 108, 112, 114, 332, 334, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 377, 378, 388, 390, 391, 393, 397, 400, 401, 406, 412, 422, 424, 425, 427, 529, 530], "test": [129, 156, 302, 303, 304, 305, 432, 433], "tf2": 519, "tf2_eigen": [532, 533], "tf2_sophu": [534, 535], "thrun_recovery_probability_estim": 434, "thrunrecoveryprobabilityestim": 102, "topic": [479, 480], "transform": [479, 480], "tupl": 105, "tuple_index": 400, "tuple_index_found": [365, 401], "tuple_trait": [435, 436], "tuple_vector": [437, 438], "tuplecontain": 104, "tuplelik": [357, 364, 400], "tuplevector": 107, "type": [105, 112, 142, 143, 158, 234, 235], "type_trait": [130, 133, 137, 144, 151, 276, 277, 312, 313, 435, 436, 439, 440], "typedef": [222, 468, 502], "typenam": [92, 362], "u": [352, 363], "urng": [406, 412], "us": [3, 10, 540], "util": [135, 150, 179, 231, 232], "ux": 3, "value_grid": [441, 442], "valuegrid2": 108, "valuetrait": 527, "variabl": [225, 469, 503], "vector": 81, "vector2": 61, "view": [131, 134, 136, 144, 145, 169, 170, 278, 279, 290, 291, 298, 299, 428, 429, 430, 431, 443, 444, 445, 446], "visual": 6, "void": [110, 112, 114], "void_t": 363, "weight_fn": 420, "weightt": 43, "work": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 462, 463, 474, 475, 477, 481, 482, 485, 486, 496, 497, 508, 509, 510, 520, 521, 523, 524, 532, 533, 534, 535], "workspac": 5, "zip": [445, 446], "zip_fn": 418}})