Search.setIndex({"alltitles": {"/home/runner/work/beluga/beluga/beluga/include Directory Reference": [[160, "home-runner-work-beluga-beluga-beluga-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; actions Relation": [[122, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-actions-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; containers Relation": [[123, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-containers-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; motion Relation": [[124, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-motion-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; policies Relation": [[125, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-policies-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; random Relation": [[126, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-random-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; sensor Relation": [[127, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-sensor-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; testing Relation": [[128, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-testing-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference": [[146, "home-runner-work-beluga-beluga-beluga-include-beluga-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; type_traits Relation": [[129, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; views Relation": [[130, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference": [[154, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference": [[21, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File": [[22, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference": [[28, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-assign-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File": [[29, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-assign-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference": [[264, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-normalize-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File": [[265, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-normalize-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference": [[285, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-propagate-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File": [[286, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-propagate-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference": [[295, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-reweight-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File": [[296, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-reweight-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; raycasting Relation": [[131, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-raycasting-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; type_traits Relation": [[132, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; views Relation": [[133, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference": [[151, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference": [[23, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File": [[24, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File": [[25, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-amcl-core-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference": [[163, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-distance-map-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File": [[164, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-distance-map-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference": [[165, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-effective-sample-size-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File": [[166, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-effective-sample-size-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference": [[171, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-estimation-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File": [[172, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-estimation-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference": [[175, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-exponential-filter-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File": [[176, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-exponential-filter-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference": [[162, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference": [[291, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File": [[292, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference": [[36, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-bresenham-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File": [[37, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-bresenham-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference": [[307, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-spatial-hash-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File": [[308, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-spatial-hash-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File": [[433, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-thrun-recovery-probability-estimator-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference": [[34, "home-runner-work-beluga-beluga-beluga-include-beluga-beluga-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File": [[35, "home-runner-work-beluga-beluga-beluga-include-beluga-beluga-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; utility Relation": [[134, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-gt-utility-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; views Relation": [[135, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference": [[148, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference": [[116, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File": [[117, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference": [[39, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-circular-array-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File": [[40, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-circular-array-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference": [[436, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-tuple-vector-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File": [[437, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-tuple-vector-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference": [[158, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File": [[170, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-epilogue-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File": [[284, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-prologue-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File": [[167, "home-runner-work-beluga-beluga-beluga-include-beluga-eigen-compatibility-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion -&gt; type_traits Relation": [[136, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference": [[156, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference": [[245, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File": [[246, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference": [[120, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-differential-drive-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File": [[121, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-differential-drive-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference": [[268, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-omnidirectional-drive-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File": [[269, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-omnidirectional-drive-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference": [[309, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-stationary-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File": [[310, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-stationary-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies -&gt; algorithm Relation": [[137, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-gt-algorithm-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference": [[145, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference": [[279, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File": [[280, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference": [[173, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-every-n-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File": [[174, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-every-n-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference": [[270, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-effective-size-drop-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File": [[271, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-effective-size-drop-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference": [[272, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-motion-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File": [[273, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-motion-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File": [[281, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-policy-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference": [[282, "home-runner-work-beluga-beluga-beluga-include-beluga-primitives-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File": [[283, "home-runner-work-beluga-beluga-beluga-include-beluga-primitives-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random -&gt; sensor Relation": [[138, "home-runner-work-beluga-beluga-beluga-include-beluga-random-gt-sensor-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference": [[159, "home-runner-work-beluga-beluga-beluga-include-beluga-random-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference": [[287, "home-runner-work-beluga-beluga-beluga-include-beluga-random-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File": [[288, "home-runner-work-beluga-beluga-beluga-include-beluga-random-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference": [[247, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-distribution-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File": [[248, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-distribution-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference": [[249, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-normal-distribution-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File": [[250, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-normal-distribution-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference": [[251, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-uniform-distribution-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File": [[252, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-uniform-distribution-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; algorithm Relation": [[139, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-algorithm-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; data Relation": [[140, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-data-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; types Relation": [[141, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-types-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference": [[152, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference": [[299, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File": [[300, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference": [[30, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-beam-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File": [[31, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-beam-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference": [[32, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-bearing-sensor-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File": [[33, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-bearing-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&gt; types Relation": [[142, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-gt-types-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference": [[153, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference": [[118, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-dense-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File": [[119, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-dense-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference": [[235, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-landmark-map-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File": [[236, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-landmark-map-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference": [[239, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-laser-scan-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File": [[240, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-laser-scan-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference": [[243, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-linear-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File": [[244, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-linear-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File": [[262, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-ndt-cell-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference": [[266, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-occupancy-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File": [[267, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-occupancy-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference": [[293, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-regular-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File": [[294, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-regular-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference": [[305, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-sparse-value-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File": [[306, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-sparse-value-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference": [[440, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-value-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File": [[441, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-value-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference": [[237, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-landmark-sensor-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File": [[238, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-landmark-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference": [[241, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-likelihood-field-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File": [[242, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-likelihood-field-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File": [[263, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-ndt-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference": [[155, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference": [[431, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File": [[432, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference": [[301, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-matchers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File": [[302, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-matchers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference": [[303, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-printers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File": [[304, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-printers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference": [[150, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference": [[438, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File": [[439, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference": [[275, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-particle-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File": [[276, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-particle-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference": [[311, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-strongly-typed-numeric-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File": [[312, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-strongly-typed-numeric-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference": [[434, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-tuple-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File": [[435, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-tuple-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference": [[157, "home-runner-work-beluga-beluga-beluga-include-beluga-types-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference": [[233, "home-runner-work-beluga-beluga-beluga-include-beluga-types-landmark-detection-types-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File": [[234, "home-runner-work-beluga-beluga-beluga-include-beluga-types-landmark-detection-types-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference": [[149, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File": [[178, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-forward-like-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference": [[230, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-indexing-iterator-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File": [[231, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-indexing-iterator-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views -&gt; type_traits Relation": [[143, "home-runner-work-beluga-beluga-beluga-include-beluga-views-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference": [[144, "home-runner-work-beluga-beluga-beluga-include-beluga-views-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference": [[442, "home-runner-work-beluga-beluga-beluga-include-beluga-views-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File": [[443, "home-runner-work-beluga-beluga-beluga-include-beluga-views-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference": [[168, "home-runner-work-beluga-beluga-beluga-include-beluga-views-elements-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File": [[169, "home-runner-work-beluga-beluga-beluga-include-beluga-views-elements-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference": [[277, "home-runner-work-beluga-beluga-beluga-include-beluga-views-particles-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File": [[278, "home-runner-work-beluga-beluga-beluga-include-beluga-views-particles-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference": [[289, "home-runner-work-beluga-beluga-beluga-include-beluga-views-random-intersperse-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File": [[290, "home-runner-work-beluga-beluga-beluga-include-beluga-views-random-intersperse-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference": [[297, "home-runner-work-beluga-beluga-beluga-include-beluga-views-sample-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File": [[298, "home-runner-work-beluga-beluga-beluga-include-beluga-views-sample-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference": [[427, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-evenly-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File": [[428, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-evenly-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference": [[429, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-while-kld-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File": [[430, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-while-kld-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference": [[444, "home-runner-work-beluga-beluga-beluga-include-beluga-views-zip-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File": [[445, "home-runner-work-beluga-beluga-beluga-include-beluga-views-zip-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference": [[161, "home-runner-work-beluga-beluga-beluga-include-ciabatta-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File": [[38, "home-runner-work-beluga-beluga-beluga-include-ciabatta-ciabatta-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference": [[461, "home-runner-work-beluga-beluga-beluga-amcl-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference": [[462, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference": [[447, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-node-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File": [[448, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-node-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference": [[449, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-nodelet-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File": [[450, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-nodelet-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference": [[473, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ndt-amcl-node-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File": [[474, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ndt-amcl-node-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File": [[476, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ros2-common-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include Directory Reference": [[496, "home-runner-work-beluga-beluga-beluga-ros-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference": [[495, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference": [[480, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-amcl-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File": [[481, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-amcl-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference": [[484, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-beluga-ros-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File": [[485, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-beluga-ros-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference": [[507, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-laser-scan-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File": [[508, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-laser-scan-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File": [[509, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-messages-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference": [[519, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-occupancy-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File": [[520, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-occupancy-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference": [[522, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-particle-cloud-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File": [[523, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-particle-cloud-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference": [[531, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-eigen-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File": [[532, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-eigen-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference": [[533, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-sophus-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File": [[534, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-sophus-hpp-source-file"]], "Advertised services": [[478, "advertised-services"], [479, "advertised-services"]], "AlignedBox2d &gt; Class Reference": [[83, "alignedbox2d-gt-class-reference"]], "AlignedBox3d &gt; Class Reference": [[87, "alignedbox3d-gt-class-reference"]], "All": [[180, "all"]], "Amcl Class Reference": [[487, "amcl-class-reference"]], "Amcl&lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &gt; Class Template Reference": [[42, "amcl-lt-motionmodel-sensormodel-randomstategenerator-weightt-particletype-executionpolicy-gt-class-template-reference"]], "AmclNode Class Reference": [[453, "amclnode-class-reference"]], "AmclNodelet Class Reference": [[455, "amclnodelet-class-reference"]], "AmclParams Struct Reference": [[313, "amclparams-struct-reference"], [524, "amclparams-struct-reference"]], "Architecture": [[2, "architecture"]], "BaseDenseGrid2&lt; Derived &gt; Class Template Reference": [[44, "basedensegrid2-lt-derived-gt-class-template-reference"]], "BaseLaserScan&lt; Derived &gt; Class Template Reference": [[46, "baselaserscan-lt-derived-gt-class-template-reference"]], "BaseLinearGrid2&lt; Derived &gt; Class Template Reference": [[48, "baselineargrid2-lt-derived-gt-class-template-reference"]], "BaseOccupancyGrid2&lt; Derived &gt; Class Template Reference": [[50, "baseoccupancygrid2-lt-derived-gt-class-template-reference"]], "BaseRegularGrid&lt; Derived, NDim &gt; Class Template Reference": [[52, "baseregulargrid-lt-derived-ndim-gt-class-template-reference"]], "BeamModelParam Struct Reference": [[315, "beammodelparam-struct-reference"]], "BeamSensorModel&lt; OccupancyGrid &gt; Class Template Reference": [[54, "beamsensormodel-lt-occupancygrid-gt-class-template-reference"]], "BearingModelParam Struct Reference": [[317, "bearingmodelparam-struct-reference"]], "BearingSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[56, "bearingsensormodel-lt-landmarkmap-statetype-gt-class-template-reference"]], "Beluga": [[229, "beluga"]], "Beluga AMCL": [[471, "beluga-amcl"]], "Beluga ROS": [[505, "beluga-ros"]], "Benchmarking Beluga": [[7, "benchmarking-beluga"]], "Bibliography": [[41, "bibliography"], [486, "bibliography"], [536, "bibliography"]], "Bresenham2i Class Reference": [[58, "bresenham2i-class-reference"]], "Broadcasted transforms": [[478, "broadcasted-transforms"], [479, "broadcasted-transforms"]], "Build and source workspace": [[5, "build-and-source-workspace"]], "Building from source (with ROS)": [[5, "building-from-source-with-ros"]], "CRTP-based data adapters": [[2, "crtp-based-data-adapters"]], "Called services": [[478, "called-services"]], "CellHasher&lt; N &gt; Struct Template Reference": [[357, "cellhasher-lt-n-gt-struct-template-reference"]], "CircularArray&lt; T, N, F &gt; &gt; Struct Template Reference": [[424, "circulararray-lt-t-n-f-gt-gt-struct-template-reference"], [426, "circulararray-lt-t-n-f-gt-gt-struct-template-reference"]], "CircularArray&lt; T, N, F &gt; Class Template Reference": [[64, "circulararray-lt-t-n-f-gt-class-template-reference"]], "Class Hierarchy": [[228, "class-hierarchy"], [232, "class-hierarchy"], [470, "class-hierarchy"], [472, "class-hierarchy"], [504, "class-hierarchy"], [506, "class-hierarchy"]], "Class Index": [[115, "class-index"], [459, "class-index"], [493, "class-index"]], "Class List": [[26, "class-list"], [451, "class-list"], [482, "class-list"]], "Class Members": [[179, "class-members"], [181, "class-members"], [182, "class-members"], [183, "class-members"], [184, "class-members"], [185, "class-members"], [188, "class-members"], [209, "class-members"], [210, "class-members"], [211, "class-members"], [212, "class-members"], [213, "class-members"], [214, "class-members"], [215, "class-members"], [216, "class-members"], [217, "class-members"], [219, "class-members"], [220, "class-members"], [222, "class-members"], [223, "class-members"], [225, "class-members"], [226, "class-members"], [464, "class-members"], [465, "class-members"], [498, "class-members"], [499, "class-members"]], "Class Members - Enumerations": [[186, "class-members-enumerations"]], "Class Members - Enumerator": [[187, "class-members-enumerator"]], "Class Members - Functions": [[189, "class-members-functions"], [190, "class-members-functions"], [191, "class-members-functions"], [192, "class-members-functions"], [193, "class-members-functions"], [194, "class-members-functions"], [196, "class-members-functions"], [197, "class-members-functions"], [198, "class-members-functions"], [199, "class-members-functions"], [200, "class-members-functions"], [201, "class-members-functions"], [202, "class-members-functions"], [203, "class-members-functions"], [204, "class-members-functions"], [205, "class-members-functions"], [206, "class-members-functions"], [207, "class-members-functions"], [208, "class-members-functions"], [466, "class-members-functions"], [500, "class-members-functions"]], "Class Members - Related Functions": [[218, "class-members-related-functions"]], "Class Members - Typedefs": [[221, "class-members-typedefs"], [467, "class-members-typedefs"], [501, "class-members-typedefs"]], "Class Members - Variables": [[224, "class-members-variables"], [468, "class-members-variables"], [502, "class-members-variables"]], "Classes": [[27, "classes"], [452, "classes"], [483, "classes"]], "Clone Beluga repository": [[5, "clone-beluga-repository"]], "Compatibility Notes": [[478, "compatibility-notes"]], "Compatibility notes": [[479, "compatibility-notes"]], "Contact": [[0, "contact"]], "DenseGrid2": [[12, "densegrid2"]], "Dependencies": [[446, "dependencies"]], "Design principles": [[3, "design-principles"]], "DifferentialDriveModel Class Reference": [[66, "differentialdrivemodel-class-reference"]], "DifferentialDriveModelParam Struct Reference": [[321, "differentialdrivemodelparam-struct-reference"]], "Distribution as a range": [[2, "distribution-as-a-range"]], "Easy to (re)use": [[3, "easy-to-re-use"]], "EigenBase&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[371, "eigenbase-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "ExponentialFilter Class Reference": [[68, "exponentialfilter-class-reference"]], "Extending Beluga": [[8, "extending-beluga"]], "Features": [[11, "features"], [446, "features"], [537, "features"]], "File List": [[177, "file-list"], [463, "file-list"], [497, "file-list"]], "Functional forms": [[2, "functional-forms"]], "Functions": [[195, "functions"]], "Graph Legend": [[227, "graph-legend"], [469, "graph-legend"], [503, "graph-legend"]], "IndexingIterator&lt; Indexable, Index &gt; Class Template Reference": [[70, "indexingiterator-lt-indexable-index-gt-class-template-reference"]], "Initial Pose and Transform Broadcast Parameters": [[478, "initial-pose-and-transform-broadcast-parameters"], [479, "initial-pose-and-transform-broadcast-parameters"]], "Install ROS distribution": [[5, "install-ros-distribution"]], "Install dependencies": [[5, "install-dependencies"]], "Installation": [[5, "installation"]], "Installing binaries": [[5, "installing-binaries"]], "Interface Parameters": [[478, "interface-parameters"], [479, "interface-parameters"]], "Key concepts": [[4, "key-concepts"]], "LandmarkBearingDetection Struct Reference": [[323, "landmarkbearingdetection-struct-reference"]], "LandmarkMap Class Reference": [[72, "landmarkmap-class-reference"]], "LandmarkModelParam Struct Reference": [[325, "landmarkmodelparam-struct-reference"]], "LandmarkPositionDetection Struct Reference": [[327, "landmarkpositiondetection-struct-reference"]], "LandmarkSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[74, "landmarksensormodel-lt-landmarkmap-statetype-gt-class-template-reference"]], "LaserScan": [[13, "laserscan"]], "LaserScan Class Reference": [[489, "laserscan-class-reference"]], "Lazy evaluated": [[3, "lazy-evaluated"]], "LikelihoodFieldModel&lt; OccupancyGrid &gt; Class Template Reference": [[76, "likelihoodfieldmodel-lt-occupancygrid-gt-class-template-reference"]], "LikelihoodFieldModelParam Struct Reference": [[329, "likelihoodfieldmodelparam-struct-reference"]], "Line&lt; Vector2, Integer &gt; Class Template Reference": [[60, "line-lt-vector2-integer-gt-class-template-reference"]], "LinearGrid2": [[14, "lineargrid2"]], "Member List": [[43, "member-list"], [45, "member-list"], [47, "member-list"], [49, "member-list"], [51, "member-list"], [53, "member-list"], [55, "member-list"], [57, "member-list"], [59, "member-list"], [61, "member-list"], [63, "member-list"], [65, "member-list"], [67, "member-list"], [69, "member-list"], [71, "member-list"], [73, "member-list"], [75, "member-list"], [77, "member-list"], [79, "member-list"], [81, "member-list"], [84, "member-list"], [86, "member-list"], [88, "member-list"], [90, "member-list"], [92, "member-list"], [94, "member-list"], [96, "member-list"], [98, "member-list"], [100, "member-list"], [102, "member-list"], [105, "member-list"], [108, "member-list"], [110, "member-list"], [112, "member-list"], [114, "member-list"], [314, "member-list"], [316, "member-list"], [318, "member-list"], [320, "member-list"], [322, "member-list"], [324, "member-list"], [326, "member-list"], [328, "member-list"], [330, "member-list"], [332, "member-list"], [334, "member-list"], [336, "member-list"], [338, "member-list"], [340, "member-list"], [342, "member-list"], [344, "member-list"], [346, "member-list"], [348, "member-list"], [350, "member-list"], [353, "member-list"], [355, "member-list"], [358, "member-list"], [360, "member-list"], [369, "member-list"], [370, "member-list"], [372, "member-list"], [373, "member-list"], [375, "member-list"], [378, "member-list"], [380, "member-list"], [382, "member-list"], [384, "member-list"], [386, "member-list"], [388, "member-list"], [391, "member-list"], [393, "member-list"], [395, "member-list"], [398, "member-list"], [402, "member-list"], [404, "member-list"], [406, "member-list"], [408, "member-list"], [410, "member-list"], [412, "member-list"], [414, "member-list"], [416, "member-list"], [418, "member-list"], [420, "member-list"], [422, "member-list"], [425, "member-list"], [454, "member-list"], [456, "member-list"], [458, "member-list"], [488, "member-list"], [490, "member-list"], [492, "member-list"], [525, "member-list"], [527, "member-list"], [530, "member-list"]], "Memory aware": [[3, "memory-aware"]], "Misc Parameters": [[478, "misc-parameters"], [479, "misc-parameters"]], "Monte Carlo Localization": [[4, "monte-carlo-localization"]], "Motion Model Parameters": [[478, "motion-model-parameters"], [479, "motion-model-parameters"]], "MotionModel": [[15, "motionmodel"]], "MultivariateNormalDistribution&lt; T &gt; Class Template Reference": [[78, "multivariatenormaldistribution-lt-t-gt-class-template-reference"]], "MultivariateNormalDistributionParam&lt; Vector, Matrix &gt; Class Template Reference": [[80, "multivariatenormaldistributionparam-lt-vector-matrix-gt-class-template-reference"]], "MultivariateUniformDistribution&lt; T, Constraint &gt; Class Template Reference": [[82, "multivariateuniformdistribution-lt-t-constraint-gt-class-template-reference"]], "NDTCell&lt; NDim, Scalar &gt; Struct Template Reference": [[331, "ndtcell-lt-ndim-scalar-gt-struct-template-reference"]], "NDTModelParam&lt; NDim &gt; Struct Template Reference": [[333, "ndtmodelparam-lt-ndim-gt-struct-template-reference"]], "NDTSensorModel&lt; SparseGridT &gt; Class Template Reference": [[89, "ndtsensormodel-lt-sparsegridt-gt-class-template-reference"]], "Namespace List": [[260, "namespace-list"], [516, "namespace-list"]], "Namespace Members": [[254, "namespace-members"], [255, "namespace-members"], [256, "namespace-members"], [257, "namespace-members"], [258, "namespace-members"], [259, "namespace-members"], [513, "namespace-members"], [514, "namespace-members"], [515, "namespace-members"]], "Namespaces": [[261, "namespaces"], [517, "namespaces"]], "NdtAmclNode Class Reference": [[457, "ndtamclnode-class-reference"]], "Nodelets": [[478, "nodelets"]], "Nodes": [[479, "nodes"]], "Numeric&lt; T, PhantomType &gt; &gt; Struct Template Reference": [[421, "numeric-lt-t-phantomtype-gt-gt-struct-template-reference"], [423, "numeric-lt-t-phantomtype-gt-gt-struct-template-reference"]], "Numeric&lt; T, PhantomType, typename &gt; Class Template Reference": [[91, "numeric-lt-t-phantomtype-typename-gt-class-template-reference"]], "Observation Model Parameters": [[478, "observation-model-parameters"], [479, "observation-model-parameters"]], "OccupancyGrid Class Reference": [[491, "occupancygrid-class-reference"]], "OccupancyGrid2d": [[16, "occupancygrid2d"]], "OmnidirectionalDriveModel Class Reference": [[93, "omnidirectionaldrivemodel-class-reference"]], "OmnidirectionalDriveModelParam Struct Reference": [[335, "omnidirectionaldrivemodelparam-struct-reference"]], "Overview": [[11, "overview"], [446, "overview"], [477, "overview"], [535, "overview"]], "Parameters": [[478, "parameters"], [479, "parameters"]], "Particle": [[17, "particle"]], "Particle Filter Parameters": [[478, "particle-filter-parameters"], [479, "particle-filter-parameters"]], "Performance focused": [[3, "performance-focused"]], "Prerequisites": [[6, "prerequisites"]], "Primer on Particle Filtering with Beluga": [[540, "primer-on-particle-filtering-with-beluga"]], "Profiling Beluga": [[9, "profiling-beluga"]], "Published topics": [[478, "published-topics"], [479, "published-topics"]], "Quickstart": [[6, "quickstart"]], "ROS 2 Reference": [[479, "ros-2-reference"]], "ROS Reference": [[478, "ros-reference"]], "RandomStateDistribution": [[18, "randomstatedistribution"]], "Rationale": [[1, "rationale"]], "Ray2d&lt; OccupancyGrid, Algorithm &gt; Class Template Reference": [[95, "ray2d-lt-occupancygrid-algorithm-gt-class-template-reference"]], "RegularGrid": [[19, "regulargrid"]], "Related Pages": [[274, "related-pages"], [475, "related-pages"], [521, "related-pages"]], "Releases": [[538, "releases"]], "Run Beluga in simulation": [[6, "run-beluga-in-simulation"]], "Run Beluga on a robot": [[6, "run-beluga-on-a-robot"]], "Run Beluga over a recording": [[6, "run-beluga-over-a-recording"]], "SE2&lt; Scalar &gt; &gt; Struct Template Reference": [[390, "se2-lt-scalar-gt-gt-struct-template-reference"], [529, "se2-lt-scalar-gt-gt-struct-template-reference"]], "SE2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[376, "se2base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "SE2d, OccupancyGrid &gt; Class Template Reference": [[85, "se2d-occupancygrid-gt-class-template-reference"]], "SE2d, void &gt; Class Reference": [[109, "se2d-void-gt-class-reference"]], "SE3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[368, "se3base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "SO2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[367, "so2base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "SO3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[374, "so3base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "STL consistent": [[3, "stl-consistent"]], "STL-like abstractions": [[2, "stl-like-abstractions"]], "SensorModel": [[20, "sensormodel"]], "Sophus Namespace Reference": [[510, "sophus-namespace-reference"]], "SparseValueGrid&lt; MapType, NDim &gt; Class Template Reference": [[97, "sparsevaluegrid-lt-maptype-ndim-gt-class-template-reference"]], "Statically bound": [[3, "statically-bound"]], "StationaryModel Class Reference": [[99, "stationarymodel-class-reference"]], "Subscribed topics": [[478, "subscribed-topics"], [479, "subscribed-topics"]], "Subscribed transforms": [[478, "subscribed-transforms"], [479, "subscribed-transforms"]], "Support": [[11, "support"]], "ThrunRecoveryProbabilityEstimator Class Reference": [[101, "thrunrecoveryprobabilityestimator-class-reference"]], "TupleContainer&lt; InternalContainer, T &gt; Class Template Reference": [[103, "tuplecontainer-lt-internalcontainer-t-gt-class-template-reference"]], "TupleVector&lt; T &gt; Class Template Reference": [[106, "tuplevector-lt-t-gt-class-template-reference"]], "UX centered": [[3, "ux-centered"]], "Using Beluga AMCL on an AMR": [[10, "using-beluga-amcl-on-an-amr"]], "Using Beluga with Nav2": [[539, "using-beluga-with-nav2"]], "ValueGrid2&lt; T &gt; Class Template Reference": [[107, "valuegrid2-lt-t-gt-class-template-reference"]], "ValueTraits Struct Reference": [[526, "valuetraits-struct-reference"]], "Visualize Beluga output": [[6, "visualize-beluga-output"]], "_doxygen Directory Reference": [[147, "doxygen-directory-reference"], [460, "doxygen-directory-reference"], [494, "doxygen-directory-reference"]], "almost_equal_to&lt; T &gt; Struct Template Reference": [[528, "almost-equal-to-lt-t-gt-struct-template-reference"]], "as_common_tuple_indirect_fn Struct Reference": [[401, "as-common-tuple-indirect-fn-struct-reference"]], "assign_fn Struct Reference": [[337, "assign-fn-struct-reference"]], "beluga Namespace Reference": [[253, "beluga-namespace-reference"]], "beluga_amcl/AmclNodelet": [[478, "beluga-amcl-amclnodelet"]], "beluga_amcl::AmclNode": [[479, "beluga-amcl-amclnode"]], "beluga_ros Namespace Reference": [[511, "beluga-ros-namespace-reference"]], "common_tuple_type&lt; T, U, Is &gt; Struct Template Reference": [[351, "common-tuple-type-lt-t-u-is-gt-struct-template-reference"]], "decay_t&lt; TupleLike&lt; Args\u2026 &gt; &gt; &gt; &gt; &gt; Struct Template Reference": [[356, "decay-t-lt-tuplelike-lt-args-gt-gt-gt-gt-gt-struct-template-reference"]], "decay_tuple_like&lt; T, class &gt; Struct Template Reference": [[354, "decay-tuple-like-lt-t-class-gt-struct-template-reference"]], "every_n_fn Struct Reference": [[379, "every-n-fn-struct-reference"]], "every_n_policy Struct Reference": [[381, "every-n-policy-struct-reference"]], "has_common_tuple_type&lt; typename, typename, typename &gt; Struct Template Reference": [[361, "has-common-tuple-type-lt-typename-typename-typename-gt-struct-template-reference"]], "has_single_element&lt; T, TupleLike, class &gt; Struct Template Reference": [[363, "has-single-element-lt-t-tuplelike-class-gt-struct-template-reference"]], "index_sequence&lt; I\u2026 &gt; &gt; Struct Template Reference": [[352, "index-sequence-lt-i-gt-gt-struct-template-reference"]], "is_arithmetic_v&lt; T &gt;, void &gt; &gt; Class Template Reference": [[113, "is-arithmetic-v-lt-t-gt-void-gt-gt-class-template-reference"]], "is_arithmetic_v&lt; Types &gt; &amp;&amp;\u2026), void &gt; &gt; Class Template Reference": [[111, "is-arithmetic-v-lt-types-gt-amp-amp-void-gt-gt-class-template-reference"]], "is_tuple_like&lt; T &gt; Struct Template Reference": [[365, "is-tuple-like-lt-t-gt-struct-template-reference"]], "iterator Class Reference": [[62, "iterator-class-reference"]], "make_from_state_fn&lt; Particle, State &gt; Struct Template Reference": [[359, "make-from-state-fn-lt-particle-state-gt-struct-template-reference"]], "msg Namespace Reference": [[512, "msg-namespace-reference"]], "multivariate_distribution_traits&lt; T, Enable &gt; Struct Template Reference": [[366, "multivariate-distribution-traits-lt-t-enable-gt-struct-template-reference"]], "normalize_base_fn Struct Reference": [[339, "normalize-base-fn-struct-reference"]], "normalize_fn Struct Reference": [[341, "normalize-fn-struct-reference"]], "on_effective_size_drop_policy Struct Reference": [[383, "on-effective-size-drop-policy-struct-reference"]], "on_motion_fn Struct Reference": [[385, "on-motion-fn-struct-reference"]], "on_motion_policy&lt; Pose &gt; Struct Template Reference": [[387, "on-motion-policy-lt-pose-gt-struct-template-reference"]], "on_motion_policy_base&lt; Pose &gt; Struct Template Reference": [[389, "on-motion-policy-base-lt-pose-gt-struct-template-reference"]], "particle_traits&lt; T &gt; Struct Template Reference": [[377, "particle-traits-lt-t-gt-struct-template-reference"]], "policy&lt; PolicyFn &gt; Struct Template Reference": [[392, "policy-lt-policyfn-gt-struct-template-reference"]], "policy_base Struct Reference": [[394, "policy-base-struct-reference"]], "propagate_base_fn Struct Reference": [[343, "propagate-base-fn-struct-reference"]], "propagate_fn Struct Reference": [[345, "propagate-fn-struct-reference"]], "random_intersperse_fn Struct Reference": [[403, "random-intersperse-fn-struct-reference"]], "random_intersperse_view&lt; Range, Fn, URNG &gt; Struct Template Reference": [[405, "random-intersperse-view-lt-range-fn-urng-gt-struct-template-reference"]], "reweight_base_fn Struct Reference": [[347, "reweight-base-fn-struct-reference"]], "reweight_fn Struct Reference": [[349, "reweight-fn-struct-reference"]], "sample_base_fn Struct Reference": [[407, "sample-base-fn-struct-reference"]], "sample_fn Struct Reference": [[409, "sample-fn-struct-reference"]], "sample_view&lt; Range, Distribution, URNG &gt; Struct Template Reference": [[411, "sample-view-lt-range-distribution-urng-gt-struct-template-reference"]], "sentinel Struct Reference": [[319, "sentinel-struct-reference"]], "spatial_hash&lt; T, Enable &gt; Struct Template Reference": [[396, "spatial-hash-lt-t-enable-gt-struct-template-reference"]], "state_fn Struct Reference": [[397, "state-fn-struct-reference"]], "take_evenly_fn Struct Reference": [[413, "take-evenly-fn-struct-reference"]], "take_while_kld_fn Struct Reference": [[415, "take-while-kld-fn-struct-reference"]], "tf2 Namespace Reference": [[518, "tf2-namespace-reference"]], "tuple&lt; Types\u2026 &gt; &gt; Class Template Reference": [[104, "tuple-lt-types-gt-gt-class-template-reference"]], "tuple_index&lt; T, TupleLike, class &gt; Struct Template Reference": [[399, "tuple-index-lt-t-tuplelike-class-gt-struct-template-reference"]], "tuple_index_found&lt; T, Args\u2026 &gt;()&gt; &gt; Struct Template Reference": [[364, "tuple-index-found-lt-t-args-gt-gt-gt-struct-template-reference"], [400, "tuple-index-found-lt-t-args-gt-gt-gt-struct-template-reference"]], "void_t&lt; common_tuple_type_t&lt; T, U &gt; &gt; &gt; Struct Template Reference": [[362, "void-t-lt-common-tuple-type-t-lt-t-u-gt-gt-gt-struct-template-reference"]], "weight_fn Struct Reference": [[419, "weight-fn-struct-reference"]], "zip_fn Struct Reference": [[417, "zip-fn-struct-reference"]]}, "docnames": ["about/contact", "about/rationale", "concepts/architecture", "concepts/design-principles", "concepts/key-concepts", "getting-started/installation", "getting-started/quickstart", "guides/benchmarking-beluga", "guides/extending-beluga", "guides/profiling-beluga", "guides/using-beluga-amcl", "index", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/annotated", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/citelist", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1", "packages/beluga/docs/_doxygen/generated/reference/html/classes", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/files", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga/docs/_doxygen/generated/reference/html/index", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/inherits", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/pages", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source", "packages/beluga/docs/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source", "packages/beluga_amcl/docs/index", "packages/beluga_amcl/docs/ros-reference", "packages/beluga_amcl/docs/ros2-reference", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source", "packages/beluga_ros/docs/index", "resources/bibliography", "roadmap/features", "roadmap/releases", "tutorials/nav2-integration", "tutorials/particle-filtering"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["about/contact.md", "about/rationale.md", "concepts/architecture.md", "concepts/design-principles.md", "concepts/key-concepts.md", "getting-started/installation.md", "getting-started/quickstart.md", "guides/benchmarking-beluga.md", "guides/extending-beluga.md", "guides/profiling-beluga.md", "guides/using-beluga-amcl.md", "index.md", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z.rst", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source.rst", "packages/beluga/docs/index.md", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source.rst", "packages/beluga_amcl/docs/index.md", "packages/beluga_amcl/docs/ros-reference.md", "packages/beluga_amcl/docs/ros2-reference.md", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source.rst", "packages/beluga_ros/docs/index.md", "resources/bibliography.md", "roadmap/features.md", "roadmap/releases.md", "tutorials/nav2-integration.md", "tutorials/particle-filtering.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 4, 5, 15, 20, 26, 27, 36, 37, 41, 58, 60, 62, 64, 66, 72, 91, 93, 97, 99, 101, 104, 105, 115, 144, 168, 177, 180, 183, 195, 204, 219, 221, 224, 227, 228, 229, 236, 238, 253, 254, 260, 262, 263, 269, 292, 296, 301, 306, 331, 397, 419, 428, 436, 437, 443, 446, 464, 466, 468, 469, 471, 478, 479, 486, 498, 503, 505, 523, 536], "0": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 58, 64, 104, 111, 113, 117, 119, 121, 164, 165, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 313, 315, 317, 321, 325, 329, 331, 332, 333, 335, 337, 339, 341, 343, 345, 347, 349, 383, 397, 398, 403, 415, 419, 428, 429, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 479, 481, 485, 508, 509, 520, 523, 524, 526, 532, 534], "0003": 11, "001": [25, 313, 478, 481, 524], "01": [41, 121, 269, 321, 335, 486, 536], "02": 310, "05": [25, 31, 313, 315, 476, 478, 479, 481, 523, 524], "09023224677087": 253, "0f": 523, "0l": 263, "0u": 40, "0ul": 428, "0ull": 430, "0x00": [39, 40, 253], "0x01": [39, 40, 253], "0x02": [39, 40, 253], "0x04": [39, 40, 253], "0x9e3779b9": 263, "1": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "10": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 64, 104, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 479, 481, 485, 508, 509, 520, 523, 524, 532, 534, 536], "100": [29, 33, 37, 119, 121, 172, 236, 238, 242, 244, 248, 250, 252, 263, 265, 267, 273, 276, 283, 286, 290, 292, 296, 298, 306, 308, 329, 437, 450, 474, 476, 478, 479, 481, 509, 520, 526, 534], "101": [29, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 244, 248, 250, 252, 263, 265, 267, 269, 273, 276, 281, 283, 286, 290, 292, 294, 296, 306, 308, 435, 437, 448, 476, 481, 520, 534], "102": [25, 29, 33, 37, 121, 172, 231, 236, 238, 242, 244, 250, 252, 263, 265, 267, 269, 271, 276, 281, 283, 286, 290, 292, 294, 296, 298, 306, 428, 437, 448, 450, 474, 476, 481, 509, 520, 534], "103": [29, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 244, 248, 250, 252, 263, 265, 267, 269, 273, 276, 283, 286, 290, 292, 294, 296, 298, 306, 308, 428, 437, 450, 474, 476, 481, 520, 523, 534], "104": [31, 33, 37, 40, 121, 172, 231, 236, 238, 244, 248, 250, 252, 263, 265, 269, 276, 281, 283, 286, 290, 292, 296, 298, 306, 308, 428, 448, 474, 476, 520, 523, 534], "105": [25, 31, 33, 37, 121, 231, 236, 238, 242, 244, 248, 250, 252, 263, 265, 267, 269, 273, 276, 281, 283, 286, 290, 292, 294, 296, 298, 308, 428, 435, 437, 448, 450, 474, 476, 481, 520, 523, 534], "106": [25, 31, 33, 37, 40, 121, 172, 231, 236, 238, 242, 248, 250, 252, 269, 276, 283, 290, 292, 294, 296, 298, 428, 435, 448, 450, 476, 481, 520, 523, 534], "107": [25, 31, 33, 37, 121, 236, 238, 244, 248, 250, 252, 263, 265, 269, 276, 281, 283, 286, 290, 292, 294, 296, 298, 308, 435, 448, 474, 476, 520, 523, 534], "108": [25, 31, 33, 37, 119, 121, 231, 236, 238, 242, 248, 250, 252, 263, 265, 269, 273, 276, 281, 283, 286, 290, 292, 294, 298, 308, 435, 437, 448, 450, 474, 476, 481, 509, 520, 523, 534], "109": [25, 31, 33, 37, 40, 119, 121, 231, 236, 238, 250, 252, 263, 265, 269, 273, 276, 281, 283, 286, 290, 292, 294, 435, 437, 450, 476, 509, 520, 523, 534], "10u": 523, "11": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "110": [25, 31, 33, 37, 40, 119, 121, 231, 236, 238, 248, 250, 252, 263, 265, 269, 273, 276, 281, 283, 286, 290, 292, 294, 296, 298, 308, 435, 437, 448, 474, 476, 509, 520, 523, 534], "1109": 536, "111": [25, 31, 33, 37, 119, 121, 231, 236, 238, 244, 248, 250, 252, 263, 265, 267, 269, 273, 276, 281, 283, 286, 292, 298, 430, 435, 437, 448, 450, 474, 476, 509, 520, 523], "112": [25, 31, 33, 37, 40, 119, 121, 236, 238, 244, 248, 250, 252, 263, 265, 267, 269, 273, 281, 286, 290, 292, 298, 430, 435, 437, 448, 450, 476, 509, 523, 534], "113": [25, 31, 33, 37, 121, 231, 236, 238, 242, 244, 248, 250, 252, 263, 265, 269, 273, 276, 283, 286, 290, 292, 298, 430, 435, 437, 448, 474, 476, 509, 523], "114": [25, 31, 33, 119, 121, 231, 236, 238, 242, 244, 248, 250, 252, 263, 265, 267, 269, 273, 281, 283, 286, 292, 298, 308, 430, 435, 437, 448, 450, 474, 476, 509, 523], "11400714819323198485llu": 308, "115": [25, 31, 33, 37, 121, 231, 236, 238, 242, 244, 250, 252, 263, 265, 269, 273, 283, 290, 292, 296, 298, 308, 430, 435, 437, 450, 476, 481, 523], "116": [25, 31, 33, 37, 121, 231, 236, 238, 242, 244, 248, 250, 263, 269, 283, 286, 290, 292, 296, 298, 430, 435, 437, 448, 474, 476, 481, 509, 523], "117": [25, 31, 33, 37, 121, 231, 236, 238, 242, 244, 248, 250, 252, 263, 265, 269, 273, 283, 286, 290, 292, 296, 298, 308, 430, 435, 437, 450, 474, 476, 481, 523], "118": [25, 31, 33, 37, 119, 121, 231, 236, 238, 242, 244, 250, 252, 263, 265, 269, 281, 283, 286, 290, 292, 296, 298, 430, 435, 437, 476, 481, 523, 534], "119": [25, 31, 33, 37, 119, 121, 231, 236, 238, 242, 244, 248, 250, 252, 265, 267, 269, 276, 281, 283, 286, 290, 292, 296, 298, 430, 435, 437, 474, 476, 481, 523, 534], "12": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 451, 470, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "120": [25, 31, 33, 37, 121, 231, 236, 238, 242, 244, 248, 250, 263, 265, 267, 269, 276, 281, 283, 286, 290, 298, 430, 435, 437, 474, 476, 481, 523, 534], "121": [25, 31, 33, 119, 121, 231, 236, 238, 242, 244, 250, 252, 263, 265, 269, 273, 276, 281, 283, 286, 290, 308, 430, 435, 437, 476, 481, 509, 523, 534], "122": [25, 31, 33, 37, 40, 121, 231, 236, 238, 242, 244, 248, 250, 263, 267, 269, 273, 276, 281, 283, 286, 298, 308, 430, 437, 474, 476, 481, 509, 523, 534], "123": [25, 31, 33, 37, 40, 121, 172, 236, 238, 242, 244, 248, 250, 263, 265, 269, 273, 276, 281, 283, 286, 290, 308, 430, 435, 437, 463, 474, 476, 481, 482, 497, 509, 516, 523, 534], "12345": [26, 177, 228, 260, 504], "124": [25, 28, 30, 31, 32, 33, 36, 37, 39, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 118, 120, 121, 163, 165, 168, 171, 172, 173, 175, 230, 231, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 249, 250, 251, 253, 263, 264, 265, 266, 268, 269, 270, 272, 273, 275, 276, 277, 281, 282, 283, 285, 289, 291, 293, 295, 297, 298, 301, 305, 307, 308, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 352, 356, 357, 359, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 390, 392, 394, 397, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 424, 427, 429, 430, 434, 435, 436, 437, 440, 444, 448, 453, 455, 457, 473, 476, 480, 481, 487, 489, 491, 507, 509, 511, 519, 522, 524, 526, 529, 531, 533, 534], "125": [25, 31, 33, 37, 40, 121, 172, 231, 236, 238, 242, 244, 248, 250, 263, 265, 269, 273, 281, 290, 298, 308, 430, 435, 437, 448, 450, 474, 476, 481, 509, 523, 534], "126": [31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 244, 248, 250, 252, 263, 265, 269, 281, 283, 286, 290, 308, 430, 435, 437, 450, 474, 476, 481, 509, 534], "127": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 244, 250, 252, 263, 265, 269, 298, 308, 430, 435, 437, 448, 476, 481, 509, 534], "128": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 244, 248, 252, 263, 265, 267, 269, 281, 290, 298, 308, 430, 435, 437, 450, 474, 476, 481, 509, 534], "129": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 244, 248, 250, 263, 267, 269, 281, 283, 298, 430, 435, 437, 474, 476, 481, 509, 534], "13": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "130": [25, 31, 33, 37, 40, 121, 172, 236, 238, 242, 244, 252, 263, 265, 267, 269, 281, 283, 298, 308, 430, 435, 437, 476, 481, 509, 534], "131": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 244, 248, 263, 265, 267, 269, 281, 283, 286, 298, 308, 430, 437, 474, 476, 481, 509], "132": [25, 31, 33, 37, 40, 121, 172, 231, 236, 238, 242, 244, 248, 265, 269, 281, 283, 286, 298, 308, 430, 435, 437, 474, 476, 481, 523, 534], "133": [25, 31, 33, 37, 40, 121, 172, 231, 236, 238, 242, 244, 263, 267, 269, 281, 283, 286, 298, 430, 435, 437, 476, 481, 523], "134": [25, 31, 33, 37, 40, 121, 172, 231, 236, 238, 242, 248, 252, 263, 265, 269, 283, 286, 298, 308, 430, 435, 437, 448, 474, 476, 481, 523], "135": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 248, 252, 263, 265, 269, 283, 286, 298, 308, 430, 437, 448, 450, 474, 476, 523], "136": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 248, 250, 252, 263, 265, 269, 283, 298, 430, 435, 437, 450, 476, 481, 523], "137": [25, 31, 33, 37, 40, 121, 172, 231, 236, 238, 242, 248, 250, 252, 263, 265, 269, 283, 298, 308, 430, 435, 437, 448, 474, 476, 481, 523], "138": [25, 31, 33, 37, 40, 119, 121, 172, 236, 238, 242, 248, 250, 252, 263, 265, 267, 269, 283, 430, 435, 437, 448, 450, 474, 476, 534], "139": [31, 33, 37, 40, 121, 172, 231, 236, 238, 242, 248, 250, 263, 267, 269, 283, 290, 298, 435, 437, 450, 476, 481, 523, 534], "14": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "140": [25, 31, 33, 37, 40, 121, 172, 236, 238, 248, 250, 252, 263, 265, 267, 269, 283, 290, 430, 435, 437, 448, 474, 476, 481, 534], "141": [31, 33, 37, 40, 121, 172, 236, 238, 242, 248, 250, 263, 265, 267, 269, 290, 308, 435, 437, 448, 450, 474, 476, 481, 534], "142": [31, 33, 37, 40, 121, 172, 231, 236, 238, 248, 263, 265, 269, 283, 290, 308, 435, 437, 450, 476, 481, 534], "143": [31, 37, 40, 119, 121, 172, 231, 236, 238, 250, 263, 265, 267, 269, 290, 448, 474, 476, 481, 534], "144": [25, 31, 33, 37, 40, 119, 121, 172, 236, 238, 248, 250, 263, 265, 269, 290, 308, 435, 437, 448, 450, 474, 476, 481, 534], "145": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 248, 269, 283, 290, 435, 437, 476, 481, 534], "146": [25, 31, 33, 37, 40, 119, 121, 172, 236, 238, 242, 250, 263, 265, 269, 283, 290, 298, 435, 437, 448, 450, 474, 476, 481, 523, 534], "147": [25, 31, 33, 37, 40, 119, 121, 172, 236, 238, 242, 248, 250, 263, 265, 269, 283, 290, 298, 437, 474, 476, 481, 523], "148": [25, 31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 248, 263, 265, 267, 269, 283, 290, 298, 308, 430, 435, 437, 448, 450, 476, 523, 534], "149": [31, 33, 37, 40, 119, 121, 172, 231, 236, 238, 242, 250, 252, 265, 267, 269, 283, 290, 298, 308, 430, 435, 448, 474, 476, 481, 523], "14th": [41, 486, 536], "15": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "150": [25, 31, 33, 37, 40, 119, 121, 172, 238, 242, 248, 250, 252, 263, 265, 267, 269, 283, 290, 298, 308, 430, 435, 437, 450, 476, 523], "151": [25, 37, 40, 119, 121, 172, 231, 238, 242, 248, 252, 265, 267, 269, 283, 290, 298, 308, 430, 448, 476, 523], "152": [31, 33, 37, 40, 119, 121, 172, 238, 242, 250, 252, 263, 265, 267, 269, 283, 290, 298, 308, 430, 435, 448, 450, 476, 481, 523], "153": [25, 31, 33, 37, 119, 172, 238, 242, 248, 250, 252, 267, 269, 283, 290, 298, 308, 430, 435, 476, 481, 523], "154": [33, 37, 40, 119, 172, 231, 238, 242, 248, 252, 263, 267, 269, 283, 290, 298, 308, 430, 435, 448, 450, 476, 481, 523, 534], "155": [31, 37, 119, 172, 231, 238, 242, 250, 252, 265, 267, 269, 283, 290, 298, 308, 430, 450, 476, 481, 523, 534], "156": [31, 33, 37, 119, 172, 238, 242, 248, 250, 252, 263, 269, 283, 290, 298, 430, 435, 437, 448, 476, 523, 534], "157": [31, 33, 37, 119, 172, 231, 238, 242, 248, 252, 263, 267, 269, 283, 290, 298, 430, 435, 437, 450, 474, 476, 481, 523, 534], "158": [31, 33, 37, 119, 172, 242, 250, 252, 263, 269, 283, 290, 298, 430, 435, 437, 448, 474, 476, 481, 523, 534], "159": [31, 33, 37, 119, 172, 238, 242, 248, 250, 252, 263, 269, 283, 298, 308, 430, 435, 437, 448, 450, 476, 523, 534], "16": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "160": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534], "161": [31, 33, 37, 119, 172, 231, 238, 242, 248, 250, 252, 263, 269, 283, 290, 308, 435, 437, 450, 476, 481, 523, 534], "162": [31, 40, 172, 231, 238, 242, 248, 252, 263, 265, 267, 290, 298, 435, 448, 474, 476, 481, 523, 534], "163": [31, 33, 37, 40, 121, 172, 231, 238, 242, 248, 263, 265, 267, 269, 276, 278, 283, 286, 290, 298, 308, 310, 430, 450, 476, 481, 523, 534], "164": [31, 37, 40, 172, 238, 242, 248, 250, 252, 263, 265, 267, 283, 290, 298, 435, 448, 474, 476, 481, 523, 534], "165": [25, 40, 119, 172, 231, 238, 242, 250, 252, 265, 267, 283, 298, 435, 448, 450, 474, 476, 523, 534], "166": [25, 37, 40, 119, 172, 242, 248, 252, 263, 265, 267, 283, 290, 298, 435, 450, 476, 481, 523, 534], "167": [25, 37, 40, 119, 172, 238, 242, 248, 250, 252, 267, 298, 448, 474, 476, 523, 534], "168": [25, 40, 119, 172, 231, 238, 242, 248, 252, 283, 298, 308, 435, 437, 450, 476, 523, 534], "169": [25, 37, 40, 119, 172, 231, 238, 242, 248, 252, 267, 283, 308, 435, 437, 448, 474, 476, 523], "17": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534, 535], "170": [25, 37, 40, 119, 172, 231, 242, 248, 252, 267, 283, 298, 308, 430, 435, 437, 450, 474, 476, 523, 534], "171": [25, 37, 40, 119, 172, 231, 238, 242, 248, 263, 267, 283, 308, 430, 435, 437, 448, 476, 523], "172": [25, 37, 40, 119, 172, 238, 242, 248, 250, 263, 267, 283, 298, 308, 430, 435, 450, 474, 476, 523], "173": [25, 37, 172, 231, 238, 242, 248, 250, 263, 267, 283, 298, 308, 430, 435, 437, 448, 476, 523], "174": [25, 37, 40, 238, 242, 248, 267, 283, 298, 430, 450, 474, 476, 523], "175": [25, 172, 238, 242, 248, 250, 263, 267, 283, 290, 298, 308, 430, 435, 448, 474, 476, 523], "176": [25, 37, 40, 231, 238, 242, 248, 263, 267, 283, 290, 298, 430, 435, 437, 448, 450, 474, 476, 523, 534], "177": [25, 37, 231, 242, 248, 263, 283, 290, 298, 435, 437, 450, 476, 523, 534], "178": [25, 40, 242, 263, 267, 283, 290, 298, 437, 448, 474, 476, 481, 523, 534], "179": [25, 37, 40, 231, 242, 263, 267, 283, 290, 308, 435, 437, 450, 476, 481, 523, 534], "18": [22, 25, 29, 31, 33, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 290, 292, 294, 296, 298, 306, 308, 310, 312, 428, 430, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 508, 509, 520, 523, 532, 534], "180": [25, 37, 242, 267, 283, 290, 298, 308, 435, 448, 474, 476, 481, 523, 524, 534], "181": [25, 40, 242, 250, 263, 267, 283, 290, 298, 308, 437, 450, 476, 481, 523, 534], "182": [25, 37, 231, 242, 250, 263, 267, 283, 290, 298, 435, 437, 448, 474, 476, 481, 523, 534], "183": [25, 37, 40, 231, 242, 250, 263, 267, 283, 290, 298, 308, 435, 437, 450, 476, 481, 523, 534], "184": [25, 37, 242, 263, 267, 283, 290, 298, 308, 435, 437, 448, 450, 474, 476, 481, 523, 534], "185": [25, 37, 40, 231, 242, 250, 267, 283, 290, 298, 448, 476, 481, 523], "186": [25, 37, 40, 242, 263, 267, 283, 290, 298, 308, 435, 437, 448, 450, 474, 476, 481, 523, 534], "187": [25, 37, 172, 242, 267, 276, 283, 298, 435, 437, 448, 450, 474, 476, 481, 523], "188": [25, 37, 40, 172, 231, 242, 263, 267, 283, 298, 435, 448, 476, 481, 523], "189": [25, 37, 172, 231, 250, 283, 298, 435, 437, 448, 450, 474, 476, 481, 523], "19": [22, 25, 29, 31, 33, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 290, 292, 294, 296, 298, 306, 308, 310, 312, 428, 430, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 508, 509, 520, 523, 532, 534], "190": [25, 37, 40, 172, 231, 250, 263, 283, 290, 298, 308, 435, 437, 476, 481, 523], "191": [25, 37, 172, 231, 250, 283, 290, 298, 308, 435, 450, 474, 476, 481, 523], "192": [25, 37, 40, 172, 250, 263, 283, 290, 298, 308, 437, 476, 481, 523, 534], "193": [25, 37, 40, 172, 231, 263, 283, 290, 298, 308, 437, 450, 474, 476, 481, 523, 534], "194": [25, 37, 172, 231, 250, 283, 290, 298, 308, 450, 476, 481, 523, 534], "195": [25, 37, 40, 172, 231, 263, 283, 308, 437, 474, 476, 481, 523, 534], "196": [25, 37, 172, 231, 298, 308, 437, 450, 474, 476, 481, 523, 534], "197": [25, 37, 40, 172, 231, 283, 298, 308, 437, 474, 476, 481, 523, 534], "198": [25, 37, 172, 231, 250, 298, 308, 437, 450, 474, 476, 481, 523, 534], "199": [25, 37, 40, 172, 231, 250, 283, 298, 308, 437, 474, 476, 481, 523, 534], "1990": 1, "1_55_0": 357, "1e": [263, 523], "1ul": [25, 313, 428, 481, 524], "2": [4, 5, 6, 11, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 44, 50, 54, 64, 66, 78, 80, 83, 89, 95, 109, 117, 119, 121, 159, 164, 166, 167, 169, 170, 172, 174, 176, 177, 178, 228, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 251, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 293, 294, 296, 298, 300, 302, 303, 304, 305, 306, 308, 310, 312, 313, 315, 321, 329, 333, 337, 339, 397, 403, 413, 415, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 446, 447, 448, 450, 451, 453, 457, 462, 463, 470, 471, 473, 474, 476, 477, 478, 481, 482, 485, 486, 487, 504, 505, 508, 509, 511, 512, 516, 518, 520, 522, 523, 524, 529, 531, 532, 534, 535], "20": [22, 25, 29, 31, 33, 37, 38, 40, 117, 119, 121, 144, 164, 166, 167, 168, 169, 170, 172, 177, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 290, 292, 294, 296, 298, 306, 308, 310, 312, 428, 430, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 474, 476, 481, 508, 509, 520, 523, 532, 534], "200": [25, 37, 40, 172, 231, 250, 298, 308, 437, 450, 474, 476, 481, 523, 534], "2000": [11, 476, 479], "2000ul": [25, 313, 481, 524], "2001": [41, 486, 536], "2005": [41, 486, 536], "2006": 536, "2007": [41, 486, 536], "201": [25, 37, 172, 231, 250, 263, 298, 308, 437, 476, 481, 523, 534], "2015": 41, "2019": 38, "202": [25, 37, 40, 172, 231, 263, 283, 298, 437, 450, 476, 481, 523, 534], "2022": [24, 35, 121, 164, 169, 172, 176, 242, 246, 276, 300, 308, 310, 437, 439, 443, 448, 474, 520, 534], "2023": [31, 33, 37, 119, 121, 164, 169, 172, 176, 178, 234, 236, 238, 240, 242, 244, 246, 250, 267, 269, 278, 283, 288, 292, 294, 300, 302, 308, 310, 312, 428, 430, 435, 439, 441, 450, 508, 509, 520, 534], "2024": [22, 24, 25, 29, 35, 40, 117, 166, 167, 170, 174, 178, 231, 248, 250, 252, 262, 263, 265, 271, 273, 276, 280, 281, 283, 284, 286, 290, 296, 298, 302, 304, 306, 430, 432, 433, 435, 437, 443, 445, 448, 450, 474, 476, 481, 485, 523, 532], "203": [37, 172, 250, 263, 298, 437, 476, 481, 523, 534], "204": [25, 37, 172, 263, 283, 298, 437, 450, 476, 481, 523, 534], "205": [25, 37, 172, 263, 283, 298, 437, 450, 476, 481, 523, 534], "206": [25, 172, 283, 298, 437, 450, 476, 481, 523, 534], "207": [37, 172, 250, 263, 283, 298, 437, 450, 476, 481, 523], "208": [25, 37, 40, 172, 250, 283, 298, 437, 450, 476, 481, 523, 534], "209": [25, 40, 172, 250, 283, 298, 437, 450, 476, 481, 523], "21": [22, 25, 29, 31, 33, 37, 38, 40, 119, 121, 164, 166, 167, 169, 170, 172, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 276, 280, 281, 283, 284, 286, 290, 292, 294, 296, 298, 306, 308, 310, 428, 430, 433, 435, 437, 441, 443, 445, 448, 450, 474, 476, 481, 508, 509, 520, 523, 532, 534], "210": [25, 37, 40, 172, 250, 283, 437, 476, 481, 523], "211": [25, 40, 172, 250, 283, 298, 437, 476, 481, 523], "212": [25, 40, 172, 250, 263, 283, 298, 437, 476, 481, 523], "213": [25, 40, 172, 250, 263, 283, 298, 437, 476, 481, 523, 534], "214": [25, 40, 172, 263, 283, 298, 476, 481, 523, 534], "215": [25, 37, 40, 172, 250, 263, 283, 298, 437, 476, 481, 523, 534], "216": [25, 37, 40, 167, 250, 263, 298, 437, 476, 481, 523, 534], "217": [25, 37, 40, 172, 263, 283, 298, 437, 476, 481, 523, 534], "218": [25, 40, 263, 283, 298, 476, 481, 523, 534], "219": [25, 37, 40, 250, 263, 283, 298, 437, 476, 481, 523, 534], "22": [22, 25, 29, 31, 33, 37, 38, 40, 119, 121, 164, 166, 172, 234, 236, 238, 240, 242, 244, 248, 250, 252, 262, 263, 265, 267, 269, 271, 280, 283, 284, 286, 290, 292, 294, 296, 298, 306, 308, 310, 428, 430, 433, 437, 441, 443, 448, 450, 474, 476, 481, 508, 509, 520, 523, 532, 534], "220": [25, 37, 40, 250, 263, 283, 476, 481, 523, 534], "221": [25, 40, 250, 283, 476, 481, 523, 534], "222": [25, 37, 40, 250, 283, 298, 437, 476, 481, 523, 534], "223": [25, 37, 40, 250, 263, 283, 437, 476, 481, 523, 534], "224": [25, 37, 250, 263, 283, 476, 481, 523, 534], "225": [25, 37, 40, 250, 263, 283, 437, 476, 481, 523, 534], "226": [25, 37, 263, 283, 437, 476, 481, 523, 534], "227": [25, 37, 250, 263, 283, 437, 476, 481, 523, 534], "228": [25, 37, 250, 263, 283, 476, 481, 523], "229": [25, 37, 263, 437, 476, 523, 534], "23": [24, 25, 31, 33, 37, 38, 40, 41, 119, 121, 164, 167, 170, 172, 176, 234, 236, 238, 240, 242, 244, 252, 253, 262, 263, 265, 267, 269, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 304, 306, 308, 310, 351, 428, 430, 432, 433, 437, 441, 443, 448, 450, 474, 476, 481, 486, 508, 509, 520, 523, 532, 534, 536], "230": [25, 37, 250, 263, 283, 437, 476, 481, 523], "231": [25, 37, 40, 250, 263, 437, 476, 481, 523], "232": [25, 40, 263, 437, 476, 481, 523], "233": [25, 37, 40, 250, 263, 283, 437, 476, 481, 523], "234": [25, 37, 40, 172, 263, 283, 437, 476, 481, 523, 534], "235": [25, 40, 172, 263, 283, 476, 481, 523, 534], "236": [25, 37, 40, 172, 263, 283, 476, 481, 523, 534], "237": [25, 37, 40, 172, 263, 283, 476, 481, 523, 534], "238": [40, 172, 250, 263, 283, 476, 481, 523, 534], "239": [37, 40, 172, 250, 263, 283, 476, 481, 523, 534], "24": [24, 25, 31, 33, 37, 38, 40, 119, 121, 164, 167, 170, 172, 176, 234, 236, 238, 240, 242, 244, 252, 262, 263, 265, 267, 269, 281, 283, 286, 288, 290, 292, 294, 296, 298, 304, 308, 310, 430, 432, 433, 437, 443, 448, 450, 474, 476, 481, 508, 509, 520, 523, 532, 534], "240": [37, 40, 172, 263, 283, 298, 476, 481, 523, 534], "241": [40, 172, 250, 263, 283, 298, 476, 481, 523, 534], "242": [37, 40, 172, 283, 298, 476, 481, 523, 534], "243": [37, 40, 172, 283, 298, 476, 481, 523, 534], "244": [40, 172, 283, 298, 476, 481, 523, 534], "245": [37, 40, 172, 476, 481, 523, 534], "246": [37, 40, 283, 476, 481, 523, 534], "247": [250, 283, 476, 481, 523, 534], "248": [37, 40, 250, 283, 476, 481, 523, 534], "249": [37, 250, 283, 476, 481, 523, 534], "25": [24, 25, 31, 33, 37, 38, 40, 119, 121, 167, 170, 172, 174, 236, 238, 240, 242, 244, 252, 262, 263, 265, 267, 269, 281, 284, 286, 288, 290, 292, 294, 296, 298, 304, 308, 310, 312, 313, 430, 432, 433, 437, 443, 448, 450, 474, 476, 479, 481, 508, 509, 520, 523, 524, 532, 534], "250": [250, 283, 476, 481, 523], "251": [37, 250, 283, 476, 481, 523, 534], "252": [263, 283, 476, 481, 523, 534], "253": [40, 250, 263, 283, 476, 481, 523], "254": [40, 263, 283, 476, 523, 534], "255": [40, 263, 283, 476, 523, 534], "256": [40, 263, 283, 476, 523, 534], "257": [37, 40, 263, 283, 476, 523, 534], "258": [37, 263, 283, 476, 523, 534], "259": [37, 40, 263, 283, 476, 523], "26": [24, 25, 31, 33, 38, 40, 117, 121, 167, 170, 172, 174, 176, 236, 238, 240, 242, 252, 262, 263, 265, 267, 269, 273, 278, 281, 286, 290, 292, 294, 296, 298, 302, 304, 308, 310, 312, 432, 433, 437, 439, 448, 450, 474, 476, 481, 509, 520, 523, 532, 534], "260": [37, 250, 263, 283, 476, 523, 534], "261": [37, 250, 263, 283, 476, 523, 534], "262": [37, 250, 263, 283, 476, 523, 534], "263": [37, 250, 263, 476, 534], "264": [37, 40, 166, 172, 250, 263, 276, 278, 283, 476, 523, 534], "265": [37, 40, 263, 283, 476], "2654435769u": 308, "266": [37, 40, 250, 263, 283, 476, 534], "267": [37, 40, 263, 283, 476, 534], "268": [37, 40, 263, 283, 476, 534], "269": [263, 476, 523, 534], "27": [24, 25, 31, 33, 38, 121, 167, 169, 170, 172, 174, 176, 231, 236, 238, 240, 242, 262, 263, 265, 267, 269, 273, 276, 278, 281, 286, 292, 296, 302, 304, 308, 310, 433, 435, 437, 445, 448, 450, 474, 476, 481, 509, 520, 523, 532, 534], "270": [40, 263, 476, 523, 534], "271": [263, 476, 523], "272": [263, 476, 523, 534], "273": [40, 250, 263, 476, 523, 534], "274": [40, 250, 263, 476, 523, 534], "275": [40, 250, 263, 476, 523, 534], "276": [40, 250, 263, 476, 523, 534], "277": [40, 263, 476, 523], "278": [40, 41, 250, 263, 476, 523, 534], "279": [40, 263, 476, 523, 534], "28": [22, 24, 25, 29, 31, 33, 35, 37, 40, 119, 121, 164, 166, 167, 169, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 248, 250, 252, 262, 263, 267, 269, 271, 273, 276, 280, 281, 283, 286, 292, 294, 302, 304, 306, 308, 310, 312, 430, 433, 435, 437, 441, 445, 448, 450, 474, 476, 485, 509, 520, 523, 532, 534], "280": [263, 476, 523, 534], "281": [40, 263, 476, 523, 534], "28155156327703": 253, "282": [263, 476, 523, 534], "283": [263, 476, 523], "284": [40, 263, 476, 534], "285": [40, 250, 263, 476, 534], "286": [40, 250, 263, 476, 534], "287": [40, 250, 263, 476, 534], "288": [40, 41, 250, 263, 476, 534], "289": [40, 250, 263, 476, 534], "29": [24, 25, 29, 31, 33, 35, 38, 166, 172, 176, 236, 238, 242, 248, 250, 262, 263, 267, 271, 273, 281, 284, 292, 302, 304, 306, 428, 435, 441, 445, 448, 450, 474, 476, 485, 509, 520, 523, 532, 534], "290": [40, 250, 263, 476, 534], "291": [40, 250, 263, 476, 534], "292": [263, 476], "293": [40, 250, 263, 476], "294": [250, 263, 476], "295": [250, 263, 476], "296": [40, 250, 263, 476], "297": [40, 250, 263, 476], "298": [40, 250, 263, 476], "2980539": 536, "2980632": 536, "299": [40, 250, 263, 476], "2d": [6, 11, 26, 31, 32, 33, 36, 37, 44, 46, 48, 50, 54, 56, 58, 60, 62, 66, 74, 76, 83, 85, 89, 93, 95, 99, 107, 118, 119, 172, 228, 229, 237, 238, 239, 240, 242, 243, 244, 251, 252, 253, 260, 262, 263, 266, 267, 291, 292, 293, 305, 325, 440, 441, 447, 449, 453, 455, 457, 462, 463, 471, 473, 477, 478, 479, 480, 481, 482, 487, 489, 491, 495, 497, 504, 505, 507, 508, 509, 511, 516, 518, 519, 520], "2u": 430, "2x2": 172, "3": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 50, 64, 78, 87, 101, 117, 119, 121, 159, 164, 166, 167, 169, 170, 172, 174, 176, 177, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 251, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 293, 294, 296, 298, 300, 302, 303, 304, 305, 306, 308, 310, 312, 313, 329, 337, 374, 376, 428, 429, 430, 432, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 474, 476, 481, 485, 486, 508, 509, 511, 518, 520, 523, 524, 532, 534], "30": [24, 25, 31, 33, 35, 38, 164, 174, 231, 234, 236, 238, 242, 262, 263, 271, 276, 278, 281, 283, 284, 298, 302, 304, 306, 428, 435, 441, 445, 448, 450, 474, 476, 485, 509, 520, 523, 532, 534], "300": [40, 263, 476], "301": [40, 263, 476], "302": [40, 263, 476], "303": [40, 263, 476], "304": [263, 476], "305": [40, 263, 476], "306": 476, "307": 476, "308": [40, 476], "309": [40, 476], "31": [24, 25, 29, 33, 35, 37, 38, 119, 164, 166, 169, 234, 238, 242, 244, 248, 250, 262, 263, 271, 273, 276, 278, 281, 283, 284, 302, 428, 430, 443, 448, 450, 474, 476, 485, 508, 509, 520, 523, 532, 534], "310": [40, 476], "311": [40, 476], "312": [40, 476], "313": [40, 476], "314": [40, 476], "315": [40, 476], "316": 476, "317": [40, 476], "318": 476, "319": 476, "32": [29, 33, 35, 37, 38, 40, 41, 119, 176, 178, 234, 236, 238, 244, 248, 250, 252, 262, 263, 281, 290, 294, 298, 302, 304, 306, 308, 428, 430, 435, 441, 445, 448, 450, 474, 476, 485, 508, 509, 520, 523, 534], "320": [40, 476], "321": [40, 476], "322": [40, 476], "323": [40, 476], "324": [40, 476], "325": [40, 476], "326": [40, 476], "32634787735669": 253, "327": 476, "328": [40, 476], "329": 476, "33": [25, 29, 33, 35, 38, 40, 121, 164, 174, 176, 178, 234, 236, 240, 248, 250, 252, 262, 263, 265, 269, 271, 276, 281, 290, 294, 296, 298, 302, 308, 310, 430, 435, 437, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 534], "330": 476, "331": [40, 476], "332": [40, 476], "333": [40, 476], "334": [40, 476], "335": [40, 476], "336": [40, 476], "337": [40, 476], "338": 476, "339": [40, 476], "34": [29, 35, 37, 38, 41, 121, 174, 178, 234, 236, 240, 250, 263, 265, 269, 273, 278, 281, 286, 290, 296, 298, 302, 308, 310, 428, 430, 435, 437, 445, 448, 450, 474, 476, 481, 485, 486, 508, 509, 520, 523, 534, 536], "340": 476, "341": 476, "342": [40, 476], "343": [40, 476], "344": [40, 476], "345": [40, 476], "346": [40, 476], "347": [40, 476], "348": [40, 476], "349": [40, 476], "35": [25, 29, 35, 37, 38, 40, 169, 176, 178, 234, 248, 250, 252, 262, 263, 265, 267, 271, 273, 276, 278, 281, 286, 290, 292, 296, 298, 302, 308, 433, 435, 441, 445, 448, 450, 474, 485, 508, 509, 520, 523, 534], "350": 476, "351": [40, 476], "352": 476, "353": 476, "354": [40, 476], "355": [40, 476], "356": [40, 476], "357": [40, 476], "358": [40, 476], "359": [40, 476], "36": [29, 31, 35, 38, 40, 121, 169, 172, 174, 176, 178, 234, 236, 248, 250, 262, 263, 265, 267, 269, 271, 273, 276, 278, 281, 286, 292, 296, 302, 308, 310, 428, 430, 435, 437, 441, 445, 448, 450, 474, 476, 481, 509, 518, 520, 523, 533, 534], "360": [40, 476], "361": [40, 476], "362": [40, 476], "363": [40, 476], "364": [40, 476], "365": 476, "366": [40, 476], "367": 476, "368": 476, "369": 476, "37": [25, 29, 31, 35, 37, 38, 40, 169, 172, 178, 231, 234, 236, 242, 248, 250, 262, 263, 276, 278, 286, 290, 298, 302, 312, 430, 435, 437, 441, 445, 448, 450, 474, 508, 509, 520, 523], "370": 476, "371": 476, "372": [40, 476], "373": [40, 476], "374": [40, 476], "375": [40, 476], "376": [40, 476], "377": [40, 476], "378": [40, 476], "379": [40, 476], "38": [25, 29, 35, 37, 38, 40, 169, 176, 178, 231, 238, 242, 248, 250, 263, 265, 269, 271, 273, 278, 281, 283, 292, 296, 308, 312, 430, 433, 435, 437, 445, 448, 450, 474, 476, 481, 508, 509, 520, 523, 532, 534], "380": 476, "381": [40, 476], "382": 476, "383": 476, "384": [40, 476], "385": [40, 476], "386": 476, "387": [40, 476], "388": 476, "389": 476, "39": [25, 29, 31, 33, 35, 37, 38, 40, 121, 169, 172, 174, 178, 231, 234, 236, 238, 248, 252, 262, 263, 269, 276, 281, 286, 292, 302, 304, 312, 430, 433, 437, 441, 445, 448, 450, 474, 481, 509, 532], "390": 476, "391": 476, "392": [40, 476], "393": [40, 476], "394": [40, 476], "395": [40, 476], "396": [40, 476], "397": [40, 476], "398": [40, 476], "399": [40, 476], "3d": [26, 32, 33, 56, 72, 74, 87, 89, 228, 229, 235, 236, 237, 238, 248, 251, 252, 253, 260, 262, 263, 293, 305, 325, 489, 518], "3x3": [253, 518, 533, 534], "4": [12, 14, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 44, 48, 50, 66, 76, 78, 107, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 321, 329, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 511, 518, 520, 523, 532, 534], "40": [29, 33, 38, 169, 174, 178, 234, 236, 242, 248, 250, 252, 263, 265, 276, 281, 296, 304, 430, 435, 437, 450, 474, 476, 509], "400": [40, 476], "401": [40, 476], "402": [40, 476], "403": 476, "404": [40, 476], "405": 476, "406": 476, "407": 476, "408": [40, 476], "409": [40, 476], "41": [25, 29, 37, 38, 40, 121, 169, 176, 178, 231, 234, 238, 248, 250, 252, 262, 263, 273, 276, 286, 304, 310, 312, 430, 433, 435, 445, 450, 474, 481, 509, 532], "410": 476, "411": [40, 476], "415": 40, "416": 40, "418": 40, "419": 40, "42": [29, 31, 33, 37, 38, 174, 176, 178, 231, 234, 236, 248, 269, 271, 273, 281, 304, 310, 435, 445, 450, 474, 476, 481, 509], "421": 40, "422": 40, "424": 40, "425": [40, 41], "427": 40, "428": 40, "43": [25, 29, 33, 38, 40, 176, 178, 234, 242, 248, 250, 252, 262, 273, 276, 281, 292, 304, 312, 445, 450, 474, 509, 534], "430": 40, "436": 40, "437": 40, "438": 40, "439": 40, "44": [31, 33, 37, 38, 40, 176, 178, 231, 236, 238, 250, 252, 269, 271, 276, 290, 292, 302, 304, 308, 310, 435, 441, 445, 450, 474, 476, 481, 509, 520, 523, 534], "440": 40, "441": 40, "442": 40, "443": 40, "444": 40, "445": 40, "446": 40, "447": 40, "448": 40, "449": 40, "45": [25, 29, 33, 38, 121, 166, 176, 178, 234, 236, 238, 242, 248, 252, 262, 263, 271, 273, 276, 281, 290, 292, 302, 304, 306, 308, 428, 433, 441, 445, 448, 450, 474, 476, 481, 509, 520, 523, 532], "450": 40, "451": 40, "452": 40, "453": 40, "454": 40, "456": 40, "46": [29, 31, 33, 38, 40, 41, 166, 176, 178, 231, 234, 238, 248, 250, 262, 263, 271, 290, 298, 302, 304, 306, 308, 310, 312, 428, 433, 441, 445, 448, 450, 474, 486, 509, 523, 532, 534, 536], "460": 40, "461": 40, "462": 40, "463": 40, "464": 40, "465": 40, "466": 40, "468": 40, "47": [25, 29, 38, 40, 121, 166, 174, 176, 178, 234, 238, 250, 252, 265, 271, 276, 281, 290, 292, 298, 302, 304, 306, 308, 310, 428, 433, 441, 474, 476, 481, 509, 520, 523, 532], "472": 40, "473": 40, "474": 40, "475": 40, "476": 40, "477": 40, "478": 40, "479": 40, "48": [31, 33, 38, 40, 166, 174, 176, 178, 231, 234, 238, 248, 263, 265, 269, 271, 276, 281, 290, 298, 302, 304, 308, 312, 428, 433, 435, 441, 445, 448, 474, 476, 520, 532], "480": 40, "481": 40, "483": 40, "486": 40, "487": 40, "488": 40, "489": 40, "49": [25, 29, 38, 40, 166, 174, 176, 178, 234, 236, 242, 248, 250, 262, 263, 265, 271, 273, 276, 281, 283, 290, 302, 304, 306, 308, 310, 428, 433, 435, 437, 448, 474, 476, 508, 509, 523, 532], "490": 40, "492": 40, "495": 40, "496": 40, "497": 40, "498": 40, "499": 40, "4b": 11, "4d": 172, "5": [6, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 54, 66, 74, 76, 78, 101, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 315, 321, 325, 329, 383, 403, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 479, 481, 485, 508, 509, 518, 520, 523, 524, 532, 534], "50": [31, 37, 38, 40, 166, 174, 176, 178, 231, 234, 236, 238, 240, 250, 252, 262, 263, 265, 269, 271, 273, 276, 281, 290, 298, 302, 304, 308, 312, 428, 433, 435, 437, 441, 448, 474, 476, 508, 509, 520, 532], "500": [476, 479], "5000": 478, "500ul": [25, 313, 481, 524], "501": 40, "504": 40, "505": 40, "506": 40, "507": 40, "508": 40, "51": [25, 29, 37, 38, 40, 121, 166, 172, 174, 176, 178, 231, 234, 236, 242, 248, 252, 262, 263, 265, 273, 276, 281, 286, 290, 292, 296, 298, 304, 306, 308, 312, 428, 437, 441, 445, 448, 474, 476, 481, 508, 509, 532], "510": 40, "513": 40, "514": 40, "515": 40, "516": 40, "517": 40, "519": 40, "52": [29, 31, 37, 38, 166, 172, 174, 176, 178, 234, 248, 250, 252, 262, 263, 265, 271, 276, 286, 290, 292, 296, 302, 304, 308, 312, 428, 433, 435, 445, 450, 474, 476, 481, 508, 509, 523, 532], "522": 40, "523": [37, 40], "523598": 478, "524": 40, "525": 40, "526": 40, "527": 40, "528": 40, "529": 40, "53": [25, 29, 38, 40, 121, 164, 166, 172, 174, 176, 231, 242, 262, 263, 265, 271, 273, 276, 281, 286, 290, 292, 296, 298, 304, 306, 308, 312, 428, 435, 437, 441, 445, 448, 450, 474, 476, 508, 509, 520, 523, 532], "530": 40, "532": 40, "533": 40, "534": 40, "536": 40, "537": 40, "538": 40, "539": 40, "54": [25, 29, 31, 37, 38, 40, 164, 166, 172, 174, 231, 236, 242, 248, 252, 262, 263, 265, 271, 276, 281, 286, 296, 308, 312, 428, 435, 437, 441, 445, 448, 476, 481, 508, 509, 523, 532], "540": 40, "541": 40, "542": 40, "543": 40, "55": [25, 29, 37, 38, 40, 164, 166, 172, 174, 236, 242, 244, 248, 262, 263, 265, 269, 271, 276, 281, 286, 290, 292, 296, 304, 306, 308, 312, 428, 445, 448, 450, 476, 481, 508, 509, 520, 523, 532, 534], "5555": 536, "56": [25, 29, 31, 38, 40, 164, 166, 172, 174, 231, 263, 265, 271, 276, 281, 283, 286, 290, 296, 306, 308, 310, 312, 428, 433, 435, 437, 441, 445, 448, 450, 476, 508, 509, 523, 534], "57": [25, 29, 31, 37, 38, 40, 121, 164, 166, 172, 231, 242, 248, 250, 262, 263, 265, 269, 271, 276, 281, 283, 286, 294, 296, 302, 306, 308, 310, 312, 428, 433, 437, 441, 445, 450, 476, 481, 508, 509, 520, 523, 534], "58": [29, 31, 38, 40, 164, 166, 172, 174, 231, 240, 248, 250, 262, 265, 271, 276, 281, 286, 290, 296, 298, 302, 308, 310, 312, 428, 433, 448, 450, 476, 481, 508, 509, 523, 534], "59": [29, 33, 37, 38, 121, 164, 166, 172, 240, 250, 252, 262, 263, 265, 276, 281, 283, 286, 296, 298, 302, 306, 308, 310, 312, 428, 433, 437, 441, 445, 448, 450, 474, 476, 508, 509, 520, 523, 534], "6": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 54, 74, 76, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 315, 321, 325, 329, 368, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 481, 485, 508, 509, 520, 523, 532, 534], "60": [29, 31, 33, 37, 38, 40, 164, 166, 172, 174, 231, 236, 238, 240, 242, 248, 252, 262, 263, 265, 271, 276, 281, 283, 286, 296, 298, 302, 304, 308, 310, 315, 428, 433, 435, 437, 441, 450, 474, 476, 478, 479, 508, 509, 520, 523, 534], "61": [29, 33, 38, 164, 172, 174, 231, 236, 242, 248, 250, 252, 262, 263, 265, 269, 273, 276, 281, 283, 286, 296, 298, 302, 304, 308, 310, 312, 428, 435, 445, 448, 476, 481, 508, 509, 523, 534], "62": [29, 37, 38, 164, 166, 172, 174, 231, 236, 238, 240, 242, 248, 252, 263, 265, 273, 276, 283, 286, 292, 296, 298, 300, 302, 304, 308, 310, 428, 433, 435, 437, 441, 445, 448, 450, 474, 476, 481, 508, 509, 520, 523, 534], "63": [29, 33, 37, 38, 121, 164, 166, 172, 174, 236, 238, 240, 244, 252, 262, 263, 265, 269, 273, 276, 281, 286, 292, 296, 298, 300, 302, 304, 306, 308, 310, 428, 435, 437, 441, 445, 450, 474, 476, 509, 520, 523, 534], "64": [25, 29, 37, 38, 121, 164, 166, 172, 174, 231, 236, 238, 240, 242, 244, 248, 252, 262, 263, 265, 267, 271, 273, 276, 281, 283, 286, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 428, 435, 441, 445, 448, 474, 476, 508, 509, 523, 534], "64485362793663": 253, "65": [29, 33, 38, 119, 164, 166, 172, 231, 236, 240, 244, 248, 252, 262, 263, 265, 271, 273, 276, 281, 283, 286, 290, 292, 294, 296, 298, 300, 306, 308, 310, 312, 428, 435, 437, 441, 445, 448, 450, 476, 481, 508, 509, 520, 523, 534], "66": [37, 38, 121, 164, 166, 172, 174, 231, 236, 238, 240, 246, 252, 262, 263, 265, 271, 273, 276, 281, 283, 286, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 433, 435, 441, 445, 450, 474, 476, 481, 509, 520, 523, 534], "67": [29, 33, 37, 38, 121, 164, 166, 172, 231, 236, 240, 244, 248, 250, 252, 262, 263, 265, 271, 273, 276, 281, 283, 286, 290, 292, 296, 298, 300, 308, 310, 312, 428, 433, 435, 441, 445, 448, 474, 476, 508, 509, 534], "68": [38, 121, 164, 166, 172, 231, 236, 238, 240, 244, 248, 250, 252, 262, 263, 265, 269, 271, 273, 276, 283, 286, 290, 292, 294, 296, 298, 300, 306, 308, 310, 428, 433, 441, 445, 448, 450, 474, 476, 508, 509, 520, 523], "69": [33, 37, 38, 164, 166, 172, 231, 236, 240, 244, 250, 252, 262, 263, 265, 269, 273, 276, 281, 283, 286, 290, 292, 296, 298, 306, 308, 312, 428, 433, 435, 441, 450, 476, 508, 509, 520, 523, 534], "6x6": [518, 533, 534], "7": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "70": [25, 37, 38, 41, 121, 164, 172, 174, 236, 238, 244, 248, 252, 263, 265, 273, 276, 281, 283, 286, 290, 292, 296, 298, 308, 428, 433, 435, 437, 441, 445, 448, 474, 476, 481, 508, 509, 520, 523], "71": [33, 38, 164, 172, 174, 231, 236, 240, 244, 248, 250, 252, 262, 263, 265, 269, 273, 276, 281, 283, 286, 290, 292, 298, 302, 304, 306, 308, 428, 433, 437, 441, 448, 450, 474, 476, 481, 508, 509], "713": [41, 486, 536], "72": [33, 37, 38, 164, 172, 174, 231, 236, 238, 244, 252, 262, 263, 265, 269, 273, 276, 281, 283, 286, 290, 292, 296, 298, 302, 304, 306, 308, 428, 430, 433, 435, 441, 450, 474, 476, 508, 509, 523], "720": [41, 486, 536], "73": [25, 37, 38, 164, 172, 174, 231, 236, 244, 248, 252, 262, 263, 265, 269, 276, 281, 283, 286, 290, 296, 302, 304, 308, 312, 428, 430, 433, 435, 437, 441, 448, 450, 474, 476, 508, 509, 523], "74": [25, 31, 33, 38, 119, 164, 172, 174, 231, 236, 238, 244, 248, 252, 262, 263, 273, 276, 281, 283, 286, 290, 292, 294, 296, 298, 302, 304, 306, 308, 312, 428, 430, 433, 435, 437, 445, 448, 474, 476, 481, 509, 520], "75": [25, 31, 37, 38, 40, 121, 164, 172, 231, 236, 238, 240, 250, 262, 263, 265, 267, 269, 276, 281, 283, 286, 288, 290, 294, 296, 298, 302, 304, 306, 308, 428, 430, 433, 435, 445, 450, 474, 476, 481, 508, 509, 520, 523], "76": [25, 31, 37, 38, 40, 121, 164, 172, 236, 240, 244, 248, 250, 252, 262, 263, 276, 281, 283, 286, 290, 294, 296, 304, 308, 312, 428, 430, 433, 437, 445, 448, 450, 474, 476, 508, 509, 520], "77": [25, 38, 40, 164, 172, 231, 236, 238, 240, 242, 248, 250, 252, 262, 273, 276, 281, 283, 286, 290, 294, 296, 298, 302, 304, 306, 428, 430, 433, 435, 445, 448, 474, 476, 481, 508, 509], "78": [25, 31, 37, 38, 121, 164, 172, 231, 236, 240, 242, 250, 252, 262, 265, 269, 273, 283, 286, 290, 294, 296, 298, 304, 306, 430, 433, 435, 445, 450, 474, 476, 481, 508, 509, 520, 534], "79": [25, 29, 33, 37, 38, 40, 164, 172, 231, 236, 240, 242, 244, 248, 265, 269, 273, 276, 281, 283, 286, 290, 292, 296, 306, 308, 428, 430, 433, 435, 437, 448, 450, 476, 508, 509, 520, 523, 534], "8": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 101, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "80": [25, 29, 31, 33, 38, 121, 164, 172, 231, 236, 240, 244, 248, 250, 252, 262, 263, 265, 273, 276, 281, 283, 286, 292, 294, 296, 298, 306, 312, 430, 433, 437, 448, 474, 476, 481, 509, 523, 534], "81": [25, 29, 33, 37, 38, 40, 121, 164, 172, 231, 236, 240, 242, 244, 252, 263, 265, 269, 273, 276, 281, 283, 290, 292, 296, 298, 306, 312, 430, 433, 435, 448, 450, 474, 476, 481, 508, 509, 520, 523, 534], "82": [25, 29, 31, 33, 37, 38, 119, 164, 172, 231, 236, 238, 240, 244, 248, 252, 262, 263, 265, 273, 281, 283, 286, 290, 292, 298, 302, 306, 312, 430, 433, 435, 437, 450, 474, 476, 508, 509, 520, 534], "83": [25, 29, 38, 40, 119, 121, 164, 172, 236, 238, 240, 242, 244, 248, 263, 265, 269, 276, 281, 283, 286, 292, 296, 302, 306, 312, 430, 433, 435, 437, 448, 474, 476, 481, 509, 523, 534], "84": [25, 29, 31, 33, 37, 38, 119, 121, 164, 172, 231, 236, 238, 240, 244, 248, 250, 252, 262, 263, 265, 267, 269, 273, 276, 281, 283, 286, 290, 292, 296, 298, 302, 306, 312, 430, 433, 437, 448, 450, 474, 476, 481, 508, 509, 520, 523, 534], "85": [25, 29, 37, 38, 40, 164, 231, 236, 240, 242, 248, 250, 252, 263, 265, 267, 273, 283, 286, 290, 292, 296, 298, 302, 312, 430, 433, 435, 437, 450, 474, 476, 481, 508, 509, 520, 523, 534], "86": [25, 29, 31, 37, 38, 41, 119, 121, 164, 231, 236, 238, 240, 248, 262, 263, 265, 267, 269, 273, 276, 281, 283, 286, 292, 294, 296, 302, 306, 428, 430, 433, 435, 437, 448, 474, 476, 508, 509, 523, 534], "87": [25, 31, 37, 38, 40, 164, 172, 231, 236, 240, 242, 250, 252, 262, 263, 265, 269, 273, 283, 286, 290, 292, 294, 296, 298, 302, 306, 308, 428, 430, 433, 435, 448, 450, 474, 476, 508, 509, 520, 523, 534], "88": [25, 37, 38, 164, 231, 236, 240, 244, 248, 252, 262, 263, 265, 267, 273, 283, 286, 290, 292, 294, 296, 298, 302, 306, 308, 428, 430, 433, 437, 450, 474, 476, 481, 508, 509, 520, 523, 534], "889486": 536, "89": [25, 29, 31, 33, 37, 38, 40, 41, 164, 236, 240, 242, 244, 248, 252, 262, 263, 265, 267, 269, 273, 283, 286, 292, 294, 298, 306, 308, 428, 430, 433, 435, 437, 448, 476, 481, 508, 509, 523, 534], "9": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534], "90": [25, 33, 37, 38, 119, 121, 164, 231, 236, 240, 242, 244, 252, 262, 263, 265, 273, 283, 286, 290, 296, 298, 302, 306, 308, 428, 430, 433, 435, 448, 450, 474, 476, 508, 509, 520, 523], "900": 253, "91": [25, 33, 37, 38, 40, 119, 121, 164, 231, 238, 240, 244, 248, 252, 263, 265, 267, 273, 283, 286, 290, 292, 294, 296, 298, 302, 306, 308, 428, 430, 433, 435, 437, 450, 474, 476, 481, 508, 509, 520, 523, 534], "92": [25, 33, 37, 40, 119, 164, 231, 238, 240, 242, 244, 248, 263, 265, 273, 276, 296, 298, 302, 306, 308, 428, 430, 433, 435, 437, 448, 474, 476, 481, 508, 509, 523], "93": [25, 33, 37, 38, 119, 121, 164, 231, 238, 240, 244, 252, 263, 265, 269, 273, 276, 283, 286, 290, 298, 302, 306, 308, 430, 433, 435, 448, 450, 476, 508, 509, 520, 523], "94": [25, 33, 37, 38, 40, 119, 164, 231, 238, 244, 248, 250, 263, 265, 269, 273, 276, 286, 290, 296, 298, 302, 306, 308, 433, 437, 474, 476, 481, 508, 509, 520, 523], "95": [31, 33, 37, 40, 119, 164, 231, 238, 248, 250, 263, 265, 273, 276, 283, 286, 290, 294, 296, 302, 308, 428, 430, 433, 435, 437, 448, 474, 476, 481, 508, 509, 523], "950": 253, "96": [25, 31, 33, 37, 164, 172, 231, 236, 238, 244, 250, 263, 267, 269, 273, 276, 286, 290, 294, 296, 298, 302, 306, 308, 433, 435, 448, 450, 476, 481, 508, 509, 520], "9658": [26, 228, 260], "9660": [26, 177, 260, 451, 463, 470, 482, 497, 504, 516], "9670": [28, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 168, 173, 253, 264, 270, 272, 277, 285, 289, 295, 297, 301, 303, 307, 321, 329, 331, 333, 335, 337, 339, 343, 347, 359, 371, 381, 383, 385, 390, 392, 397, 401, 403, 405, 407, 411, 413, 415, 419, 421, 427, 429, 434, 444, 453, 455, 457, 487, 489, 491, 511, 518, 522, 529], "97": [33, 37, 40, 119, 164, 172, 231, 236, 238, 248, 250, 263, 265, 267, 273, 276, 286, 290, 292, 294, 296, 298, 302, 306, 308, 430, 437, 450, 474, 476, 481, 509, 520, 523, 534], "972": 523, "9780262201629": 536, "98": [31, 33, 37, 121, 172, 231, 236, 238, 248, 250, 252, 263, 265, 267, 273, 276, 283, 286, 290, 292, 294, 296, 306, 435, 437, 448, 474, 476, 481, 509, 520, 534], "99": [29, 33, 37, 40, 121, 172, 231, 236, 238, 242, 250, 252, 263, 265, 267, 273, 276, 286, 290, 292, 294, 298, 308, 435, 448, 450, 474, 476, 478, 479, 509, 520, 534], "990": 253, "999": [253, 429, 430], "A": [4, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 70, 99, 115, 227, 228, 229, 230, 236, 253, 275, 309, 392, 446, 459, 469, 478, 479, 493, 503, 505], "AND": [39, 40, 253, 281, 394], "AS": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "And": 337, "As": 3, "But": [1, 290], "For": [0, 3, 4, 5, 99, 248, 250, 347], "If": [0, 5, 29, 42, 64, 104, 253, 264, 290, 392, 407, 413, 415, 427, 430, 437, 453, 455, 457, 487, 518, 523], "In": [4, 6, 28, 41, 78, 97, 486, 523, 536], "It": [1, 4, 42, 44, 46, 48, 50, 52, 54, 64, 70, 76, 91, 97, 99, 101, 104, 229, 253, 301, 331, 437, 471, 476, 477, 478, 479, 487, 505, 524], "Its": [64, 253, 401, 402, 445, 446], "NOT": [281, 394], "No": [64, 265, 453, 455], "Not": [242, 290], "OF": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "OR": [22, 24, 25, 29, 31, 33, 35, 37, 38, 39, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 394, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "On": 6, "Ones": [250, 294], "That": [64, 95], "The": [2, 3, 4, 5, 6, 17, 18, 28, 30, 32, 33, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 118, 120, 163, 164, 165, 168, 171, 173, 175, 227, 230, 233, 235, 237, 238, 239, 241, 243, 247, 249, 251, 253, 263, 264, 266, 268, 270, 272, 275, 277, 282, 285, 289, 290, 291, 293, 295, 297, 301, 305, 307, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 427, 429, 434, 436, 437, 440, 444, 446, 453, 455, 457, 469, 476, 478, 479, 480, 484, 487, 489, 491, 503, 507, 511, 518, 519, 522, 524, 526, 528, 529], "Then": [5, 15, 20], "There": [1, 6, 437, 523], "These": [2, 12, 16, 295], "To": [2, 3, 4, 269, 297], "Will": [109, 337], "_": [428, 479], "_angular_resolut": [523, 529, 530], "_angular_resolutionresolut": 529, "_linear_resolut": [523, 529, 530], "_linear_resolutionresolut": 529, "_model": 4, "_t": 4, "aa": 478, "ab": [121, 265, 269, 273, 433, 523], "abil": 101, "abl": [4, 21, 23, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "abort": [453, 455, 457], "about": [250, 523], "abov": [4, 91, 104, 227, 301, 430, 437, 469, 503], "absolut": [5, 301], "abstract": [3, 35, 118, 119, 146, 153, 177, 242, 243, 244, 252, 266, 267, 276, 278, 282, 293, 306, 441], "academ": [0, 1], "accept": [91, 104, 301], "access": [3, 12, 14, 26, 28, 31, 33, 35, 40, 64, 70, 121, 146, 149, 163, 164, 166, 171, 172, 177, 227, 228, 230, 231, 238, 242, 253, 260, 263, 269, 276, 278, 282, 283, 286, 290, 298, 308, 310, 397, 411, 419, 430, 450, 455, 469, 503], "accord": [18, 31, 42, 253, 262, 331, 479, 487], "accordingli": [42, 487], "account": 253, "accumul": [165, 166, 171, 172, 264, 265, 347, 433], "acquir": 6, "action": [2, 3, 15, 25, 34, 35, 42, 66, 67, 93, 94, 99, 115, 121, 145, 146, 173, 174, 177, 201, 215, 218, 228, 229, 269, 270, 271, 272, 273, 280, 310, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 381, 385, 390, 446, 481, 523], "action_closur": [29, 264, 265, 337], "actioncontrol": [66, 93], "actionsact": 122, "actionsinclud": [129, 130], "activ": [448, 453, 457, 474, 476, 479], "actual": [104, 478, 479], "ad": [16, 101, 253, 476, 478, 479, 524], "adapt": [11, 25, 26, 28, 41, 42, 228, 253, 260, 290, 313, 401, 403, 405, 411, 429, 444, 445, 446, 480, 481, 482, 485, 486, 487, 495, 497, 504, 505, 511, 516, 524, 536], "adaptor": [22, 26, 28, 29, 144, 154, 168, 177, 228, 229, 260, 264, 265, 277, 285, 286, 289, 290, 295, 296, 297, 298, 337, 339, 341, 343, 345, 347, 349, 403, 405, 409, 413, 415, 417, 427, 428, 429, 430, 437, 443, 444, 445, 446], "adaptor_bas": 290, "add": [38, 99, 104, 437, 523], "addit": [19, 33, 238, 253, 409, 491], "addition": 64, "addressof": [70, 231, 290, 298], "adjust": [42, 487], "adl": [17, 253, 397, 419, 510, 516, 523, 533, 534], "adopt": [1, 2, 3, 5], "advanc": [40, 290, 437], "advantag": 4, "affect": 3, "afford": [3, 14, 477], "after": [2, 4, 42, 64, 70, 101, 172, 229, 231, 297, 407, 478, 479, 487], "again": [31, 236, 478, 479, 481, 524], "against": [78, 80, 236, 301], "agent": [41, 486, 536], "aggreg": [3, 40, 64, 478, 479], "agnost": [478, 479], "agre": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "aid": 505, "aka": [16, 58], "algebra": 446, "algorithm": [3, 4, 6, 26, 29, 30, 31, 34, 35, 42, 58, 60, 62, 68, 96, 101, 109, 111, 113, 146, 177, 182, 191, 203, 205, 217, 220, 228, 235, 236, 241, 242, 253, 260, 264, 265, 270, 271, 272, 273, 285, 286, 290, 295, 296, 297, 298, 313, 319, 337, 339, 341, 343, 345, 347, 349, 387, 396, 403, 407, 413, 415, 417, 428, 430, 436, 437, 445, 446, 447, 449, 462, 463, 473, 474, 480, 485, 487, 495, 497, 505, 522, 523], "algorithm_": 292, "algorithma": 95, "algorithmbeam_model": 139, "algorithminclud": [131, 132, 133], "algorithmon_effective_size_drop": 137, "algorithmrai": 95, "alia": [39, 104, 253, 263, 276, 293, 305, 434, 435, 450, 455], "alias": 308, "align": [83, 87], "alignedbox2d": [26, 84, 115, 199, 201, 213, 215, 228, 251, 252, 253, 260], "alignedbox3d": [26, 88, 115, 199, 201, 213, 215, 228, 233, 234, 236, 251, 252, 253, 260], "alik": 5, "all": [4, 5, 6, 19, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 146, 172, 177, 179, 181, 182, 183, 184, 185, 188, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227, 228, 229, 237, 238, 241, 242, 245, 253, 254, 257, 260, 261, 263, 274, 275, 276, 287, 290, 291, 292, 298, 299, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 430, 431, 437, 438, 444, 445, 452, 453, 454, 455, 456, 457, 458, 463, 464, 465, 469, 473, 475, 483, 484, 487, 488, 489, 490, 491, 492, 495, 497, 498, 499, 503, 511, 513, 515, 516, 517, 521, 523, 524, 525, 526, 527, 529, 530], "alloc": [3, 26, 64, 104, 106, 167, 228, 250, 253, 260, 436, 437], "allocator_typ": [40, 64, 65, 104, 105, 179, 221, 437], "allocator_typealloc": [40, 437], "allocator_typevoid": [40, 437], "allof": 302, "allow": [13, 24, 26, 91, 151, 171, 177, 228, 253, 260, 264, 307, 308, 396, 446, 476, 478, 479, 481, 489, 524], "almost_equal_to": [493, 498, 500, 502, 504, 522, 523, 529, 530], "almost_equal_toalmost_equal_to": 523, "almost_equal_tostd": 523, "alon": [522, 523], "along": [12, 95, 292, 481, 524], "alpha": [68, 69, 176, 522, 523], "alpha1": [321, 335, 476, 479], "alpha2": [321, 335, 476, 479], "alpha3": [321, 335, 476, 479], "alpha4": [321, 335, 476, 479], "alpha5": [335, 476, 479], "alpha_": 176, "alpha_fast": [25, 101, 102, 179, 224, 313, 433, 481, 498, 502, 524], "alpha_fastbeluga": 314, "alpha_fastbeluga_ro": 525, "alpha_fastdecai": 101, "alpha_fastdoubl": [25, 481], "alpha_fastexponenti": 481, "alpha_fastus": 25, "alpha_slow": [25, 101, 102, 179, 224, 313, 433, 481, 498, 502, 524], "alpha_slowbeluga": 314, "alpha_slowbeluga_ro": 525, "alpha_slowdecai": 101, "alpha_slowdoubl": [25, 481], "alpha_slowexponenti": 481, "alpha_slowus": 25, "alphabet": [228, 470, 504], "alphahuetorgba": [522, 523], "alphahuetorgbabeluga_ro": 523, "alphath": 68, "alreadi": [6, 33, 238, 242, 253, 284], "also": [5, 15, 16, 18, 20, 42, 54, 76, 297, 321, 335, 343, 453, 455, 457, 478, 479, 487], "altern": [5, 6, 17], "alwai": [28, 40, 253, 392, 413, 424, 427, 444], "always_reset_initial_pos": [478, 479], "amcl": [1, 6, 11, 25, 26, 31, 43, 115, 179, 188, 189, 194, 197, 202, 206, 210, 216, 222, 228, 242, 253, 260, 313, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 488, 493, 495, 497, 498, 500, 501, 504, 505, 508, 509, 511, 516, 520, 523, 524], "amcl_cor": [42, 177, 313, 473, 474], "amcl_nod": [453, 462, 463, 478, 479], "amcl_nodelet": [455, 462, 463], "amcl_pos": 478, "amclamcl": [25, 481], "amclconfig": [449, 450, 455, 456], "amclconfigserv": [450, 455, 456, 464, 467], "amclconfigserverdynamic_reconfigur": 450, "amclconfigservertyp": 450, "amcldefinit": 481, "amclimplement": 25, "amclinlin": 488, "amclnod": [447, 448, 454, 459, 464, 466, 468, 471], "amclnode2d": [448, 470], "amclnodeamclnod": 448, "amclnodeexplicit": 454, "amclnodelet": [449, 450, 456, 459, 464, 466, 467, 468, 471], "amclnodelet2d": [450, 470], "amclnodeletmutableprotect": 456, "amclnodeletprotect": 456, "amclnodeletprotectedstat": 456, "amclnodeprotect": 454, "amclnodeprotectedstat": 454, "amclparam": [25, 42, 43, 115, 179, 211, 213, 217, 219, 222, 224, 253, 314, 480, 481, 487, 488, 493, 498, 502, 511, 525], "amclparamsstruct": [25, 228, 481, 504], "american": 41, "amount": [307, 392], "amp": [25, 26, 29, 31, 33, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 119, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 201, 204, 215, 217, 218, 219, 221, 228, 231, 236, 238, 240, 242, 244, 248, 249, 250, 251, 252, 253, 254, 256, 260, 262, 263, 265, 267, 269, 271, 273, 281, 283, 284, 286, 290, 292, 294, 296, 298, 301, 302, 303, 304, 306, 307, 308, 310, 312, 319, 320, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 428, 430, 433, 434, 435, 436, 437, 441, 445, 448, 450, 453, 454, 455, 456, 457, 458, 474, 476, 481, 487, 488, 489, 491, 492, 508, 509, 510, 511, 518, 520, 522, 523, 529, 530, 531, 532, 533, 534], "amplitud": 242, "an": [2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 31, 33, 35, 37, 38, 39, 40, 42, 52, 54, 60, 64, 68, 70, 76, 78, 89, 91, 93, 95, 101, 104, 111, 113, 117, 119, 121, 145, 151, 156, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 227, 228, 229, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 260, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 297, 298, 300, 301, 302, 304, 306, 308, 310, 312, 329, 335, 337, 339, 341, 352, 357, 379, 381, 385, 397, 411, 413, 419, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 441, 443, 445, 448, 450, 453, 455, 457, 469, 474, 476, 478, 479, 481, 485, 487, 503, 508, 509, 510, 518, 520, 522, 523, 526, 531, 532, 533, 534], "analyz": 40, "andino": [6, 11], "andom_interspers": [290, 403], "angl": [13, 33, 46, 238, 240, 253, 272, 390, 489, 490, 498, 500, 508], "angle_incr": 508, "angle_min": 508, "anglesauto": 508, "angular": [25, 313], "angular_clustering_resolut": [109, 110, 308], "angular_clustering_resolutionclust": 109, "angular_resolut": [498, 502, 511, 522, 523, 529], "angular_resolutionangular": 511, "angular_resolutionbeluga_ro": 530, "angular_resolutionconst": 523, "angular_resolutionresolut": 523, "ani": [2, 4, 6, 18, 22, 24, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 42, 70, 95, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 228, 230, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 260, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 297, 298, 300, 302, 304, 306, 308, 310, 312, 313, 392, 407, 409, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 453, 455, 457, 474, 476, 478, 479, 481, 485, 508, 509, 520, 523, 532, 534], "anoth": [15, 40, 64, 70, 78, 227, 231, 250, 469, 503], "any_polici": [25, 253, 254, 258, 281, 481], "any_view": 25, "anyth": 1, "apach": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "apertur": [33, 238], "api": [2, 25, 27, 34, 97, 146, 177, 180, 183, 195, 229, 257, 261, 452, 465, 471, 483, 484, 485, 495, 497, 499, 505, 515, 517, 523, 531, 533], "append": [28, 104], "appli": [3, 42, 168, 229, 238, 339, 343, 347, 392, 437, 478, 479, 487], "applic": [1, 3, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "approach": [6, 248], "appropri": [2, 3, 253], "approxim": [2, 4, 248, 253, 478, 479, 524], "apt": 5, "ar": [1, 2, 4, 5, 6, 12, 14, 16, 17, 18, 26, 28, 33, 40, 42, 50, 54, 56, 64, 74, 76, 78, 80, 89, 95, 99, 104, 172, 227, 229, 238, 253, 263, 286, 295, 333, 343, 413, 424, 427, 428, 437, 444, 451, 469, 478, 479, 482, 487, 503, 523, 536], "arg": [5, 26, 33, 38, 56, 115, 220, 221, 228, 253, 260, 281, 355, 392, 393, 434, 435], "argument": [6, 18, 38, 42, 91, 95, 104, 253, 265, 286, 296, 297, 298, 301, 339, 341, 343, 345, 347, 349, 392, 403, 405, 409], "arithmet": [18, 20, 26, 36, 37, 58, 91, 228, 253, 260], "around": [89, 99, 242, 297, 329, 478, 479, 481, 524], "arra": [40, 64], "arrai": [25, 26, 37, 39, 40, 64, 111, 113, 114, 115, 117, 148, 168, 177, 201, 204, 215, 217, 219, 221, 228, 229, 250, 253, 260, 263, 294, 307, 308, 424, 426, 435, 446, 491, 511, 518, 520, 533, 534], "arrayarrai": 113, "arrow": [62, 227, 469, 479, 503, 523], "arrow_bodi": 523, "arrow_body_bas": 523, "arrow_head": 523, "arrow_head_bas": 523, "arrow_head_left_corn": 523, "arrow_head_right_corn": 523, "arrow_head_tip": 523, "as_common_tuple_indirect_fn": [115, 201, 215, 402, 444, 445], "as_common_tuple_indirect_fninlin": 402, "as_common_tuple_indirect_fnutil": [228, 445], "as_const": 178, "asdiagon": 250, "assert": [242, 252, 263, 298, 306, 433, 441, 445, 508], "assert_that": 301, "assign": [4, 21, 22, 25, 26, 31, 33, 37, 38, 40, 58, 64, 78, 104, 105, 119, 121, 154, 164, 166, 172, 176, 177, 178, 179, 189, 228, 229, 231, 234, 236, 238, 240, 242, 244, 248, 250, 252, 260, 262, 263, 267, 269, 276, 281, 283, 292, 294, 306, 308, 310, 312, 337, 430, 433, 435, 437, 441, 481, 511, 522, 523], "assign_fn": [28, 29, 115, 201, 215, 218, 338], "assign_fnfriend": 338, "assign_fnimplement": [29, 228], "assign_fninlin": 338, "assign_particle_cloud": [511, 513, 514, 522, 523], "assign_particle_cloudbeluga_ro": 523, "assign_rang": [104, 105, 179, 189, 437], "assign_rangeconstexpr": 437, "assignconstexpr": [29, 437], "assigndefinit": 29, "assoaci": [31, 315], "associ": [31, 41, 78, 97, 250, 306, 315], "assum": [6, 33, 238, 253, 297, 298, 331, 397, 407, 415, 430, 478, 479, 522, 526], "atan": 523, "atan2": [33, 121, 238, 269], "atconstexpr": 40, "attach": [478, 479], "attribut": [285, 313, 315, 317, 321, 323, 325, 327, 329, 331, 333, 335, 371, 383, 403, 453, 455, 457, 524, 526, 529], "auto": [25, 29, 31, 33, 37, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 66, 74, 76, 80, 89, 93, 95, 97, 99, 104, 107, 119, 121, 163, 164, 165, 166, 168, 169, 172, 174, 178, 236, 238, 240, 242, 244, 250, 253, 263, 265, 267, 269, 271, 273, 276, 277, 278, 281, 283, 286, 290, 292, 294, 296, 298, 301, 302, 304, 306, 308, 310, 337, 339, 341, 343, 345, 347, 349, 359, 379, 383, 385, 392, 394, 397, 401, 403, 407, 409, 413, 415, 417, 419, 428, 429, 430, 434, 435, 437, 445, 448, 450, 453, 455, 457, 474, 476, 481, 487, 489, 491, 508, 509, 520, 523, 534], "autocovari": 172, "automat": 253, "autonom": [41, 486, 536], "autostart": [476, 479], "autostart_callback": [448, 453, 454, 457, 458, 464, 466, 474], "autostart_callbackvoid": [448, 474], "autostart_delai": [476, 479], "autostart_timer_": [448, 453, 457, 464, 468, 474], "autostart_timer_beluga_amcl": [454, 458], "autostart_timer_rclcpp": [448, 474], "autostart_timer_tim": [448, 474], "auxiliar": [157, 233], "avail": [5, 6, 64, 85, 253, 478, 479], "averag": [101, 172, 253, 476, 478, 479, 481, 524], "average_weight": 433, "avoid": [3, 40, 101, 308, 435, 476, 478, 479, 481, 524], "axi": [12, 44, 50, 83, 87, 109, 111, 113, 244, 308, 476, 481, 524], "a\u017eman": 38, "b": [27, 37, 38, 39, 40, 115, 180, 181, 183, 190, 195, 224, 236, 253, 254, 464, 468, 523, 529, 530], "ba": 481, "back": [40, 64, 65, 181, 190, 253, 437], "back_insert": 437, "backconstexpr": 40, "backward": [121, 269], "bad": [437, 478, 479, 524], "bag": 6, "bare": 3, "base": [4, 25, 26, 32, 38, 42, 44, 46, 48, 50, 52, 85, 101, 109, 118, 119, 145, 173, 177, 228, 229, 237, 239, 240, 243, 244, 252, 253, 260, 266, 267, 269, 270, 271, 272, 273, 280, 281, 285, 289, 293, 294, 306, 352, 385, 387, 390, 394, 429, 430, 433, 435, 437, 441, 446, 476, 477, 478, 479, 481, 487, 522, 523], "base_footprint": [476, 478, 479], "base_frame_id": [476, 478, 479], "base_pose_in_odom": [481, 487, 488], "base_pose_in_odombas": 487, "basedensegrid2": [45, 48, 49, 50, 51, 107, 108, 115, 118, 119, 182, 184, 191, 192, 200, 214, 228, 244, 253, 491, 492, 504], "basedensegrid2dens": [119, 244], "baselaserscan": [2, 47, 115, 202, 216, 228, 239, 240, 253, 489, 490, 504, 505, 508], "baselaserscanlas": 240, "baselineargrid2": [49, 50, 51, 107, 108, 115, 182, 184, 191, 192, 197, 200, 210, 214, 228, 243, 244, 253, 267, 441, 491, 492, 504], "baselineargrid2linear": [244, 267, 441], "baseoccupancygrid2": [2, 51, 115, 182, 186, 188, 191, 194, 201, 215, 228, 251, 252, 253, 266, 267, 491, 492, 504, 505, 520], "baseoccupancygrid2occup": [252, 267], "baseregulargrid": [44, 45, 48, 49, 50, 51, 53, 97, 98, 107, 108, 115, 182, 191, 228, 253, 293, 294, 306, 491, 492, 504], "baseregulargrid2": [119, 253, 254, 258, 293, 294], "baseregulargrid3": [253, 254, 258, 293, 294], "baseregulargridregularli": [119, 294, 306], "bash": 5, "basi": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "basic": [72, 235, 253], "bay": 4, "bayesian": [1, 4, 41], "beam": [13, 30, 31, 54, 74, 152, 177, 228, 229, 238, 253, 300, 315, 446, 476, 478, 479, 489], "beam_bear": 31, "beam_max_rang": [31, 181, 224, 315], "beam_max_rangebeluga": 316, "beam_max_rangedoubl": 31, "beam_max_rangemaximum": 31, "beam_model": [54, 152, 177, 299, 300, 315], "beam_skip_dist": 479, "beam_skip_error_threshold": 479, "beam_skip_threshold": 479, "beammodelparam": [30, 31, 54, 74, 115, 181, 212, 219, 224, 226, 253, 316], "beammodelparamparamet": [31, 228], "beamsensormodel": [20, 26, 30, 31, 55, 76, 115, 181, 190, 201, 206, 213, 215, 216, 219, 221, 222, 225, 228, 229, 253, 260, 315, 481, 487], "beamsensormodelbeam": 31, "beamsensormodelbeamsensormodel": 31, "bear": [26, 31, 32, 33, 56, 72, 74, 95, 96, 152, 177, 228, 229, 233, 234, 236, 238, 253, 260, 292, 300, 317, 323, 325, 327, 446], "bearing_error": [33, 238], "bearing_error_prob": [33, 238], "bearing_sensor_model": [56, 152, 177, 299, 300, 317], "bearingdirect": 95, "bearingmodelparam": [32, 33, 56, 115, 219, 224, 253, 318], "bearingmodelparamparamet": [33, 228], "bearingsensormodel": [20, 26, 32, 33, 57, 115, 181, 190, 201, 206, 213, 215, 216, 219, 221, 222, 225, 228, 229, 253, 260, 317], "bearingsensormodel2d": [32, 33, 253, 254, 258], "bearingsensormodel3d": [32, 33, 253, 254, 258], "bearingsensormodelbearingsensormodel": 33, "bearingsensormodelgener": 33, "becam": 1, "becaus": [1, 28, 54, 76, 104, 227, 238, 242, 263, 428, 469, 489, 503, 523], "becom": 1, "been": [3, 74, 273, 387, 390, 479], "befor": [5, 70, 231, 301, 434, 437, 476, 478, 479, 481, 523, 524], "begin": [4, 37, 40, 60, 61, 64, 65, 104, 105, 172, 181, 190, 236, 265, 286, 296, 298, 437], "begin_adaptor": 290, "begin_cursor": 298, "beginauto": 37, "beginconstexpr": [40, 437], "behav": [39, 253], "behavior": [54, 64, 70, 104], "being": [4, 18, 33, 64, 236, 253, 329, 429, 430], "bel": 4, "belief": [4, 253], "belong": [254, 513], "below": [229, 253, 270, 479], "beluga": [0, 1, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 147, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 254, 255, 256, 257, 258, 259, 260, 261, 274, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 446, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 472, 475, 477, 478, 479, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 524, 525, 526, 527, 528, 529, 530, 535], "beluga_actions_assign_hpp": 29, "beluga_actions_hpp": 22, "beluga_actions_normalize_hpp": 265, "beluga_actions_propagate_hpp": 286, "beluga_actions_reweight_hpp": 296, "beluga_algorithm_amcl_core_hpp": 25, "beluga_algorithm_distance_map_hpp": 164, "beluga_algorithm_effective_sample_size_hpp": 166, "beluga_algorithm_estimation_hpp": 172, "beluga_algorithm_exponential_filter_hpp": 176, "beluga_algorithm_hpp": 24, "beluga_algorithm_raycasting_bresenham_hpp": 37, "beluga_algorithm_raycasting_hpp": 292, "beluga_algorithm_spatial_hash_hpp": 308, "beluga_algorithm_thrun_recovery_probability_estimator_hpp": 433, "beluga_amcl": [5, 453, 454, 455, 456, 457, 458, 459, 463, 464, 466, 467, 468, 471], "beluga_amcl_amcl_node_hpp": 448, "beluga_amcl_amcl_nodelet_hpp": 450, "beluga_amcl_ndt_amcl_node_hpp": 474, "beluga_amcl_ros2_common_hpp": 476, "beluga_amclamclnod": [453, 454], "beluga_amclamclnodelet": [455, 456], "beluga_amclndtamclnod": [457, 458], "beluga_beluga_hpp": 35, "beluga_containers_circular_array_hpp": 40, "beluga_containers_hpp": 117, "beluga_containers_tuple_vector_hpp": 437, "beluga_eigen_compatibility_hpp": 167, "beluga_exampl": [5, 6], "beluga_motion_differential_drive_model_hpp": 121, "beluga_motion_hpp": 246, "beluga_motion_omnidirectional_drive_model_hpp": 269, "beluga_motion_stationary_model_hpp": 310, "beluga_policies_every_n_hpp": 174, "beluga_policies_hpp": 280, "beluga_policies_on_effective_size_drop_hpp": 271, "beluga_policies_on_motion_hpp": 273, "beluga_policies_policy_hpp": 281, "beluga_primitives_hpp": 283, "beluga_prologue_includ": [170, 284], "beluga_random_hpp": 288, "beluga_random_multivariate_distribution_traits_hpp": 248, "beluga_random_multivariate_normal_distribution_hpp": 250, "beluga_random_multivariate_uniform_distribution_hpp": 252, "beluga_ro": [2, 5, 447, 448, 449, 450, 453, 454, 455, 456, 473, 474, 476, 487, 488, 489, 490, 491, 492, 493, 497, 498, 500, 501, 502, 505, 510, 512, 513, 514, 518, 524, 525, 526, 527, 528, 529, 530], "beluga_ros_amcl_hpp": 481, "beluga_ros_beluga_ros_hpp": 485, "beluga_ros_laser_scan_hpp": 508, "beluga_ros_messages_hpp": 509, "beluga_ros_occupancy_grid_hpp": 520, "beluga_ros_particle_cloud_hpp": 523, "beluga_ros_tf2_eigen_hpp": 532, "beluga_ros_tf2_sophus_hpp": 534, "beluga_ros_vers": [509, 520, 532, 534], "beluga_rosamcl": [487, 488], "beluga_rosamclparam": [524, 525], "beluga_rosdetailalmost_equal_to": [528, 529, 530], "beluga_roslaserscan": [489, 490], "beluga_rosmsg": 512, "beluga_rosoccupancygrid": [491, 492], "beluga_rosoccupancygridvaluetrait": [526, 527], "beluga_rosth": [481, 508, 509, 520, 523], "beluga_sensor_beam_model_hpp": 31, "beluga_sensor_bearing_sensor_model_hpp": 33, "beluga_sensor_data_dense_grid_hpp": 119, "beluga_sensor_data_landmark_map_hpp": 236, "beluga_sensor_data_laser_scan_hpp": 240, "beluga_sensor_data_linear_grid_hpp": 244, "beluga_sensor_data_ndt_cell_hpp": 262, "beluga_sensor_data_occupancy_grid_hpp": 267, "beluga_sensor_data_regular_grid_hpp": 294, "beluga_sensor_data_sparse_value_grid_hpp": 306, "beluga_sensor_data_value_grid_hpp": 441, "beluga_sensor_hpp": 300, "beluga_sensor_landmark_sensor_model_hpp": 238, "beluga_sensor_likelihood_field_model_hpp": 242, "beluga_sensor_ndt_sensor_model_hpp": 263, "beluga_testing_hpp": 432, "beluga_testing_sophus_matchers_hpp": 302, "beluga_testing_sophus_printers_hpp": 304, "beluga_type_traits_hpp": 439, "beluga_type_traits_particle_traits_hpp": 276, "beluga_type_traits_strongly_typed_numeric_hpp": 312, "beluga_type_traits_tuple_traits_hpp": 435, "beluga_types_landmark_detection_types_hpp": 234, "beluga_utility_forward_like_hpp": 178, "beluga_utility_indexing_iterator_hpp": 231, "beluga_views_elements_hpp": 169, "beluga_views_hpp": 443, "beluga_views_particles_hpp": 278, "beluga_views_random_intersperse_hpp": 290, "beluga_views_sample_hpp": 298, "beluga_views_take_evenly_hpp": 428, "beluga_views_take_while_kld_hpp": 430, "beluga_views_zip_hpp": 445, "belugaactionsdetailassign_fn": [337, 338], "belugaactionsdetailnormalize_base_fn": [339, 340], "belugaactionsdetailnormalize_fn": [341, 342], "belugaactionsdetailpropagate_base_fn": [343, 344], "belugaactionsdetailpropagate_fn": [345, 346], "belugaactionsdetailreweight_base_fn": [347, 348], "belugaactionsdetailreweight_fn": [349, 350], "belugaamcl": [42, 43], "belugaamclparam": [313, 314], "belugabasedensegrid2": [44, 45], "belugabaselaserscan": [46, 47], "belugabaselineargrid2": [48, 49], "belugabaseoccupancygrid2": [50, 51], "belugabaseregulargrid": [52, 53], "belugabeammodelparam": [315, 316], "belugabeamsensormodel": [54, 55], "belugabearingmodelparam": [317, 318], "belugabearingsensormodel": [56, 57], "belugabresenham2i": [58, 59], "belugabresenham2ilin": [60, 61], "belugabresenham2ilineiter": [62, 63], "belugabresenham2ilineiteratorsentinel": [319, 320], "belugacirculararrai": [64, 65], "belugacommon_tuple_typ": [351, 352, 353], "belugadecay_tuple_lik": [354, 355, 356], "belugadetailcellhash": [357, 358], "belugadetailmake_from_state_fn": [359, 360], "belugadifferentialdrivemodel": [66, 67], "belugadifferentialdrivemodelparam": [321, 322], "belugaexponentialfilt": [68, 69], "belugahas_common_tuple_typ": [361, 362], "belugahas_single_el": [363, 364], "belugainclud": [122, 123, 124, 125, 126, 127, 128], "belugaindexingiter": [70, 71], "belugais_tuple_lik": 365, "belugalandmarkbearingdetect": [323, 324], "belugalandmarkmap": [72, 73], "belugalandmarkmodelparam": [325, 326], "belugalandmarkpositiondetect": [327, 328], "belugalandmarksensormodel": [74, 75], "belugalikelihoodfieldmodel": [76, 77], "belugalikelihoodfieldmodelparam": [329, 330], "belugamultivariate_distribution_trait": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "belugamultivariatenormaldistribut": [78, 79], "belugamultivariatenormaldistributionparam": [80, 81], "belugamultivariateuniformdistribut": [82, 83, 84, 85, 86, 87, 88], "belugandtcel": [331, 332], "belugandtmodelparam": [333, 334], "belugandtsensormodel": [89, 90], "beluganumer": [91, 92], "belugaomnidirectionaldrivemodel": [93, 94], "belugaomnidirectionaldrivemodelparam": [335, 336], "belugaparticle_trait": [377, 378], "belugapolici": [392, 393], "belugapoliciesdetailevery_n_fn": [379, 380], "belugapoliciesdetailevery_n_polici": [381, 382], "belugapoliciesdetailon_effective_size_drop_polici": [383, 384], "belugapoliciesdetailon_motion_fn": [385, 386], "belugapoliciesdetailon_motion_polici": [387, 388], "belugapoliciesdetailon_motion_policy_bas": [389, 390, 391], "belugapolicy_bas": [394, 395], "belugaray2d": [95, 96], "belugasparsevaluegrid": [97, 98], "belugaspatial_hash": [109, 110, 111, 112, 113, 114, 396], "belugastate_detailstate_fn": [397, 398], "belugastationarymodel": [99, 100], "belugath": [25, 31, 33, 37, 40, 119, 121, 164, 166, 172, 176, 178, 231, 234, 236, 238, 240, 242, 244, 248, 250, 252, 262, 263, 267, 269, 276, 281, 283, 292, 294, 306, 308, 310, 312, 430, 433, 435, 437, 441], "belugathrunrecoveryprobabilityestim": [101, 102], "belugatuple_index": [399, 400], "belugatuplecontain": [103, 104, 105], "belugatuplevector": 106, "belugavaluegrid2": [107, 108], "belugaviewsdetailas_common_tuple_indirect_fn": [401, 402], "belugaviewsdetailrandom_intersperse_fn": [403, 404], "belugaviewsdetailrandom_intersperse_view": [405, 406], "belugaviewsdetailsample_base_fn": [407, 408], "belugaviewsdetailsample_fn": [409, 410], "belugaviewsdetailsample_view": [411, 412], "belugaviewsdetailtake_evenly_fn": [413, 414], "belugaviewsdetailtake_while_kld_fn": [415, 416], "belugaviewsdetailzip_fn": [417, 418], "belugaweight_detailweight_fn": [419, 420], "benchmark_likelihood_field_model": 242, "bernoulli_distribut": 290, "best": [5, 6, 446], "better": [76, 104], "between": [25, 33, 64, 70, 101, 227, 229, 231, 238, 253, 289, 308, 313, 321, 335, 403, 469, 476, 478, 479, 481, 503, 524], "bibliographi": [274, 521], "bin_weight": 523, "binari": 3, "bind": [271, 383], "bind_back": [28, 29, 265, 271, 286, 289, 290, 296, 298, 428, 430], "bit": [78, 80, 307, 308], "bitset": [307, 308], "bitwis": [39, 40, 253], "black": [227, 469, 503], "blackwel": [41, 486, 536], "blob": 104, "blue": [227, 469, 503], "bodi": [1, 523], "bolic": 41, "bond": [447, 448, 453, 457, 473, 474, 476, 479], "bond_": [448, 453, 457, 464, 468, 474], "bond_beluga_amcl": [454, 458], "bond_nod": [448, 474], "bond_std": [448, 474], "bondcpp": [447, 448, 473, 474, 476], "book": 536, "bool": [16, 25, 29, 37, 39, 40, 44, 48, 50, 62, 64, 70, 78, 80, 104, 107, 119, 164, 174, 178, 231, 250, 253, 267, 271, 273, 276, 281, 283, 290, 298, 313, 319, 381, 383, 387, 390, 392, 393, 434, 435, 437, 448, 450, 453, 455, 457, 474, 481, 491, 520, 523, 524, 526, 529], "boolean": [50, 229, 267, 392, 478, 479], "boost": 357, "bootstrap": [4, 11], "border": [227, 469, 503], "borrow": [54, 56, 74, 76, 89], "both": [6, 17, 26, 31, 32, 33, 56, 60, 64, 74, 91, 172, 228, 229, 237, 238, 242, 253, 260, 262, 325, 331, 392, 444, 477, 478, 522, 523], "bound": [26, 54, 56, 74, 76, 83, 87, 89, 228, 251, 252, 253, 260, 343, 450, 455], "boundari": [72, 73, 227, 233, 236, 253, 469, 503], "boundarieslimit": 72, "box": [3, 83, 84, 87, 88, 227, 252, 469, 503], "boxth": [83, 87], "bresenham": [58, 60, 62, 162, 177, 228, 253, 291, 292, 319], "bresenham2i": [36, 37, 59, 60, 61, 62, 63, 95, 115, 181, 184, 185, 186, 187, 190, 193, 197, 198, 201, 210, 211, 212, 215, 216, 217, 221, 223, 228, 253, 292, 319, 320], "bresenham2ibresenham": [37, 228], "bresenham2ibresenham2i": 37, "bresenham2iinlin": 59, "bresenham2iinlineexplicit": 59, "bridg": 2, "brief": [26, 177, 260, 451, 463, 482, 497, 516], "bright": [479, 523], "broadcast": [448, 450, 453, 455, 457, 474], "broader": 4, "browser": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "bucket": [430, 476, 478, 479, 481, 524], "buffer": [447, 448, 449, 450, 453, 455, 457, 473, 474], "build": [1, 6, 477], "built": [5, 446, 478, 479], "burgard": [41, 486, 536], "burn": 3, "c": [2, 27, 40, 115, 144, 168, 177, 180, 182, 183, 191, 195, 221, 224, 229, 253, 254, 351, 428, 435, 443, 446, 464, 466, 468, 535], "cach": [3, 104], "cache1": [427, 428], "calcul": [4, 24, 26, 31, 33, 56, 89, 109, 111, 113, 151, 163, 165, 166, 171, 172, 177, 228, 236, 238, 242, 253, 260, 271, 307, 308, 329, 383, 396, 478, 479], "calculate_covari": [171, 172, 253, 254, 256], "calculate_covariancesophu": 172, "calculate_weighted_sample_covari": 172, "call": [16, 25, 28, 42, 145, 173, 174, 177, 229, 280, 281, 381, 392, 415, 437, 518], "callab": 253, "callabl": [15, 20, 42, 66, 68, 93, 95, 99, 175, 228, 253, 297, 307, 343, 347, 396, 403, 405, 415, 429, 430], "callback": [448, 450, 453, 455, 457, 474], "callbackreturn": [448, 453, 457, 474], "calmost_equal_to": [482, 516], "calmost_equal_tostd": [482, 516], "cambridg": [41, 486, 536], "camcl": [482, 516], "camclimplement": [26, 260], "camclnode2d": 451, "camclnodelet2d": 451, "camclparamsstruct": [26, 260, 482, 516], "can": [1, 2, 3, 4, 5, 6, 12, 17, 19, 25, 28, 33, 42, 54, 56, 64, 70, 72, 74, 76, 104, 106, 229, 238, 253, 264, 270, 271, 285, 295, 297, 301, 337, 347, 392, 397, 415, 419, 434, 437, 478, 479, 523], "candid": 523, "cannot": [40, 262], "canon": 518, "capabl": 42, "capac": [104, 105, 182, 191, 437], "capacityconstexpr": 437, "caption": 4, "cardin": 290, "care": [3, 297], "carlo": [1, 2, 11, 25, 26, 42, 228, 253, 260, 313, 446, 480, 481, 482, 485, 487, 495, 497, 504, 511, 516, 524], "cartesian": [31, 46, 240], "cartograph": 6, "cas_common_tuple_indirect_fnutil": [26, 260], "case": [1, 3, 6, 28, 31, 33, 64, 101, 172, 238, 253, 315, 437, 479, 523], "cassert": 263, "cassign_fnimplement": [26, 260], "cast": [31, 95, 96, 182, 191, 263, 292, 294], "castabl": [95, 228, 253, 291], "caststd": 292, "categori": [33, 37, 62, 70, 72, 182, 224, 233, 234, 236, 238, 253, 323, 327], "categorybeluga": [324, 328], "categorycategori": 234, "categorylandmarkcategori": 234, "catkin_make_isol": 5, "caus": 4, "cbasedensegrid2dens": [26, 260], "cbaselaserscanlas": [26, 260], "cbaselineargrid2linear": [26, 260], "cbaseoccupancygrid2occup": [26, 260], "cbaseregulargridregularli": [26, 260], "cbeammodelparamparamet": [26, 260], "cbeamsensormodelbeam": [26, 260], "cbearingmodelparamparamet": [26, 260], "cbearingsensormodelgener": [26, 260], "cbegin": [31, 33, 40, 64, 65, 182, 191, 238, 242, 263], "cbeginconstexpr": 40, "cbeluga": [228, 504], "cbeluga_amcl": 470, "cbeluga_ro": 504, "cbresenham2ibresenham": [26, 260], "ccellhash": [26, 260], "cciabatta": 228, "ccirculararrayan": [26, 260], "ccommon_tuple_typ": [26, 260], "ccommon_tuple_typemeta": [26, 260], "cdecay_tuple_lik": [26, 260], "cdecay_tuple_likemeta": [26, 260], "cdecltyp": 228, "cdetail": 228, "cdifferentialdrivemodelparamparamet": [26, 260], "cdifferentialdrivemodelsampl": [26, 260], "ceil": 430, "cell": [12, 14, 16, 19, 26, 36, 37, 44, 45, 48, 49, 50, 51, 52, 53, 60, 62, 85, 89, 95, 97, 98, 107, 108, 119, 163, 164, 228, 242, 244, 253, 260, 262, 263, 267, 292, 294, 306, 331, 332, 333, 441, 491, 492, 520, 526], "cell_at": 19, "cell_grid": 263, "cell_index": [97, 98, 306], "cell_is_valid": 292, "cell_near": [44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 119, 182, 191, 263, 267, 292, 294, 306, 491, 492], "cell_neareigen": [294, 306], "cell_posit": 292, "cellhash": [115, 201, 215, 228, 263, 358, 473, 474], "cellhasherdefinit": 263, "cells_data": [89, 90, 263], "cells_data_": 263, "cells_dataset": 263, "cells_dataspars": 89, "cells_matrix": 263, "cellsrang": [50, 52], "cend": [31, 33, 40, 64, 65, 182, 191, 238, 242, 263], "cendconstexpr": 40, "center": [99, 172, 242, 263, 329], "centroid": [48, 52, 95], "certain": [229, 270], "cevery_n_fnimplement": [26, 260], "cevery_n_policyimplement": [26, 260], "cexponentialfiltercal": [26, 260], "chain_inherit": 38, "chang": [265, 479], "changelog": 38, "chapter": [54, 66, 74, 76, 101, 321, 329], "character": 253, "charg": [478, 479], "chas_common_tuple_typ": [26, 260], "chas_common_tuple_typemeta": [26, 260], "chas_single_el": [26, 260], "chas_single_elementmeta": [26, 260], "chash": [26, 260], "cheap": 297, "cheapli": 392, "check": [5, 12, 26, 39, 40, 44, 48, 50, 70, 104, 107, 228, 253, 260, 361, 387, 389, 390, 434, 435, 520, 526], "checks_": 37, "choic": 5, "chrome": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "ciabatta": [177, 239, 240, 293, 294], "ciabatta_ciabatta_hpp": 38, "ciabatta_top": [38, 228, 240, 294], "cindexingiteratora": [26, 260], "circl": 172, "circuit": [281, 394], "circular": [25, 26, 39, 40, 64, 117, 148, 172, 177, 228, 229, 253, 260, 424, 426], "circular_arrai": [25, 37, 64, 116, 117, 148, 177, 424, 426], "circulararrai": [26, 37, 39, 40, 65, 115, 179, 181, 182, 184, 185, 188, 189, 190, 191, 192, 193, 194, 199, 201, 202, 203, 204, 210, 213, 215, 216, 217, 219, 220, 221, 223, 228, 229, 253, 260, 425, 481], "circulararrayan": [25, 40], "circulararraycirculararrai": 40, "circulararrayfeatureflag": [39, 40, 64, 253, 254, 255, 424, 426], "circulararrayfeatureflagscirculararrayfeatureflagsfeatur": 40, "circularli": [78, 250], "cis_tuple_likemeta": [26, 260], "cite": 250, "citeratorbresenham": [26, 260], "clamp": 433, "clandmarkbearingdetectionlandmark": [26, 260], "clandmarkmapbas": [26, 260], "clandmarkmodelparamparamet": [26, 260], "clandmarkpositiondetectionlandmark": [26, 260], "clandmarksensormodelgener": [26, 260], "claserscanthin": [482, 516], "class": [2, 3, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 118, 119, 120, 121, 163, 164, 165, 166, 171, 172, 173, 175, 176, 178, 227, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 337, 339, 341, 343, 345, 347, 349, 356, 359, 364, 366, 367, 368, 371, 374, 376, 377, 383, 385, 387, 389, 390, 392, 394, 396, 397, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 427, 428, 429, 430, 433, 434, 435, 436, 437, 440, 441, 444, 445, 447, 448, 449, 450, 469, 473, 474, 480, 481, 492, 503, 507, 508, 509, 510, 511, 518, 519, 520, 522, 523, 528, 531, 532, 533, 534], "classif": 41, "clear": [40, 64, 65, 104, 105, 182, 191, 437, 523], "clearconstexpr": 437, "clearvoid": 40, "client": [450, 455], "clikelihoodfieldmodellikelihood": [26, 260], "clikelihoodfieldmodelparamparamet": [26, 260], "clinebresenham": [26, 260], "close": [1, 33, 54, 172], "closest": 238, "closur": [28, 29, 174, 229, 265, 273, 286, 290, 296, 298, 337, 339, 341, 343, 345, 347, 349, 379, 385, 403, 409, 413, 415, 428, 430], "cloud": [31, 54, 76, 89, 242, 263, 448, 450, 453, 455, 457, 474, 485, 495, 497, 505, 511, 522, 523], "cluster": [253, 254, 258, 282, 283], "clustertag": [253, 282, 283], "clutter": 54, "cmake": 5, "cmake_from_state_fnfunct": [26, 260], "cmath": [30, 31, 32, 33, 237, 238, 239, 240, 241, 242, 293, 294, 307, 308, 429, 430, 519, 520, 522, 523], "cmultivariate_distribution_trait": [26, 260], "cmultivariate_distribution_traitsforward": [26, 260], "cmultivariatenormaldistributionmultivari": [26, 260], "cmultivariatenormaldistributionparammultivari": [26, 260], "cmultivariateuniformdistribut": [26, 260], "cmultivariateuniformdistributionprimari": [26, 260], "cndtamclnode2d": 451, "cndtcellrepresent": [26, 260], "cndtmodelparamparamet": [26, 260], "cndtsensormodelndt": [26, 260], "cnodelet": 470, "cnormalize_base_fnimplement": [26, 260], "cnormalize_fnimplement": [26, 260], "cnumeric_limit": [26, 228, 260], "cnumerichelp": [26, 260], "co": [240, 534], "coccupancygridthin": [482, 516], "code": [1, 3, 11, 21, 23, 28, 30, 32, 34, 36, 39, 116, 118, 120, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 165, 168, 171, 173, 175, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 357, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 462, 473, 480, 484, 495, 507, 519, 522, 531, 533], "coeff": 534, "coeffici": [172, 304], "coeffref": [172, 534], "cognit": 3, "coincid": 479, "col": [263, 303, 304], "colcon": 5, "collabor": [0, 44, 46, 48, 50, 52, 60, 97, 106, 107, 341, 345, 349, 361, 362, 363, 364, 365, 387, 392, 400, 405, 409, 411, 423, 426, 453, 455, 457, 489, 491], "collect": [2, 4], "color": [479, 522, 523], "color_rgba": 509, "colorrgba": [509, 522, 523], "colsatcompiletim": [248, 250, 371], "colsth": 303, "column": [248, 250, 303], "colwis": 263, "com": [0, 5, 31, 104, 242, 253, 351, 365, 397, 419, 523, 536], "combin": [39, 40, 242, 253, 329, 446, 473, 474, 523], "come": [2, 7, 8, 9, 10, 537, 538, 539, 540], "command": 6, "comment": [227, 469, 503], "commerci": 0, "common": [4, 26, 171, 172, 228, 253, 260, 262, 263, 264, 265, 275, 285, 286, 295, 296, 297, 298, 351, 352, 361, 362, 377, 430, 434, 435, 437], "common_tupl": [104, 437, 445], "common_tuple_typ": [26, 115, 220, 221, 228, 253, 260, 352, 353, 434, 435], "common_tuple_type_t": [26, 66, 93, 99, 115, 121, 228, 253, 254, 258, 260, 269, 310, 434, 435], "common_tuple_type_tconveni": 435, "common_tuple_type_ttypenam": 435, "common_tuple_typemeta": 435, "common_typ": 351, "common_type_t": [290, 352, 435], "common_types_t": 351, "commun": [478, 479], "comnidirectionaldrivemodelparamparamet": [26, 260], "comnidirectionaldrivemodelsampl": [26, 260], "compar": [4, 78, 80, 164, 253, 301, 434, 437, 529], "compat": [6, 78, 229, 250, 446, 471, 477, 505, 511, 512], "compil": [3, 64, 290, 308], "complet": [4, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 101, 102, 105, 108, 110, 112, 114, 228, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 353, 355, 358, 360, 369, 370, 372, 373, 375, 378, 380, 382, 384, 386, 388, 391, 393, 395, 398, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 425, 454, 456, 458, 470, 488, 490, 492, 504, 525, 527, 530], "complex": [3, 4, 64, 172, 308], "complianc": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "compliant": 42, "compon": [2, 74, 172, 229, 471, 505], "compos": [3, 25, 38, 229, 265, 276, 286, 290, 296, 339, 341, 343, 345, 347, 349, 392, 403, 413, 415, 428, 430, 446, 447, 448, 451, 453, 457, 470, 471, 473, 474, 478, 479, 481], "composit": [29, 337], "comput": [3, 4, 12, 14, 26, 31, 40, 42, 44, 48, 50, 52, 54, 56, 58, 66, 70, 74, 76, 85, 93, 95, 97, 99, 101, 107, 171, 172, 228, 242, 253, 260, 263, 295, 333, 347, 351, 415, 435], "computation": [54, 76, 263], "compute_free_st": 252, "compute_offset": 298, "con_effective_size_drop_policyimplement": [26, 260], "con_motion_fnimplement": [26, 260], "con_motion_policy_bas": [26, 260], "con_motion_policy_baseprimari": [26, 260], "con_motion_policybas": [26, 260], "concept": [1, 2, 3, 25, 104, 118, 153, 229, 236, 243, 266, 270, 271, 293, 297], "concret": 38, "condens": 479, "condit": [4, 15, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 42, 54, 56, 66, 74, 76, 89, 93, 99, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 229, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 383, 392, 428, 429, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "conditional_t": [89, 263, 333], "confer": [41, 486, 536], "config": [450, 455, 456], "config_": [450, 455, 464, 468], "config_beluga_amcl": [450, 456], "config_callback": [450, 455, 456, 464, 466], "config_callbackvoid": 450, "config_curr": 450, "config_server_": [450, 455, 464, 468], "config_server_beluga_amcl": [450, 456], "config_server_std": 450, "configur": [33, 42, 54, 56, 66, 74, 76, 89, 93, 121, 238, 242, 263, 269, 446, 448, 450, 453, 455, 457, 474, 476, 478, 479, 487], "configured_": [450, 455, 464, 468], "configured_beluga_amcl": 456, "configured_bool": 450, "configured_flag": 450, "confus": 308, "conjunction_v": [276, 283, 397, 419], "connect": [12, 14, 44, 48, 50, 107, 119, 244, 448, 450, 453, 455, 457, 474], "consid": [5, 25, 64, 227, 236, 272, 313, 469, 476, 478, 479, 489, 503], "consist": [4, 16, 25, 171, 172, 229, 253, 427], "const": [12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 29, 31, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 164, 166, 171, 172, 174, 201, 215, 231, 236, 238, 240, 242, 244, 248, 249, 250, 251, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 281, 283, 286, 290, 292, 294, 296, 298, 301, 302, 303, 304, 306, 307, 308, 310, 312, 319, 320, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 383, 385, 387, 388, 390, 391, 392, 397, 398, 401, 402, 403, 407, 409, 413, 415, 417, 419, 420, 428, 430, 433, 434, 435, 436, 437, 441, 445, 448, 450, 453, 454, 455, 456, 457, 458, 473, 474, 481, 487, 488, 489, 491, 492, 508, 510, 518, 520, 523, 529, 530, 531, 532, 533, 534], "const_": 276, "const_iter": [40, 64, 65, 182, 221], "const_iteratorconst": 40, "const_iteratorindexingiter": 40, "const_point": [40, 64, 65, 182, 221], "const_pointerconst": 40, "const_refer": [40, 64, 65, 182, 221], "const_referenceconst": 40, "const_reverse_iter": [40, 64, 65, 182, 221], "const_reverse_iteratorconst": 40, "const_reverse_iteratorstd": 40, "constant": [39, 40, 64, 121, 242, 253, 269, 476, 481, 524], "constarrow": 37, "constbeluga": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 73, 75, 77, 79, 81, 90, 94, 96, 98, 100, 105, 108, 110, 112, 114, 320, 332, 340, 342, 344, 346, 348, 350, 358, 360, 380, 384, 386, 404, 408, 410, 414, 416, 418, 490, 492], "constbeluga_amcl": 458, "constbeluga_ro": [488, 490, 492, 530], "constcalcul": 308, "constcast": 292, "constcheck": [119, 267], "constcompar": [250, 523], "constcomput": [37, 119, 121, 244, 267, 269, 292, 294, 306, 310], "constdefinit": [262, 263], "constderefer": 37, "constequ": 37, "constexpr": [25, 28, 29, 33, 38, 39, 40, 64, 68, 85, 91, 101, 104, 111, 113, 168, 169, 173, 174, 176, 178, 238, 248, 250, 252, 253, 262, 263, 264, 265, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 285, 286, 289, 290, 295, 296, 297, 298, 307, 308, 312, 331, 337, 339, 341, 343, 345, 347, 349, 359, 367, 368, 371, 374, 376, 379, 381, 383, 385, 387, 390, 392, 394, 397, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 427, 428, 429, 430, 433, 434, 435, 437, 444, 445, 476, 520, 523, 526], "constexprnoexcept": [253, 434], "constfind": [33, 236, 238], "constgener": 250, "constget": [119, 244, 267, 306, 441, 474, 508, 520], "consthash": 263, "constinequ": 37, "constoverload": [174, 265, 271, 273, 286, 290, 296, 298, 428, 430, 445], "constptr": [450, 455, 456, 509], "constrain": 74, "constraint": [228, 252], "constraintth": 82, "constretriev": 267, "constreturn": [25, 31, 33, 37, 40, 236, 238, 242, 250, 263, 276, 437, 481], "construct": [18, 25, 26, 30, 31, 32, 33, 37, 40, 42, 54, 56, 58, 60, 62, 64, 66, 68, 70, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 104, 107, 109, 111, 113, 120, 121, 172, 228, 231, 237, 238, 241, 242, 250, 252, 253, 260, 263, 268, 269, 290, 298, 306, 308, 315, 317, 321, 325, 329, 333, 335, 405, 411, 436, 437, 441, 523, 529], "constructor": [18, 33, 37, 38, 40, 42, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 101, 104, 107, 109, 111, 113, 121, 174, 231, 236, 238, 242, 263, 269, 273, 281, 290, 298, 308, 312, 381, 390, 392, 405, 411, 437, 448, 453, 457, 474, 481, 487, 489, 491, 529], "constsampl": 298, "constsentinel": 37, "constsharedptr": [448, 453, 454, 457, 458, 474, 509], "constview": 240, "contain": [2, 3, 6, 12, 14, 25, 26, 28, 34, 35, 42, 44, 45, 48, 49, 50, 51, 64, 66, 70, 93, 97, 99, 101, 103, 104, 106, 107, 108, 111, 113, 119, 146, 149, 177, 182, 191, 227, 228, 229, 230, 231, 253, 260, 292, 306, 313, 383, 415, 424, 426, 442, 446, 469, 480, 481, 482, 487, 491, 492, 503, 504, 511, 516, 524], "containerscontain": 123, "containersinclud": [134, 135], "containsbool": 119, "content": 78, "contigu": [14, 64, 153, 177, 229, 243, 267, 289, 441], "continu": [263, 478, 479], "contribut": 5, "control": [3, 4, 15, 66, 67, 93, 94, 99, 100, 121, 269, 310], "control_act": [25, 42, 43], "control_action_typ": [93, 99], "control_action_window_": [25, 481], "control_actioncontrol": 42, "control_typ": [15, 66, 67, 93, 94, 99, 100, 121, 182, 221, 269, 310], "control_typecurr": [121, 269, 310], "control_typestd": [121, 269, 310], "controla": [66, 93, 99], "conveni": [39, 40, 91, 104, 253, 293, 301, 305, 434, 437], "converg": [101, 479], "convers": [3, 28, 29, 30, 31, 32, 33, 91, 104, 237, 238, 241, 242, 281, 392, 478, 479, 485, 495, 497, 505, 510, 516, 518, 523, 531, 532, 533, 534], "convert": [15, 28, 29, 31, 229, 236, 238, 248, 297, 308, 367, 368, 371, 374, 376, 476, 510, 518, 523, 531, 532, 533, 534], "convini": 473, "coordin": [12, 14, 16, 19, 44, 46, 48, 50, 52, 85, 97, 98, 107, 109, 240, 242, 244, 267, 294, 306, 308, 476, 478, 479, 523, 529], "coordinates_at": [14, 16, 19, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 182, 191, 242, 244, 267, 292, 294, 491, 492], "coordinates_atauto": 267, "coordinates_ateigen": [244, 294], "coordinates_for": [16, 19, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 182, 191, 252, 267, 294, 491, 492], "coordinates_forauto": [267, 294], "copi": [3, 22, 24, 25, 28, 29, 31, 33, 35, 37, 38, 40, 58, 60, 70, 78, 104, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 297, 298, 300, 302, 304, 306, 308, 310, 312, 401, 428, 430, 432, 433, 435, 436, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "copied_s": 437, "coplanar": 489, "copy_tag": [401, 402, 445], "copyabl": [107, 392], "copyassign": 18, "copyconstruct": 18, "copyright": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "core": [3, 36, 37, 40, 118, 119, 233, 234, 243, 244, 247, 248, 262, 263, 266, 267, 293, 294, 297, 305, 306, 473, 474, 531, 532], "correct": [4, 31, 248, 249, 250, 253, 437, 448, 450, 453, 455, 457, 474, 478], "correl": 250, "correspond": [5, 12, 13, 16, 18, 50, 74, 78, 250, 264, 478, 479, 520, 526], "cos_apertur": [33, 238], "cos_theta": 242, "could": 290, "couldn": 263, "count": [104, 105, 173, 174, 229, 379, 380, 381, 382, 413, 414, 427, 428, 430, 437], "count_": 174, "count_if": [171, 172], "counter": 381, "counterpart": 477, "countnew": 104, "countnumb": 413, "countsiz": 104, "countth": 381, "cov": [262, 263], "covari": [25, 42, 43, 78, 79, 80, 81, 99, 171, 172, 182, 224, 248, 250, 253, 262, 263, 331, 367, 368, 371, 374, 376, 446, 448, 450, 453, 455, 457, 474, 476, 478, 479, 481, 487, 488, 518, 533, 534], "covariance_": 479, "covariance_i": 476, "covariance_matrix": 172, "covariance_typ": [78, 79, 182, 221, 228, 248, 249, 250, 253, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "covariance_typeth": [248, 250], "covariance_typetypenam": [248, 250], "covariance_x": 476, "covariance_xi": 476, "covariance_xyaw": 476, "covariance_yaw": 476, "covariance_yyaw": 476, "covariancebeluga": 332, "covariancecovari": 262, "covarianceeigen": 262, "covarianceeigentorowmajor": [513, 514, 518, 533, 534], "covarianceeigentorowmajorarrai": 534, "covariancer": [78, 80], "covariancerowmajortoeigen": [513, 514, 518, 533, 534], "covariancerowmajortoeigensophu": 534, "covariances_dataset": 263, "covariancet": [25, 42, 43], "covariancettyp": 42, "cover": 3, "cp": [15, 17, 20], "cparticle_traitscommon": [26, 260], "cpo": [397, 419], "cpolicy_baseimplement": [26, 260], "cpolicyfn": 228, "cpolicyforward": [26, 260], "cpp": [242, 253, 351, 365, 397, 419], "cpprefer": [253, 351, 365, 397, 419], "cpropagate_base_fnimplement": [26, 260], "cpropagate_fnimplement": [26, 260], "crandom_intersperse_fnimplement": [26, 260], "crandom_intersperse_viewimplement": [26, 260], "crang": 228, "cray2dcast": [26, 260], "crbegin": [40, 64, 65, 182, 191], "crbeginconstexpr": 40, "crclcpp_lifecycl": 470, "creat": [17, 18, 26, 91, 172, 174, 228, 236, 253, 260, 273, 275, 276, 283, 298, 311, 312, 329, 337, 359, 379, 385, 478, 479, 481, 524], "create_timer_ro": 476, "crend": [40, 64, 65, 182, 191], "crendconstexpr": 40, "creweight_base_fnimplement": [26, 260], "creweight_fnimplement": [26, 260], "cross": [33, 172, 238], "crtp": 38, "csample_base_fnimplement": [26, 260], "csample_fnimplement": [26, 260], "csample_viewimplement": [26, 260], "csentinelpast": [26, 260], "csparsevaluegridgener": [26, 260], "cspatial_hash": [26, 260], "cspatial_hashcal": [26, 260], "cstate_fncustom": [26, 260], "cstate_typ": 228, "cstationarymodela": [26, 260], "cstd": 228, "cstdint": [36, 37, 39, 40, 230, 231, 233, 234, 235, 236, 243, 244, 263, 266, 267, 307, 308, 440, 441], "ctake_evenly_fnimplement": [26, 260], "ctake_while_kld_fnimplement": [26, 260], "cthrunrecoveryprobabilityestimatorrandom": [26, 260], "ctuple_el": [26, 260], "ctuple_index": [26, 260], "ctuple_indexmeta": [26, 260], "ctuple_s": [26, 260], "ctuplecontain": [26, 260], "ctuplecontainerprimari": [26, 260], "ctuplevectorshorthand": [26, 260], "cube": 242, "cup": 4, "curious": 2, "current": [1, 4, 25, 40, 42, 64, 66, 70, 93, 99, 104, 229, 231, 273, 285, 295, 347, 381, 390, 391, 437, 446, 448, 450, 453, 455, 457, 474, 476, 478, 479, 481, 487, 524], "current_": 174, "current_orient": [121, 269], "current_point_": 37, "currentth": 390, "curri": 38, "cursor": [70, 71, 231, 298], "cursor_": 231, "custom": [17, 25, 42, 253, 282, 397, 419, 481, 487, 518], "cvaluegrid2gener": [26, 260], "cvaluetraitstrait": [482, 516], "cweight_fncustom": [26, 260], "cwisesqrt": 250, "cycl": [3, 253], "cyril": [41, 486, 536], "czip_fnimplement": [26, 260], "d": [0, 1, 6, 18, 27, 31, 41, 115, 180, 183, 184, 192, 195, 221, 224, 254, 464, 468, 486, 498, 536], "d1": [89, 184, 224, 262, 263, 331, 332, 333], "d1beluga": 334, "d1doubl": 263, "d1scale": 263, "d2": [89, 184, 224, 262, 263, 331, 332, 333], "d2beluga": 334, "d2doubl": 263, "d2scale": 263, "dark": [227, 469, 503], "dash": [227, 469, 503], "data": [3, 6, 12, 14, 16, 26, 31, 33, 40, 41, 42, 44, 46, 48, 50, 52, 64, 65, 72, 97, 98, 107, 108, 172, 177, 184, 192, 228, 233, 234, 238, 241, 242, 251, 252, 253, 260, 263, 321, 323, 327, 329, 331, 333, 335, 371, 473, 474, 478, 479, 487, 489, 491, 492, 498, 500, 505, 507, 508, 519, 520], "data_": [40, 306, 441], "data_at": [12, 14, 44, 45, 48, 49, 50, 51, 97, 98, 107, 108, 119, 184, 192, 244, 263, 267, 306, 491, 492], "data_atauto": [119, 244, 267], "data_atstd": 306, "data_near": [12, 44, 45, 48, 49, 50, 51, 97, 98, 107, 108, 119, 184, 192, 242, 306, 491, 492], "data_nearauto": 119, "data_nearstd": 306, "dataaggreg": 64, "dataconst": [306, 441, 520], "dataconstexpr": 40, "datagrid": [97, 107], "datainclud": 142, "datalikelihood_field_model": 140, "dataset": 263, "datatyp": [26, 33, 72, 153, 177, 228, 235, 236, 238, 253, 260], "date": [5, 476, 478, 479], "dbuild_test": 5, "debug": [262, 331], "decai": [26, 228, 253, 260, 354, 434, 435, 476, 478, 479, 481, 524], "decay_t": [26, 29, 115, 220, 221, 228, 253, 260, 265, 276, 283, 286, 296, 339, 341, 343, 345, 347, 349, 351, 352, 355, 364, 377, 397, 400, 419, 434, 435], "decay_tuple_lik": [26, 115, 220, 221, 228, 253, 260, 276, 355, 356, 434, 435], "decay_tuple_like_t": [253, 254, 258, 276, 434, 435, 436, 437], "decay_tuple_like_tconveni": [276, 435], "decay_tuple_like_ttypenam": [276, 435], "decay_tuple_likemeta": 435, "decid": [229, 476, 478, 479, 481, 524], "declar": [18, 25, 26, 228, 248, 250, 253, 260, 265, 271, 281, 286, 296, 366, 392], "declare_common_param": 476, "declare_paramet": 476, "decltyp": [25, 29, 37, 38, 70, 164, 168, 169, 228, 231, 240, 253, 276, 283, 286, 290, 298, 377, 397, 419, 434, 435, 437, 481, 523], "declval": [70, 231, 276, 283, 290, 298, 377], "decreas": 523, "decrement": [70, 231], "dedu": 58, "deduc": [249, 250, 253], "deduct": [106, 249, 250, 251, 252, 253, 436, 437], "default": [6, 18, 26, 37, 38, 40, 58, 60, 62, 64, 70, 78, 80, 91, 95, 97, 104, 106, 109, 167, 228, 231, 250, 253, 260, 264, 265, 270, 281, 285, 286, 290, 292, 295, 296, 298, 306, 308, 312, 339, 341, 343, 345, 349, 383, 392, 403, 405, 411, 415, 429, 430, 436, 437, 450, 455, 456, 478, 479, 481, 487], "default_config_": [450, 455, 464, 468], "default_config_beluga_amcl": [450, 456], "default_config_default": 450, "default_random_engin": [290, 298, 403, 405, 411], "defaultbeluga": [59, 61, 63, 65, 71, 79, 81, 92, 98, 105, 110, 393, 406, 412], "defaultconstruct": [37, 250, 306], "defaultdefault": [37, 40, 231, 281, 290, 298, 308, 312, 437], "defer": 38, "defin": [2, 4, 13, 16, 17, 19, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 44, 46, 48, 50, 52, 61, 65, 70, 79, 95, 106, 117, 119, 121, 145, 164, 166, 167, 169, 172, 173, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 270, 271, 272, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 341, 345, 349, 397, 419, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 454, 456, 458, 474, 476, 481, 485, 508, 509, 518, 520, 523, 532, 534], "definit": [25, 29, 31, 33, 37, 40, 119, 121, 164, 166, 167, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 281, 283, 286, 290, 292, 294, 296, 298, 302, 306, 308, 310, 312, 428, 430, 433, 435, 437, 441, 445, 448, 450, 474, 481, 508, 509, 520, 523, 532, 534], "degeneraci": [42, 487], "degrad": [54, 253], "degre": [3, 523], "delai": [476, 479], "delet": [38, 290], "delta": [121, 250, 269, 273], "delta_bear": 269, "delta_rot_hat": 269, "denot": [227, 469, 503], "dens": [12, 14, 44, 118, 153, 167, 177, 228, 244, 253], "dense_grid": [44, 153, 177, 243, 244], "densegrid2": [14, 44, 274], "densiti": [18, 523], "dep": 5, "depend": [21, 23, 28, 30, 32, 33, 34, 36, 39, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 473, 474, 480, 484, 507, 519, 522, 531, 533], "depict": 479, "depriv": 476, "depth": 6, "derefer": [62, 70, 428, 444], "deriv": [26, 45, 47, 49, 51, 53, 107, 108, 118, 119, 182, 184, 186, 188, 191, 192, 194, 197, 200, 201, 202, 210, 214, 215, 216, 228, 239, 240, 243, 244, 247, 251, 252, 253, 260, 266, 267, 293, 294, 367, 368, 371, 374, 376], "derivedconcret": [44, 46, 48, 50, 52], "describ": [44, 46, 48, 50, 52, 74, 229, 478, 479], "descript": [21, 23, 26, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 116, 118, 120, 163, 165, 168, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 260, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 451, 453, 455, 457, 463, 473, 476, 480, 482, 484, 487, 489, 491, 497, 507, 510, 511, 512, 516, 518, 519, 522, 524, 526, 528, 529, 531, 533], "descriptor": 476, "design": [173, 270, 272], "desir": 270, "destroi": 236, "destructor": [42, 54, 56, 60, 64, 66, 68, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 101, 104, 107, 109, 111, 113, 381, 390, 405, 411, 487, 489, 491, 529], "detail": [21, 23, 25, 26, 28, 29, 30, 32, 34, 36, 38, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 115, 116, 118, 120, 163, 165, 168, 171, 173, 174, 175, 177, 185, 193, 201, 203, 204, 211, 215, 217, 218, 219, 224, 228, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 260, 263, 264, 265, 266, 268, 270, 271, 272, 273, 275, 276, 277, 279, 281, 282, 285, 286, 287, 289, 290, 291, 293, 295, 296, 297, 298, 299, 301, 303, 305, 307, 308, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 442, 444, 445, 447, 449, 451, 453, 455, 457, 463, 470, 473, 474, 480, 481, 482, 484, 487, 489, 491, 493, 497, 498, 500, 502, 504, 507, 509, 510, 511, 512, 516, 518, 519, 522, 523, 524, 526, 528, 529, 530, 531, 533], "detect": [26, 32, 33, 56, 57, 72, 74, 75, 121, 228, 229, 233, 234, 236, 237, 238, 253, 260, 269, 272, 273, 321, 323, 327, 335, 383, 387, 390], "detection_bearing_in_robot": 238, "detection_bearing_in_sensor": [33, 72, 73, 184, 224, 234, 236, 323], "detection_bearing_in_sensorbear": 234, "detection_bearing_in_sensorbeluga": 324, "detection_bearing_in_sensorlandmarkbearing3": 234, "detection_bearing_in_sensorth": 72, "detection_categori": [33, 72, 73, 236, 238], "detection_categoryth": 72, "detection_position_in_robot": [184, 224, 234, 236, 238, 327], "detection_position_in_robotbeluga": 328, "detection_position_in_robotdetect": 234, "detection_position_in_robotlandmarkposition3": 234, "detection_position_in_world": [72, 73, 236, 238], "detection_position_in_worldth": 72, "detection_range_in_robot": 238, "detection_weight": [33, 238], "detections2d": 74, "detectionslandmark": 56, "determin": 253, "develop": [5, 6], "deviat": [31, 33, 171, 172, 238, 242, 253, 315, 317, 325, 329, 478, 479], "diagnosic_updater_": [450, 455, 464, 468], "diagnosic_updater_beluga_amcl": 456, "diagnosic_updater_diagnost": 450, "diagnosic_updater_diagnostic_updat": 450, "diagnost": [450, 455, 478], "diagnostic_updat": [449, 450, 455, 456], "diagnosticarrai": 478, "diagnostics_msg": 478, "diagnosticstatuswrapp": [450, 455, 456], "diagram": [44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 453, 455, 457, 489, 491], "dictat": [478, 479], "did": [33, 238, 523], "dieter": [41, 486, 536], "diff": 478, "differ": [18, 37, 40, 62, 64, 70, 89, 91, 104, 231, 301, 308, 437, 523], "difference_typ": [37, 40, 62, 63, 64, 65, 70, 71, 104, 105, 184, 221, 231, 437], "difference_typediffer": 437, "difference_typeiter": 37, "difference_types": 40, "difference_typesign": 231, "difference_typestd": [37, 40, 231, 437], "differenti": [26, 66, 120, 121, 156, 177, 228, 229, 246, 253, 260, 446, 476], "differential_dr": [476, 478, 479], "differential_drive_model": [66, 156, 177, 245, 246, 321, 473, 474], "differentialdrivemodel": [2, 15, 26, 67, 115, 120, 121, 182, 184, 192, 201, 215, 216, 219, 221, 228, 229, 253, 260, 321, 473, 474, 481, 487], "differentialdrivemodeldifferentialdrivemodel": 121, "differentialdrivemodelinlin": 67, "differentialdrivemodelinlineexplicit": 67, "differentialdrivemodelparam": [66, 115, 120, 121, 184, 217, 220, 224, 253, 322], "differentialdrivemodelparamparamet": [121, 228], "differentialdrivemodelsampl": [121, 228], "differentialmotionmodel": [476, 479], "digit": 308, "dim": [167, 263, 479, 523], "dimens": [262, 331], "dimension": [19, 24, 26, 52, 78, 97, 119, 151, 177, 228, 253, 260, 262, 263, 293, 294, 305, 306, 307, 331, 357, 480, 485, 487, 495, 497], "dims_out": 263, "direct": [64, 95, 292], "directional_statist": 172, "directli": [18, 21, 23, 28, 30, 32, 34, 36, 39, 101, 116, 118, 120, 163, 165, 168, 171, 173, 175, 230, 233, 237, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 427, 429, 434, 436, 438, 440, 442, 444, 480, 507, 518, 519, 522, 531, 533], "dirti": 31, "discard": [4, 46], "discret": [4, 18, 26, 32, 74, 152, 177, 228, 229, 237, 238, 253, 260, 300, 478, 479, 491, 520], "discrete_distribut": 298, "dispers": 172, "distanc": [24, 25, 40, 64, 70, 95, 121, 151, 163, 164, 177, 231, 236, 242, 253, 269, 272, 292, 313, 321, 329, 335, 390, 429, 437, 478, 479], "distance_funct": [163, 164, 242, 253], "distance_functiongiven": 253, "distance_map": [23, 24, 151, 177, 241, 242], "distance_threshold": [121, 184, 224, 269, 321, 335], "distance_thresholdbeluga": [322, 336], "distance_thresholddist": [121, 269], "distance_thresholddoubl": [121, 269], "distance_to": 290, "distance_vari": [121, 269], "distancefunct": [163, 164, 242, 253], "distancefunctiona": 253, "distancetyp": [164, 253], "distri": 481, "distribut": [3, 4, 11, 15, 18, 22, 24, 25, 26, 29, 31, 33, 35, 37, 38, 40, 42, 43, 78, 80, 81, 82, 83, 85, 87, 117, 119, 121, 146, 159, 164, 166, 167, 169, 170, 172, 174, 176, 177, 178, 204, 219, 228, 229, 231, 234, 236, 238, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 260, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 287, 288, 290, 292, 294, 296, 297, 298, 300, 302, 304, 306, 308, 310, 312, 315, 331, 403, 407, 408, 409, 410, 412, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 474, 476, 478, 479, 481, 485, 487, 488, 508, 509, 511, 520, 522, 523, 524, 532, 534], "distribution_": [250, 252, 290, 298], "distribution_typ": 18, "distributiona": [80, 411], "distributionparam": [121, 269], "distributionth": 411, "distrubut": 253, "div_hashed_valu": 308, "divers": [2, 4, 42, 478, 479, 481, 487, 524], "divid": [19, 107, 229, 264, 476], "djuric": 41, "do": [64, 292, 478, 479], "do_beamskip": 479, "doc": [308, 357], "document": [5, 22, 24, 28, 29, 31, 33, 35, 37, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 117, 119, 121, 164, 166, 168, 169, 172, 173, 174, 176, 177, 179, 181, 182, 184, 185, 188, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 254, 260, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 283, 285, 286, 288, 289, 290, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 427, 428, 429, 430, 432, 434, 435, 437, 439, 441, 443, 444, 445, 448, 450, 453, 455, 457, 463, 464, 469, 474, 475, 481, 485, 487, 489, 491, 497, 498, 503, 508, 511, 513, 516, 518, 520, 521, 522, 523, 524, 526, 528, 529, 532, 534], "doe": [2, 4, 18, 40, 64, 104, 227, 253, 297, 392, 469, 479, 503], "doesn": [38, 78, 97, 263, 479], "doi": 536, "don": [6, 28, 248, 276, 292, 437], "dontaligncol": 304, "dot": [4, 33, 236, 238], "dot_product_a": 236, "dot_product_b": 236, "doubl": [12, 16, 19, 25, 31, 33, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 68, 69, 74, 76, 89, 91, 95, 96, 97, 98, 101, 102, 107, 108, 109, 110, 111, 113, 119, 121, 172, 176, 228, 238, 242, 252, 253, 262, 263, 265, 267, 269, 271, 282, 283, 290, 292, 294, 306, 307, 308, 313, 315, 317, 321, 325, 329, 331, 332, 333, 335, 339, 340, 341, 342, 383, 384, 403, 404, 405, 406, 415, 416, 429, 430, 433, 441, 474, 476, 481, 489, 491, 492, 508, 520, 523, 524, 532, 534], "doublenear": 302, "doubt": 5, "down": 3, "doxygen": [227, 469, 503], "draw": [4, 26, 36, 37, 58, 60, 62, 228, 253, 260, 297], "drawing_values_from_the_distribut": 250, "drift": [478, 479], "drive": [26, 66, 93, 120, 121, 156, 177, 228, 229, 246, 253, 260, 268, 269, 446, 476], "drop": [229, 270, 383], "due": 54, "durabl": 6, "dure": [4, 28, 101, 453, 455, 457], "dx_": 4, "dxspan_": 37, "dynam": [4, 263], "dynamic_reconfigur": [449, 450, 455], "dyspan_": 37, "e": [3, 15, 27, 64, 70, 91, 104, 111, 113, 115, 180, 183, 185, 193, 195, 231, 234, 253, 254, 301, 302, 323, 327, 464, 468, 498], "each": [4, 12, 18, 54, 104, 111, 113, 163, 164, 168, 171, 172, 179, 181, 182, 184, 185, 188, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 229, 242, 253, 264, 277, 290, 307, 308, 347, 403, 405, 415, 430, 437, 464, 476, 478, 479, 498, 523, 524], "eagerli": [28, 229, 337], "earli": 3, "easili": 4, "ecosystem": 477, "eff": [478, 479, 524], "effect": [4, 18, 24, 25, 28, 40, 64, 145, 151, 165, 177, 229, 253, 270, 271, 280, 476, 478, 479, 524], "effective_s": [40, 64, 65, 185, 193], "effective_sample_s": [23, 24, 151, 177, 253, 254, 256, 270, 271], "effective_sample_sizeauto": [166, 271], "effective_sizeconstexpr": 40, "effici": [2, 28, 35, 116, 146, 177, 253], "effort": 6, "eigen": [3, 12, 14, 16, 19, 26, 33, 36, 37, 44, 45, 48, 49, 50, 51, 52, 53, 58, 78, 83, 84, 87, 88, 89, 97, 98, 107, 108, 115, 118, 119, 121, 155, 167, 172, 177, 182, 188, 194, 199, 201, 205, 213, 215, 217, 219, 220, 221, 223, 224, 228, 233, 234, 238, 242, 243, 244, 247, 248, 250, 251, 252, 253, 260, 262, 263, 266, 267, 269, 292, 293, 294, 301, 303, 304, 305, 306, 310, 331, 333, 357, 358, 367, 368, 371, 374, 375, 376, 432, 446, 448, 450, 453, 454, 455, 456, 457, 458, 473, 474, 485, 491, 492, 495, 497, 505, 518, 520, 523, 531, 532, 533, 534], "eigen3": [233, 234], "eigen_compat": [118, 119, 177, 262, 263, 293, 294, 305, 306], "eigen_major_vers": 167, "eigen_world_vers": 167, "eigenbas": [26, 115, 182, 188, 194, 205, 213, 217, 219, 220, 221, 223, 224, 228, 247, 248, 250, 253, 260, 375], "eigenvalu": 250, "eigenvector": 250, "either": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 104, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 392, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 479, 481, 485, 508, 509, 520, 523, 532, 534], "ekumen": [0, 5, 22, 24, 25, 29, 31, 33, 35, 37, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "ekumenlab": 0, "elem": 263, "element": [26, 28, 64, 104, 144, 171, 172, 177, 228, 229, 253, 254, 256, 260, 283, 289, 301, 302, 303, 307, 363, 390, 397, 399, 403, 411, 413, 415, 419, 420, 427, 428, 429, 430, 434, 435, 437, 442, 443, 444, 445, 518], "elementconstexpr": [283, 435], "elementsconstexpr": 169, "elementsdefinit": 169, "elev": 242, "elif": [509, 520, 532, 534], "els": [25, 31, 33, 40, 172, 178, 231, 238, 250, 263, 265, 276, 286, 290, 298, 308, 430, 435, 437, 509, 520, 532, 534], "embed": [12, 14, 16, 19], "emit": 478, "emphas": 229, "emplace_back": [119, 263, 523], "empti": [4, 25, 40, 64, 65, 104, 105, 164, 185, 193, 252, 413, 427, 437, 447, 448, 449, 450, 453, 454, 455, 456, 473, 474, 478, 479, 481, 523], "emptyconstexpr": [40, 437], "en": [172, 250, 253, 351, 365, 397, 419, 523], "enabl": [29, 40, 64, 228, 248, 253, 298, 307, 308, 337, 392, 453, 455, 457, 478, 479, 481, 510, 516, 523, 524, 533, 534], "enable_borrowed_rang": [170, 284], "enable_if_t": [26, 29, 40, 64, 91, 111, 112, 113, 114, 115, 165, 166, 171, 172, 182, 188, 194, 201, 204, 205, 213, 215, 217, 219, 220, 221, 223, 224, 228, 247, 248, 253, 260, 265, 276, 281, 283, 286, 296, 307, 308, 312, 337, 339, 341, 343, 345, 347, 349, 351, 355, 356, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 392, 393, 397, 400, 415, 419, 430, 434, 435, 436, 437, 511, 522, 523], "enable_safe_rang": 284, "enable_tf_broadcast_": [448, 450, 453, 455, 457, 464, 468, 474], "enable_tf_broadcast_beluga_amcl": [454, 456, 458], "enable_tf_broadcast_bool": [448, 450, 474], "enable_tf_broadcast_wheth": [448, 450, 474], "encourag": 2, "end": [4, 26, 36, 37, 40, 60, 61, 62, 64, 65, 95, 104, 105, 172, 185, 193, 228, 236, 242, 260, 265, 286, 296, 298, 306, 319, 437, 523], "end_cursor": 298, "endauto": 37, "endconstexpr": [40, 437], "endfor": 4, "endif": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "enforc": 2, "engin": [83, 84, 85, 86, 87, 88, 252, 290, 298, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "engine_": [290, 298], "engineth": [83, 85, 87, 403, 405, 411], "enhanc": 101, "enough": 4, "ensur": [5, 428, 523], "entri": 97, "enum": [37, 39, 40, 50, 51, 58, 59, 253, 267, 491, 492], "enumcastoutofrang": 40, "enumer": [27, 39, 58, 163, 164, 183, 253, 257, 261, 266, 267, 427, 428], "enumeratorkrolloveronwrit": 253, "enumeratorkstandard": 58, "environ": [54, 76, 253], "epilogu": 177, "epsilon": [172, 253, 265, 415, 416, 429, 430, 433], "epsilonmaximum": 253, "epsilonse": 415, "equal": [18, 37, 62, 64, 70, 78, 80, 231, 253, 319, 359, 407, 482, 504, 516, 523, 528, 529], "equal_to": [482, 504, 516, 522, 523, 528, 529], "equalitycompar": 18, "equat": 4, "equip": 6, "equival": [64, 253, 351, 444, 479, 482, 504, 505, 516, 522, 523, 528, 529], "eras": 253, "erasur": 3, "erf": 31, "ericniebl": 104, "error": [33, 72, 170, 236, 238, 253, 262, 284, 301, 317, 325, 453, 455, 457, 476, 478, 479, 481, 509, 520, 524, 532, 534], "error_": 37, "ess": [24, 25, 145, 151, 165, 166, 177, 229, 253, 270, 271, 280, 383], "estim": [4, 6, 23, 24, 25, 26, 42, 66, 93, 99, 101, 121, 151, 177, 228, 253, 254, 256, 260, 269, 310, 433, 446, 448, 450, 453, 454, 455, 456, 457, 458, 474, 476, 478, 479, 481, 487, 523, 524], "estimatea": [453, 455, 457], "estimated_pos": 172, "estimatestd": [25, 172, 481], "estimation_typ": [25, 42, 43], "eta_hit": 31, "eta_short": 31, "eth": 301, "eugen": 58, "ev": [450, 455, 456], "eval": 172, "evalu": [28, 42, 229, 392, 487], "even": [1, 3, 6, 74, 437], "evenli": [19, 107, 229, 427, 476, 478, 479], "eventu": 6, "everi": [18, 25, 145, 173, 174, 177, 229, 253, 280, 285, 381], "every_n": [25, 145, 177, 229, 279, 280, 379, 381, 481], "every_n_fn": [25, 26, 115, 173, 174, 201, 215, 228, 260, 380, 481], "every_n_fnimplement": [174, 228], "every_n_fninlin": 380, "every_n_polici": [26, 115, 173, 174, 185, 193, 201, 215, 228, 260, 382], "every_n_policyconstexpr": 174, "every_n_policyimplement": [174, 228], "every_n_policyinlin": 382, "every_n_policyinlineexplicit": 382, "every_nconstexpr": [25, 174, 481], "every_npolici": [25, 174], "evolv": 229, "exact": [85, 437], "exactli": [104, 248, 428], "exampl": [1, 2, 6, 227, 253, 469, 503], "except": [6, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 42, 64, 78, 80, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 453, 455, 457, 474, 476, 481, 485, 487, 508, 509, 520, 523, 532, 534], "exec": 5, "execut": [25, 26, 42, 43, 228, 260, 264, 265, 285, 286, 295, 296, 339, 341, 343, 345, 347, 349, 446, 448, 450, 453, 455, 457, 473, 474, 476, 478, 479, 481, 487, 488], "execution_polici": [25, 42, 43, 476, 478, 479, 481, 487, 488], "execution_policy_": [25, 481], "execution_policy_vari": [448, 450, 453, 455, 481, 487, 488, 498, 501], "execution_policy_variantbeluga_amcl": [454, 456], "execution_policy_variantexecut": 481, "execution_policy_variantget": [448, 450], "execution_policy_variantstd": 481, "execution_policypolici": 42, "execution_policyvari": 487, "executionpolici": [25, 43, 179, 188, 189, 194, 197, 202, 206, 210, 216, 222, 228, 265, 286, 296, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 473, 474], "executionpolicyan": [339, 343, 347], "executionpolicyexecut": 42, "executionpolicyvari": [457, 473, 474], "executionpolicyvariantbeluga_amcl": 458, "executionpolicyvariantget": 474, "executionpolicyvariantstd": 474, "executionpolicyvariantsupport": 474, "exercis": 3, "exhibit": 64, "exist": [1, 26, 64, 97, 104, 228, 253, 260, 263, 298, 339, 343, 347, 361, 362, 411, 429, 434, 435, 478, 479], "exp": [31, 33, 238, 242, 248, 262], "expect": [2, 31, 72, 172, 315, 437, 478, 479, 523], "expect_that": 301, "expens": [54, 236], "experi": 54, "explain": [227, 469, 503], "explicit": [31, 33, 37, 38, 40, 71, 121, 174, 176, 231, 238, 242, 250, 252, 269, 281, 290, 292, 298, 306, 308, 437, 441, 448, 474, 508, 520, 523], "exploit": 172, "explor": [229, 471, 505], "exponenti": [24, 26, 68, 151, 175, 176, 177, 228, 248, 253, 260, 433, 476, 478, 479, 524], "exponential_filt": [23, 24, 68, 151, 177, 433], "exponentialfilt": [69, 115, 175, 176, 185, 193, 201, 203, 215, 217, 253, 433], "exponentialfiltercal": [176, 228, 433], "exponentialfilterconstexpr": 176, "exponentialfilterinlin": 69, "exponentialfilterinlineexplicit": 69, "express": [17, 18, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 337, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "extend": [2, 3, 74, 104, 229, 263], "extens": [510, 516, 518, 523, 531, 532, 533, 534], "extent": 12, "extern": [33, 234, 236, 238, 397, 419, 479, 504], "extra": [101, 437], "extract": [371, 407, 510, 533, 534], "extrapol": [64, 253], "extrins": [478, 479], "f": [15, 16, 20, 26, 27, 37, 39, 40, 65, 115, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 199, 201, 202, 203, 204, 210, 213, 215, 216, 217, 219, 220, 221, 223, 228, 253, 254, 260, 425, 498], "face": [2, 248], "factor": [4, 68, 172, 229, 264, 265, 339, 340, 341, 342], "factorth": 339, "fail": [250, 479], "fall": 253, "fals": [25, 37, 40, 64, 78, 80, 164, 253, 267, 308, 313, 381, 383, 390, 428, 445, 448, 450, 453, 455, 457, 474, 476, 478, 479, 481, 524], "false_typ": [29, 228, 276, 283, 298, 435], "famili": 4, "far_end_cel": 292, "far_end_pose_in_local_fram": 292, "farrai": 64, "fast": [437, 476, 478, 479, 481, 524], "fast_averag": 433, "fast_filter_": 433, "favor": 3, "feasibl": 263, "featur": [1, 39, 40, 56, 64, 253, 471, 477, 479], "few": [1, 2, 4, 6, 64, 242], "fewer": 1, "fibonacci": 308, "field": [26, 76, 152, 177, 228, 229, 241, 242, 253, 260, 300, 446, 479], "fifo": 64, "figur": 253, "file": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 453, 455, 457, 462, 487, 489, 491, 495, 524, 526, 528, 529], "filesystem": 263, "fill": [40, 64, 65, 188, 194, 227, 469, 503, 534], "fillvoid": 40, "filter": [4, 11, 24, 25, 26, 41, 42, 68, 74, 101, 151, 171, 175, 176, 177, 228, 229, 235, 236, 239, 240, 253, 260, 266, 267, 313, 427, 428, 429, 433, 448, 450, 453, 455, 457, 474, 476, 481, 486, 487, 489, 505, 508, 523, 524, 536], "filter_funct": 428, "final": [312, 448, 453, 457, 474], "find": [6, 33, 72, 97, 236, 238, 263, 306, 434, 435], "find_closest_bearing_landmark": [33, 72, 73, 188, 194, 236], "find_closest_bearing_landmarkstd": [33, 236], "find_nearest_landmark": [72, 73, 188, 194, 236, 238], "find_nearest_landmarkstd": [236, 238], "finder": [26, 30, 31, 54, 76, 89, 152, 177, 228, 229, 241, 242, 253, 260, 263, 300], "finit": [12, 290], "firefox": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "first": [1, 5, 6, 31, 37, 40, 60, 64, 65, 95, 104, 105, 164, 242, 281, 397, 413, 427, 437, 450, 455, 478, 479], "first_": 298, "first_map_onli": [478, 479], "first_rot": [121, 269], "first_rotation_param": 121, "firstiter": 64, "fit": [40, 64, 227, 469, 503], "fit_point": 263, "fix": [37, 62, 64, 523], "flag": [39, 40, 42, 64, 253, 455, 478, 487], "flatland": 6, "flip": 3, "flipped_rot": [121, 269], "float": [253, 262, 331, 478, 479, 508, 522, 523], "floating_point_rang": 476, "floor": [294, 307, 308], "floor_and_fibo_hash": [307, 308], "floor_and_fibo_hashconstexpr": 308, "flow": 3, "fmod": 523, "fn": [15, 20, 29, 203, 217, 228, 281, 286, 289, 290, 337, 338, 343, 344, 345, 346, 392, 393, 394, 395, 403, 404, 406], "fn_": 290, "fn_return_": 290, "fna": [343, 403, 405], "fnfn": 403, "fnthe": 405, "focu": 11, "follow": [4, 5, 6, 15, 17, 18, 20, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 227, 248, 269, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 437, 446, 453, 455, 457, 469, 487, 489, 491, 503, 524, 526, 528, 529], "footprint": [33, 238], "forc": [25, 42, 478, 479, 481, 487], "force_upd": [25, 42, 43, 188, 194, 481, 487, 488, 498, 500], "force_update_": [25, 481], "force_updatevoid": [25, 481], "foremost": 6, "form": [172, 253], "format": 304, "formula": [31, 242, 478, 479], "fortun": 6, "forward": [70, 121, 168, 169, 178, 228, 231, 253, 265, 269, 271, 281, 283, 286, 290, 296, 298, 312, 366, 392, 397, 398, 403, 405, 419, 420, 421, 430, 435, 445, 523], "forward_iter": [37, 62], "forward_iterator_tag": [37, 62], "forward_lik": [177, 253, 254, 256, 282, 283], "forward_likeconstexpr": 178, "forwhich": [227, 469, 503], "found": [1, 17, 72, 397, 419, 434, 435, 478, 479], "fox": [41, 486, 536], "fox01": [478, 479, 536], "fr": 58, "fraction": 253, "frame": [13, 16, 33, 46, 50, 51, 54, 56, 72, 74, 76, 89, 95, 186, 188, 233, 234, 236, 238, 240, 252, 253, 267, 317, 323, 327, 331, 476, 478, 479, 487, 489, 491, 492, 508, 509, 511, 520], "frame_id": [478, 479, 509, 511], "frame_idfram": 511, "frameframecoordin": 267, "frameplan": 50, "framework": 1, "free": [16, 17, 50, 58, 85, 95, 267, 520, 526], "free_at": [16, 50, 51, 188, 194, 267, 292, 491, 492], "free_atbool": 267, "free_cel": [16, 50, 51, 188, 194, 252, 267, 491, 492], "free_cellsauto": 267, "free_near": [16, 50, 51, 188, 194, 267, 491, 492], "free_nearbool": 267, "free_states_": 252, "friend": [29, 37, 40, 60, 61, 65, 70, 71, 79, 231, 250, 262, 281, 290, 298, 331, 332, 337, 394], "from": [3, 4, 13, 16, 18, 24, 26, 31, 37, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 121, 151, 163, 168, 172, 177, 227, 228, 229, 231, 238, 242, 247, 248, 250, 253, 260, 265, 269, 275, 276, 286, 289, 290, 296, 297, 298, 301, 307, 308, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 429, 436, 437, 446, 448, 450, 453, 455, 457, 469, 474, 476, 478, 479, 481, 487, 489, 491, 503, 510, 523, 524, 526, 528, 529, 533, 534], "from_valu": 476, "from_vector": [188, 194, 248, 250, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "from_vectorstat": 248, "frommsg": [510, 513, 514, 518, 533, 534], "frommsgvoid": 534, "front": [40, 64, 65, 188, 194, 253], "frontconstexpr": 40, "full": [3, 40, 64, 65, 95, 188, 194, 253, 479], "fullconstexpr": 40, "fulli": [6, 253], "function": [3, 4, 6, 17, 18, 26, 27, 28, 29, 31, 33, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 121, 163, 165, 171, 174, 183, 228, 229, 238, 242, 249, 251, 253, 257, 260, 261, 263, 269, 271, 273, 275, 276, 281, 283, 285, 289, 290, 295, 298, 301, 303, 307, 310, 311, 312, 319, 331, 337, 339, 341, 343, 345, 347, 349, 351, 354, 357, 359, 361, 363, 365, 367, 368, 371, 374, 376, 379, 381, 383, 385, 387, 390, 392, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 429, 434, 435, 436, 437, 452, 453, 455, 457, 465, 473, 474, 483, 487, 489, 491, 499, 505, 510, 511, 515, 516, 517, 518, 522, 523, 526, 529, 531, 533, 534], "functor": [2, 523, 529], "further": [11, 54, 76, 95], "furthermor": [3, 6], "futur": [18, 476, 478, 479], "g": [3, 12, 14, 16, 18, 19, 37, 39, 40, 64, 65, 104, 253, 254, 464, 466, 468, 523], "g1": 18, "g2": 18, "gap": 2, "gaussian": [31, 99, 242, 248, 315, 329, 478, 479], "ga\u0161per": 38, "gen": [121, 269, 290, 310], "gener": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534], "generatoran": [78, 80], "generatorth": [78, 80], "gentle2009computationalstatist": 250, "geometri": [233, 234, 251, 252], "geometry_msg": [447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 473, 474, 476, 478, 479, 509, 510, 533, 534], "get": [4, 5, 39, 40, 44, 48, 50, 97, 107, 111, 168, 169, 236, 253, 254, 256, 267, 283, 290, 298, 308, 331, 397, 398, 435, 437, 448, 450, 453, 455, 457, 474, 478, 479, 489, 491, 520], "get_default_neighbors_kernel": [263, 333], "get_execution_polici": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "get_execution_policyauto": 474, "get_execution_policystat": [448, 450], "get_initial_estim": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "get_initial_estimateauto": [448, 450, 474], "get_map_client_": [450, 455, 464, 468], "get_map_client_beluga_amcl": 456, "get_map_client_map": 450, "get_map_client_ro": 450, "get_motion_model": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "get_motion_modelauto": [448, 450, 474], "get_random_engin": [286, 290, 298, 403, 404, 405, 406, 411, 412], "get_random_state_gener": 25, "get_sensor_model": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "get_sensor_modelauto": [448, 450], "get_sensor_modelbeluga": 474, "getconstexpr": 40, "getmap": [449, 450, 478], "getsimpleextentdim": 263, "getspac": 263, "getyaw": [520, 534], "giorgio": [41, 486, 536], "git": 5, "github": [5, 31, 104, 242, 523], "given": [4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 33, 39, 40, 42, 44, 48, 50, 52, 64, 66, 68, 70, 72, 78, 93, 95, 97, 99, 107, 109, 111, 113, 121, 165, 166, 171, 172, 176, 228, 229, 231, 236, 238, 244, 250, 253, 260, 264, 267, 269, 271, 275, 276, 289, 292, 294, 295, 297, 298, 306, 308, 310, 343, 347, 351, 359, 415, 427, 430, 435, 444, 448, 450, 453, 455, 457, 474, 481, 487, 511, 520, 526], "global": [13, 16, 448, 450, 453, 455, 476, 478, 479], "global_frame_id": [476, 478, 479], "global_loc": 478, "global_localization_callback": [448, 450, 453, 454, 455, 456, 464, 466], "global_localization_callbackbool": 450, "global_localization_callbackvoid": 448, "global_localization_server_": [448, 450, 453, 455, 464, 468], "global_localization_server_beluga_amcl": [454, 456], "global_localization_server_glob": [448, 450], "global_localization_server_rclcpp": 448, "global_localization_server_ro": 450, "glpuga": [31, 242], "gmock": [301, 302], "go": [21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 470, 472, 473, 474, 480, 481, 484, 485, 504, 506, 507, 508, 519, 520, 522, 523, 531, 532, 533, 534], "goe": 2, "golden": 308, "good": [1, 4, 31, 253, 315], "googl": 536, "googletest": 301, "govern": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "grai": [227, 469, 503], "graph": [21, 23, 28, 30, 32, 34, 36, 39, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 473, 480, 484, 507, 519, 522, 531, 533], "graphic": [228, 470, 504], "great": 3, "greater": [46, 64, 104, 413, 427], "green": [227, 469, 503], "grid": [12, 14, 16, 19, 26, 31, 41, 44, 48, 50, 52, 54, 55, 76, 77, 85, 86, 89, 95, 96, 97, 107, 118, 119, 153, 177, 228, 242, 243, 244, 251, 252, 253, 260, 263, 266, 267, 292, 293, 294, 305, 306, 440, 441, 446, 448, 450, 453, 455, 457, 474, 478, 479, 482, 486, 487, 491, 492, 504, 516, 519, 520, 526, 536], "grid_": [31, 292, 520], "gridgrid": 95, "gridnew": 76, "gridoccup": [54, 76, 491], "gridth": 85, "grisetti": [41, 486, 536], "ground": 1, "group": [109, 172, 248, 308, 446], "gsb07": [478, 479, 536], "gt": [19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 49, 51, 53, 55, 57, 58, 61, 62, 63, 65, 66, 68, 71, 72, 75, 77, 79, 81, 84, 86, 88, 90, 92, 93, 96, 98, 99, 101, 105, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 319, 320, 321, 323, 325, 327, 329, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 355, 358, 360, 369, 370, 372, 373, 375, 378, 379, 381, 383, 385, 388, 391, 393, 394, 395, 397, 398, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 415, 417, 419, 420, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 469, 473, 474, 476, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 498, 500, 502, 503, 504, 507, 508, 509, 510, 511, 516, 518, 519, 520, 522, 523, 524, 526, 530, 531, 532, 533, 534], "gtest": [155, 177, 301, 432], "guard": [170, 284], "guid": [106, 249, 250, 251, 252, 253, 436, 437], "guidelin": 437, "h": [27, 38, 115, 180, 183, 195, 196, 209, 254, 263, 301, 302, 447, 448, 449, 450, 464, 466, 473, 474, 476, 498, 509, 518, 519, 520, 532, 533, 534], "h5": 263, "h5cpp": [263, 473, 474], "h5f_acc_rdonli": 263, "h5file": 263, "ha": [1, 18, 74, 104, 178, 250, 253, 273, 387, 390], "hack": 31, "half": [270, 476, 478, 479, 524], "handl": 172, "handle_map_with_default_initial_pos": [450, 455, 456, 464, 466], "handle_map_with_default_initial_posevoid": 450, "happen": [25, 313, 476, 478, 479, 481, 523, 524], "hardwar": 6, "has_common_tuple_typ": [26, 115, 228, 253, 260, 362, 434, 435], "has_common_tuple_type_v": [253, 254, 259, 434, 435], "has_common_tuple_type_vconstexpr": 435, "has_common_tuple_type_vconveni": 435, "has_common_tuple_typemeta": 435, "has_member_st": [283, 397], "has_member_state_v": 283, "has_member_variable_st": [283, 397], "has_member_variable_state_v": 283, "has_member_variable_weight": [283, 419], "has_member_variable_weight_v": 283, "has_member_weight": [283, 419], "has_member_weight_v": 283, "has_non_member_st": [283, 397], "has_non_member_state_v": 283, "has_non_member_weight": [283, 419], "has_non_member_weight_v": 283, "has_single_el": [26, 115, 228, 253, 260, 283, 364, 419, 434, 435], "has_single_element_v": [253, 254, 259, 434, 435], "has_single_element_vconstexpr": 435, "has_single_element_vconveni": 435, "has_single_elementmeta": [283, 435], "has_stat": 276, "has_state_v": 276, "has_valu": [263, 267], "has_weight": 276, "has_weight_v": 276, "hash": [24, 26, 42, 91, 109, 111, 113, 115, 151, 177, 201, 215, 228, 253, 260, 263, 307, 308, 311, 312, 357, 396, 415, 421, 422, 430], "hash_combin": 357, "hash_impl": [307, 308], "hash_implconstexpr": 308, "hasher": [42, 109, 111, 113, 308, 415, 416, 430], "hashera": 415, "hasherhash": 415, "hasn": 479, "have": [3, 4, 6, 12, 17, 18, 64, 70, 74, 104, 172, 227, 236, 248, 253, 359, 392, 407, 437, 469, 503], "hawksbil": 11, "hdf5": [263, 476], "head": [40, 248, 523], "head_index": 40, "header": [170, 284, 301, 478, 479, 509, 511], "heading_rot": [121, 269], "heavili": 3, "height": [12, 44, 48, 50, 107, 108, 119, 196, 209, 238, 244, 441, 491, 492, 498, 500, 520], "height_": 441, "heightstd": [441, 520], "help": [434, 476, 478, 479, 481, 524, 535], "helper": [91, 150, 177, 228, 253, 283, 311, 450, 455], "here": [2, 26, 31, 104, 177, 179, 181, 182, 184, 185, 188, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 253, 254, 260, 274, 329, 451, 463, 464, 475, 482, 497, 498, 513, 516, 521], "hidden": [29, 227, 337, 469, 503], "hierarchi": [27, 452, 483], "high": 4, "higher": [2, 3, 89, 329], "histogram": 523, "histori": 6, "hit": [6, 31, 54, 74, 76, 89, 95, 242, 263, 315, 329, 478, 479], "hold": 12, "home": [6, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 453, 455, 457, 487, 489, 491, 524, 526, 528, 529], "homogen": [40, 424], "how": [5, 25, 227, 229, 253, 313, 321, 335, 469, 476, 478, 479, 503], "howev": [4, 64], "hpp": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 177, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 453, 455, 457, 462, 463, 487, 489, 491, 495, 497, 505, 524, 526, 528, 529], "hppaction": 122, "hppassign": 122, "hppauxiliar": [33, 177, 236, 238], "hppbeam_model": 127, "hppbearing_sensor_model": 127, "hppbresenham": 131, "hppcircular_arrai": 123, "hppconcept": [119, 177, 242, 244, 252, 267, 306, 441], "hppcontain": 123, "hppdata": [127, 138, 141], "hppdefin": [177, 280], "hppdifferential_drive_model": 124, "hppdistance_map": 139, "hppeffective_sample_s": 137, "hppevery_n": 125, "hppgener": [485, 497], "hppimplement": [22, 24, 31, 35, 40, 117, 121, 166, 177, 242, 246, 250, 263, 265, 269, 271, 276, 278, 283, 286, 288, 292, 296, 298, 300, 310, 428, 430, 432, 433, 437, 439, 443, 481, 485, 497], "hppinclud": [25, 35, 177, 437, 497], "hppindexing_iter": 134, "hpplandmark": 177, "hpplandmark_detection_typ": [141, 142], "hpplandmark_sensor_model": [127, 141], "hpplikelihood_field_model": [127, 139, 140], "hppmessag": [485, 497, 523], "hppmotion": 124, "hppmultivariate_normal_distribut": 126, "hppmultivariate_uniform_distribut": 126, "hppndt_sensor_model": 140, "hppnormal": 122, "hppoccupancy_grid": 140, "hppomnidirectional_drive_model": [124, 136], "hppon_effective_size_drop": 125, "hppon_mot": 125, "hppparticl": [130, 133], "hppparticle_trait": [129, 132, 143], "hpppolici": 125, "hpppropag": [122, 129, 130], "hpprandom": [126, 127], "hppraycast": 139, "hppreweight": [122, 129, 130], "hppro": 463, "hppsensor": 127, "hppsophus_match": 128, "hppsophus_print": 128, "hppsparse_value_grid": 140, "hppstationary_model": [124, 136], "hpptake_while_kld": 143, "hpptest": 128, "hppthrun_recovery_probability_estim": [132, 133], "hpptuple_trait": 136, "hpptuple_vector": 123, "hpputil": [485, 497], "hppvalue_grid": 140, "hppzip": 135, "hsize_t": 263, "hsl_and_hsv": 523, "hsv_to_rgb_altern": 523, "html": [308, 357], "http": [5, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 58, 104, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 351, 357, 365, 397, 419, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534, 536], "hue": [522, 523], "humbl": 11, "hypot": 31, "i": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 195, 197, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 355, 357, 358, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 375, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 487, 488, 489, 490, 491, 492, 495, 497, 498, 503, 504, 505, 506, 507, 508, 509, 513, 516, 518, 519, 520, 521, 522, 523, 524, 525, 527, 530, 531, 532, 533, 534, 535], "id": [236, 307, 308, 437, 478, 479, 509, 511, 523, 536], "idea": 297, "ident": 18, "identif": 238, "identifi": [37, 52, 167, 428, 534], "idiom": [2, 3], "idsindex": 307, "ie": [58, 97, 107, 153, 177, 243, 267, 306, 441, 478, 479, 491, 518, 520, 523, 533, 534], "ieee": [41, 486, 536], "ifdef": 284, "ifndef": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "ignor": [99, 238, 478, 479], "ill": 253, "imag": 56, "implement": [1, 2, 3, 4, 17, 21, 25, 26, 28, 29, 30, 32, 36, 38, 39, 40, 41, 42, 60, 64, 68, 78, 95, 97, 101, 104, 116, 118, 119, 120, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 165, 168, 171, 173, 175, 176, 177, 228, 229, 230, 237, 239, 241, 242, 243, 244, 247, 249, 251, 252, 253, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 282, 285, 286, 289, 290, 291, 293, 295, 296, 297, 301, 303, 305, 306, 307, 309, 311, 313, 337, 339, 341, 343, 345, 347, 349, 365, 379, 381, 383, 385, 387, 394, 403, 405, 407, 409, 411, 413, 415, 417, 427, 428, 429, 430, 433, 434, 436, 437, 440, 441, 442, 444, 445, 446, 478, 479, 480, 481, 482, 485, 487, 495, 497, 504, 505, 507, 511, 516, 519, 524], "impli": [22, 24, 25, 28, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "implicit": [91, 250], "import": [4, 54, 56, 74, 76, 89, 242, 253, 285, 295, 347, 478, 479], "improv": [41, 486, 536], "imput": 41, "ina": 518, "inact": [448, 453, 457, 474], "inc": [22, 24, 25, 29, 31, 33, 35, 37, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "includ": [4, 12, 14, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 177, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 446, 453, 454, 455, 456, 457, 458, 463, 487, 488, 489, 490, 491, 492, 497, 524, 525, 526, 527, 528, 529, 530], "includebeluga": [21, 22, 23, 24, 34, 35, 116, 117, 122, 123, 124, 125, 126, 127, 128, 146, 167, 245, 246, 279, 280, 282, 283, 287, 288, 299, 300, 431, 432, 438, 439, 442, 443], "includebeluga_amcl": [447, 448, 449, 450, 462, 473, 474, 476], "includebeluga_ro": [480, 481, 484, 485, 495, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "includebelugaact": [28, 29, 129, 130, 154, 264, 265, 285, 286, 295, 296], "includebelugaalgorithm": [25, 131, 132, 133, 151, 163, 164, 165, 166, 171, 172, 175, 176, 291, 292, 307, 308, 433], "includebelugaalgorithmraycast": [36, 37, 162], "includebelugacontain": [39, 40, 134, 135, 148, 436, 437], "includebelugadetail": [158, 170, 284], "includebelugamot": [120, 121, 136, 156, 268, 269, 309, 310], "includebelugapolici": [137, 145, 173, 174, 270, 271, 272, 273, 281], "includebelugarandom": [138, 159, 247, 248, 249, 250, 251, 252], "includebelugasensor": [30, 31, 32, 33, 139, 140, 141, 152, 237, 238, 241, 242, 263], "includebelugasensordata": [118, 119, 142, 153, 235, 236, 239, 240, 243, 244, 262, 266, 267, 293, 294, 305, 306, 440, 441], "includebelugatest": [155, 301, 302, 303, 304], "includebelugatyp": [157, 233, 234], "includebelugatype_trait": [150, 275, 276, 311, 312, 434, 435], "includebelugautil": [149, 178, 230, 231], "includebelugaview": [143, 144, 168, 169, 277, 278, 289, 290, 297, 298, 427, 428, 429, 430, 444, 445], "includeciabatta": [38, 161], "inclus": 101, "incorpor": 4, "incorrect": [101, 248], "increment": [70, 231, 381], "independ": [74, 250, 297], "index": [12, 14, 16, 26, 27, 40, 44, 48, 49, 50, 51, 64, 65, 71, 97, 107, 108, 111, 113, 149, 164, 177, 184, 197, 201, 210, 215, 216, 217, 218, 221, 223, 228, 230, 231, 242, 244, 253, 260, 263, 267, 399, 428, 434, 435, 452, 483, 491, 492], "index_at": [12, 44, 48, 49, 50, 51, 107, 108, 119, 197, 210, 244, 267, 491, 492], "index_atstd": 244, "index_sequ": [26, 115, 220, 221, 228, 253, 260, 307, 308, 353, 434, 435, 437], "index_sequenceunus": 307, "indexable_": 231, "indexablecontain": 70, "indexcontain": 70, "indexgrid": [48, 50], "indexing_iter": [39, 40, 70, 149, 177], "indexingiter": [40, 64, 71, 115, 184, 197, 201, 210, 215, 216, 217, 218, 221, 223, 228, 230, 231, 253], "indexingiteratora": [40, 231], "indexingiteratorindexingiter": 231, "indexpair": 164, "indic": [14, 16, 48, 50, 64, 111, 113, 267, 297, 476, 478, 479], "indirect": 28, "indirectli": [21, 23, 28, 30, 32, 34, 36, 39, 116, 118, 120, 163, 165, 168, 171, 173, 175, 230, 233, 237, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 427, 429, 434, 436, 438, 440, 442, 444, 480, 507, 519, 522, 531, 533], "indistinguish": 18, "individu": [54, 407], "industri": 1, "inequ": [37, 62, 319], "infer": 1, "infin": 172, "infinit": [18, 172, 248, 290, 297, 298], "inflat": [478, 479], "info": [250, 520], "inform": [4, 25, 33, 41, 42, 238, 250, 253, 308, 347, 371, 481, 486, 487, 523, 536], "inher": 54, "inherit": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 114, 227, 228, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 355, 358, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 375, 378, 380, 382, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 398, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 418, 420, 422, 423, 425, 426, 453, 454, 455, 456, 457, 458, 469, 470, 488, 489, 490, 491, 492, 503, 504, 525, 527, 530], "init": [104, 105, 437], "initi": [4, 25, 42, 43, 64, 104, 168, 197, 210, 333, 371, 437, 448, 450, 453, 455, 457, 474, 476, 481, 487, 488, 498, 500], "initial_cov_": 478, "initial_pos": [476, 478, 479], "initial_pose_": 478, "initial_pose_callback": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "initial_pose_callbackvoid": [448, 450, 474], "initial_pose_sub_": [448, 450, 453, 455, 457, 464, 468, 474], "initial_pose_sub_beluga_amcl": [454, 456, 458], "initial_pose_sub_pos": [448, 450, 474], "initial_pose_sub_rclcpp": [448, 474], "initial_pose_sub_ro": 450, "initial_pose_top": [476, 478, 479], "initialize_from_estim": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "initialize_from_estimatebool": [448, 450, 474], "initialize_from_map": [448, 450, 453, 454, 455, 456, 464, 466, 481, 487, 488, 498, 500], "initialize_from_mapbool": [448, 450], "initialize_from_mapvoid": 481, "initializer_list": [104, 105, 437], "initializevoid": [25, 481], "initialpos": [476, 478, 479], "inject": [52, 101], "inlin": [29, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 105, 108, 109, 110, 112, 114, 169, 174, 253, 263, 265, 271, 273, 276, 278, 281, 283, 286, 290, 296, 298, 301, 302, 331, 332, 358, 360, 388, 391, 393, 406, 412, 421, 422, 428, 430, 435, 445, 476, 487, 509, 511, 518, 522, 523, 530, 532, 534], "inlineconstexpr": [28, 64, 101, 104, 111, 113, 168, 173, 253, 264, 270, 272, 277, 285, 289, 295, 297, 339, 343, 347, 359, 381, 383, 385, 390, 392, 401, 403, 405, 411, 413, 415, 427, 429, 444], "inlineconstexprnoexcept": [64, 68, 91, 101, 397, 419], "inlineconstexprprotect": 407, "inlineexplicit": [54, 55, 56, 57, 60, 61, 64, 65, 66, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 93, 96, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 393, 489, 491, 529, 530], "inlineexplicitconstexpr": [85, 104, 381], "inlineexplicitconstexprnoexcept": 68, "inlineexplicitnoexcept": 95, "inlinenoexcept": [64, 70, 78], "inlinestat": [369, 370, 372, 373, 375], "input": [4, 28, 29, 68, 69, 99, 176, 253, 277, 297, 337, 339, 343, 347, 407, 415, 428, 429, 434, 435, 437], "input_iter": [253, 436, 437], "input_rang": [298, 430, 437], "inputnext": 68, "insert": [25, 229, 289, 290, 313, 403, 405, 430, 437, 523], "insert_iter": [436, 437], "insid": [263, 333], "instal": 6, "instanc": [12, 13, 14, 15, 16, 17, 19, 20, 25, 26, 30, 31, 32, 33, 42, 54, 56, 64, 66, 74, 76, 78, 80, 89, 93, 97, 120, 121, 168, 227, 228, 237, 238, 241, 242, 250, 253, 260, 263, 268, 269, 315, 317, 321, 325, 329, 331, 333, 335, 343, 347, 403, 415, 421, 448, 450, 453, 455, 457, 469, 474, 503, 518], "instanti": [44, 46, 48, 50, 52, 227, 448, 450, 453, 455, 457, 469, 474, 503], "instead": [5, 21, 23, 28, 30, 31, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 78, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 236, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 477, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "int": [4, 12, 16, 19, 29, 37, 44, 45, 48, 49, 50, 51, 52, 53, 62, 63, 70, 71, 97, 98, 107, 108, 119, 165, 166, 167, 227, 231, 244, 248, 253, 262, 263, 265, 267, 283, 286, 294, 296, 303, 304, 306, 331, 333, 337, 339, 341, 343, 345, 347, 349, 357, 358, 371, 397, 415, 419, 430, 469, 476, 491, 492, 503, 508], "int64_t": 263, "int8_t": [39, 40, 253, 520, 526, 527], "integ": [14, 19, 26, 36, 37, 58, 61, 62, 63, 64, 181, 184, 185, 190, 193, 197, 198, 201, 210, 212, 215, 216, 217, 221, 223, 228, 253, 260, 263, 307, 308, 319, 320, 357, 478, 479], "integer_rang": 476, "integerinteg": 60, "integr": [2, 11, 70, 427, 447, 449, 462, 463, 473, 505, 535], "integral_const": [40, 228, 308, 435], "intellig": [41, 486, 536], "intend": [1, 5], "intens": 76, "interchang": 2, "interfac": [3, 26, 35, 38, 104, 146, 153, 177, 228, 229, 239, 253, 260, 299, 436, 451, 477, 482, 485, 495, 497, 505, 522], "intern": [18, 25, 41, 78, 101, 104, 250, 381, 433, 486, 536], "internalcontain": [26, 104, 105, 115, 179, 181, 182, 184, 185, 189, 190, 191, 193, 202, 203, 204, 205, 216, 217, 219, 220, 221, 223, 228, 253, 260, 436, 437], "internalcontainercontain": 104, "interpret": [227, 253, 469, 482, 491, 503, 504, 516, 519, 520, 526], "interspers": 290, "interv": [25, 64, 313, 446, 478, 479, 523], "inth": 518, "intrins": 315, "inv_resolut": 294, "invalid": [42, 78, 80, 250, 487, 509, 520, 532, 534], "invalid_argu": 263, "invers": [121, 236, 238, 242, 262, 269, 273, 292], "invert": [38, 523], "investig": [31, 242], "invis": [227, 469, 503], "invoc": 18, "invok": [29, 64, 78, 337, 415, 430], "invoke_result_t": [25, 164], "involv": 28, "io": 263, "ioformat": 304, "iostream": [303, 304], "iota": [507, 508], "iresult": 307, "iron": 11, "irwini": 11, "is_adding_const": 178, "is_arithmetic_v": [26, 91, 112, 114, 115, 171, 172, 201, 204, 215, 217, 219, 221, 228, 253, 260, 307, 308, 312], "is_base_of_v": [26, 115, 182, 188, 194, 205, 213, 217, 219, 220, 221, 223, 224, 228, 247, 248, 250, 253, 260, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "is_complet": [228, 435], "is_const_v": 178, "is_directori": 263, "is_execution_policy_v": [265, 286, 296, 339, 341, 343, 345, 347, 349], "is_floating_point_v": [240, 262], "is_fre": [16, 267, 498, 500, 520, 526, 527], "is_freestat": 520, "is_invocable_r_v": [281, 392, 393, 430], "is_invocable_v": [25, 286, 290], "is_lvalue_reference_v": [178, 298], "is_nothrow_swappable_v": [40, 64, 65], "is_obstacl": 164, "is_occupi": [16, 267, 498, 500, 520, 526, 527], "is_occupiedstat": 520, "is_particl": 276, "is_particle_range_v": [165, 166, 253, 265, 276, 286, 296, 298, 430, 433], "is_particle_v": 276, "is_random_distribut": 298, "is_random_distribution_v": 298, "is_range_closur": 29, "is_range_closure_v": [29, 337], "is_same_v": [25, 29, 33, 40, 64, 171, 172, 238, 253, 263, 298, 306, 308, 435, 511, 522, 523], "is_tuple_lik": [115, 228, 253, 283, 397, 419, 434, 435], "is_tuple_like_v": [26, 115, 220, 221, 228, 253, 254, 259, 260, 276, 355, 356, 364, 400, 434, 435], "is_tuple_like_vconstexpr": 435, "is_tuple_like_vconveni": 435, "is_tuple_likemeta": [283, 435], "is_unknown": [498, 500, 520, 526, 527], "is_unknownstat": 520, "isapprox": 250, "isbn": 536, "isnan": 240, "issu": [6, 31, 242, 248], "it_": 298, "iter": [25, 26, 36, 37, 39, 40, 42, 60, 61, 63, 64, 65, 70, 71, 104, 115, 149, 177, 184, 197, 201, 210, 215, 216, 217, 221, 223, 228, 230, 231, 253, 260, 290, 297, 313, 319, 320, 403, 405, 428, 436, 437, 444, 481, 487], "iter_mov": [401, 402, 445], "iter_reference_t": [401, 402, 445], "iter_rvalue_reference_t": [401, 402, 445], "iter_value_t": [253, 401, 402, 436, 437, 445], "iter_zip_with": 445, "iterator_categori": [37, 62, 63, 70, 71, 210, 221, 231], "iterator_categorycategori": 231, "iterator_categoryiter": 37, "iterator_categorystd": [37, 231], "iterator_t": [290, 298], "iterator_trait": [40, 64], "iteratorbresenham": [37, 228], "iteratorindexingiter": 40, "iteratorinlin": 63, "iteratorinlineexplicit": 63, "iteratoriter": [37, 40], "ith": [39, 40, 253], "itr": 306, "its": [3, 25, 26, 33, 40, 64, 70, 72, 171, 172, 228, 231, 236, 253, 260, 354, 392, 401, 402, 435, 445, 448, 450, 453, 455, 457, 474, 477], "itself": [2, 3, 29, 164, 448, 453, 457, 474, 476, 479, 511], "j": 253, "jalisco": 11, "jazzi": 11, "journal": 41, "jtc1": 308, "jtsmeaaaqbaj": 536, "jump": [478, 479], "just": [6, 337], "k": [27, 180, 183, 211, 221, 224, 254, 430, 498], "k_i": 476, "kalman": 4, "karrowbodylength": 523, "karrowheadlength": 523, "karrowheadwidth": 523, "karrowlength": 523, "kb": 523, "kbit": 308, "kdefaultangularresolut": 523, "kdefaultkldz": [253, 415, 416, 429, 430], "kdefaultkldzconstexpr": 430, "kdefaultkldzdefault": 430, "kdefaultlinearresolut": 523, "kdefaultneighborkernel2d": 263, "kdefaultneighborkernel3d": 263, "kdefaultprob": [211, 224, 290, 403, 404], "kdefaultprobabilitybeluga": 404, "kdefaultprobabilitydefault": 290, "kdefaultprobabilitystat": 290, "kdefaultthreshold": [211, 224, 271, 383, 384], "kdefaultthresholdbeluga": 384, "kdefaultthresholddefault": 271, "kdefaultthresholdstat": 271, "kdifferentialmodelnam": 476, "keep": [3, 6, 253, 479], "kei": [2, 6, 97, 306], "kept": [64, 104], "kernel": [89, 263, 333], "kextrapolateonread": [39, 40, 253], "key_typ": [97, 98, 211, 221, 263, 306], "key_typekei": 306, "key_typetypenam": 306, "keyword": 38, "kfib": 308, "kflippingrot": 121, "kfreevalu": [498, 502, 520, 526], "kfreevaluebeluga_ro": 527, "kfreevaluefre": 520, "kfreevaluestat": 520, "kg": 523, "kglobal": [50, 252, 267], "kind": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "kindex": 435, "klayoutrevers": [39, 40, 64, 253], "kld": [25, 41, 229, 253, 313, 429, 430, 446, 476, 478, 479, 481, 486, 524, 536], "kld_condit": [253, 254, 256, 415, 429, 430], "kld_conditionauto": 430, "kld_epsilon": [25, 211, 224, 313, 481, 498, 502, 524], "kld_epsilonbeluga": 314, "kld_epsilonbeluga_ro": 525, "kld_epsilondoubl": [25, 481], "kld_epsilonmaximum": 481, "kld_epsilonus": 25, "kld_z": [25, 211, 224, 313, 481, 498, 502, 524], "kld_zbeluga": 314, "kld_zbeluga_ro": 525, "kld_zdoubl": [25, 481], "kld_zupper": 481, "kld_zuse": 25, "klocal": [50, 267], "kmatch": 435, "kminpointspercel": 263, "kminvari": 263, "kmodifi": [37, 58, 59, 187, 211], "kmodifieddefinit": 37, "knav2differentialmodelnam": 476, "knav2omnidirectionalmodelnam": 476, "knone": [39, 40, 64, 253], "know": [290, 437], "known": [2, 56, 74, 321, 335, 446, 448, 450, 453, 455, 457, 474, 478, 479], "koccupiedvalu": [498, 502, 520, 526], "koccupiedvaluebeluga_ro": 527, "koccupiedvalueoccupi": 520, "koccupiedvaluestat": 520, "komnidirectionalmodelnam": 476, "kr": 523, "krolloveronwrit": [39, 40, 253], "ksinglelin": 304, "kstandard": [37, 58, 59, 187, 211], "kstandardstandard": 37, "kstationarymodelnam": 476, "ktupleindexambigu": 435, "ktupleindexnotfound": 435, "kullback": [253, 429], "kunknownvalu": [498, 502, 520, 526], "kunknownvaluebeluga_ro": 527, "kunknownvaluestat": 520, "kunknownvalueunknown": 520, "l": [13, 27, 115, 180, 183, 195, 198, 212, 221, 224, 236, 254, 464, 466, 468, 493, 498], "l2": [89, 331], "l262": 104, "label": [227, 469, 503], "lack": 54, "lambda": 2, "lambda_short": [31, 212, 224, 315, 479], "lambda_shortbeluga": 316, "lambda_shortdoubl": 31, "lambda_shortintrins": 31, "landmark": [26, 32, 33, 56, 72, 73, 74, 152, 153, 157, 177, 228, 229, 233, 234, 235, 236, 237, 238, 253, 260, 300, 323, 327, 446], "landmark_a_bearing_in_sensor": 236, "landmark_a_position_in_world": 236, "landmark_b_bearing_in_sensor": 236, "landmark_b_distance_in_world_squar": 236, "landmark_b_position_in_world": 236, "landmark_b_squared_in_world_squar": 236, "landmark_bearing_in_robot": 238, "landmark_bearing_in_sensor": 33, "landmark_detection_typ": [32, 33, 157, 177, 235, 236, 237, 238, 323, 327], "landmark_in_robot_posit": 238, "landmark_map": [33, 56, 57, 72, 74, 75, 141, 153, 177, 238], "landmark_map_": [33, 238], "landmark_mapmap": [56, 74], "landmark_position_in_sensor": 236, "landmark_position_in_world": 238, "landmark_range_in_robot": 238, "landmark_sensor_model": [74, 152, 177, 299, 300, 325], "landmarkbearing3": [33, 72, 73, 233, 234, 236, 253, 254, 258, 323], "landmarkbearing3bear": [234, 236], "landmarkbearing3eigen": [234, 236], "landmarkbearingdetect": [33, 56, 115, 182, 184, 224, 233, 234, 253, 324], "landmarkbearingdetectionlandmark": [228, 234], "landmarkcategori": [33, 72, 73, 233, 234, 236, 238, 253, 254, 258, 323, 327], "landmarkcategorytyp": [234, 236], "landmarkcategoryuint32_t": [234, 236], "landmarkmap": [32, 33, 57, 73, 75, 115, 181, 188, 190, 194, 198, 199, 201, 206, 212, 213, 215, 216, 219, 221, 222, 225, 228, 235, 236, 237, 238, 253], "landmarkmapbas": [33, 228, 236, 238], "landmarkmapboundari": [72, 73, 233, 234, 236, 253, 254, 258], "landmarkmapboundariesboundari": [234, 236], "landmarkmapboundarieseigen": [234, 236], "landmarkmapclass": [56, 74], "landmarkmapinlin": 73, "landmarkmaplandmarkmap": 236, "landmarkmodelparam": [74, 115, 219, 224, 237, 238, 253, 326], "landmarkmodelparamparamet": [228, 238], "landmarkposition3": [72, 73, 233, 234, 236, 238, 253, 254, 258, 327], "landmarkposition3eigen": [234, 236], "landmarkposition3posit": [234, 236], "landmarkpositiondetect": [72, 74, 115, 182, 184, 224, 233, 234, 236, 238, 253, 328], "landmarkpositiondetectionlandmark": [228, 234], "landmarks_": 236, "landmarks_set_position_data": [72, 73, 212, 221, 236], "landmarks_set_position_datastd": 236, "landmarks_set_position_datavector": 236, "landmarksensormodel": [20, 26, 75, 115, 198, 201, 206, 212, 213, 215, 216, 219, 221, 222, 225, 228, 229, 237, 238, 253, 260, 325], "landmarksensormodel2d": [237, 238, 253, 254, 258], "landmarksensormodel3d": [237, 238, 253, 254, 258], "landmarksensormodelgener": 238, "landmarksensormodellandmarksensormodel": 238, "landmarkslist": 72, "lang": 40, "languag": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "laps": [478, 479], "larg": [1, 4, 236, 437, 479], "larger": 3, "laser": [46, 153, 177, 228, 239, 242, 253, 329, 448, 450, 453, 455, 457, 474, 476, 478, 479, 489, 508], "laser_callback": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "laser_callbackvoid": [448, 450, 474], "laser_lambda_short": 478, "laser_likelihood_max_dist": [478, 479], "laser_max_rang": [476, 478, 479], "laser_min_rang": [476, 478, 479], "laser_model_typ": [478, 479], "laser_scan": [46, 153, 177, 447, 448, 450, 455, 456, 473, 474, 480, 481, 484, 485, 487, 488, 489, 495, 497, 509], "laser_scan_connection_": [448, 450, 453, 455, 457, 464, 468, 474], "laser_scan_connection_beluga_amcl": [454, 456, 458], "laser_scan_connection_connect": [448, 450, 474], "laser_scan_connection_message_filt": [448, 450, 474], "laser_scan_filter_": [448, 450, 453, 455, 457, 464, 468, 474], "laser_scan_filter_beluga_amcl": [454, 456, 458], "laser_scan_filter_std": [448, 450, 474], "laser_scan_filter_transform": [448, 450, 474], "laser_scan_sub_": [448, 450, 453, 455, 457, 464, 468, 474], "laser_scan_sub_beluga_amcl": [454, 456, 458], "laser_scan_sub_las": [448, 450, 474], "laser_scan_sub_message_filt": 450, "laser_scan_sub_std": [448, 474], "laser_scanlas": 487, "laser_sigma_hit": 478, "laser_z_hit": 478, "laser_z_max": 478, "laser_z_rand": 478, "laser_z_short": 478, "laserscan": [2, 46, 274, 448, 449, 450, 453, 454, 455, 456, 457, 458, 474, 478, 479, 481, 482, 485, 487, 488, 490, 493, 495, 497, 498, 500, 501, 504, 505, 507, 508, 509, 511, 516], "laserscanconstsharedptr": [489, 490, 508, 509], "laserscaninlin": 490, "laserscaninlineexplicit": 490, "laserscanlaserscan": 508, "laserscanthin": [481, 504, 508, 509], "last": [6, 40, 64, 65, 104, 105, 253, 321, 335, 413, 427, 437, 453, 455, 457, 478, 479, 481, 524], "last_in": 437, "last_known_estimate_": [448, 450, 453, 455, 457, 464, 468, 474], "last_known_estimate_beluga_amcl": [454, 456, 458], "last_known_estimate_last": [448, 450, 474], "last_known_estimate_std": [448, 450, 474], "last_known_map_": [450, 455, 464, 468], "last_known_map_beluga_amcl": 456, "last_known_map_last": 450, "last_known_map_nav_msg": 450, "last_known_odom_transform_in_map_": [448, 450, 453, 455, 457, 464, 468, 474], "last_known_odom_transform_in_map_beluga_amcl": [454, 456, 458], "last_known_odom_transform_in_map_last": [448, 450, 474], "last_known_odom_transform_in_map_std": [448, 450, 474], "last_out": 437, "lastsentinel": 64, "latch": 479, "latest": 5, "latest_pose_": 273, "launch": 6, "law": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "layer": [101, 511, 512, 516], "layout": [3, 14, 40, 64, 253], "lazili": [168, 229, 277, 392], "lead": 290, "least": [5, 168, 307, 479, 523], "left": [281, 285, 394, 395], "left_hash": 308, "legend": [44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 453, 455, 457, 489, 491], "leibler": [253, 429], "length": [3, 19], "length_error": 40, "length_errorif": 64, "less": [28, 76, 104, 253, 476, 478, 479, 524], "let": 31, "level": [26, 177, 228, 260, 450, 451, 455, 456, 463, 470, 482, 497, 504, 516], "leverag": [2, 477], "lflag": [39, 40, 253], "li": 41, "lib": 357, "librari": [2, 3, 33, 35, 97, 146, 177, 229, 234, 236, 238, 276, 278, 282, 301, 357, 446, 471, 505, 535], "licens": [1, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "lidar": [6, 31, 54, 74, 76, 89, 242, 263, 478, 479, 489, 505], "lie": [248, 263, 333, 446, 479], "lifecycl": [447, 448, 451, 453, 457, 470, 471, 473, 474, 479], "lifecycle_nod": [447, 448, 473, 474], "lifecyclenod": [448, 453, 457, 470, 474, 476], "lifecyclenodeinterfac": [448, 474], "lifecyclepublish": [448, 453, 457, 474], "lifetim": [54, 56, 74, 76, 89, 523], "lifo": 64, "like": [3, 6, 26, 36, 39, 40, 66, 70, 93, 99, 104, 121, 150, 162, 177, 228, 229, 253, 260, 269, 276, 283, 290, 292, 310, 351, 354, 362, 363, 365, 397, 419, 434, 435, 436, 439, 479, 523], "likelihood": [2, 31, 76, 89, 152, 177, 228, 229, 241, 242, 253, 263, 295, 300, 331, 333, 446, 479], "likelihood_at": [89, 90, 198, 212, 262, 263, 331, 332], "likelihood_atdoubl": [262, 263], "likelihood_data": 242, "likelihood_field": [76, 77, 198, 212, 242, 478, 479], "likelihood_field_": 242, "likelihood_field_model": [76, 127, 152, 177, 299, 300, 329], "likelihood_fieldconst": 242, "likelihoodfieldmodel": [2, 20, 26, 77, 115, 198, 201, 206, 212, 213, 215, 216, 219, 221, 222, 225, 228, 229, 241, 242, 253, 260, 329, 481, 487], "likelihoodfieldmodellikelihood": 242, "likelihoodfieldmodellikelihoodfieldmodel": 242, "likelihoodfieldmodelparam": [76, 115, 213, 219, 224, 226, 241, 242, 253, 330], "likelihoodfieldmodelparamparamet": [228, 242], "limit": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 70, 82, 85, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 307, 308, 310, 311, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 479, 481, 485, 508, 509, 520, 523, 524, 532, 534], "limited_rang": 437, "line": [26, 36, 37, 58, 61, 62, 63, 115, 181, 184, 185, 190, 193, 197, 198, 201, 210, 212, 215, 216, 217, 221, 223, 228, 253, 260, 319, 320, 523], "line_list": 523, "linear": [14, 16, 26, 48, 107, 153, 172, 177, 228, 243, 253, 260, 267, 440, 441, 446], "linear_clustering_resolut": [109, 110, 308], "linear_clustering_resolutionclust": 109, "linear_grid": [48, 153, 177, 266, 267, 440, 441], "linear_resolut": [498, 502, 511, 522, 523, 529], "linear_resolutionbeluga_ro": 530, "linear_resolutionconst": 523, "linear_resolutionlinear": 511, "linear_resolutionresolut": 523, "lineargrid2": [16, 48, 274], "linearli": 523, "linebresenham": 37, "linelin": 37, "link": [179, 181, 182, 184, 185, 188, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 254, 301, 464, 498, 513], "linux": 11, "list": [5, 27, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 179, 181, 182, 184, 185, 188, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 228, 254, 261, 274, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 352, 356, 357, 359, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 390, 392, 394, 397, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 424, 452, 453, 455, 457, 464, 470, 475, 483, 487, 489, 491, 498, 504, 513, 517, 521, 523, 524, 526, 529], "listen": [448, 450, 453, 455, 457, 474], "literatur": [263, 333], "littl": 1, "ll": 238, "llvm": [170, 284], "load": [3, 476, 479], "load_from_hdf5_2d": 263, "local": [1, 3, 5, 6, 11, 13, 16, 25, 26, 31, 42, 104, 228, 242, 253, 260, 313, 446, 476, 478, 479, 480, 481, 482, 485, 487, 489, 495, 497, 504, 511, 516, 524], "localization_launch": 6, "localization_map": 6, "localization_params_fil": 6, "locat": 236, "log": [33, 121, 172, 238, 248, 269, 273, 308, 453, 455, 457, 523, 534], "logic": [3, 281, 394], "long": [1, 18, 101], "longer": 3, "longitudin": 335, "longstand": 477, "look": [26, 104, 228, 229, 253, 260, 436], "lookup": 253, "loss": [3, 478, 479, 481, 524], "lot": 437, "low": [4, 437], "lower": [46, 476, 478, 479, 524], "lsquo": 42, "lt": [19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 49, 51, 53, 55, 57, 58, 61, 62, 63, 65, 66, 68, 71, 72, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 96, 98, 99, 101, 105, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 319, 320, 321, 323, 325, 327, 329, 332, 334, 335, 337, 339, 341, 343, 345, 347, 349, 353, 355, 358, 360, 369, 370, 372, 373, 375, 378, 379, 381, 383, 385, 388, 391, 393, 394, 395, 397, 398, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 415, 417, 419, 420, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 469, 473, 474, 476, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 498, 500, 502, 503, 504, 507, 508, 509, 510, 511, 516, 518, 519, 520, 522, 523, 524, 526, 530, 531, 532, 533, 534], "lvalu": [18, 28, 39, 40, 60, 253], "m": [20, 27, 40, 41, 64, 65, 97, 115, 180, 183, 195, 199, 213, 221, 224, 254, 464, 466, 468, 498], "m0": 428, "m1": 428, "m_pi": 31, "m_usedclass": [227, 469, 503], "ma": [41, 486, 536], "macro": [38, 301], "made": 5, "magazin": 41, "mai": [5, 6, 22, 24, 25, 28, 29, 31, 33, 35, 37, 38, 40, 64, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "main": [18, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 118, 119, 120, 121, 163, 164, 165, 166, 168, 171, 172, 173, 175, 176, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 260, 262, 263, 264, 266, 267, 268, 269, 270, 272, 275, 276, 277, 281, 282, 283, 285, 289, 291, 292, 293, 294, 295, 297, 301, 305, 306, 307, 308, 309, 310, 311, 312, 427, 429, 430, 433, 434, 435, 436, 437, 440, 441, 444, 480, 481, 482, 484, 507, 508, 509, 511, 516, 519, 520, 522, 523], "maintain": [42, 487], "major": [479, 491, 518, 520, 533, 534], "make": [3, 28, 31, 64, 242, 248, 253, 297, 301, 359, 522, 523], "make_action_closur": [29, 265, 286, 296], "make_from_st": [25, 253, 254, 259, 275, 276, 298, 481], "make_from_state_fn": [115, 201, 215, 228, 253, 275, 276, 298, 360], "make_from_state_fnfunct": 276, "make_from_statea": [276, 298], "make_from_stateconstexpr": [276, 298], "make_index_sequ": [308, 351, 435, 437], "make_likelihood_field": 242, "make_opt": [244, 292], "make_origin_transform": 520, "make_pair": 481, "make_particle_filt": [448, 450, 453, 454, 455, 456, 457, 458, 464, 466, 474], "make_particle_filterauto": [448, 450, 474], "make_polici": [174, 253, 254, 259, 271, 273, 281], "make_policy_fn": [174, 253, 271, 273, 281], "make_policyconstexpr": [174, 271, 273, 281], "make_policymak": [174, 271, 273, 281], "make_signed_t": [70, 231, 308], "make_subrang": 437, "make_transform": 250, "make_tupl": 308, "make_unsigned_t": 308, "make_view_closur": [290, 298, 428, 430], "manag": [5, 56, 74, 448, 453, 457, 474, 478, 479], "mani": [1, 2, 3, 25, 313, 476, 478, 479], "manual": [25, 42, 481, 487], "map": [6, 25, 26, 31, 33, 41, 42, 43, 54, 55, 56, 57, 64, 72, 74, 75, 76, 89, 97, 153, 163, 164, 172, 177, 228, 233, 234, 235, 236, 238, 242, 248, 253, 260, 263, 329, 333, 448, 450, 453, 455, 456, 457, 473, 474, 476, 478, 479, 481, 486, 487, 488, 522, 523, 536], "map_boundaries_": 236, "map_callback": [448, 450, 453, 454, 455, 456, 464, 466], "map_callbackvoid": [448, 450], "map_distribution_": 481, "map_limit": [72, 73, 199, 213, 236], "map_limitslandmarkmapboundari": 236, "map_path": 476, "map_servic": 478, "map_sub_": [448, 450, 453, 455, 464, 468], "map_sub_beluga_amcl": [454, 456], "map_sub_occup": [448, 450], "map_sub_rclcpp": 448, "map_sub_ro": 450, "map_timer_": [450, 455, 464, 468], "map_timer_beluga_amcl": 456, "map_timer_callback": [450, 455, 456, 464, 466], "map_timer_callbackvoid": 450, "map_timer_ro": 450, "map_timer_tim": 450, "map_top": [478, 479], "map_typ": [25, 31, 33, 42, 43, 54, 55, 56, 57, 74, 75, 76, 77, 89, 90, 97, 98, 213, 221, 238, 242, 263, 306], "map_typemap": [31, 242, 263], "map_typemaptyp": 306, "map_typeoccupancygrid": [31, 242], "map_typesparsegridt": 263, "map_typeunderli": 306, "map_yaml_path": 6, "mapnew": 54, "mapoccup": 487, "mapped_typ": [89, 97, 98, 213, 221, 263, 306], "mapped_typetypenam": 306, "mapped_typevalu": 306, "maptyp": [98, 184, 192, 203, 204, 211, 213, 217, 219, 221, 228, 253, 305, 306], "maptypeassoci": 97, "margin": 4, "marker": [448, 453, 509, 511, 522, 523], "marker_arrai": [447, 448, 509], "markerarrai": [448, 453, 479, 509, 511, 522, 523], "mask": [39, 40, 253], "match": [3, 4, 33, 54, 64, 66, 85, 93, 99, 111, 113, 121, 238, 269, 310, 434, 435, 479, 511], "matcher": [155, 177, 301, 302, 432], "mathrm": 4, "matric": [303, 446], "matrix": [78, 81, 167, 172, 199, 201, 213, 215, 219, 221, 223, 228, 248, 249, 250, 253, 262, 263, 303, 304, 331, 367, 368, 371, 374, 376, 473, 474, 518, 523, 531, 532, 533, 534], "matrix2": [171, 172, 253], "matrix2xd": [262, 263], "matrix2xi": 263, "matrix3": [25, 171, 172, 253, 481, 518, 533, 534], "matrix3d": [448, 450, 453, 454, 455, 456, 457, 458, 474, 481, 487, 488], "matrix3xd": 262, "matrix_s": [213, 224, 248, 371], "matrix_sizebeluga": 375, "matrix_typ": [80, 81, 213, 221, 250], "matrix_typematrix": 250, "matrix_typeth": 250, "max": [31, 252, 263, 298, 301, 315, 415, 416, 430, 476, 478, 479, 489, 490, 508, 523], "max_beam": [476, 478, 479, 489, 490, 508], "max_beams_": 508, "max_beamsmaximum": 489, "max_bin_weight": 523, "max_el": [295, 296], "max_laser_dist": [213, 224, 242, 329], "max_laser_distancebeluga": 330, "max_laser_distancedoubl": 242, "max_laser_distancemaximum": 242, "max_obstacle_dist": [213, 224, 242, 329], "max_obstacle_distancebeluga": 330, "max_obstacle_distancedoubl": 242, "max_obstacle_distancemaximum": 242, "max_particl": [25, 213, 224, 313, 476, 478, 479, 481, 498, 502, 524], "max_particlesbeluga": 314, "max_particlesbeluga_ro": 525, "max_particlesmaximum": [25, 481], "max_particlesstd": [25, 481], "max_rang": [13, 46, 95, 96, 240, 292, 489, 490, 498, 500, 508], "max_range_": [292, 508], "max_rangeauto": 508, "max_rangemaximum": [95, 489], "max_siz": [40, 64, 65, 199, 213], "max_sizeconstexpr": 40, "maxim": 236, "maximum": [13, 40, 64, 253, 313, 315, 329, 476, 478, 479, 489, 508, 524], "maxmaximum": 415, "maybe_ndt": 263, "maybe_unus": [99, 100, 307, 308, 310], "mcl": [1, 11, 446, 505], "mean": [12, 14, 16, 25, 78, 79, 80, 81, 171, 172, 213, 224, 227, 250, 253, 262, 263, 331, 446, 469, 478, 479, 503], "mean_": 250, "mean_pose_vector": 172, "meana": 80, "meanan": 78, "meanbeluga": 332, "meaneigen": 262, "meanin": 104, "meanmean": 262, "means_dataset": 263, "means_matrix": 263, "meanth": 253, "measur": [4, 20, 25, 31, 42, 43, 54, 56, 74, 76, 89, 90, 95, 229, 262, 263, 295, 331, 332, 333, 478, 479, 481, 489, 508], "measurement_cel": 263, "measurement_typ": [20, 25, 31, 33, 42, 43, 54, 55, 56, 57, 74, 75, 76, 77, 89, 90, 213, 221, 238, 242, 263], "measurement_typemeasur": [31, 33, 238, 242, 263], "measurement_typestd": [31, 33, 238, 242, 263], "measurementmeasur": 42, "mechan": [25, 253, 313], "meet": [78, 80], "member": [17, 18, 26, 27, 35, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 146, 177, 228, 253, 260, 261, 276, 278, 282, 290, 298, 301, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 352, 354, 356, 357, 359, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 390, 392, 394, 397, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 424, 435, 437, 452, 453, 455, 457, 478, 479, 483, 487, 489, 491, 517, 524, 526, 529], "memori": [12, 14, 64, 253, 447, 448, 449, 450, 519, 520, 522, 523], "merit": 253, "messag": [450, 453, 455, 456, 457, 478, 479, 481, 482, 489, 491, 495, 497, 504, 505, 507, 508, 510, 511, 512, 516, 518, 519, 520, 522, 523, 531, 532, 533, 534], "message_filt": [447, 448, 449, 450, 453, 455, 457, 473, 474], "messagea": 511, "messagefilt": [448, 450, 453, 455, 457, 474], "messagemark": 511, "messagemessag": 511, "messageparticl": 511, "meta": [228, 253, 351, 354, 361, 363, 365, 399, 434], "metaprogram": 3, "meter": [13, 25, 95, 97, 109, 306, 313, 476, 478, 479, 489, 491, 511, 520, 523, 529], "method": [1, 4, 41, 42, 60, 76, 104, 248, 250, 253, 397, 419, 434, 435, 450, 455, 487], "metric": [25, 145, 177, 270, 271, 280], "might": 31, "migrat": [4, 477], "min": [40, 121, 236, 242, 252, 253, 269, 292, 298, 313, 415, 416, 429, 430, 489, 490, 508, 523], "min_angl": [273, 385, 386, 390, 391], "min_angle_": 273, "min_angleth": 390, "min_dist": [273, 385, 386, 390, 391], "min_distance_": 273, "min_distanceth": 390, "min_el": 236, "min_likelihood": 89, "min_particl": [25, 213, 224, 313, 476, 478, 479, 481, 498, 502, 524], "min_particlesbeluga": 314, "min_particlesbeluga_ro": 525, "min_particlesminimum": [25, 481], "min_particlesstd": [25, 481], "min_rang": [13, 46, 240, 489, 490, 498, 500, 508], "min_range_": 508, "min_rangeauto": 508, "min_rangeminimum": 489, "min_scale_factor": 523, "minim": [3, 33, 72, 236], "minimization_funct": 236, "minimum": [3, 13, 253, 313, 390, 429, 476, 478, 479, 489, 508, 524], "minimum_likelihood": [213, 224, 263, 333], "minimum_likelihoodbeluga": 334, "minimum_likelihooddoubl": 263, "minimum_likelihoodlikelihood": 263, "minminimum": [253, 415], "miodrag": 41, "misc": 445, "mismatch": 4, "miss": [31, 41, 315], "mit": [41, 486, 536], "mix": 3, "mixin": 38, "mixin_bas": 38, "mixin_impl": 38, "mixtur": [478, 479], "mkdir": 5, "mm": 523, "mobil": [477, 478, 479], "modal": 4, "model": [2, 4, 11, 15, 16, 20, 26, 30, 31, 32, 33, 35, 42, 54, 56, 64, 66, 74, 76, 89, 93, 99, 120, 121, 146, 152, 156, 157, 177, 228, 229, 233, 236, 237, 238, 241, 242, 245, 246, 253, 260, 263, 268, 269, 295, 296, 297, 299, 300, 309, 310, 347, 348, 349, 350, 446, 448, 450, 453, 455, 457, 473, 474, 476, 481, 487], "modela": 347, "modern": [2, 40, 435], "modifi": [58, 70, 231], "modified_": 37, "modul": 446, "modular": 446, "monocular": 56, "mont": [1, 2, 11, 25, 26, 42, 228, 253, 260, 313, 446, 480, 481, 482, 485, 487, 495, 497, 504, 511, 516, 524], "more": [21, 23, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 116, 118, 120, 163, 165, 168, 171, 172, 173, 175, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 250, 251, 253, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 473, 480, 484, 487, 489, 491, 507, 510, 511, 512, 518, 519, 522, 524, 526, 528, 529, 531, 533], "most": [1, 3, 33, 64, 448, 453, 457, 474, 479, 523], "mostderiv": 38, "mostli": [262, 331], "motion": [4, 11, 15, 25, 26, 34, 35, 42, 66, 74, 93, 99, 145, 146, 177, 228, 229, 253, 260, 272, 273, 280, 321, 335, 385, 387, 389, 390, 446, 448, 450, 453, 455, 457, 473, 474, 476, 481, 487], "motion_model": [25, 42, 43, 481, 487, 488], "motion_model_": [25, 481], "motion_model_vari": [448, 450, 453, 455, 481, 487, 488, 498, 501], "motion_model_variantbeluga_amcl": [454, 456], "motion_model_variantget": [448, 450], "motion_model_variantmot": 481, "motion_model_variantstd": 481, "motion_modelmot": 42, "motion_modelvari": 487, "motioninclud": 136, "motionmodel": [2, 25, 43, 66, 93, 99, 179, 188, 189, 194, 197, 202, 206, 210, 216, 222, 228, 274, 473, 474], "motionmodelclass": 42, "motionmodelvari": [457, 473, 474], "motionmodelvariantbeluga_amcl": 458, "motionmodelvariantget": 474, "motionmodelvariantstd": 474, "motionmodelvariantsupport": 474, "motionmot": 124, "movabl": 20, "move": [25, 28, 29, 31, 33, 37, 40, 58, 64, 78, 166, 178, 231, 236, 238, 242, 250, 263, 265, 273, 276, 281, 286, 290, 292, 296, 297, 298, 306, 401, 430, 437, 441, 445, 481, 508, 520], "move_tag": [401, 402, 445], "movement": [476, 481, 524], "msg": [447, 448, 453, 454, 457, 458, 473, 474, 476, 479, 489, 490, 491, 492, 508, 509, 510, 511, 518, 520, 522, 523, 531, 532, 533, 534], "msgthe": 518, "mt19937": 298, "mth": [229, 437, 444, 445], "much": [3, 321, 335, 437], "multi": 78, "multimod": 4, "multinomi": [229, 297, 446], "multipl": [4, 236, 292, 295, 381, 437, 523], "multipli": [33, 172, 238, 347], "multivari": [26, 78, 80, 82, 83, 85, 87, 159, 177, 228, 229, 247, 249, 250, 251, 252, 253, 260, 288, 446], "multivariate_distribution_trait": [26, 78, 115, 159, 177, 182, 188, 194, 205, 213, 217, 219, 220, 221, 223, 224, 228, 249, 250, 253, 260, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "multivariate_distribution_traitsforward": [248, 250], "multivariate_normal_distribut": [25, 78, 80, 159, 177, 287, 288], "multivariate_uniform_distribut": [82, 83, 85, 87, 127, 159, 177, 287, 288], "multivariatenormaldistribut": [2, 18, 25, 79, 115, 182, 199, 201, 202, 203, 213, 215, 216, 217, 219, 221, 223, 228, 229, 249, 250, 253, 254, 256, 481], "multivariatenormaldistributionmultivari": [25, 250], "multivariatenormaldistributionmultivariatenormaldistribut": 250, "multivariatenormaldistributionparam": [78, 81, 115, 199, 201, 213, 215, 219, 221, 223, 228, 249, 250, 253], "multivariatenormaldistributionparammultivari": 250, "multivariatenormaldistributionparammultivariatenormaldistributionparam": 250, "multivariateuniformdistribut": [83, 84, 85, 86, 87, 88, 115, 199, 201, 213, 215, 228, 229, 251, 252, 253, 254, 256, 481], "multivariateuniformdistributionconstexpr": 252, "multivariateuniformdistributionmultivariateuniformdistribut": 252, "multivariateuniformdistributionprimari": 252, "mundan": 1, "must": [3, 5, 6, 18, 42, 44, 46, 48, 50, 52, 54, 60, 64, 70, 76, 78, 80, 97, 107, 253, 297, 397, 419, 478, 479, 518], "mutabl": [17, 281, 298, 430, 450], "mutat": [3, 60], "mutex": [449, 450, 455], "mutex_": [450, 455, 464, 468], "mutex_beluga_amcl": 456, "mutex_mutex": 450, "mutex_std": 450, "n": [4, 19, 24, 25, 26, 27, 31, 37, 39, 40, 52, 65, 97, 113, 114, 115, 119, 145, 151, 168, 169, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 228, 229, 236, 253, 254, 260, 262, 263, 280, 293, 294, 305, 306, 307, 308, 331, 358, 381, 425, 437, 444, 445, 459, 464, 466, 468, 523], "n_": [478, 479, 524], "n_eff": 476, "naction": [26, 260], "nahuel": 481, "name": [12, 13, 14, 15, 16, 17, 18, 19, 20, 37, 42, 44, 46, 48, 50, 52, 54, 56, 66, 74, 76, 78, 89, 93, 99, 150, 166, 167, 177, 229, 265, 274, 275, 286, 296, 298, 343, 428, 430, 433, 439, 448, 450, 453, 455, 457, 474, 476, 478, 479, 511, 534], "namebeluga": [51, 59, 492], "namespac": [17, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 397, 419, 427, 428, 429, 430, 433, 434, 435, 436, 437, 440, 441, 444, 445, 448, 450, 474, 476, 480, 481, 482, 484, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "nan": 46, "native_doubl": 263, "native_int": 263, "natur": [2, 3, 41, 486, 536], "nav": 479, "nav2": [269, 471, 478, 479, 505], "nav2_amcl": [476, 477, 479], "nav_msg": [447, 448, 449, 450, 453, 454, 455, 456, 478, 479, 481, 482, 485, 491, 495, 497, 504, 505, 509, 511, 516, 519, 520], "navig": [478, 479], "nbeluga": 516, "nbeluga_amcl": 451, "nbeluga_rosth": [482, 516], "nbelugath": [26, 260], "nbsp": [28, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 168, 173, 253, 264, 270, 272, 277, 285, 289, 295, 297, 301, 303, 307, 321, 329, 331, 333, 335, 337, 339, 343, 347, 359, 371, 381, 383, 385, 390, 392, 397, 401, 403, 405, 407, 411, 413, 415, 419, 421, 427, 429, 434, 444, 453, 455, 457, 487, 489, 491, 511, 518, 522, 529], "ncovari": 262, "ndash": [41, 486], "ndetail": [26, 260, 482, 516], "ndim": [19, 44, 45, 48, 49, 50, 51, 53, 98, 107, 108, 182, 184, 191, 192, 198, 203, 204, 211, 212, 213, 214, 215, 217, 218, 219, 221, 224, 228, 262, 263, 293, 294, 305, 306, 332, 334, 491, 492, 504], "ndim1": 19, "ndimdimens": [52, 97], "ndt": [26, 89, 228, 253, 260, 262, 263, 331, 451, 457, 462, 463, 470, 473, 474], "ndt_amcl_nod": [457, 462, 463], "ndt_cell": [177, 263, 331, 332, 473, 474], "ndt_cell_typ": [89, 90, 214, 221, 263], "ndt_cell_typendt": 263, "ndt_cell_typetypenam": 263, "ndt_sensor_model": [89, 127, 177, 299, 300, 333, 357, 473, 474], "ndtamcl": [473, 474], "ndtamclnod": [458, 459, 464, 466, 468, 473, 474], "ndtamclnode2d": [470, 474], "ndtamclnodeexplicit": 458, "ndtamclnodendtamclnod": 474, "ndtamclnodeprotect": 458, "ndtamclvari": [457, 458, 473, 474], "ndtamclvariantal": 474, "ndtamclvariantstd": 474, "ndtcell": [115, 182, 198, 212, 213, 214, 215, 218, 219, 221, 224, 228, 253, 262, 263, 332], "ndtcell2d": [253, 254, 258, 262, 263, 473, 474], "ndtcell2dconveni": 263, "ndtcell2dndtcel": 263, "ndtcell2f": [253, 254, 258, 262], "ndtcell3d": [253, 254, 258, 262], "ndtcell3f": [253, 254, 258, 262], "ndtcellrepresent": [262, 263], "ndtmaprepresent": [457, 473, 474], "ndtmaprepresentationt": 263, "ndtmodelparam": [89, 115, 184, 213, 214, 224, 228, 253, 263, 334], "ndtmodelparam2d": [253, 254, 258, 263], "ndtmodelparam3d": [253, 254, 258, 263], "ndtmodelparamparamet": 263, "ndtsensormodel": [26, 90, 115, 198, 200, 201, 212, 213, 214, 215, 216, 219, 221, 225, 228, 253, 260, 263, 333, 457, 473, 474], "ndtsensormodelndt": 263, "ndtsensormodelndtsensormodel": 263, "nearest": [16, 44, 48, 50, 52, 72, 97, 107, 119, 163, 164, 236, 238, 242, 253, 267, 294, 306], "nearest_obstacle_distance_map": [163, 164, 242, 253, 254, 256], "nearest_obstacle_distance_mapauto": [164, 242], "nearest_obstacle_index": 164, "necessari": [3, 5, 6, 42, 263, 476, 478, 479, 487, 524], "necessarili": 64, "need": [0, 2, 3, 18, 29, 54, 104, 106, 173, 236, 253, 272, 290, 298, 401, 428, 446, 476, 478, 479, 518], "neg": 250, "negat": [283, 397, 419], "neigen": 260, "neighbor": [44, 48, 89, 253, 333], "neighborhood": [12, 14, 44, 48, 50, 107, 119, 242, 244], "neighborhood4": [12, 14, 44, 45, 48, 49, 50, 51, 107, 108, 119, 200, 214, 242, 244, 491, 492], "neighborhood4auto": [119, 244], "neighbors_funct": [163, 164, 242, 253], "neighbors_functiongiven": 253, "neighbors_kernel": [214, 224, 263, 333], "neighbors_kernelbeluga": 334, "neighbors_kernelneighbor": 263, "neighbors_kernelstd": 263, "neighborsfunct": [163, 164, 242, 253], "neighborsfunctiona": 253, "neighborst": 253, "nelement": 168, "neural": [41, 486, 536], "never": 1, "new": [4, 18, 31, 33, 38, 54, 56, 74, 76, 80, 91, 104, 172, 229, 238, 242, 250, 253, 276, 337, 347, 359, 407, 437, 444, 445, 446], "new_cap": [104, 105, 437], "new_capnew": 104, "newer": 253, "next": [25, 42, 78, 250, 290, 298, 481, 487], "ninjemi": 11, "nio": 260, "nip": [41, 486, 536], "nmaximum": 64, "nmsgcompat": 516, "nnumber": 307, "node": [31, 447, 448, 451, 453, 457, 470, 471, 473, 474, 476, 478], "node_interfac": [448, 474], "nodelet": [449, 450, 451, 455, 470, 471], "nodeopt": [448, 453, 454, 457, 458, 474], "nodiscard": [25, 31, 33, 37, 38, 40, 119, 121, 176, 178, 231, 236, 238, 240, 242, 244, 248, 250, 252, 262, 263, 267, 269, 290, 292, 294, 298, 306, 310, 437, 441, 481, 508, 520], "noetic": 11, "noexcept": [37, 39, 40, 58, 59, 64, 65, 68, 70, 78, 91, 92, 95, 101, 104, 176, 178, 231, 250, 253, 283, 290, 292, 298, 312, 397, 398, 401, 402, 419, 420, 433, 434, 435, 437, 445, 481], "noexceptbeluga": [59, 65, 69, 71, 79, 92, 96, 102, 105, 398, 420], "noexceptcheck": 231, "noexceptclear": [40, 437], "noexceptcomput": 231, "noexceptconstruct": [176, 292], "noexceptconstructor": 433, "noexceptderefer": 231, "noexceptforward": 231, "noexceptget": 40, "noexcepthelp": 435, "noexceptmov": 250, "noexceptpop": 40, "noexceptpost": 231, "noexceptpr": 231, "noexceptreset": [25, 176, 433], "noexceptreturn": [40, 178, 283, 435, 437], "noexceptrewind": 231, "noexceptupd": 176, "nois": [31, 99, 121, 242, 269, 315, 321, 329, 335, 476, 478, 479], "noisi": [31, 315], "nolint": [37, 40, 167, 170, 178, 250, 284, 304, 312, 428, 435, 445, 534], "nomin": 64, "nomotion_update_callback": [448, 450, 453, 454, 455, 456, 464, 466], "nomotion_update_callbackbool": 450, "nomotion_update_callbackvoid": 448, "nomotion_update_server_": [448, 450, 453, 455, 464, 468], "nomotion_update_server_beluga_amcl": [454, 456], "nomotion_update_server_no": [448, 450], "nomotion_update_server_rclcpp": 448, "nomotion_update_server_ro": 450, "non": [0, 1, 25, 26, 39, 40, 50, 64, 76, 95, 172, 228, 253, 260, 262, 281, 297, 394, 397, 419], "none": [64, 264], "nonneg": [478, 479], "norm": [33, 121, 172, 238, 269, 292], "normal": [4, 21, 22, 25, 26, 31, 33, 78, 80, 154, 159, 172, 177, 228, 229, 236, 238, 248, 249, 250, 253, 260, 262, 288, 331, 339, 341, 429, 430, 446, 476, 478, 479, 481, 524], "normal_distribut": [2, 80, 81, 121, 229, 250, 269, 310], "normalize_and_squar": 166, "normalize_base_fn": [115, 201, 215, 264, 265, 340, 341, 342], "normalize_base_fnimplement": [228, 265], "normalize_base_fninlin": [340, 342], "normalize_fn": [115, 201, 215, 264, 265, 342], "normalize_fnimplement": [228, 265], "normalize_fninlin": 342, "normalizeconstexpr": 265, "normalized_weight": [166, 171, 172, 253], "normalized_weights_view": 172, "normalized_weightsrang": 253, "normalizedefinit": 265, "note": [17, 50, 52, 64, 263, 489], "notethi": [54, 56, 74, 76], "noth": 104, "notic": [33, 172, 238], "now": [5, 308], "nowher": [70, 231], "npolici": [26, 260], "nsophu": 260, "nsophussophu": 516, "nstate_detail": [26, 260], "nstd": [26, 260], "ntest": 260, "ntf2tf2": 516, "nth": 229, "nullari": 290, "nullopt": [25, 42, 44, 48, 72, 97, 119, 236, 244, 292, 306, 457, 474, 481, 487], "nullptr": [231, 263, 457, 474, 508], "num_dim": [89, 214, 224, 262, 263, 331], "num_dimbeluga": 332, "num_dimnumb": 262, "num_dimstat": 262, "number": [4, 11, 25, 83, 85, 87, 97, 107, 172, 227, 229, 236, 253, 270, 303, 306, 308, 313, 331, 343, 403, 405, 407, 411, 429, 441, 469, 476, 478, 479, 481, 489, 503, 523, 524], "number_of_non_zero_weight": 172, "numer": [26, 92, 115, 150, 165, 166, 171, 172, 177, 200, 201, 214, 215, 228, 253, 260, 264, 265, 282, 283, 311, 312, 422, 433, 446, 474], "numeric_limit": [26, 91, 115, 172, 228, 260, 265, 308, 311, 312, 423, 430, 433, 476, 489, 490, 508], "numericconstexpr": 312, "numerichelp": [283, 312], "nview": [26, 260], "nweight_detail": [26, 260], "o": [5, 27, 31, 64, 115, 180, 183, 195, 201, 215, 236, 242, 253, 254, 262, 303, 304, 331, 332, 437, 464, 466, 485, 493, 495, 497, 498, 505, 522], "object": [17, 18, 22, 26, 28, 29, 31, 33, 78, 80, 91, 121, 144, 154, 166, 168, 172, 173, 174, 177, 228, 229, 236, 238, 242, 250, 253, 260, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 285, 286, 289, 290, 295, 296, 297, 298, 308, 310, 337, 339, 341, 343, 345, 347, 349, 359, 379, 383, 385, 392, 394, 397, 401, 403, 405, 409, 411, 413, 415, 417, 419, 427, 428, 429, 430, 434, 435, 437, 443, 444, 445], "observ": 1, "obstacl": [16, 24, 31, 50, 151, 163, 164, 177, 242, 253, 267, 315, 329, 478, 479], "obstacle_data": [16, 50, 51, 201, 215, 242, 267, 491, 492], "obstacle_dataauto": 267, "obstacle_map": [163, 164, 242, 253], "obstacle_mapa": 253, "obtain": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 229, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 277, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "occup": [16, 26, 31, 50, 54, 76, 85, 95, 153, 177, 228, 242, 251, 252, 253, 260, 266, 446, 448, 450, 453, 455, 457, 474, 478, 479, 482, 491, 504, 516, 519, 520, 526], "occupancy_grid": [50, 127, 138, 153, 177, 241, 242, 251, 252, 447, 448, 480, 481, 484, 485, 491, 495, 497, 509, 526], "occupancygrid": [2, 26, 30, 31, 55, 77, 86, 96, 115, 181, 182, 190, 191, 198, 199, 201, 203, 205, 206, 212, 213, 215, 216, 217, 219, 220, 221, 222, 225, 228, 241, 242, 251, 252, 253, 260, 291, 292, 448, 449, 450, 453, 454, 455, 456, 478, 479, 481, 482, 485, 487, 488, 492, 493, 495, 497, 498, 500, 502, 504, 505, 509, 511, 516, 519, 520, 526, 527], "occupancygrid2d": [2, 50, 54, 76, 274], "occupancygrida": [85, 95], "occupancygridconstsharedptr": [491, 492, 509, 520], "occupancygridinlin": 492, "occupancygridinlineexplicit": 492, "occupancygridinlinestat": 492, "occupancygridoccupancygrid": 520, "occupancygridthin": [481, 504, 509, 520], "occupancygridtyp": [54, 76], "occupi": [16, 520, 526], "occur": [453, 455, 457], "odom": [448, 450, 453, 455, 457, 474, 476, 478, 479], "odom_alpha1": 478, "odom_alpha2": 478, "odom_alpha3": 478, "odom_alpha4": 478, "odom_alpha5": 478, "odom_frame_id": [476, 478, 479], "odometri": [6, 26, 66, 93, 99, 120, 121, 156, 177, 228, 229, 246, 253, 260, 268, 269, 310, 321, 335, 476, 478, 479, 487], "off": [5, 101], "offici": 5, "offset": [70, 71, 231, 242, 263], "often": 3, "old": 263, "older": [253, 478], "oldest": 64, "omit": 6, "omni": 478, "omni_motion_model": 269, "omnidirect": [26, 93, 156, 177, 228, 229, 246, 253, 260, 268, 269, 446, 476], "omnidirectional_dr": [476, 478, 479], "omnidirectional_drive_model": [93, 156, 177, 245, 246, 335, 473, 474], "omnidirectionaldrivemodel": [15, 26, 94, 115, 182, 201, 215, 216, 219, 221, 228, 229, 253, 260, 268, 269, 335, 473, 474, 481, 487], "omnidirectionaldrivemodelinlin": 94, "omnidirectionaldrivemodelinlineexplicit": 94, "omnidirectionaldrivemodelomnidirectionaldrivemodel": 269, "omnidirectionaldrivemodelparam": [93, 115, 184, 217, 219, 220, 224, 253, 268, 269, 336], "omnidirectionaldrivemodelparamparamet": [228, 269], "omnidirectionaldrivemodelsampl": [228, 269], "omnimotionmodel": [476, 479], "on_activ": [448, 453, 454, 457, 458, 464, 466, 474], "on_activatecallbackreturn": [448, 474], "on_cleanup": [448, 453, 454, 457, 458, 464, 466, 474], "on_cleanupcallbackreturn": [448, 474], "on_configur": [448, 453, 454, 457, 458, 464, 466, 474], "on_configurecallbackreturn": [448, 474], "on_deactiv": [448, 453, 454, 457, 458, 464, 466, 474], "on_deactivatecallbackreturn": [448, 474], "on_effective_size_drop": [25, 145, 177, 229, 279, 280, 383, 481], "on_effective_size_drop_polici": [25, 26, 115, 201, 211, 215, 224, 228, 260, 270, 271, 384], "on_effective_size_drop_policyimplement": [228, 271], "on_effective_size_drop_policyinlin": 384, "on_effective_size_drop_policystat": 384, "on_effective_size_dropconstexpr": [25, 271], "on_effective_size_droppolici": [25, 271], "on_mot": [25, 145, 177, 229, 279, 280, 385, 387, 389, 390, 481], "on_motion_fn": [25, 26, 115, 201, 215, 228, 260, 272, 273, 386, 481], "on_motion_fnimplement": [228, 273], "on_motion_fninlin": 386, "on_motion_polici": [26, 115, 201, 215, 228, 260, 272, 273, 388], "on_motion_policy_bas": [26, 115, 201, 215, 228, 260, 272, 273, 390, 391], "on_motion_policy_baseconstexpr": 273, "on_motion_policy_baseprimari": 273, "on_motion_policybas": 273, "on_motionconstexpr": [25, 273, 481], "on_motionpolici": [25, 273], "on_shutdown": [448, 453, 454, 457, 458, 464, 466, 474], "on_shutdowncallbackreturn": [448, 474], "onc": [6, 28, 428, 481], "one": [6, 26, 36, 37, 60, 62, 78, 85, 104, 228, 253, 260, 298, 392, 409, 478, 479, 523], "oner": 3, "ones": 446, "oninit": [450, 455, 456, 464, 466], "oninitvoid": 450, "onli": [5, 37, 56, 62, 64, 70, 91, 99, 104, 236, 253, 263, 297, 301, 307, 476, 478, 479, 523, 524], "op": [64, 337], "opac": 523, "open": [6, 11, 308, 446], "opendataset": 263, "oper": [2, 29, 31, 33, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 109, 110, 111, 112, 113, 114, 121, 174, 176, 201, 215, 218, 229, 231, 238, 242, 250, 252, 253, 254, 256, 262, 263, 265, 269, 271, 273, 276, 281, 283, 286, 290, 296, 298, 303, 304, 308, 310, 312, 319, 320, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 360, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 430, 433, 445, 482, 489, 498, 500, 504, 516, 523, 528, 529, 530], "opera": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "opt": [5, 28], "opt_landmark_bearing_in_sensor": 33, "opt_landmark_position_in_world": 238, "optim": [3, 26, 36, 37, 58, 228, 236, 253, 260, 437], "optin": 40, "option": [12, 14, 25, 33, 42, 43, 64, 72, 95, 97, 118, 119, 120, 121, 236, 238, 243, 244, 268, 269, 273, 289, 290, 291, 292, 305, 306, 309, 310, 447, 448, 450, 453, 454, 455, 456, 457, 458, 473, 474, 480, 481, 487, 488], "order": [2, 28, 38, 265, 286, 296, 339, 341, 343, 345, 347, 349, 476], "org": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 357, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "organ": 229, "orient": [172, 520, 523, 534], "origin": [13, 16, 50, 95, 242, 267, 276, 292, 481, 489, 490, 491, 492, 498, 500, 508, 520], "origin_": [508, 520], "originconst": [508, 520], "originlas": 489, "osan": 303, "ostream": [262, 303, 304, 331, 332], "other": [2, 4, 18, 37, 40, 42, 62, 63, 64, 65, 70, 71, 78, 79, 80, 81, 227, 229, 231, 250, 265, 285, 286, 290, 296, 319, 320, 339, 341, 343, 345, 347, 349, 392, 403, 413, 415, 428, 430, 434, 444, 469, 478, 479, 503, 523], "otheranoth": 78, "otherdistribut": 78, "otherparamet": 80, "otherwis": [40, 44, 48, 64, 78, 80, 104, 381, 383, 390, 453, 455, 457], "our": 6, "out": [1, 3, 6, 40, 42, 511, 518, 532, 533, 534], "out_of_rang": [40, 97], "out_of_rangeif": 64, "outa": 518, "output": [26, 68, 176, 228, 253, 260, 303, 401, 433, 444, 445], "output_": 176, "outth": 518, "over": [3, 4, 19, 101, 104, 229, 236, 427, 478, 479, 485, 495, 497, 505, 522], "overhead": 3, "overload": [17, 29, 37, 39, 40, 58, 62, 91, 104, 174, 229, 253, 262, 265, 281, 283, 286, 296, 301, 319, 331, 337, 339, 341, 343, 345, 347, 349, 379, 381, 383, 385, 392, 397, 401, 403, 409, 413, 415, 417, 419, 437, 445, 485, 495, 497, 505, 510, 516, 518, 523, 531, 532, 533, 534], "overrid": [448, 450, 453, 454, 455, 456, 457, 458, 474], "overridebeluga_amcl": [454, 456, 458], "overridecallback": [448, 450, 474], "overwrit": [64, 253], "overwritten": 253, "ow": 3, "own": 16, "p": [4, 5, 12, 16, 17, 18, 19, 27, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 115, 119, 180, 183, 195, 202, 216, 221, 253, 267, 294, 306, 429, 430, 464, 466, 468, 476, 478, 479, 481, 491, 492, 498, 524], "p0": [37, 58, 59, 60, 61], "p0_": 37, "p0line": 60, "p0start": 58, "p1": [37, 58, 59, 60, 61], "p1_": 37, "p1end": 58, "p1line": 60, "p2593r1": 308, "packag": [5, 477], "page": [26, 41, 227, 228, 253, 260, 275, 276, 377, 469, 486, 503], "pair": [25, 31, 40, 42, 54, 64, 70, 76, 97, 171, 172, 242, 253, 306, 428, 444, 448, 450, 453, 454, 455, 456, 457, 458, 474, 481, 487, 488], "paper": 308, "par": [476, 478, 479], "parallel": [446, 478, 479], "parallel_polici": [25, 473, 474, 481, 487], "param": [18, 25, 31, 33, 42, 43, 54, 55, 56, 57, 66, 67, 74, 75, 76, 77, 78, 79, 89, 90, 93, 94, 121, 202, 216, 238, 242, 244, 250, 263, 269, 481, 487, 488], "param_typ": [18, 31, 33, 54, 55, 56, 57, 66, 67, 74, 75, 76, 77, 78, 79, 89, 90, 93, 94, 121, 216, 221, 238, 242, 250, 263, 269], "param_typebearingmodelparam": 33, "param_typedifferentialdrivemodelparam": 121, "param_typelandmarkmodelparam": 238, "param_typelikelihoodfieldmodelparam": 242, "param_typemultivariatenormaldistributionparam": 250, "param_typendtmodelparam": 263, "param_typeomnidirectionaldrivemodelparam": 269, "param_typeparamet": [33, 121, 238, 242, 263, 269], "param_typeth": 250, "paramconst": 250, "paramet": [6, 18, 25, 26, 30, 31, 32, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 120, 168, 227, 228, 237, 241, 249, 250, 253, 260, 262, 263, 268, 269, 297, 301, 303, 307, 313, 315, 317, 321, 325, 329, 333, 335, 339, 343, 347, 359, 381, 383, 387, 389, 390, 403, 405, 411, 413, 415, 421, 423, 448, 450, 453, 455, 457, 469, 474, 476, 480, 481, 482, 487, 489, 491, 503, 504, 511, 516, 518, 524, 529], "parameter": 297, "parameterdescriptor": 476, "parametervalu": 476, "parametr": [18, 448, 450, 453, 455, 457, 474], "params_": [25, 31, 33, 89, 121, 238, 242, 250, 263, 269, 481], "params_path": 6, "paramsdistribut": 78, "paramsnew": 78, "paramsparamet": [42, 54, 56, 66, 74, 76, 89, 93, 487], "paramsth": 78, "paramvoid": 250, "parent": 164, "part": [4, 25, 172, 253, 313], "partial": [3, 473], "particl": [4, 11, 15, 20, 24, 25, 26, 31, 33, 41, 42, 43, 54, 56, 66, 74, 76, 89, 93, 99, 101, 121, 144, 150, 151, 165, 166, 171, 172, 177, 201, 202, 215, 216, 228, 229, 238, 242, 253, 260, 263, 264, 265, 269, 270, 274, 275, 276, 282, 283, 285, 286, 295, 296, 297, 298, 307, 308, 310, 313, 343, 347, 360, 377, 383, 396, 397, 407, 415, 419, 429, 430, 433, 439, 442, 443, 446, 448, 450, 453, 455, 457, 473, 474, 476, 481, 485, 486, 487, 488, 495, 497, 498, 500, 505, 511, 522, 523, 524, 536], "particle_cloud": [6, 479, 484, 485, 495, 497, 505, 528, 529], "particle_cloud_pub_": [448, 450, 453, 455, 457, 464, 468, 474], "particle_cloud_pub_beluga_amcl": [454, 456, 458], "particle_cloud_pub_particl": [448, 450, 474], "particle_cloud_pub_rclcpp_lifecycl": [448, 474], "particle_cloud_pub_ro": 450, "particle_cloud_timer_": [450, 455, 464, 468], "particle_cloud_timer_beluga_amcl": 456, "particle_cloud_timer_callback": [450, 455, 456, 464, 466], "particle_cloud_timer_callbackvoid": 450, "particle_cloud_timer_ro": 450, "particle_cloud_timer_tim": 450, "particle_filter_": [448, 450, 453, 455, 457, 464, 468, 474], "particle_filter_beluga_amcl": [454, 456, 458], "particle_filter_particl": [448, 450, 474], "particle_filter_std": [448, 450, 474], "particle_mark": 479, "particle_markers_pub_": [448, 453, 464, 468], "particle_markers_pub_beluga_amcl": 454, "particle_markers_pub_particl": 448, "particle_markers_pub_rclcpp_lifecycl": 448, "particle_trait": [115, 150, 165, 166, 177, 219, 221, 225, 228, 253, 264, 265, 285, 286, 295, 296, 297, 298, 359, 378, 429, 430, 433, 438, 439, 523], "particle_traitscommon": 276, "particle_typ": [25, 228, 481, 487, 488, 498, 501], "particle_typestd": 481, "particle_typeweight": 481, "particlecloud": 478, "particlefilt": [15, 20], "particles_": [25, 228, 481], "particlesa": 511, "particlesconst": [25, 481], "particlesdistribut": 511, "particlespos": 511, "particleth": 253, "particletyp": [25, 43, 179, 188, 189, 194, 197, 202, 206, 210, 216, 222, 228], "particletypeful": 42, "particular": [97, 479], "particularli": [321, 329], "pass": [392, 401], "past": [36, 37, 40, 60, 62, 64, 70, 319], "path": [5, 263, 476, 477], "path_to_hdf5_fil": 263, "pattern": [2, 91], "per": [109, 308, 448, 450, 453, 455, 457, 474, 523], "percentag": [271, 383, 479], "percept": [242, 329], "perfect_odometri": 6, "perform": [4, 6, 11, 42, 54, 76, 95, 104, 173, 242, 253, 269, 272, 476, 487], "period": [173, 448, 450, 453, 455, 457, 474, 479], "permiss": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "petar": 41, "pf_err": [476, 478, 479], "pf_z": [476, 478, 479], "phantom": 91, "phantomtyp": [26, 92, 115, 200, 201, 214, 215, 228, 260, 311, 312, 422], "phantomtypeempti": 91, "phantomtypephantom": [421, 423], "physic": 54, "pi": [11, 12, 16, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 119, 121, 242, 244, 267, 269, 294, 476, 478, 479, 481, 491, 492, 524], "pictur": 6, "pigrid": [44, 48, 50, 52], "pipelin": [428, 473], "pkg": [5, 6], "place": [3, 70, 121, 231, 269, 321, 335], "plai": 6, "plainmatrix": [248, 371], "plane": [33, 44, 48, 50, 52, 97, 107, 238, 244, 267, 294, 306, 489], "platform": [11, 263, 478, 479], "pleas": 0, "plenti": [2, 6], "plu": [31, 166, 172, 242, 263], "plugin": 479, "point": [17, 25, 26, 31, 33, 37, 40, 46, 54, 55, 58, 60, 64, 70, 74, 76, 77, 89, 90, 121, 166, 172, 227, 228, 231, 238, 240, 242, 253, 260, 262, 263, 269, 276, 278, 282, 283, 286, 308, 310, 313, 331, 397, 419, 430, 469, 503, 509, 518, 523, 531, 532, 534], "pointer": [37, 40, 62, 63, 64, 65, 70, 71, 216, 221, 231], "pointerdecltyp": 231, "pointerpoint": 37, "pointervalu": [40, 231], "pointervalue_typ": 40, "pointervector2": 37, "points2d": [54, 76], "points_in_cartesian_coordin": [46, 47, 202, 216, 240, 481, 489, 490], "points_in_cartesian_coordinatesauto": 240, "points_in_cel": 263, "points_in_polar_coordin": [46, 47, 202, 216, 240, 489, 490], "points_in_polar_coordinatesauto": 240, "points_view": 263, "pointslidar": 89, "polar": [46, 240], "polici": [2, 11, 25, 26, 34, 35, 42, 115, 146, 177, 185, 193, 201, 202, 211, 215, 216, 224, 228, 229, 253, 260, 264, 265, 285, 286, 295, 296, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 446, 448, 450, 453, 455, 457, 473, 474, 476, 478, 479, 481, 487], "policiesinclud": 137, "policiespolici": 125, "policy_bas": [115, 215, 218, 253, 281, 395], "policy_basefriend": 395, "policy_baseimplement": [228, 281], "policyconstexpr": 281, "policyfn": [201, 202, 215, 216, 228, 281, 393], "policyforward": [25, 265, 271, 281, 286, 296], "policypolici": 281, "policyth": [339, 343, 347], "polymorph": 3, "pop": [64, 164], "pop_back": [40, 64, 65, 202, 216], "pop_backstd": 40, "pop_front": [40, 64, 65, 202, 216], "pop_frontstd": 40, "popul": [297, 476, 478, 479, 481, 524], "popular": [1, 6], "port": 479, "portion": 19, "pose": [6, 25, 33, 42, 43, 66, 72, 83, 85, 87, 93, 99, 121, 171, 172, 201, 215, 228, 234, 236, 238, 252, 253, 269, 272, 273, 310, 317, 327, 388, 390, 446, 448, 450, 453, 455, 457, 474, 476, 481, 487, 488, 509, 510, 511, 518, 520, 522, 523, 524, 533, 534], "pose_arrai": [447, 448, 473, 474, 509], "pose_pub_": [448, 450, 453, 455, 457, 464, 468, 474], "pose_pub_beluga_amcl": [454, 456, 458], "pose_pub_estim": [448, 450, 474], "pose_pub_rclcpp_lifecycl": [448, 474], "pose_pub_ro": 450, "pose_stamp": 476, "pose_to_weighted_eigen_vector": 172, "pose_with_covariance_stamp": [447, 448, 473, 474], "posearrai": [448, 453, 457, 474, 478, 479, 509, 511, 522, 523], "posesa": 253, "posespos": 253, "poseth": [253, 387, 389], "posewithcovariancestamp": [448, 449, 450, 453, 454, 455, 456, 457, 458, 474, 478, 479], "posit": [64, 70, 74, 231, 233, 236, 238, 253, 267, 308, 446, 520, 534], "possibl": [2, 4, 15, 16, 20, 415, 430], "possibli": [12, 13, 14, 15, 16, 17, 18, 19, 20, 42, 97, 229, 253, 283, 392, 434, 435], "post": [37, 62, 70, 476, 478, 479], "posterior": [4, 253, 343], "potenti": 70, "power": [2, 6], "pplane": [44, 50, 52], "practic": 290, "practition": 1, "pre": [70, 76, 331], "precalcul": 33, "precis": 523, "precomput": 85, "predic": [2, 229, 392], "predict": 4, "predtyp": 263, "prefigur": 4, "prefix": [6, 37, 62], "presenc": [39, 40, 253], "present": [97, 263, 306, 333], "preserv": 2, "press": [41, 486, 536], "prev": [273, 290, 390, 391], "prev_error_": 37, "prevent": [31, 42, 476, 487], "previou": [4, 66, 93, 99, 121, 269, 310, 390], "previous": 253, "previous_orient": [121, 269], "previous_pos": [121, 269], "prevth": 390, "primari": [82, 103, 228, 253, 389], "primarili": 11, "primit": [25, 31, 33, 34, 35, 121, 146, 163, 164, 166, 171, 172, 177, 238, 242, 263, 269, 275, 276, 277, 278, 286, 308, 310, 312, 397, 419, 430, 473, 474, 522, 523], "print": 303, "printer": [155, 177, 303, 432], "prior": [4, 343, 428], "priority_queu": 164, "privat": [25, 31, 33, 37, 40, 121, 174, 176, 227, 231, 236, 238, 242, 250, 252, 263, 269, 273, 290, 292, 298, 306, 308, 312, 433, 437, 441, 469, 481, 503, 508, 520], "privatebas": [227, 469, 503], "prob": 523, "probabilist": [6, 41, 54, 66, 74, 76, 101, 229, 238, 315, 321, 325, 329, 486, 536], "probabilityth": [403, 405], "probabl": [2, 4, 16, 18, 25, 26, 33, 101, 228, 229, 238, 242, 253, 260, 289, 290, 329, 403, 404, 405, 406, 407, 433, 476, 478, 479, 481, 523, 524], "problem": [41, 263], "proceed": [5, 41, 486, 536], "process": [4, 41, 42, 453, 455, 457, 476, 478, 479, 486, 536], "produc": [28, 42, 229], "product": 236, "profession": 0, "program": [2, 3, 253], "proj": 430, "project": [5, 33, 58, 236, 238, 248, 477], "prologu": [170, 177], "proof": [1, 236], "propag": [2, 4, 15, 21, 22, 25, 26, 154, 177, 228, 229, 260, 276, 343, 345, 481], "propagate_base_fn": [115, 201, 215, 285, 286, 344, 345, 346], "propagate_base_fnimplement": [228, 286], "propagate_base_fninlin": [344, 346], "propagate_fn": [115, 201, 215, 285, 286, 346], "propagate_fnimplement": [228, 286], "propagate_fninlin": 346, "propagateconstexpr": 286, "propagatedefinit": 286, "properti": [178, 253, 302], "proport": [253, 523], "propos": [4, 6], "protect": [227, 298, 407, 409, 448, 450, 453, 455, 457, 469, 474, 503], "protectedbas": [227, 469, 503], "protocol": 365, "prototyp": 253, "provid": [3, 17, 38, 42, 70, 76, 78, 80, 85, 91, 104, 242, 252, 253, 301, 390, 437, 446, 471, 477, 478, 479, 487, 505, 523], "provis": 6, "proxi": 523, "ptrdiff_t": [37, 40, 62, 64, 104, 172, 437], "public": [25, 31, 33, 37, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 119, 121, 174, 176, 227, 231, 236, 238, 240, 242, 244, 250, 252, 263, 265, 267, 269, 273, 276, 281, 286, 290, 292, 294, 296, 298, 306, 308, 310, 312, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 352, 356, 357, 359, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 390, 392, 397, 401, 403, 405, 409, 411, 413, 415, 417, 419, 421, 424, 433, 437, 441, 448, 450, 453, 457, 469, 474, 481, 487, 489, 491, 503, 508, 520, 524, 526, 529], "publicbas": [227, 469, 503], "publish": [6, 448, 450, 453, 455, 457, 474, 476, 523], "pull": 523, "punish": 437, "pure": 6, "purpl": [227, 469, 479, 503, 523], "purpos": [1, 262, 331], "push": [39, 40, 64, 164, 253], "push_back": [40, 64, 65, 104, 105, 202, 216, 244, 253, 263, 437, 523], "push_back_impl": 437, "push_backconstexpr": 437, "push_backstd": 40, "push_front": [40, 64, 65, 202, 216, 253], "push_frontstd": 40, "put": 2, "py": 6, "pz": 31, "q": 4, "qo": [6, 479], "qualiti": [1, 11], "quantil": [253, 429, 430, 476, 478, 479, 481, 524], "quaternion": 534, "queri": 238, "queue": [163, 164], "quickmcl": [31, 242], "quit": [6, 437], "quot": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "r": [0, 5, 16, 19, 27, 104, 105, 115, 180, 183, 195, 203, 217, 221, 224, 254, 276, 301, 302, 437, 498, 523], "r1": 292, "radian": [13, 25, 109, 313, 390, 476, 511, 523, 529], "rai": [26, 31, 54, 76, 95, 228, 242, 253, 260, 291, 292, 329], "rainbow": 523, "raison": 1, "ramiro": [31, 263], "random": [3, 12, 14, 18, 25, 26, 30, 31, 32, 33, 34, 35, 40, 42, 70, 78, 80, 82, 83, 85, 87, 101, 120, 121, 146, 149, 177, 228, 230, 231, 237, 238, 241, 242, 253, 260, 268, 269, 285, 286, 289, 290, 297, 298, 309, 310, 313, 315, 329, 343, 366, 367, 368, 371, 374, 376, 403, 405, 407, 409, 411, 473, 474, 476, 478, 479, 524], "random_access_iterator_tag": [70, 231], "random_access_rang": [297, 298], "random_interspers": [25, 26, 144, 177, 228, 229, 260, 403, 405, 442, 443, 481], "random_intersperse_fn": [115, 201, 211, 215, 224, 289, 290, 404], "random_intersperse_fnimplement": [228, 290], "random_intersperse_fninlin": 404, "random_intersperse_fnstat": 404, "random_intersperse_view": [115, 203, 217, 228, 289, 290, 406], "random_intersperse_viewconstexpr": 290, "random_intersperse_viewimplement": 290, "random_intersperse_viewrandom_intersperse_view": 290, "random_intersperseconstexpr": 290, "random_interspersedefinit": 290, "random_probability_estimator_": [25, 481], "random_st": [25, 481], "random_state_gener": [25, 42, 43], "random_state_generator_": 25, "random_state_generator_typ": 25, "random_state_generatora": 42, "random_state_prob": [25, 481], "randominclud": 138, "randomli": [297, 429], "randomnumberdistribut": [18, 411], "randomrandom": 126, "randomstatedistribut": [78, 274], "randomstategener": [25, 43, 179, 188, 189, 194, 197, 202, 206, 210, 216, 222, 228, 473, 474], "randomstategeneratora": 42, "randomstategeneratorstd": 474, "randomstategeneratortyp": 474, "rang": [3, 12, 13, 14, 16, 19, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 60, 62, 64, 74, 76, 82, 85, 89, 95, 97, 98, 101, 102, 104, 105, 107, 108, 144, 146, 152, 154, 163, 164, 165, 166, 168, 169, 171, 172, 177, 203, 204, 217, 219, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 252, 253, 260, 262, 263, 264, 265, 266, 267, 270, 271, 275, 276, 277, 278, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 315, 319, 325, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 383, 384, 397, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 427, 428, 429, 430, 433, 436, 437, 443, 444, 445, 446, 476, 478, 479, 480, 481, 489, 490, 491, 492, 498, 500, 507, 508, 511, 522, 523], "range_": 298, "range_access": [290, 298], "range_difference_t": 298, "range_error": 238, "range_error_prob": 238, "range_max": 508, "range_min": 508, "range_v3_major": [170, 284], "range_v3_minor": [170, 284], "range_value_t": [171, 172, 240, 253, 276, 286, 290, 298, 430, 511, 522, 523], "rangea": [101, 253, 403, 405, 411, 413], "rangean": [339, 343, 347, 415], "ranger": 11, "rangerang": 253, "ranges_value_t": 401, "rangesauto": 508, "rangesourc": [413, 415], "rangesv3": 3, "rangeth": [253, 383, 403, 405, 411], "rao": [41, 486, 536], "rarr": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "raspberri": 11, "rate": [101, 476, 478, 479, 481, 524], "rather": [64, 253, 407], "ratio": [101, 308, 523], "raw_difference_typ": 231, "ray2d": [31, 96, 115, 182, 191, 203, 205, 217, 220, 228, 253, 291, 292], "ray2dcast": [31, 292], "ray2dray2d": 292, "raycast": [23, 24, 30, 31, 58, 60, 62, 95, 151, 177, 319], "raycastingraycast": 131, "raytrac": [36, 54, 162, 177, 292], "rbegin": [40, 64, 65, 203, 217], "rbeginconstexpr": 40, "rcl_interfac": 476, "rclcpp": [448, 453, 454, 457, 458, 474, 476, 509], "rclcpp_lifecycl": [447, 448, 453, 454, 457, 458, 473, 474, 476], "re": [1, 31, 38, 76, 172, 265, 286, 296, 339, 341, 343, 345, 347, 349, 448, 450, 453, 454, 455, 457, 474, 478, 479], "reach": [40, 64, 253, 437], "react": 253, "read": [4, 31, 54, 64, 263, 290, 298, 315, 478, 479], "read_onli": 476, "readabl": [3, 37, 40, 167, 428, 534], "readi": 505, "real": [78, 97, 306], "receiv": 476, "recommend": [6, 101], "recov": [33, 101, 476, 478, 479, 481, 524], "recoveri": [25, 313], "recovery_alpha_fast": [476, 478, 479], "recovery_alpha_slow": [476, 478, 479], "recur": 2, "recurs": 4, "red": [227, 469, 479, 503, 523], "reduc": 476, "ref": [290, 298, 481], "refer": [11, 14, 17, 25, 27, 33, 37, 40, 63, 65, 71, 178, 180, 183, 195, 217, 221, 229, 231, 234, 236, 238, 242, 257, 261, 283, 290, 298, 435, 445, 452, 465, 471, 481, 483, 499, 505, 515, 517, 520], "reference_typ": [104, 105, 217, 221, 437], "reference_typerang": 437, "reference_typerefer": 437, "reference_wrapp": [290, 298, 403, 404, 409, 410], "referencedecltyp": 231, "referencefin": 91, "referencerefer": 37, "referencevalu": [40, 231], "referencevalue_typ": 40, "referencevector2": 37, "regardless": 95, "region": [4, 26, 83, 87, 228, 251, 252, 253, 260], "regular": [2, 12, 16, 19, 26, 52, 97, 119, 153, 177, 228, 253, 260, 263, 293, 305, 306], "regular_grid": [52, 118, 119, 153, 177, 305, 306], "regulargrid": [12, 52, 274], "regularli": [3, 52, 228, 253, 293], "reinitialize_global_loc": 479, "reinterpret_cast": 263, "rel": [1, 56, 236, 321, 335, 478, 479], "relat": [0, 6, 27, 144, 166, 177, 183, 227, 265, 277, 286, 296, 298, 337, 433, 443, 446, 469, 503], "relationfil": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "releas": 5, "relev": 64, "reli": [2, 3, 56, 76, 253], "reliabl": [6, 479], "reloc": [448, 450, 453, 455], "remain": 437, "remap": 479, "rememb": 5, "remov": [38, 437, 481], "remove_cv_t": [70, 231], "remove_reference_t": [70, 178, 231], "rend": [40, 64, 65, 203, 217], "rendconstexpr": 40, "renorm": 172, "rep": 11, "repeat": [18, 64, 450, 455], "repeat_n": [171, 172], "replac": [4, 104, 144, 177, 297, 437, 443], "replic": 523, "report": 489, "repres": [4, 15, 16, 20, 42, 54, 72, 76, 78, 80, 89, 97, 111, 113, 227, 233, 234, 236, 253, 308, 407, 453, 455, 457, 469, 479, 503, 523], "represent": [31, 54, 56, 74, 76, 89, 172, 228, 242, 248, 253, 263, 331, 367, 368, 371, 374, 376, 473], "reproduc": 3, "req": [448, 453, 454], "request": [448, 450, 453, 454, 455, 456, 478, 479], "request_head": [448, 453, 454], "request_nomotion_upd": [478, 479], "requir": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 62, 64, 66, 74, 76, 78, 80, 89, 93, 99, 117, 119, 121, 150, 164, 166, 167, 169, 170, 172, 174, 176, 177, 178, 228, 229, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 260, 262, 263, 265, 267, 269, 271, 273, 274, 275, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 297, 298, 300, 302, 304, 306, 308, 310, 312, 319, 343, 377, 403, 405, 411, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 479, 481, 485, 487, 508, 509, 511, 520, 523, 524, 532, 534], "resampl": [4, 11, 25, 41, 42, 101, 229, 253, 297, 313, 383, 407, 446, 476, 478, 479, 481, 487, 523, 524], "resample_interv": [25, 217, 224, 313, 476, 478, 479, 481, 498, 502, 524], "resample_intervalbeluga": 314, "resample_intervalbeluga_ro": 525, "resample_intervalfilt": 25, "resample_intervalnumb": 481, "resample_intervalstd": [25, 481], "resample_policy_": [25, 481], "research": [0, 1], "reserv": [104, 105, 203, 217, 263, 437, 523], "reserveconstexpr": 437, "reset": [18, 25, 68, 69, 78, 79, 101, 102, 176, 203, 217, 250, 290, 433, 478, 479, 481], "resetconstexpr": [25, 176, 433, 481], "resetvoid": 250, "resiz": [104, 105, 203, 217, 437, 476], "resizeconstexpr": 437, "resolut": [19, 44, 48, 50, 52, 97, 98, 107, 108, 109, 111, 112, 113, 114, 203, 217, 242, 263, 294, 306, 307, 308, 441, 476, 478, 479, 481, 482, 491, 492, 498, 500, 504, 510, 511, 516, 518, 520, 522, 523, 524, 529, 531, 532, 533, 534], "resolution_": [306, 308, 441], "resolution_dataset": 263, "resolution_in_each_axis_t": [111, 112, 113, 114, 217, 221, 308], "resolution_in_each_axis_tstd": 308, "resolution_in_each_axis_ttyp": 308, "resolutiondoubl": [306, 441, 520], "resolutiongrid": [97, 107], "resolutionstd": [111, 113], "resolutionth": 307, "respect": [2, 4, 64], "respons": [448, 450, 453, 454, 455, 456], "rest": [1, 5, 38, 479], "restor": 478, "restore_default": 478, "result": [3, 4, 18, 28, 29, 38, 78, 82, 91, 119, 172, 227, 244, 248, 249, 250, 253, 290, 307, 337, 367, 368, 371, 374, 376, 392, 430, 469, 478, 479, 481, 503], "result_typ": [18, 78, 79, 217, 221, 248, 249, 250, 253, 290, 298, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "result_typesophu": 248, "result_typeth": [248, 250], "result_typetypenam": [248, 250], "ret": 263, "retri": 479, "retriev": [12, 50], "return": [12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 31, 33, 37, 38, 40, 42, 54, 56, 60, 64, 72, 74, 76, 78, 89, 95, 97, 104, 119, 121, 163, 164, 166, 168, 169, 171, 172, 174, 176, 178, 228, 229, 231, 236, 238, 240, 242, 244, 248, 250, 252, 253, 260, 262, 263, 265, 267, 269, 271, 273, 275, 276, 281, 283, 286, 290, 292, 294, 296, 298, 302, 304, 306, 307, 308, 310, 312, 339, 341, 343, 345, 347, 349, 356, 359, 363, 365, 381, 387, 390, 399, 401, 403, 405, 413, 415, 427, 428, 429, 430, 433, 434, 435, 437, 441, 444, 445, 453, 455, 457, 481, 487, 508, 509, 520, 523, 532, 534], "returnsa": [54, 56, 66, 74, 76, 83, 85, 87, 89, 93, 99, 253, 518], "returnsan": [42, 487], "returnscel": [44, 48], "returnsdist": 95, "returnsful": 95, "returnsgrid": 52, "returnsplan": [48, 50, 52], "returnsrang": [44, 48, 50, 52], "returnssize_t": 421, "returnssubtend": 58, "returnsth": [72, 78, 80, 101, 109, 111, 113, 253, 307, 359, 518], "returnstru": [78, 80, 381, 383, 390, 453, 455, 457], "reus": [1, 2], "reusabl": [2, 3, 446, 471], "revers": [40, 64, 253], "reverse_iter": [40, 64, 65, 217, 221], "reverse_iteratorrevers": 40, "reverse_iteratorstd": 40, "reversed_": 37, "revisit": 263, "reweight": [20, 21, 22, 25, 26, 154, 177, 228, 229, 260, 347, 349, 481], "reweight_base_fn": [115, 201, 215, 295, 296, 348, 349, 350], "reweight_base_fnimplement": [228, 296], "reweight_base_fninlin": [348, 350], "reweight_fn": [115, 201, 215, 295, 296, 350], "reweight_fnimplement": [228, 296], "reweight_fninlin": 350, "reweightconstexpr": 296, "reweightdefinit": 296, "rewind": 70, "rflag": [39, 40, 253], "rgba": [522, 523], "rh": 262, "right": [281, 394, 395], "right_hash": 308, "rigidli": [478, 479], "rmw_request_id_t": [448, 453, 454], "ro": [1, 6, 11, 31, 447, 448, 449, 450, 451, 453, 455, 456, 457, 462, 470, 471, 473, 474, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "robot": [1, 11, 33, 41, 54, 66, 74, 76, 101, 234, 238, 315, 317, 321, 325, 327, 329, 446, 476, 477, 478, 479, 486, 536], "robot_model_typ": [476, 478, 479], "robot_pose_in_world": [33, 238], "robust": 101, "roll": [39, 253], "rollingwindow": [25, 39, 40, 253, 254, 258, 481], "rollov": 64, "ros2": [5, 6, 523], "ros2_common": 463, "ros_distro": 5, "rosdep": 5, "roslaunch": 6, "rospack": 6, "rosrun": 6, "rotat": [85, 109, 121, 172, 248, 253, 269, 307, 308, 321, 335, 390, 476, 478, 479, 520, 523, 524, 529, 534], "rotation_noise_from_rot": [121, 217, 224, 269, 321, 335], "rotation_noise_from_rotationbeluga": [322, 336], "rotation_noise_from_rotationdoubl": [121, 269], "rotation_noise_from_rotationrot": [121, 269], "rotation_noise_from_transl": [121, 217, 224, 269, 321, 335], "rotation_noise_from_translationbeluga": [322, 336], "rotation_noise_from_translationdoubl": [121, 269], "rotation_noise_from_translationrot": [121, 269], "rotation_param": 269, "rotation_vari": [121, 269], "rotz": [33, 238], "roughli": [228, 470, 504], "routin": 242, "row": [248, 250, 303, 304, 491, 518, 520, 533, 534], "rowsatcompiletim": [248, 250, 371], "rowsth": 303, "rowwis": 263, "rsquo": 42, "rtabmap": 6, "rule": 4, "run": 11, "runner": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 453, 455, 457, 487, 489, 491, 524, 526, 528, 529], "runtim": [3, 242, 481, 487], "runtime_error": 250, "runtime_errorif": [42, 78, 80, 487], "rvalu": [28, 39, 60, 253, 286], "rviz": [6, 523], "rviz2": 6, "safari": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "safeti": 91, "same": [17, 46, 64, 70, 78, 95, 97, 236, 253, 263, 269, 307, 331, 392, 478, 479], "same_category_landmarks_view": 236, "sampl": [2, 3, 4, 15, 24, 25, 26, 33, 41, 66, 82, 85, 93, 99, 101, 120, 121, 144, 145, 151, 165, 172, 177, 228, 229, 253, 260, 263, 268, 269, 270, 271, 280, 285, 310, 313, 343, 407, 409, 411, 415, 429, 442, 443, 478, 479, 481, 486, 511, 522, 523, 536], "sample_base_fn": [115, 204, 219, 297, 298, 408, 409], "sample_base_fnimplement": [228, 298], "sample_base_fninlineprotect": [408, 410], "sample_count": 172, "sample_fn": [115, 201, 215, 297, 298, 410], "sample_fnimplement": [228, 298], "sample_fninlin": 410, "sample_from_distribut": [204, 219, 298, 407, 408, 409, 410], "sample_from_distributionconstexpr": 298, "sample_from_rang": [204, 219, 298, 407, 408, 409, 410], "sample_from_rangeconstexpr": 298, "sample_mean_and_covari": 172, "sample_view": [115, 204, 219, 228, 297, 298, 412], "sample_viewconstexpr": 298, "sample_viewimplement": 298, "sample_viewsample_view": 298, "sampleconstexpr": 298, "sampledefinit": 298, "sampleuniform": 252, "satisfi": [12, 13, 14, 15, 16, 17, 18, 19, 20, 42, 44, 46, 48, 50, 52, 54, 56, 66, 74, 76, 89, 93, 99, 104, 229, 253, 343, 392, 403, 405, 411, 429, 430, 511], "satur": 522, "save": [242, 450, 455], "save_pose_r": 478, "save_pose_timer_": [450, 455, 464, 468], "save_pose_timer_beluga_amcl": 456, "save_pose_timer_callback": [450, 455, 456, 464, 466], "save_pose_timer_callbackvoid": 450, "save_pose_timer_ro": 450, "save_pose_timer_tim": 450, "sc22": 308, "scalar": [13, 25, 26, 37, 60, 62, 78, 80, 115, 167, 171, 172, 182, 198, 201, 212, 213, 214, 215, 218, 219, 221, 224, 228, 240, 248, 250, 253, 260, 262, 263, 272, 273, 301, 302, 303, 304, 307, 319, 332, 367, 368, 371, 374, 376, 385, 386, 391, 481, 482, 489, 490, 493, 498, 500, 501, 502, 504, 508, 510, 511, 516, 518, 522, 523, 530, 531, 532, 533, 534], "scalar_typ": [78, 79, 80, 81, 89, 219, 221, 248, 250, 262, 263, 331, 332, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "scalar_typeflo": 262, "scalar_typescalar": 262, "scalar_typeth": [248, 250], "scalar_typetypenam": [248, 250], "scalara": 253, "scalardoubl": 508, "scalarrang": 508, "scalarsa": 253, "scalarsrang": 253, "scalarth": [253, 301, 303, 390], "scale": [89, 263, 331, 333, 479, 523], "scale_factor": 523, "scan": [26, 46, 153, 177, 228, 239, 240, 253, 260, 448, 450, 453, 455, 457, 474, 476, 478, 479, 487, 489, 490, 508], "scan_": 508, "scan_frame_id": [478, 479], "scan_top": [476, 478, 479], "scanlas": 489, "scatter": 1, "scenario": [173, 270, 272], "se": [83, 87, 159, 177, 251, 252, 288, 446, 481, 482, 487, 504, 516, 522, 529], "se2": [25, 26, 30, 31, 32, 33, 89, 115, 120, 121, 171, 172, 201, 215, 228, 237, 238, 241, 242, 247, 248, 251, 252, 253, 260, 262, 263, 268, 269, 272, 273, 291, 292, 301, 302, 303, 304, 307, 308, 309, 310, 331, 332, 376, 385, 391, 449, 450, 473, 474, 476, 481, 482, 493, 498, 500, 502, 504, 510, 511, 516, 518, 519, 520, 522, 523, 530, 533, 534], "se2bas": [26, 115, 182, 188, 194, 205, 217, 219, 220, 221, 223, 228, 247, 248, 253, 260, 373], "se2d": [16, 26, 31, 32, 33, 54, 66, 76, 83, 84, 86, 93, 95, 96, 99, 110, 115, 121, 199, 201, 204, 213, 215, 219, 228, 237, 238, 242, 251, 252, 253, 260, 269, 292, 307, 308, 310, 448, 450, 453, 454, 455, 456, 457, 458, 474, 481, 487, 488, 491, 520], "se2near": [301, 302], "se2nearauto": 302, "se3": [32, 33, 89, 235, 236, 247, 248, 251, 252, 253, 262, 263, 331, 332, 368, 507, 508, 510, 511, 518, 522, 523, 533, 534], "se3bas": [26, 115, 182, 188, 194, 205, 217, 219, 220, 221, 223, 228, 247, 248, 253, 260, 370], "se3d": [13, 26, 32, 33, 72, 87, 88, 115, 199, 201, 213, 215, 228, 236, 237, 238, 251, 252, 253, 260, 317, 489, 490, 508], "search": 236, "sec": 523, "second": [31, 104, 164, 242, 281, 306, 392, 476, 478, 479], "second_rot": [121, 269], "second_rotation_param": 121, "section": [253, 325], "see": [11, 15, 18, 20, 22, 24, 25, 26, 29, 31, 33, 35, 37, 38, 40, 54, 56, 58, 66, 74, 76, 89, 93, 95, 101, 104, 117, 119, 121, 150, 164, 166, 167, 169, 170, 172, 174, 176, 177, 178, 228, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 260, 262, 263, 265, 267, 269, 271, 273, 275, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 315, 321, 325, 329, 351, 357, 365, 377, 397, 419, 428, 429, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "seed": 263, "seem": [253, 263], "seen": [1, 523], "select": [25, 313, 435, 446, 478, 479, 481, 487, 524], "selective_resampl": [25, 219, 224, 313, 476, 478, 479, 481, 498, 502, 524], "selective_resamplingbeluga": 314, "selective_resamplingbeluga_ro": 525, "selective_resamplingbool": [25, 481], "selective_resamplingwheth": [25, 481], "self": [38, 119, 240, 244, 267, 294, 306], "self_typ": 38, "selfadjointeigensolv": 250, "semant": 18, "semiregular_box_t": 290, "sensor": [4, 11, 13, 20, 25, 26, 34, 35, 42, 44, 46, 48, 50, 52, 54, 56, 72, 74, 76, 89, 97, 107, 146, 177, 228, 229, 233, 234, 251, 252, 253, 260, 295, 315, 317, 323, 325, 329, 331, 333, 347, 357, 446, 448, 450, 453, 455, 457, 473, 474, 479, 481, 487, 507, 508, 519, 520], "sensor_model": [25, 42, 43, 481, 487, 488], "sensor_model_": [25, 481], "sensor_model_vari": [448, 450, 453, 455, 481, 487, 488, 498, 501], "sensor_model_variantbeluga_amcl": [454, 456], "sensor_model_variantget": [448, 450], "sensor_model_variantsensor": 481, "sensor_model_variantstd": 481, "sensor_modelsensor": 42, "sensor_modelvari": 487, "sensor_msg": [447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 473, 474, 478, 479, 481, 482, 485, 489, 495, 497, 504, 505, 507, 508, 509, 511, 516], "sensor_pose_in_robot": [33, 219, 224, 317], "sensor_pose_in_robotbeluga": 318, "sensor_pose_in_robotpos": 33, "sensor_pose_in_robotsophu": 33, "sensor_pose_in_world": [33, 72, 73, 236], "sensor_pose_in_worldth": 72, "sensorinclud": [139, 140, 141], "sensormodel": [2, 25, 43, 54, 56, 74, 76, 89, 179, 188, 189, 194, 197, 202, 206, 210, 216, 222, 228, 274], "sensormodelclass": 42, "sensormultivariate_uniform_distribut": 138, "sensorsensor": 127, "sentinel": [26, 36, 37, 40, 60, 62, 63, 64, 65, 115, 201, 215, 228, 260, 320], "sentinel_for": [37, 319], "sentinelinlin": 320, "sentinelpast": [37, 228], "separ": [6, 304], "seq": [25, 42, 43, 265, 286, 296, 476, 478, 479, 481, 487, 488], "sequenc": [4, 18, 78, 479], "sequenced_polici": [25, 42, 473, 474, 481, 487], "sequences_": 437, "sequenti": [41, 446, 478, 479], "seri": [41, 486, 536], "server": [448, 449, 450, 453, 455, 478, 479], "servic": [0, 448, 450, 453, 455], "servicecli": [450, 455], "serviceserv": [450, 455], "set": [4, 6, 18, 25, 26, 42, 54, 78, 80, 89, 101, 228, 229, 249, 250, 253, 260, 269, 429, 446, 448, 450, 453, 455, 457, 474, 476, 478, 479, 481, 487, 523], "set_initial_pos": [476, 478, 479], "set_map": 478, "set_map_callback": [450, 455, 456, 464, 466], "set_map_callbackbool": 450, "set_map_server_": [450, 455, 464, 468], "set_map_server_beluga_amcl": 456, "set_map_server_map": 450, "set_map_server_ro": 450, "setmap": [449, 450, 455, 456, 478], "setup": 5, "sever": [5, 437], "shape": 2, "share": 6, "shared_ptr": [448, 453, 454], "sharedptr": [448, 453, 454, 457, 458, 474], "shift": 307, "short": [31, 101, 281, 315, 394, 478, 479], "shorthand": [106, 228, 253, 436], "should": [17, 97, 236, 248, 250, 262, 381, 383, 390, 392, 429, 476, 478, 479], "should_interspers": 290, "show": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "shown": [4, 227, 469, 503], "shutdown": [478, 479], "side": [3, 19], "sigma_bear": [33, 219, 224, 238, 317, 325], "sigma_bearingbeluga": [318, 326], "sigma_bearingdoubl": [33, 238], "sigma_bearingstandard": [33, 238], "sigma_hit": [31, 219, 224, 242, 315, 329, 479], "sigma_hitbeluga": [316, 330], "sigma_hitdoubl": [31, 242], "sigma_hitstandard": [31, 242], "sigma_rang": [219, 224, 238, 325], "sigma_rangebeluga": 326, "sigma_rangedoubl": 238, "sigma_rangestandard": 238, "sign": 70, "signal": 41, "signed_typ": 308, "signed_valu": 308, "signific": 307, "similar": [18, 178, 248, 253], "simpl": [3, 477], "simplest": 6, "simpli": 1, "simplifi": [2, 269], "sin": [240, 534], "sin_apertur": [33, 238], "sin_theta": 242, "sinc": [4, 40, 253, 407, 424], "singl": [26, 39, 40, 228, 253, 260, 283, 363, 434, 435, 478, 479, 523], "size": [19, 24, 25, 40, 64, 65, 70, 97, 98, 104, 105, 107, 108, 145, 151, 164, 165, 172, 177, 204, 219, 229, 244, 252, 253, 263, 270, 271, 280, 297, 298, 306, 371, 411, 413, 427, 428, 430, 433, 437, 441, 491, 492, 498, 500, 508, 511, 520, 522, 523], "size_": 40, "size_t": [12, 14, 16, 25, 37, 39, 40, 48, 49, 50, 51, 64, 97, 104, 107, 108, 109, 111, 113, 164, 168, 169, 174, 242, 244, 252, 253, 263, 267, 282, 283, 306, 307, 308, 312, 313, 352, 357, 379, 380, 381, 382, 413, 414, 415, 416, 421, 424, 426, 428, 429, 430, 433, 434, 435, 437, 441, 481, 489, 490, 491, 492, 508, 511, 518, 520, 522, 523, 524, 533, 534], "size_typ": [40, 64, 65, 70, 104, 105, 219, 221, 231, 437], "size_types": [40, 437], "size_typestd": [40, 437], "sizeconstexpr": [40, 437], "sized_rang": [271, 297, 298, 433, 437, 523], "sizeof": [111, 307, 308, 435, 437], "sizesampl": 511, "sizestd": [306, 441, 520], "skip": 479, "slam": 6, "slow": [476, 478, 479, 481, 524], "slow_averag": 433, "slow_filter_": 433, "slower": [242, 292], "small": [248, 479], "smooth": [54, 68, 76], "so": [1, 16, 17, 33, 38, 106, 238, 253, 297, 308, 392, 397, 419, 434, 437, 523], "so2": [30, 31, 33, 85, 120, 121, 172, 237, 238, 241, 242, 248, 262, 263, 268, 269, 273, 291, 292, 301, 302, 303, 304, 308, 309, 310, 367, 519, 520, 523, 534], "so2bas": [26, 115, 182, 188, 194, 205, 217, 219, 220, 221, 223, 228, 247, 248, 253, 260, 372], "so2d": [31, 95, 96, 121, 252, 269, 292, 310, 520], "so2near": [301, 302], "so2nearauto": 302, "so3": [247, 248, 262, 374, 534], "so3bas": [26, 115, 182, 188, 194, 205, 217, 219, 220, 221, 223, 228, 247, 248, 253, 260, 369], "so3d": [33, 238, 252], "softwar": [2, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "solut": [6, 446], "solver": [250, 446], "some": [3, 12, 15, 20, 99, 253, 286], "someth": 523, "soon": [7, 8, 9, 10, 537, 538, 539, 540], "sophu": [3, 13, 16, 25, 26, 30, 31, 32, 33, 54, 66, 72, 76, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 99, 109, 110, 115, 120, 121, 155, 171, 172, 177, 182, 188, 194, 199, 201, 204, 205, 213, 215, 217, 219, 220, 221, 223, 228, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 251, 252, 253, 260, 262, 263, 268, 269, 272, 273, 291, 292, 301, 302, 303, 304, 307, 308, 309, 310, 317, 331, 332, 367, 368, 369, 370, 372, 373, 374, 376, 390, 391, 432, 446, 448, 449, 450, 453, 454, 455, 456, 457, 458, 473, 474, 476, 481, 482, 485, 487, 488, 489, 490, 491, 493, 495, 497, 498, 500, 502, 504, 505, 507, 508, 511, 513, 514, 516, 518, 519, 520, 522, 523, 524, 529, 530, 533, 534], "sophus_match": [155, 177, 431, 432], "sophus_print": [155, 177, 431, 432], "sophussophu": [523, 534], "sort": [2, 228, 470, 504], "sourc": [6, 11, 21, 23, 28, 30, 32, 34, 36, 39, 95, 116, 118, 120, 163, 165, 168, 171, 173, 175, 229, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 403, 427, 429, 431, 434, 436, 438, 440, 442, 444, 446, 447, 449, 473, 480, 484, 507, 519, 522, 531, 533], "source_cell_": 292, "source_pos": [95, 96, 292], "source_pose_in_local_frame_": 292, "source_posepos": 95, "source_posit": 292, "space": [12, 13, 14, 16, 19, 26, 52, 58, 60, 83, 85, 87, 119, 159, 177, 228, 229, 251, 252, 253, 260, 272, 273, 288, 293, 294, 306, 385, 390, 427, 446, 476, 478, 479], "spare": 3, "spars": [26, 89, 97, 153, 177, 228, 253, 260, 263, 305, 306], "sparse_value_grid": [97, 127, 153, 177, 263, 473, 474], "sparsegridt": [90, 198, 200, 201, 212, 213, 214, 215, 216, 219, 221, 225, 228, 263], "sparsegridttyp": 89, "sparsevaluegrid": [89, 98, 115, 184, 192, 203, 204, 211, 213, 217, 219, 221, 228, 253, 263, 305, 306, 474], "sparsevaluegrid2": [253, 254, 258, 305, 306, 473, 474], "sparsevaluegrid3": [253, 254, 258, 305, 306], "sparsevaluegridgener": [263, 306], "sparsevaluegridsparsevaluegrid": 306, "spatial": [4, 24, 42, 109, 111, 113, 151, 177, 236, 253, 307, 308, 415, 478, 479, 524], "spatial_hash": [23, 24, 25, 42, 43, 109, 110, 111, 112, 113, 114, 115, 151, 177, 201, 204, 215, 217, 219, 221, 228, 253, 481, 522, 523], "spatial_hashcal": 308, "spatial_hasher_": [25, 481], "spatial_hasher_typ": [25, 42, 43], "spatial_hashera": 42, "spatial_hashspatial_hash": 308, "spatial_resolution_": [478, 479], "spatial_resolution_i": [476, 481, 498, 502, 524], "spatial_resolution_theta": [476, 481, 498, 502, 524], "spatial_resolution_thetabeluga_ro": 525, "spatial_resolution_thetadoubl": 481, "spatial_resolution_thetaspati": 481, "spatial_resolution_x": [476, 481, 498, 502, 524], "spatial_resolution_xbeluga_ro": 525, "spatial_resolution_xdoubl": 481, "spatial_resolution_xspati": 481, "spatial_resolution_ybeluga_ro": 525, "spatial_resolution_ydoubl": 481, "spatial_resolution_yspati": 481, "speak": 91, "special": [3, 26, 39, 83, 85, 87, 89, 91, 109, 111, 113, 228, 247, 251, 252, 253, 260, 272, 307, 311, 351, 352, 356, 362, 364, 367, 368, 371, 374, 376, 390, 400, 421, 423, 424, 426, 434, 473, 482, 504, 516, 518, 522, 523, 529], "specif": [2, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 58, 95, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 229, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "specifi": [17, 18, 104, 173, 227, 229, 253, 264, 271, 272, 329, 381, 383, 390, 437, 469, 478, 503], "speed": 6, "spiral": 101, "spread": 308, "sqrt": [31, 121, 172, 242, 269, 430], "squared_dist": 242, "squared_max_dist": 242, "squared_weight_sum": 172, "squarednorm": [236, 242], "src": [5, 473, 474], "srv": [447, 448, 453, 454, 473, 474, 479], "ss": [15, 263], "stachniss": [41, 486, 536], "stack": 3, "staff": 0, "stamp": [509, 511], "stamp_messag": [509, 511, 513, 514], "stamp_messagemessag": 509, "stand": 1, "standalon": [478, 479], "standard": [2, 3, 18, 33, 37, 58, 80, 97, 171, 172, 229, 234, 236, 238, 253, 315, 317, 325, 329, 429, 430, 476, 478, 479, 481, 520, 524, 526], "start": [1, 60, 95, 253, 437], "state": [4, 15, 17, 18, 20, 24, 25, 26, 31, 32, 33, 42, 54, 56, 66, 74, 76, 78, 85, 89, 93, 95, 99, 101, 109, 110, 121, 151, 171, 177, 201, 215, 228, 229, 237, 238, 242, 250, 253, 254, 259, 260, 263, 269, 275, 276, 277, 278, 282, 283, 285, 286, 295, 296, 298, 307, 308, 310, 343, 347, 360, 377, 392, 396, 397, 398, 415, 430, 433, 448, 453, 454, 457, 458, 473, 474, 479, 481, 487, 511, 522, 523], "state_detail": [31, 33, 115, 121, 201, 215, 228, 238, 242, 253, 263, 269, 276, 278, 282, 283, 286, 308, 310, 397, 398, 430, 523], "state_fn": [31, 33, 115, 121, 201, 215, 238, 242, 253, 263, 269, 276, 278, 282, 283, 286, 308, 310, 398, 430, 523], "state_fncustom": [228, 283], "state_fninlin": 398, "state_t": [253, 254, 258, 275, 276, 359, 430, 511, 522, 523], "state_ttyp": [276, 430], "state_ttypenam": [276, 430, 523], "state_typ": [15, 20, 25, 31, 33, 42, 43, 54, 55, 56, 57, 66, 67, 74, 75, 76, 77, 89, 90, 93, 94, 99, 100, 121, 219, 221, 228, 238, 242, 253, 263, 269, 275, 276, 310, 377, 378, 430, 473, 474, 523], "state_type2d": [121, 269, 310], "state_typesophu": [31, 121, 242, 269, 310], "state_typest": [31, 33, 238, 242, 263], "state_typestatetyp": [33, 238], "state_typestd": [263, 276], "state_typeth": 276, "stateconstexpr": [31, 33, 121, 238, 242, 263, 269, 276, 278, 283, 286, 308, 310, 430, 523], "statecustom": [31, 33, 121, 238, 242, 263, 269, 276, 278, 283, 286, 308, 310, 430], "statehistogram": 523, "statesamplingfunct": [15, 66, 93, 99, 286, 343, 344, 345, 346], "statesamplingfunctiona": 343, "statesconstexpr": [278, 298, 523], "statesdefinit": [278, 298], "stateth": 109, "statetyp": [32, 33, 57, 75, 181, 190, 198, 201, 206, 212, 213, 215, 216, 219, 221, 222, 225, 228, 237, 238], "statetypetyp": [56, 74], "stateweightingfunct": [20, 54, 56, 74, 76, 89], "static": [54, 76, 121, 242, 248, 250, 252, 262, 263, 269, 271, 290, 304, 310, 331, 332, 367, 368, 371, 374, 375, 376, 383, 403, 435, 445, 448, 450, 453, 455, 491, 520, 526], "static_assert": [25, 40, 240, 248, 250, 262, 263, 271, 276, 286, 290, 296, 298, 306, 308, 430, 433, 437, 523], "static_cast": [37, 38, 40, 119, 172, 231, 244, 263, 271, 298, 308, 430, 433, 435, 437, 508, 523, 532, 534], "static_map": 478, "staticconstexpr": 371, "stationari": [26, 99, 156, 177, 228, 246, 253, 260, 309, 310, 476, 478, 479], "stationary_model": [99, 156, 177, 245, 246, 473, 474], "stationarymodel": [15, 100, 115, 182, 201, 215, 219, 221, 253, 309, 310, 473, 474, 481, 487], "stationarymodela": [228, 310], "stationarymodelinlin": 100, "statisfi": [229, 429], "statist": [41, 446], "statu": [450, 455, 456], "std": [2, 12, 14, 16, 25, 26, 29, 31, 33, 37, 39, 40, 42, 43, 44, 48, 49, 50, 51, 54, 56, 58, 62, 64, 65, 66, 70, 72, 74, 76, 78, 80, 81, 89, 91, 93, 95, 97, 99, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 119, 121, 144, 164, 165, 166, 167, 168, 169, 171, 172, 174, 177, 178, 179, 181, 182, 184, 185, 188, 189, 190, 191, 193, 194, 201, 202, 203, 204, 205, 213, 215, 216, 217, 219, 220, 221, 223, 224, 228, 229, 231, 236, 238, 240, 242, 244, 247, 248, 250, 252, 253, 260, 262, 263, 265, 267, 269, 271, 273, 276, 281, 282, 283, 286, 290, 292, 296, 297, 298, 303, 304, 306, 307, 308, 310, 311, 312, 313, 331, 332, 333, 337, 339, 341, 343, 345, 347, 349, 351, 352, 353, 355, 356, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 392, 393, 397, 398, 400, 401, 402, 403, 404, 409, 410, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 441, 443, 445, 446, 448, 450, 453, 454, 455, 456, 457, 458, 473, 474, 476, 481, 482, 487, 488, 489, 490, 491, 492, 504, 508, 509, 511, 516, 518, 520, 522, 523, 524, 526, 527, 528, 529, 533, 534], "std_msg": 509, "std_srv": [447, 448, 449, 450, 453, 454, 455, 456, 473, 474, 478, 479], "std_warn_level_": 478, "stdexcept": [39, 40, 263], "stdhash": [421, 422], "stdnumeric_limit": 423, "stdtuple_el": [424, 425], "stdtuple_s": 426, "step": [4, 42, 101, 476, 478, 479, 487, 524], "step_": 37, "step_to": 37, "still": 523, "stl": [229, 286], "storag": [64, 104, 153, 177, 243, 267, 441], "store": [97, 172, 242, 306, 478], "storeag": [491, 520], "str": 263, "strafe": [269, 335, 476, 478, 479], "strafe_noise_from_transl": [219, 224, 269, 335], "strafe_noise_from_translationbeluga": 336, "strafe_noise_from_translationdoubl": 269, "strafe_noise_from_translationtransl": 269, "strafe_param": 269, "strategi": 41, "stream": [39, 40, 253, 303], "streamlin": 6, "streamprecis": 304, "strictli": [3, 70, 91, 231], "string": [476, 478, 479], "string_view": [448, 450, 453, 454, 455, 456, 476, 509, 511], "stringstream": 263, "strive": 3, "strong": [11, 253], "strongli": [25, 26, 91, 150, 177, 228, 253, 260, 282, 283, 311, 312], "strongly_typed_numer": [91, 150, 177, 282, 283, 421, 423], "struct": [25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 62, 91, 120, 121, 164, 173, 174, 227, 233, 234, 237, 238, 241, 242, 247, 248, 253, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 281, 282, 283, 285, 286, 289, 290, 295, 296, 297, 298, 307, 308, 311, 312, 427, 428, 429, 430, 434, 435, 444, 445, 451, 469, 474, 480, 481, 482, 491, 503, 511, 519, 520, 522, 523], "structur": [3, 14, 33, 64, 236, 238, 446, 505], "subclass": 505, "subscrib": [6, 447, 448, 449, 450, 453, 455, 457, 473, 474, 476], "subscript": [70, 448, 453, 457, 474], "subsequ": 5, "subset": 97, "substanti": 1, "substitut": 269, "success": [250, 453, 455, 457], "sudo": 5, "suffici": 308, "suit": 446, "suitabl": [6, 511, 522], "sum": [264, 339, 476, 478, 479, 524], "super": [227, 469, 503], "supercov": 58, "support": [1, 3, 5, 12, 38, 56, 70, 74, 229, 248, 263, 276, 286, 290, 297, 343, 446, 473, 474, 478, 479, 481, 487], "sure": [28, 301], "surject": 52, "surpass": 390, "surpris": 3, "svg": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "swap": [37, 39, 40, 64, 65, 204, 219, 253, 254, 256], "swapconstexpr": [37, 40], "swapvoid": 40, "symmetr": [78, 80, 121, 172, 250, 269], "symmetri": [37, 319], "synchron": [448, 450, 453, 455, 457, 474], "synthet": [6, 41, 486, 536], "system": [4, 5, 19, 41, 229, 242, 476, 479, 486, 535, 536], "t": [2, 4, 5, 6, 15, 16, 18, 20, 26, 27, 28, 29, 37, 38, 39, 40, 42, 65, 79, 92, 97, 108, 114, 115, 167, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 227, 228, 247, 248, 249, 250, 252, 253, 254, 260, 263, 275, 276, 283, 292, 298, 301, 302, 303, 304, 307, 308, 311, 312, 352, 353, 369, 370, 372, 373, 375, 378, 397, 398, 409, 410, 419, 420, 422, 425, 430, 434, 435, 436, 437, 440, 441, 464, 466, 468, 469, 479, 503, 504, 523], "t1": 292, "t2": 292, "tabl": [315, 321, 329, 479], "tag": [37, 62], "tail": [38, 248], "tail_index_": 40, "take": [18, 70, 95, 229, 253, 290, 297, 298, 392, 397, 403, 405, 409, 413, 415, 419, 427, 429, 430, 436, 437], "take_evenli": [26, 144, 177, 228, 229, 260, 413, 442, 443, 507, 508], "take_evenly_fn": [115, 201, 215, 414, 427, 428], "take_evenly_fnimplement": [228, 428], "take_evenly_fninlin": 414, "take_evenlyconstexpr": 428, "take_evenlydefinit": 428, "take_exactli": [25, 480, 481, 522, 523], "take_whil": [36, 37, 291, 292, 429, 430], "take_while_kld": [25, 26, 144, 177, 228, 229, 260, 415, 442, 443, 481], "take_while_kld_fn": [115, 201, 215, 416, 429, 430], "take_while_kld_fnimplement": [228, 430], "take_while_kld_fninlin": 416, "take_while_kldconstexpr": 430, "take_while_klddefinit": 430, "taken": [253, 297], "tan": 523, "tani": 107, "target": [4, 5, 11, 70, 231, 253], "target_s": 430, "tbf05": [478, 479, 536], "tbuilt": 91, "technic": 337, "techniqu": [3, 41, 486, 536], "telement": 64, "teleop_twist_keyboard": 6, "teleoper": 6, "templ": [227, 469, 503], "templat": [2, 25, 26, 29, 31, 32, 33, 37, 38, 39, 40, 58, 62, 66, 83, 87, 93, 99, 101, 119, 121, 163, 164, 165, 166, 167, 168, 169, 171, 172, 178, 227, 228, 231, 237, 238, 240, 242, 244, 248, 249, 250, 251, 252, 253, 260, 262, 263, 265, 267, 269, 271, 273, 275, 276, 281, 283, 286, 290, 292, 293, 294, 296, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 319, 337, 339, 341, 343, 345, 347, 349, 383, 385, 394, 397, 401, 403, 407, 409, 413, 415, 417, 419, 428, 430, 433, 434, 435, 436, 437, 441, 445, 446, 469, 473, 474, 481, 487, 503, 509, 510, 511, 518, 522, 523, 531, 532, 533, 534], "term": [1, 101, 248], "termin": 6, "test": [5, 146, 177], "testingtest": 128, "textual": [232, 472, 506], "tf": [262, 331, 332, 453, 455, 457], "tf2": [476, 505, 513, 514, 519, 520, 523, 531, 532, 533, 534], "tf2_eigen": [484, 485, 495, 497, 505, 522, 523, 534], "tf2_geometry_msg": [520, 532, 534], "tf2_ro": [447, 448, 449, 450, 453, 455, 457, 473, 474, 476], "tf2_sophu": [476, 484, 485, 495, 497, 505, 522, 523], "tf2tf2": [532, 534], "tf_broadcast": [476, 478, 479], "tf_broadcaster_": [448, 450, 453, 455, 457, 464, 468, 474], "tf_broadcaster_beluga_amcl": [454, 456, 458], "tf_broadcaster_std": [448, 450, 474], "tf_broadcaster_transform": [448, 450, 474], "tf_buffer_": [448, 450, 453, 455, 457, 464, 468, 474], "tf_buffer_beluga_amcl": [454, 456, 458], "tf_buffer_std": [448, 450, 474], "tf_buffer_transform": [448, 450, 474], "tf_listener_": [448, 450, 453, 455, 457, 464, 468, 474], "tf_listener_beluga_amcl": [454, 456, 458], "tf_listener_std": [448, 450, 474], "tf_listener_transform": [448, 450, 474], "than": [28, 46, 64, 76, 104, 253, 329, 407, 413, 427, 444, 476, 478, 479, 523, 524], "thei": [4, 12, 14, 16, 78, 229, 242, 254, 444, 513, 523], "them": [2, 5, 64, 307, 446, 523], "therebi": 101, "therefor": 4, "theta": [109, 240, 476, 478, 479, 534], "theta_clustering_resolut": [109, 110, 308], "theta_clustering_resolutionclust": 109, "thi": [1, 2, 3, 4, 6, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 484, 485, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 509, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534], "thin": [478, 479, 489, 491, 505, 507, 511, 519], "thing": 236, "those": [1, 2, 104, 236, 437], "though": [1, 104], "thousand": 6, "thread_loc": [121, 269, 310], "threadsaf": [25, 26, 39, 40, 64, 228, 253, 260], "three": [298, 409], "threshold": [121, 229, 269, 270, 271, 272, 321, 335, 383, 384, 390, 478], "thresholdpercentag": 383, "through": [5, 227, 248, 308, 469, 503, 518], "throughout": 2, "throughput": 3, "throw": [40, 97, 250, 263], "thrun": [41, 486, 536], "thrun_recovery_probability_estim": [23, 24, 25, 101, 177], "thrunrecoveryprobabilityestim": [25, 102, 115, 201, 203, 205, 215, 217, 220, 253, 433, 481], "thrunrecoveryprobabilityestimatorconstexpr": 433, "thrunrecoveryprobabilityestimatorinlin": 102, "thrunrecoveryprobabilityestimatorrandom": [25, 228, 433], "thu": [5, 12, 14, 19, 54, 56, 74, 76, 89, 253], "tiancheng": 41, "tie": [33, 238], "tim": 308, "time": [3, 4, 25, 26, 36, 37, 60, 62, 64, 101, 109, 111, 113, 228, 229, 236, 253, 260, 290, 297, 308, 313, 437, 476, 478, 479, 491, 509, 511, 520], "timelin": 11, "timer": [450, 453, 455, 457], "timer_": [448, 453, 457, 464, 468, 474], "timer_beluga_amcl": [454, 458], "timer_callback": [448, 453, 454, 457, 458, 464, 466, 474], "timer_callbackvoid": [448, 474], "timer_rclcpp": [448, 474], "timer_tim": [448, 474], "timerbas": [448, 453, 457, 474], "timerev": [450, 455, 456], "timestamp": [509, 511], "timestamptim": 511, "tnumer": 421, "to_cel": 263, "to_likelihood": 242, "to_the_cub": 242, "to_valu": 476, "to_vector": [205, 220, 248, 250, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "to_vectorstat": 248, "todo": [31, 242, 263, 481], "togeth": 523, "tomsg": [510, 513, 514, 518, 523, 531, 532, 533, 534], "tomsgbeluga_ro": [523, 532, 534], "too": [50, 172, 437, 479, 523], "tool": [3, 5], "toolbox": 6, "toolkit": [1, 11], "top": [164, 446], "topic": [6, 476], "topleftcorn": 172, "total": [101, 253, 264, 339], "total_weight": [166, 265, 433], "trace": [54, 76, 95, 96, 205, 220, 292], "traceauto": 292, "track": 253, "trade": 3, "trait": [3, 26, 35, 121, 146, 150, 159, 166, 177, 228, 247, 250, 253, 260, 265, 269, 275, 276, 283, 286, 296, 298, 310, 377, 430, 433, 434, 437, 438, 439, 491, 519, 520, 526], "transact": [41, 486, 536], "transform": [13, 16, 25, 30, 31, 32, 33, 168, 169, 171, 172, 236, 237, 238, 239, 240, 241, 242, 262, 265, 266, 267, 277, 278, 286, 293, 294, 296, 298, 331, 448, 450, 453, 455, 457, 474, 476, 481, 489, 508, 509, 510, 518, 533, 534], "transform_": 250, "transform_broadcast": [447, 448, 449, 450, 473, 474], "transform_listen": [447, 448, 449, 450, 473, 474], "transform_reduc": [31, 33, 172, 238, 242, 263], "transform_toler": [476, 478, 479], "transformbroadcast": [448, 450, 453, 455, 457, 474], "transformlisten": [448, 450, 453, 455, 457, 474], "transient": [6, 479], "transit": [229, 285, 448, 453, 457, 474], "translat": [33, 85, 109, 121, 172, 238, 242, 248, 253, 262, 269, 273, 292, 302, 304, 308, 321, 331, 335, 390, 476, 478, 479, 520, 523, 524, 529, 534], "translation_noise_from_rot": [121, 220, 224, 269, 321, 335], "translation_noise_from_rotationbeluga": [322, 336], "translation_noise_from_rotationdoubl": [121, 269], "translation_noise_from_rotationtransl": [121, 269], "translation_noise_from_transl": [121, 220, 224, 269, 321, 335], "translation_noise_from_translationbeluga": [322, 336], "translation_noise_from_translationdoubl": [121, 269], "translation_noise_from_translationtransl": [121, 269], "translation_param": [121, 269], "translation_view": 172, "translations_view": 172, "translationtyp": 523, "transpos": [250, 262, 263], "treat": [121, 269, 407], "triangl": 523, "triangle_list": 523, "trigger": [25, 145, 173, 174, 177, 229, 253, 270, 271, 272, 273, 280, 381, 383, 385, 390, 479], "trinari": [520, 526], "tro": 536, "troubleshoot": 6, "true": [6, 16, 18, 25, 26, 37, 40, 42, 50, 64, 70, 104, 164, 228, 253, 260, 267, 273, 283, 363, 365, 381, 387, 390, 428, 434, 435, 437, 476, 478, 479, 481, 523, 524], "true_typ": [29, 228, 276, 283, 298, 435], "truncat": [227, 469, 503], "try": [2, 6, 21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 168, 171, 173, 175, 227, 230, 232, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 339, 341, 343, 345, 347, 349, 361, 362, 363, 364, 365, 387, 389, 392, 394, 400, 405, 407, 409, 411, 423, 426, 427, 429, 430, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 469, 472, 473, 480, 484, 489, 491, 503, 506, 507, 519, 522, 531, 533], "tthe": [78, 82, 253, 301, 303], "ttupl": 307, "tunderli": [91, 421, 423], "tune": 6, "tupl": [2, 25, 26, 42, 66, 93, 99, 103, 105, 106, 109, 111, 112, 115, 117, 120, 121, 148, 150, 168, 169, 177, 179, 181, 182, 184, 185, 189, 190, 191, 193, 201, 202, 203, 204, 205, 215, 216, 217, 219, 220, 221, 223, 228, 229, 240, 253, 260, 266, 267, 268, 269, 276, 282, 283, 307, 308, 309, 310, 351, 352, 354, 356, 361, 362, 363, 364, 365, 397, 399, 400, 401, 402, 419, 434, 435, 436, 437, 439, 444, 445, 446, 473, 474, 481, 487], "tuple_el": [26, 39, 40, 115, 220, 221, 228, 260, 424, 425], "tuple_element_t": [352, 435], "tuple_index": [26, 115, 228, 253, 260, 400, 434, 435], "tuple_index_found": [26, 115, 228, 260, 434, 435], "tuple_index_foundconstexpr": 435, "tuple_index_help": [434, 435], "tuple_index_helperconstexpr": 435, "tuple_index_t": [253, 254, 258, 434, 435], "tuple_index_tconveni": 435, "tuple_index_ttypenam": 435, "tuple_index_v": [253, 254, 259, 434, 435], "tuple_index_vconstexpr": 435, "tuple_index_vconveni": 435, "tuple_indexmeta": 435, "tuple_s": [26, 39, 40, 115, 228, 260, 426, 435], "tuple_size_v": [283, 351, 397, 435], "tuple_trait": [120, 121, 150, 177, 268, 269, 275, 276, 282, 283, 309, 310, 351, 352, 354, 356, 361, 362, 363, 364, 365, 399, 400, 438, 439], "tuple_vector": [103, 104, 106, 116, 117, 148, 167, 177, 250], "tuplecontain": [104, 105, 115, 179, 181, 182, 184, 185, 189, 190, 191, 193, 202, 203, 204, 205, 216, 217, 219, 220, 221, 223, 228, 253, 436, 437], "tuplecontainerconstexpr": 437, "tuplecontainerprimari": 437, "tuplelik": [26, 115, 220, 221, 228, 253, 260, 283, 355, 364, 400, 434, 435], "tupletupl": [111, 168], "tuplevector": [2, 25, 42, 115, 228, 229, 253, 254, 256, 436, 437, 473, 474, 481], "tuplevectorshorthand": 437, "tuplevectortuplevector": 437, "twice": 428, "two": [2, 4, 6, 17, 26, 39, 40, 64, 74, 78, 172, 227, 228, 253, 260, 298, 321, 335, 351, 392, 409, 435, 437, 469, 480, 485, 487, 495, 497, 503], "two_epsilon": 430, "two_squared_sigma": 242, "type": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 31, 32, 33, 35, 37, 38, 39, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 105, 106, 107, 112, 113, 115, 118, 119, 121, 146, 150, 155, 166, 171, 172, 175, 176, 177, 179, 181, 182, 184, 185, 189, 190, 191, 193, 201, 202, 203, 204, 205, 215, 216, 217, 219, 220, 221, 223, 228, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 252, 253, 260, 262, 263, 265, 266, 267, 269, 275, 276, 282, 283, 286, 293, 294, 296, 298, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 323, 327, 331, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 365, 367, 368, 371, 374, 376, 377, 383, 387, 389, 390, 397, 399, 401, 403, 405, 419, 421, 423, 424, 425, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 444, 445, 455, 473, 481, 482, 485, 487, 489, 491, 495, 497, 504, 505, 507, 508, 509, 511, 516, 518, 519, 520, 522, 523, 529, 531, 532, 533, 534], "type_trait": [25, 34, 35, 39, 40, 91, 120, 121, 146, 165, 166, 177, 230, 231, 262, 263, 264, 265, 268, 269, 281, 282, 283, 285, 286, 289, 290, 295, 296, 297, 298, 305, 306, 307, 308, 309, 310, 351, 352, 354, 356, 359, 361, 362, 363, 364, 365, 377, 399, 400, 421, 423, 429, 430, 433, 436, 437, 522, 523], "type_traitsdifferential_drive_model": 136, "type_traitseffective_sample_s": 132, "type_traitsnorm": 129, "type_traitssampl": 143, "typecommon": 435, "typedef": [18, 27, 32, 39, 104, 183, 233, 237, 253, 257, 261, 275, 282, 293, 305, 434, 436, 452, 465, 473, 483, 499], "typedefbeluga": [55, 57, 63, 65, 67, 71, 73, 75, 77, 79, 81, 90, 94, 98, 100, 105, 112, 114, 332, 353, 355, 369, 370, 372, 373, 375, 378], "typedefbeluga_amcl": 456, "typedefbeluga_ro": [488, 490], "typedefstd": 425, "typenam": [25, 37, 38, 39, 40, 42, 44, 46, 48, 50, 52, 60, 62, 64, 66, 70, 78, 80, 89, 92, 93, 95, 97, 99, 104, 107, 119, 121, 167, 171, 172, 200, 201, 214, 215, 228, 231, 240, 244, 248, 249, 250, 253, 262, 263, 267, 269, 275, 276, 290, 292, 293, 294, 298, 305, 306, 308, 310, 311, 312, 319, 331, 351, 352, 362, 365, 367, 368, 371, 374, 376, 396, 403, 405, 411, 421, 423, 424, 426, 434, 435, 436, 437, 441, 473, 474, 511, 518, 522, 523, 529, 533, 534], "typereturn": 435, "typesbearing_sensor_model": 141, "typesel": 104, "typeslandmark_map": 142, "typestd": 435, "typet": 40, "typic": [2, 478, 479, 489, 505], "u": [15, 26, 27, 40, 78, 79, 115, 178, 180, 183, 195, 206, 220, 221, 222, 224, 228, 250, 253, 260, 298, 352, 353, 409, 410, 434, 435, 464, 466, 498], "u_": 4, "u_t": 4, "ubuntu": 5, "uij": 262, "uint32_t": [233, 234, 253, 308, 450, 455, 456], "uint64_t": 308, "uint8_t": [37, 50, 58, 267], "unary_fn": 286, "unaryexpr": 250, "unchang": 285, "unconfigur": [448, 453, 457, 474], "undef": 170, "undefin": [64, 70, 104], "under": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "underli": [40, 64, 76, 91, 97, 312, 421, 473, 491, 520], "underlying_hasher_": 308, "underlying_typ": 91, "underlying_type_t": 40, "underlying_typetag": 91, "undocu": [227, 469, 503], "unexpect": [31, 315], "uniform": [26, 78, 80, 82, 83, 85, 87, 159, 177, 228, 229, 251, 252, 253, 260, 288, 297, 407, 446, 478, 479], "uniform_distribut": 229, "uniform_int_distribut": [252, 298], "uniform_real_distribut": 252, "uniformli": 85, "uniformrandombitgener": [18, 78, 80, 403, 405, 411], "union": [26, 451, 482], "unique_ptr": [448, 450, 453, 454, 455, 456, 457, 458, 474], "unit": [172, 523], "unit_complex": [172, 242, 292, 302, 304], "unit_quaternion": 534, "unitari": [78, 250], "uniti": 523, "unitless": [25, 313], "unitx": 523, "unknown": [290, 520, 526], "unknown_space_occupancy_likelihood_cub": 242, "unknown_space_occupancy_prob": 242, "unless": [3, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "unlik": [297, 444, 478], "unnecessarili": 437, "unnorm": 4, "unordered_map": [263, 473, 474, 523], "unordered_set": [429, 430], "unpack": 307, "unreachable_sentinel_t": 298, "unsign": 308, "unsigned_typ": 308, "unsigned_valu": 308, "until": [64, 429, 437], "unwrap": [3, 290, 298, 403, 409], "up": [1, 4, 5, 6, 253], "updat": [4, 5, 25, 31, 33, 42, 43, 54, 56, 68, 74, 76, 99, 101, 206, 222, 229, 238, 242, 253, 285, 295, 313, 321, 335, 347, 433, 448, 450, 453, 455, 457, 474, 476, 478, 479, 481, 487, 488, 498, 500, 523, 524], "update_covariance_diagnost": [450, 455, 456, 464, 466], "update_covariance_diagnosticsvoid": 450, "update_map": [25, 31, 33, 42, 43, 54, 55, 56, 57, 74, 75, 76, 77, 206, 222, 238, 242, 481, 487, 488, 498, 500], "update_mapvoid": [25, 31, 33, 238, 242, 481], "update_min_a": [25, 222, 224, 313, 476, 478, 479, 481, 498, 502, 524], "update_min_abeluga": 314, "update_min_abeluga_ro": 525, "update_min_adoubl": [25, 481], "update_min_amin": 25, "update_min_arot": 481, "update_min_d": [25, 222, 224, 313, 476, 478, 479, 481, 498, 502, 524], "update_min_dbeluga": 314, "update_min_dbeluga_ro": 525, "update_min_ddoubl": [25, 481], "update_min_dmin": 25, "update_min_dtransl": 481, "update_policy_": [25, 481], "updateauto": [25, 481], "upgrad": 5, "upon": [478, 479], "upper": [253, 429, 430, 476, 478, 479, 524], "upstream": 5, "url": 536, "urng": [15, 83, 84, 85, 86, 87, 88, 203, 204, 217, 219, 228, 252, 289, 290, 297, 298, 403, 404, 406, 407, 408, 409, 410, 412], "urnga": [403, 405, 411], "urngth": [83, 85, 87], "us": [2, 4, 5, 6, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 42, 50, 54, 56, 60, 62, 64, 66, 70, 72, 74, 76, 78, 80, 89, 91, 93, 97, 99, 101, 104, 109, 111, 113, 117, 119, 121, 146, 164, 166, 167, 169, 170, 172, 173, 174, 176, 177, 178, 227, 228, 229, 231, 233, 234, 236, 237, 238, 240, 241, 242, 244, 246, 248, 250, 252, 253, 260, 262, 263, 265, 267, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 312, 313, 315, 317, 325, 329, 331, 333, 339, 341, 343, 347, 352, 356, 367, 368, 371, 374, 376, 377, 383, 392, 403, 411, 415, 424, 428, 430, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 445, 446, 448, 450, 455, 469, 473, 474, 476, 478, 479, 481, 485, 487, 489, 503, 508, 509, 518, 520, 523, 524, 532, 534], "usa": [41, 486, 536], "usag": [38, 91], "use_composit": 6, "use_map_top": [478, 479], "user": [2, 3, 17, 28, 264, 446, 482, 504, 516, 522, 529], "usual": 505, "uth": [78, 253], "util": [25, 32, 33, 36, 37, 39, 40, 70, 146, 177, 235, 236, 249, 250, 253, 282, 283, 285, 286, 289, 290, 291, 292, 297, 298, 307, 308, 351, 365, 401, 431, 434, 435, 440, 441, 444, 447, 448, 449, 450, 476, 480, 481, 495, 505, 519, 520, 522, 533, 534], "utilitycircular_arrai": 134, "v": [16, 27, 115, 180, 183, 195, 207, 221, 223, 248, 254, 298, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 409, 410, 493, 498, 523], "v3": [25, 28, 29, 30, 31, 32, 33, 36, 37, 40, 64, 104, 163, 164, 165, 166, 168, 169, 171, 172, 229, 235, 236, 237, 238, 239, 240, 241, 242, 262, 264, 265, 266, 267, 270, 271, 275, 276, 277, 278, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 427, 428, 429, 430, 433, 436, 437, 444, 445, 480, 481, 507, 508, 522, 523], "valid": [15, 17, 18, 20, 42, 253, 263, 476, 478, 479], "valu": [12, 13, 14, 16, 18, 19, 26, 29, 31, 37, 39, 40, 46, 62, 64, 65, 68, 70, 78, 80, 91, 97, 104, 105, 107, 153, 163, 164, 168, 172, 177, 178, 228, 229, 242, 253, 260, 263, 264, 267, 276, 283, 285, 289, 290, 297, 298, 301, 303, 305, 306, 307, 308, 315, 329, 333, 359, 360, 371, 403, 405, 430, 434, 435, 437, 440, 441, 478, 479, 482, 489, 491, 504, 508, 511, 516, 518, 519, 520, 522, 526, 527], "value_": 312, "value_grid": [107, 127, 153, 177, 241, 242], "value_or": [31, 242, 290], "value_trait": [16, 50, 267, 491, 492, 498, 500, 520], "value_traitsstat": 520, "value_typ": [37, 40, 62, 63, 64, 65, 70, 71, 97, 104, 105, 221, 223, 231, 437], "value_typeiter": 37, "value_typestd": [231, 437], "value_typet": 40, "value_typevalu": [40, 231, 437], "value_typevector2": 37, "valuea": 253, "valuebeluga": 59, "valuegrid2": [108, 115, 184, 192, 196, 203, 204, 207, 208, 209, 217, 219, 223, 225, 228, 242, 253, 440, 441], "valuegrid2gener": 441, "valuegrid2valuegrid2": 441, "valueinput": 307, "valueth": [104, 307, 359], "valuetrait": [491, 493, 498, 500, 502, 519, 520, 527], "valuetraitsinlinestat": 527, "valuetraitsstat": 527, "valuetraitstrait": [504, 520], "vari": 1, "variabl": [27, 28, 78, 80, 168, 173, 183, 227, 253, 257, 261, 264, 269, 270, 272, 275, 277, 282, 285, 289, 295, 297, 397, 419, 427, 429, 434, 435, 444, 452, 465, 469, 483, 499, 503], "varianc": [172, 253], "variant": [4, 37, 58, 59, 60, 61, 186, 223, 434, 473, 474, 480, 481, 487], "variant_": 37, "variantbresenham": 60, "variantvariantbresenham": 37, "variat": 1, "vector": [2, 19, 25, 26, 30, 31, 32, 33, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 60, 72, 74, 76, 78, 81, 89, 97, 98, 104, 106, 107, 108, 118, 119, 163, 164, 167, 172, 199, 201, 213, 215, 219, 221, 223, 228, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 248, 249, 250, 252, 253, 254, 258, 260, 262, 263, 266, 267, 294, 306, 323, 331, 333, 357, 358, 367, 368, 371, 374, 376, 436, 437, 440, 441, 446, 481, 491, 492, 519, 520], "vector2": [36, 37, 61, 62, 63, 171, 172, 181, 184, 185, 190, 193, 197, 198, 201, 210, 212, 215, 216, 217, 221, 223, 228, 240, 253, 301, 302, 319, 320, 518, 523, 531, 532, 534], "vector22d": 60, "vector2d": [12, 14, 16, 44, 45, 48, 49, 50, 51, 60, 107, 108, 119, 121, 244, 252, 262, 267, 269, 310, 491, 492, 520], "vector2i": [12, 16, 37, 44, 45, 48, 49, 50, 51, 58, 59, 107, 108, 119, 244, 263, 267, 292, 333, 473, 474, 491, 492], "vector2ipoint": 58, "vector2near": [301, 302], "vector2nearauto": 302, "vector3": [172, 301, 302, 534], "vector3d": [33, 233, 234, 236, 238, 252, 253, 262, 481], "vector3i": [263, 333], "vector3near": [301, 302], "vector3nearauto": 302, "vector4": 172, "vector_typ": [78, 79, 80, 81, 221, 223, 228, 248, 250, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "vector_typeth": [248, 250], "vector_typetypenam": [248, 250], "vector_typevector": 250, "vectorshorthand": [167, 250, 437], "vectorstd": [167, 250, 437], "veri": [5, 18, 236], "verifi": [253, 429, 430], "version": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 74, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "vertex_color": 523, "vertic": 523, "via": [42, 478, 479], "view": [2, 3, 13, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 115, 146, 163, 164, 165, 166, 171, 172, 177, 201, 203, 204, 211, 215, 217, 219, 224, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 260, 262, 264, 265, 266, 267, 276, 285, 286, 291, 292, 293, 294, 295, 296, 337, 343, 345, 347, 349, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 433, 436, 437, 446, 480, 481, 507, 508, 522, 523], "view_": [37, 62, 290, 298], "view_adaptor": [228, 290], "view_closur": [29, 297, 298, 337], "view_facad": [228, 298], "view_interfac": [37, 228], "viewseffective_sample_s": 133, "viewsinclud": 143, "viewsnorm": 130, "viewstuple_vector": 135, "vision": 1, "visit": [164, 481], "visual": [227, 469, 479, 503, 511, 522], "visualization_msg": [447, 448, 453, 479, 509], "void": [25, 26, 29, 31, 33, 37, 39, 40, 42, 54, 56, 64, 68, 74, 76, 78, 101, 104, 110, 112, 114, 115, 176, 201, 204, 215, 217, 219, 221, 228, 238, 242, 248, 250, 253, 260, 276, 283, 290, 298, 307, 308, 354, 361, 363, 366, 396, 399, 433, 435, 437, 448, 450, 453, 455, 457, 474, 476, 481, 487, 510, 518, 533, 534], "void_t": [26, 115, 228, 253, 260, 276, 283, 298, 434, 435], "volatil": 6, "w": [4, 5, 20, 27, 41, 115, 180, 183, 195, 208, 221, 225, 253, 254, 265, 296, 298, 351, 365, 397, 419, 486, 498, 523, 534, 536], "w_i": [478, 479, 524], "w_t": 4, "wa": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 227, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 453, 455, 457, 469, 478, 479, 487, 489, 491, 503, 524, 526, 528, 529], "wai": [91, 308], "wait": [478, 479], "want": [5, 31, 477], "warn": 478, "warranti": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "we": [6, 29, 31, 33, 104, 106, 238, 242, 263, 290, 347, 437, 481, 523], "weight": [4, 17, 20, 25, 26, 31, 33, 42, 54, 56, 74, 76, 89, 101, 165, 166, 171, 172, 228, 229, 238, 242, 253, 254, 258, 259, 260, 263, 264, 265, 271, 275, 276, 277, 278, 282, 283, 285, 295, 296, 297, 298, 315, 329, 339, 347, 359, 377, 407, 408, 409, 410, 419, 420, 433, 446, 473, 474, 476, 478, 479, 481, 487, 511, 522, 523, 524], "weight_detail": [115, 166, 172, 201, 215, 228, 253, 276, 278, 282, 283, 419, 420, 523], "weight_fn": [115, 166, 172, 201, 215, 253, 276, 278, 282, 283, 420, 523], "weight_fncustom": [228, 283], "weight_fninlin": 420, "weight_t": [253, 254, 258, 275, 276, 511, 522, 523], "weight_ttyp": 276, "weight_ttypenam": [276, 523], "weight_typ": [20, 31, 33, 54, 55, 56, 57, 74, 75, 76, 77, 89, 90, 221, 225, 238, 242, 253, 263, 275, 276, 377, 378, 523], "weight_typedoubl": [31, 33, 238, 242, 263], "weight_typestd": 276, "weight_typeth": 276, "weight_typeweight": [31, 33, 238, 242, 263], "weightconstexpr": [166, 172, 276, 278, 283, 523], "weightcustom": [166, 172, 276, 278, 283], "weighted_mean": 172, "weighted_sampl": 172, "weighted_sd": 172, "weighted_squared_devi": 172, "weightnumer": [25, 474, 523], "weights_sum": 172, "weights_view": 172, "weightsa": 253, "weightsconstexpr": [278, 298, 523], "weightsdefinit": [278, 298], "weightspos": 253, "weightsrang": [171, 172, 253], "weightsrangea": 253, "weightt": [25, 43, 179, 188, 189, 194, 197, 202, 206, 210, 216, 222, 228], "weighttag": [25, 253, 282, 283, 474, 523], "weightttyp": 42, "weightweight": 25, "well": [2, 26, 228, 253, 260, 275, 276, 377, 446], "were": [269, 478], "wg21": 308, "what": [17, 91, 101, 104, 253, 301, 523], "wheel": 11, "when": [2, 3, 4, 6, 15, 25, 40, 42, 44, 46, 48, 50, 52, 56, 64, 74, 78, 104, 229, 242, 253, 263, 270, 297, 313, 329, 381, 397, 401, 419, 437, 476, 478, 479, 481, 524], "where": [4, 17, 33, 163, 164, 172, 173, 229, 238, 242, 253, 270, 272, 381, 413, 415, 437, 444, 445, 476, 478, 479, 481, 524], "wherea": 479, "wherev": 2, "whether": [12, 42, 313, 453, 455, 457, 476, 478, 479, 487, 524], "which": [2, 4, 5, 18, 19, 21, 23, 25, 26, 28, 30, 32, 34, 36, 39, 85, 95, 116, 118, 120, 163, 165, 168, 171, 173, 175, 178, 227, 228, 230, 233, 237, 241, 243, 245, 247, 249, 251, 253, 260, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 362, 383, 403, 405, 427, 429, 434, 436, 438, 440, 442, 444, 469, 476, 478, 479, 480, 489, 503, 507, 519, 522, 523, 531, 533], "whichev": 89, "while": [2, 4, 40, 164, 229, 429], "whole": 236, "whose": [26, 228, 253, 260, 283, 399, 434, 435, 511], "why": [31, 242], "wide": [1, 2, 3, 446], "width": [12, 44, 48, 50, 107, 108, 119, 208, 225, 242, 244, 441, 491, 492, 498, 500, 520], "width_": 441, "widthgrid": 107, "widthstd": [441, 520], "wiki": [172, 250, 523], "wikipedia": [172, 250, 523], "wild": 1, "window": [39, 253], "wise": [3, 477], "within": [83, 87, 227, 252, 469, 503], "without": [3, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 42, 97, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 478, 479, 481, 485, 508, 509, 520, 523, 532, 534], "wolfram": [41, 486, 536], "word": [2, 6, 78], "work": [2, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 229, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 453, 455, 457, 479, 487, 489, 491, 524, 526, 528, 529], "workflow": [5, 6], "world": [33, 72, 233, 234, 236, 238, 253], "world_in_sensor_transform": 236, "world_pose_typ": [33, 72, 73, 221, 225, 236], "world_pose_typesophu": 236, "world_pose_typetyp": 236, "world_to_likelihood_field_transform_": 242, "wors": 64, "worth": 6, "would": 18, "wrap": 505, "wrapper": [478, 479, 481, 482, 485, 489, 491, 495, 497, 504, 505, 507, 508, 509, 511, 516, 519, 520], "write": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 64, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 479, 481, 485, 508, 509, 520, 523, 532, 534], "www": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 357, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "x": [4, 12, 16, 18, 19, 31, 33, 37, 44, 45, 48, 49, 50, 51, 60, 107, 108, 109, 119, 121, 172, 238, 240, 242, 244, 248, 252, 267, 269, 273, 302, 308, 476, 478, 479, 481, 491, 492, 518, 520, 523, 524, 532, 534], "x10": 242, "x_": [4, 37], "x_0": 4, "x_clustering_resolut": [109, 110, 308], "x_clustering_resolutionclust": 109, "x_distribution_": 252, "x_offset": 242, "x_t": 4, "xa": 478, "xi": [12, 16, 18, 19, 44, 45, 48, 49, 50, 51, 107, 108, 119, 244, 267, 491, 492], "xigrid": [44, 50], "xml": 6, "xplane": [44, 50], "xspan_": 37, "xstep_": 37, "xx": 478, "xy": [172, 476, 478, 479], "xyaw": [476, 479], "y": [5, 12, 16, 18, 31, 33, 37, 40, 44, 45, 48, 49, 50, 51, 60, 64, 107, 108, 109, 119, 121, 172, 238, 240, 242, 244, 252, 267, 269, 273, 302, 308, 476, 478, 479, 481, 491, 492, 518, 520, 523, 524, 532, 534], "y_": 37, "y_clustering_resolut": [109, 110, 308], "y_clustering_resolutionclust": 109, "y_distribution_": 252, "y_offset": 242, "ya": 478, "yaw": [172, 476, 478, 479, 518], "yellow": [227, 469, 503], "yet": [1, 523], "yi": [12, 16, 44, 45, 48, 49, 50, 51, 107, 108, 119, 244, 267, 491, 492], "yield": [70, 231], "yigrid": [44, 50], "you": [0, 5, 6, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 253, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 301, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "your": [5, 6], "your_typ": 91, "yplane": [44, 50], "yspan_": 37, "ystep_": 37, "yy": 478, "yyaw": [476, 479], "z": [27, 31, 33, 115, 180, 183, 224, 226, 238, 248, 252, 253, 302, 415, 416, 429, 430, 481, 523, 524, 534], "z_": 4, "z_distribution_": 252, "z_hit": [31, 224, 226, 242, 315, 329, 479], "z_hitbeluga": [316, 330], "z_hitdoubl": [31, 242], "z_hitweight": [31, 242], "z_max": [31, 224, 226, 315, 479], "z_maxbeluga": 316, "z_maxdoubl": 31, "z_maxweight": 31, "z_mean": 31, "z_rand": [31, 224, 226, 315, 479], "z_randbeluga": 316, "z_randdoubl": 31, "z_random": [224, 226, 242, 329], "z_randombeluga": 330, "z_randomdoubl": 242, "z_randomweight": 242, "z_randweight": 31, "z_short": [31, 224, 226, 315, 479], "z_shortbeluga": 316, "z_shortdoubl": 31, "z_shortweight": 31, "z_t": 4, "zero": [3, 68, 78, 172, 176, 238, 250, 413, 427, 433, 479, 523], "zip": [26, 144, 177, 228, 229, 239, 240, 260, 262, 276, 401, 417, 436, 437, 442, 443, 522, 523], "zip_fn": [115, 201, 215, 418, 437, 444, 445], "zip_fnimplement": [228, 445], "zip_fninlin": 418, "zip_view": [263, 417, 445], "zip_with_view": 401, "zipconstexpr": [437, 445], "zipgiven": [437, 445], "zsee": 415, "zupper": 253, "\u00eatre": 1, "\u03b7": 4, "\u2124": 58}, "titles": ["Contact", "Rationale", "Architecture", "Design principles", "Key concepts", "Installation", "Quickstart", "Benchmarking Beluga", "Extending Beluga", "Profiling Beluga", "Using Beluga AMCL on an AMR", "Overview", "Beluga: Beluga named requirements: DenseGrid2", "Beluga: Beluga named requirements: LaserScan", "Beluga: Beluga named requirements: LinearGrid2", "Beluga: Beluga named requirements: MotionModel", "Beluga: Beluga named requirements: OccupancyGrid2d", "Beluga: Beluga named requirements: Particle", "Beluga: Beluga named requirements: RandomStateDistribution", "Beluga: Beluga named requirements: RegularGrid", "Beluga: Beluga named requirements: SensorModel", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File", "Beluga: Class List", "Classes", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File", "Beluga: Bibliography", "Beluga: beluga::Amcl&amp;lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseDenseGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLaserScan&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLinearGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseOccupancyGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseRegularGrid&amp;lt; Derived, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BeamSensorModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BearingSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i Class Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator Class Reference", "Beluga: Member List", "Beluga: beluga::CircularArray&amp;lt; T, N, F &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::ExponentialFilter Class Reference", "Beluga: Member List", "Beluga: beluga::IndexingIterator&amp;lt; Indexable, Index &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LandmarkMap Class Reference", "Beluga: Member List", "Beluga: beluga::LandmarkSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistribution&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistributionParam&amp;lt; Vector, Matrix &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; T, Constraint &amp;gt; Class Template Reference", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, Eigen::AlignedBox2d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE3d, Eigen::AlignedBox3d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::NDTSensorModel&amp;lt; SparseGridT &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Numeric&amp;lt; T, PhantomType, typename &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::Ray2d&amp;lt; OccupancyGrid, Algorithm &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::SparseValueGrid&amp;lt; MapType, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::StationaryModel Class Reference", "Beluga: Member List", "Beluga: beluga::ThrunRecoveryProbabilityEstimator Class Reference", "Beluga: Member List", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, T &amp;gt; Class Template Reference", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, std::tuple&amp;lt; Types... &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::TupleVector&amp;lt; T &amp;gt; Class Template Reference", "Beluga: beluga::ValueGrid2&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE2d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Tuple&amp;lt; Types... &amp;gt;, std::enable_if_t&amp;lt;(std::is_arithmetic_v&amp;lt; Types &amp;gt; &amp;amp;&amp;amp;...), void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; std::array&amp;lt; T, N &amp;gt;, std::enable_if_t&amp;lt; std::is_arithmetic_v&amp;lt; T &amp;gt;, void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: Class Index", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; actions Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; containers Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; motion Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; policies Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; random Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; testing Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; raycasting Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; utility Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; data Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference", "Beluga: _doxygen Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File", "Beluga: File List", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File", "Beluga: Class Members", "All", "Beluga: Class Members", "Beluga: Class Members", "Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Enumerations", "Beluga: Class Members - Enumerator", "Beluga: Class Members", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Related Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Typedefs", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Variables", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Graph Legend", "Beluga: Class Hierarchy", "Beluga: API Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File", "Beluga: Class Hierarchy", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File", "Beluga: beluga Namespace Reference", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace List", "Namespaces", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File", "Beluga: Related Pages", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File", "Beluga: beluga::AmclParams Struct Reference", "Beluga: Member List", "Beluga: beluga::BeamModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::BearingModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator::sentinel Struct Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkBearingDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkPositionDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::NDTCell&amp;lt; NDim, Scalar &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::NDTModelParam&amp;lt; NDim &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::assign_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::common_tuple_type&amp;lt; T, U, Is &amp;gt; Struct Template Reference", "Beluga: beluga::common_tuple_type&amp;lt; T, U, std::index_sequence&amp;lt; I... &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; T, class &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::detail::CellHasher&amp;lt; N &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::detail::make_from_state_fn&amp;lt; Particle, State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::has_common_tuple_type&amp;lt; typename, typename, typename &amp;gt; Struct Template Reference", "Beluga: beluga::has_common_tuple_type&amp;lt; T, U, std::void_t&amp;lt; common_tuple_type_t&amp;lt; T, U &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::is_tuple_like&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Eigen::EigenBase&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::particle_traits&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_effective_size_drop_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy&amp;lt; PolicyFn &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy_base Struct Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::state_detail::state_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::views::detail::as_common_tuple_indirect_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_view&amp;lt; Range, Fn, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_view&amp;lt; Range, Distribution, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_evenly_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_while_kld_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::zip_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::weight_detail::weight_fn Struct Reference", "Beluga: Member List", "Beluga: std::hash&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::numeric_limits&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: std::tuple_element&amp;lt; I, beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::tuple_size&amp;lt; beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File", "Overview", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File", "Beluga AMCL: Class List", "Classes", "Beluga AMCL: beluga_amcl::AmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::AmclNodelet Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::NdtAmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: Class Index", "Beluga AMCL: _doxygen Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference", "Beluga AMCL: File List", "Beluga AMCL: Class Members", "Class Members", "Beluga AMCL: Class Members - Functions", "Beluga AMCL: Class Members - Typedefs", "Beluga AMCL: Class Members - Variables", "Beluga AMCL: Graph Legend", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: API Reference", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File", "Beluga AMCL: Related Pages", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File", "Overview", "ROS Reference", "ROS 2 Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File", "Beluga ROS: Class List", "Classes", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File", "Beluga ROS: Bibliography", "Beluga ROS: beluga_ros::Amcl Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::LaserScan Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid Class Reference", "Beluga ROS: Member List", "Beluga ROS: Class Index", "Beluga ROS: _doxygen Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include Directory Reference", "Beluga ROS: File List", "Beluga ROS: Class Members", "Class Members", "Beluga ROS: Class Members - Functions", "Beluga ROS: Class Members - Typedefs", "Beluga ROS: Class Members - Variables", "Beluga ROS: Graph Legend", "Beluga ROS: Class Hierarchy", "Beluga ROS: API Reference", "Beluga ROS: Class Hierarchy", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File", "Beluga ROS: Sophus Namespace Reference", "Beluga ROS: beluga_ros Namespace Reference", "Beluga ROS: beluga_ros::msg Namespace Reference", "Beluga ROS: Namespace Members", "Beluga ROS: Namespace Members", "Namespace Members", "Beluga ROS: Namespace List", "Namespaces", "Beluga ROS: tf2 Namespace Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File", "Beluga ROS: Related Pages", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File", "Beluga ROS: beluga_ros::AmclParams Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid::ValueTraits Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; T &amp;gt; Struct Template Reference", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga ROS: Member List", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File", "Overview", "Bibliography", "Features", "Releases", "Using Beluga with Nav2", "Primer on Particle Filtering with Beluga"], "titleterms": {"2": 479, "_doxygen": [147, 460, 494], "abstract": 2, "action": [21, 22, 28, 29, 122, 129, 130, 154, 264, 265, 285, 286, 295, 296], "adapt": 2, "advertis": [478, 479], "algorithm": [23, 24, 25, 36, 37, 95, 131, 132, 133, 137, 139, 151, 162, 163, 164, 165, 166, 171, 172, 175, 176, 291, 292, 307, 308, 433], "alignedbox2d": 83, "alignedbox3d": 87, "all": 180, "almost_equal_to": 528, "amcl": [10, 42, 471, 480, 481, 487], "amcl_cor": 25, "amcl_nod": [447, 448], "amcl_nodelet": [449, 450], "amclnod": [453, 479], "amclnodelet": [455, 478], "amclparam": [313, 524], "amp": 111, "amr": 10, "an": 10, "architectur": 2, "arg": [356, 364, 400], "as_common_tuple_indirect_fn": 401, "assign": [28, 29], "assign_fn": 337, "awar": 3, "base": 2, "basedensegrid2": 44, "baselaserscan": 46, "baselineargrid2": 48, "baseoccupancygrid2": 50, "baseregulargrid": 52, "beam_model": [30, 31], "beammodelparam": 315, "beamsensormodel": 54, "bearing_sensor_model": [32, 33], "bearingmodelparam": 317, "bearingsensormodel": 56, "beluga": [5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 461, 462, 471, 473, 474, 476, 480, 481, 484, 485, 495, 496, 505, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534, 539, 540], "beluga_amcl": [447, 448, 449, 450, 461, 462, 473, 474, 476, 478, 479], "beluga_ro": [480, 481, 484, 485, 495, 496, 507, 508, 509, 511, 519, 520, 522, 523, 531, 532, 533, 534], "benchmark": 7, "bibliographi": [41, 486, 536], "binari": 5, "bound": 3, "bresenham": [36, 37], "bresenham2i": 58, "broadcast": [478, 479], "build": 5, "call": 478, "carlo": 4, "cellhash": 357, "center": 3, "ciabatta": [38, 161], "circular_arrai": [39, 40], "circulararrai": [64, 424, 426], "class": [26, 27, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 115, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 232, 354, 363, 399, 451, 452, 453, 455, 457, 459, 464, 465, 466, 467, 468, 470, 472, 482, 483, 487, 489, 491, 493, 498, 499, 500, 501, 502, 504, 506], "clone": 5, "common_tuple_typ": 351, "common_tuple_type_t": 362, "compat": [478, 479], "concept": 4, "consist": 3, "constraint": 82, "contact": 0, "contain": [39, 40, 116, 117, 123, 134, 135, 148, 436, 437], "crtp": 2, "data": [2, 118, 119, 140, 142, 153, 235, 236, 239, 240, 243, 244, 262, 266, 267, 293, 294, 305, 306, 440, 441], "decay_t": 356, "decay_tuple_lik": 354, "dense_grid": [118, 119], "densegrid2": 12, "depend": [5, 446], "deriv": [44, 46, 48, 50, 52], "design": 3, "detail": [158, 170, 284], "differential_drive_model": [120, 121], "differentialdrivemodel": 66, "differentialdrivemodelparam": 321, "directori": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 460, 461, 462, 494, 495, 496], "distance_map": [163, 164], "distribut": [2, 5, 411], "easi": 3, "effective_sample_s": [165, 166], "eigen_compat": 167, "eigenbas": 371, "element": [168, 169], "enabl": [366, 396], "enumer": [186, 187], "epilogu": 170, "estim": [171, 172], "evalu": 3, "every_n": [173, 174], "every_n_fn": 379, "every_n_polici": 381, "executionpolici": 42, "exponential_filt": [175, 176], "exponentialfilt": 68, "extend": 8, "f": [64, 424, 426], "featur": [11, 446, 537], "file": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 463, 473, 474, 476, 480, 481, 484, 485, 497, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "filter": [478, 479, 540], "fn": 405, "focus": 3, "form": 2, "forward_lik": 178, "from": 5, "function": [2, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 218, 466, 500], "graph": [227, 469, 503], "gt": [42, 44, 46, 48, 50, 52, 54, 56, 60, 64, 70, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 95, 97, 103, 104, 106, 107, 109, 111, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 331, 333, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 387, 389, 390, 392, 396, 399, 400, 405, 411, 421, 423, 424, 426, 528, 529], "has_common_tuple_typ": 361, "has_single_el": 363, "hierarchi": [228, 232, 470, 472, 504, 506], "home": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 461, 462, 473, 474, 476, 480, 481, 484, 485, 495, 496, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "hpp": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 473, 474, 476, 480, 481, 484, 485, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "i": [351, 352], "includ": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 461, 462, 473, 474, 476, 480, 481, 484, 485, 495, 496, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "index": [70, 115, 459, 493], "index_sequ": 352, "indexing_iter": [230, 231], "indexingiter": 70, "initi": [478, 479], "instal": 5, "integ": 60, "interfac": [478, 479], "internalcontain": 103, "is_arithmetic_v": [111, 113], "is_tuple_lik": 365, "iter": 62, "kei": 4, "landmark_detection_typ": [233, 234], "landmark_map": [235, 236], "landmark_sensor_model": [237, 238], "landmarkbearingdetect": 323, "landmarkmap": [56, 72, 74], "landmarkmodelparam": 325, "landmarkpositiondetect": 327, "landmarksensormodel": 74, "laser_scan": [239, 240, 507, 508], "laserscan": [13, 489], "lazi": 3, "legend": [227, 469, 503], "like": 2, "likelihood_field_model": [241, 242], "likelihoodfieldmodel": 76, "likelihoodfieldmodelparam": 329, "line": 60, "linear_grid": [243, 244], "lineargrid2": 14, "list": [26, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 177, 260, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 353, 355, 358, 360, 369, 370, 372, 373, 375, 378, 380, 382, 384, 386, 388, 391, 393, 395, 398, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 425, 451, 454, 456, 458, 463, 482, 488, 490, 492, 497, 516, 525, 527, 530], "local": 4, "lt": [42, 44, 46, 48, 50, 52, 54, 56, 60, 64, 70, 74, 76, 78, 80, 82, 89, 91, 95, 97, 103, 104, 106, 107, 111, 113, 331, 333, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 387, 389, 390, 392, 396, 399, 400, 405, 411, 421, 423, 424, 426, 528, 529], "make_from_state_fn": 359, "maptyp": 97, "matrix": 80, "member": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 254, 255, 256, 257, 258, 259, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 353, 355, 358, 360, 369, 370, 372, 373, 375, 378, 380, 382, 384, 386, 388, 391, 393, 395, 398, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 425, 454, 456, 458, 464, 465, 466, 467, 468, 488, 490, 492, 498, 499, 500, 501, 502, 513, 514, 515, 525, 527, 530], "memori": 3, "messag": 509, "misc": [478, 479], "model": [478, 479], "mont": 4, "motion": [120, 121, 124, 136, 156, 245, 246, 268, 269, 309, 310, 478, 479], "motionmodel": [15, 42], "msg": 512, "multivariate_distribution_trait": [247, 248, 366], "multivariate_normal_distribut": [249, 250], "multivariate_uniform_distribut": [251, 252], "multivariatenormaldistribut": 78, "multivariatenormaldistributionparam": 80, "multivariateuniformdistribut": 82, "n": [64, 357, 424, 426], "namespac": [253, 254, 255, 256, 257, 258, 259, 260, 261, 510, 511, 512, 513, 514, 515, 516, 517, 518], "nav2": 539, "ndim": [52, 97, 331, 333], "ndt_amcl_nod": [473, 474], "ndt_cell": 262, "ndt_sensor_model": 263, "ndtamclnod": 457, "ndtcell": 331, "ndtmodelparam": 333, "ndtsensormodel": 89, "node": 479, "nodelet": 478, "normal": [264, 265], "normalize_base_fn": 339, "normalize_fn": 341, "note": [478, 479], "numer": [91, 421, 423], "observ": [478, 479], "occupancy_grid": [266, 267, 519, 520], "occupancygrid": [54, 76, 85, 95, 491], "occupancygrid2d": 16, "omnidirectional_drive_model": [268, 269], "omnidirectionaldrivemodel": 93, "omnidirectionaldrivemodelparam": 335, "on_effective_size_drop": [270, 271], "on_effective_size_drop_polici": 383, "on_mot": [272, 273], "on_motion_fn": 385, "on_motion_polici": 387, "on_motion_policy_bas": 389, "output": 6, "over": 6, "overview": [11, 446, 477, 535], "page": [274, 475, 521], "paramet": [478, 479], "particl": [17, 277, 278, 359, 478, 479, 540], "particle_cloud": [522, 523], "particle_trait": [275, 276, 377], "particletyp": 42, "perform": 3, "phantomtyp": [91, 421, 423], "polici": [125, 137, 145, 173, 174, 270, 271, 272, 273, 279, 280, 281, 392], "policy_bas": 394, "policyfn": 392, "pose": [387, 389, 478, 479], "prerequisit": 6, "primer": 540, "primit": [282, 283], "principl": 3, "profil": 9, "prologu": 284, "propag": [285, 286], "propagate_base_fn": 343, "propagate_fn": 345, "publish": [478, 479], "quickstart": 6, "random": [126, 138, 159, 247, 248, 249, 250, 251, 252, 287, 288], "random_interspers": [289, 290], "random_intersperse_fn": 403, "random_intersperse_view": 405, "randomstatedistribut": 18, "randomstategener": 42, "rang": [2, 405, 411], "rational": 1, "ray2d": 95, "raycast": [36, 37, 131, 162, 291, 292], "re": 3, "record": 6, "refer": [21, 23, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 116, 118, 120, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 171, 173, 175, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 264, 266, 268, 270, 272, 275, 277, 279, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 427, 429, 431, 434, 436, 438, 440, 442, 444, 447, 449, 453, 455, 457, 460, 461, 462, 473, 478, 479, 480, 484, 487, 489, 491, 494, 495, 496, 507, 510, 511, 512, 518, 519, 522, 524, 526, 528, 529, 531, 533], "regular_grid": [293, 294], "regulargrid": 19, "relat": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 218, 274, 475, 521], "releas": 538, "repositori": 5, "reweight": [295, 296], "reweight_base_fn": 347, "reweight_fn": 349, "ro": [5, 478, 479, 505], "robot": 6, "ros2_common": 476, "run": 6, "runner": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 461, 462, 473, 474, 476, 480, 481, 484, 485, 495, 496, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "sampl": [297, 298], "sample_base_fn": 407, "sample_fn": 409, "sample_view": 411, "scalar": [331, 390, 529], "se2": [390, 529], "se2bas": 376, "se2d": [85, 109], "se3bas": 368, "sensor": [30, 31, 32, 33, 118, 119, 127, 138, 139, 140, 141, 142, 152, 153, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 262, 263, 266, 267, 293, 294, 299, 300, 305, 306, 440, 441], "sensormodel": [20, 42], "sentinel": 319, "servic": [478, 479], "simul": 6, "so2bas": 367, "so3bas": 374, "sophu": 510, "sophus_match": [301, 302], "sophus_print": [303, 304], "sourc": [5, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 167, 169, 170, 172, 174, 176, 178, 231, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 273, 276, 278, 280, 281, 283, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 428, 430, 432, 433, 435, 437, 439, 441, 443, 445, 448, 450, 474, 476, 481, 485, 508, 509, 520, 523, 532, 534], "sparse_value_grid": [305, 306], "sparsegridt": 89, "sparsevaluegrid": 97, "spatial_hash": [307, 308, 396], "state": 359, "state_fn": 397, "statetyp": [56, 74], "static": 3, "stationary_model": [309, 310], "stationarymodel": 99, "stl": [2, 3], "strongly_typed_numer": [311, 312], "struct": [313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 379, 381, 383, 385, 387, 389, 390, 392, 394, 396, 397, 399, 400, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 424, 426, 524, 526, 528, 529], "subscrib": [478, 479], "support": 11, "t": [64, 78, 82, 91, 103, 106, 107, 113, 351, 354, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 396, 399, 400, 421, 423, 424, 426, 528], "take_evenli": [427, 428], "take_evenly_fn": 413, "take_while_kld": [429, 430], "take_while_kld_fn": 415, "templat": [42, 44, 46, 48, 50, 52, 54, 56, 60, 64, 70, 74, 76, 78, 80, 82, 85, 89, 91, 95, 97, 103, 104, 106, 107, 111, 113, 331, 333, 351, 352, 354, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 376, 377, 387, 389, 390, 392, 396, 399, 400, 405, 411, 421, 423, 424, 426, 528, 529], "test": [128, 155, 301, 302, 303, 304, 431, 432], "tf2": 518, "tf2_eigen": [531, 532], "tf2_sophu": [533, 534], "thrun_recovery_probability_estim": 433, "thrunrecoveryprobabilityestim": 101, "topic": [478, 479], "transform": [478, 479], "tupl": 104, "tuple_index": 399, "tuple_index_found": [364, 400], "tuple_trait": [434, 435], "tuple_vector": [436, 437], "tuplecontain": 103, "tuplelik": [356, 363, 399], "tuplevector": 106, "type": [104, 111, 141, 142, 157, 233, 234], "type_trait": [129, 132, 136, 143, 150, 275, 276, 311, 312, 434, 435, 438, 439], "typedef": [221, 467, 501], "typenam": [91, 361], "u": [351, 362], "urng": [405, 411], "us": [3, 10, 539], "util": [134, 149, 178, 230, 231], "ux": 3, "value_grid": [440, 441], "valuegrid2": 107, "valuetrait": 526, "variabl": [224, 468, 502], "vector": 80, "vector2": 60, "view": [130, 133, 135, 143, 144, 168, 169, 277, 278, 289, 290, 297, 298, 427, 428, 429, 430, 442, 443, 444, 445], "visual": 6, "void": [109, 111, 113], "void_t": 362, "weight_fn": 419, "weightt": 42, "work": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 461, 462, 473, 474, 476, 480, 481, 484, 485, 495, 496, 507, 508, 509, 519, 520, 522, 523, 531, 532, 533, 534], "workspac": 5, "zip": [444, 445], "zip_fn": 417}})