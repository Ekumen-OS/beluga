Search.setIndex({"alltitles": {"/home/runner/work/beluga/beluga/beluga/include Directory Reference": [[176, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; actions Relation": [[137, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; containers Relation": [[138, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; motion Relation": [[139, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; random Relation": [[141, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; sensor Relation": [[140, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; testing Relation": [[142, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference": [[162, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File": [[12, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; type_traits Relation": [[143, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; views Relation": [[144, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference": [[170, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference": [[24, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File": [[25, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference": [[31, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File": [[32, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference": [[284, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File": [[285, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/overlay.hpp File Reference": [[294, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/overlay.hpp Source File": [[295, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference": [[309, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File": [[310, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference": [[319, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File": [[320, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; policies Relation": [[146, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; raycasting Relation": [[145, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; type_traits Relation": [[147, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; views Relation": [[148, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference": [[167, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference": [[26, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File": [[27, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File": [[28, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp File Reference": [[129, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp Source File": [[130, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference": [[179, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File": [[180, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference": [[181, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File": [[182, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference": [[187, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File": [[188, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference": [[191, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File": [[192, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference": [[178, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference": [[315, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File": [[316, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference": [[39, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File": [[40, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference": [[334, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File": [[335, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File": [[464, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/unscented_transform.hpp Source File": [[471, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference": [[37, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File": [[38, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; utility Relation": [[149, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; views Relation": [[150, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference": [[164, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference": [[131, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File": [[132, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference": [[42, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File": [[43, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference": [[467, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File": [[468, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference": [[174, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File": [[186, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File": [[308, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File": [[183, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion -&gt; type_traits Relation": [[151, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference": [[172, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference": [[265, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File": [[266, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference": [[135, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File": [[136, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference": [[288, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File": [[289, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference": [[336, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File": [[337, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies -&gt; algorithm Relation": [[152, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference": [[161, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference": [[303, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File": [[304, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference": [[189, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File": [[190, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference": [[290, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File": [[291, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference": [[292, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File": [[293, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File": [[305, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference": [[306, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File": [[307, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random -&gt; sensor Relation": [[157, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference": [[175, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference": [[311, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File": [[312, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference": [[267, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File": [[268, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference": [[269, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File": [[270, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference": [[271, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File": [[272, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; actions Relation": [[153, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; algorithm Relation": [[154, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; data Relation": [[155, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; types Relation": [[156, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference": [[168, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference": [[324, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File": [[325, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference": [[33, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File": [[34, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference": [[35, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File": [[36, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&gt; types Relation": [[158, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference": [[169, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference": [[133, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File": [[134, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference": [[251, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File": [[252, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference": [[255, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File": [[256, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference": [[263, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File": [[264, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File": [[282, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference": [[286, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File": [[287, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/point_cloud.hpp File Reference": [[301, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/point_cloud.hpp Source File": [[302, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference": [[317, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File": [[318, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_point_cloud.hpp File Reference": [[330, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_point_cloud.hpp Source File": [[331, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference": [[332, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File": [[333, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference": [[472, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File": [[473, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference": [[253, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File": [[254, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference": [[257, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File": [[258, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model_base.hpp File Reference": [[259, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model_base.hpp Source File": [[260, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_prob_model.hpp File Reference": [[261, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_prob_model.hpp Source File": [[262, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File": [[283, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/primitives.hpp Source File": [[323, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference": [[171, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference": [[462, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File": [[463, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference": [[326, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File": [[327, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference": [[328, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File": [[329, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference": [[166, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference": [[469, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File": [[470, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference": [[297, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File": [[298, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference": [[338, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File": [[339, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference": [[465, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File": [[466, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference": [[173, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference": [[249, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File": [[250, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference": [[165, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File": [[194, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference": [[246, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File": [[247, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views -&gt; type_traits Relation": [[159, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference": [[160, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference": [[474, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File": [[475, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference": [[184, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File": [[185, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference": [[299, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File": [[300, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference": [[313, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File": [[314, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference": [[321, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File": [[322, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference": [[458, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File": [[459, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference": [[460, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File": [[461, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference": [[476, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File": [[477, null]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference": [[177, null]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File": [[41, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference": [[493, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference": [[494, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference": [[479, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File": [[480, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/message_filters.hpp File Reference": [[508, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/message_filters.hpp Source File": [[509, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference": [[510, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File": [[511, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node_3d.hpp File Reference": [[512, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node_3d.hpp Source File": [[513, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File": [[515, null]], "/home/runner/work/beluga/beluga/beluga_ros/include Directory Reference": [[538, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference": [[537, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference": [[518, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File": [[519, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference": [[522, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File": [[523, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference": [[549, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File": [[550, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/likelihood_field.hpp File Reference": [[551, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/likelihood_field.hpp Source File": [[552, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File": [[553, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/ndt_ellipsoid.hpp File Reference": [[563, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/ndt_ellipsoid.hpp Source File": [[564, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference": [[565, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File": [[566, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference": [[568, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File": [[569, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/point_cloud.hpp File Reference": [[570, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/point_cloud.hpp Source File": [[571, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/sparse_point_cloud.hpp File Reference": [[572, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/sparse_point_cloud.hpp Source File": [[573, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference": [[583, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File": [[584, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference": [[585, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File": [[586, null]], "1 Develop": [[592, "develop"]], "1.1 Parameters": [[592, "parameters"]], "1.2 Landmark map": [[592, "landmark-map"]], "1.3 Initial belief": [[592, "initial-belief"]], "1.4 System modelling": [[592, "system-modelling"]], "1.5 Filter prediction step": [[592, "filter-prediction-step"]], "1.6 Filter update step": [[592, "filter-update-step"]], "1.6.2 Filter resampling step": [[592, "filter-resampling-step"]], "1.7 Estimate": [[592, "estimate"]], "2 Compile and run": [[592, "compile-and-run"]], "Advertised services": [[517, "advertised-services"]], "AlignedBox2d &gt; Class Reference": [[92, null]], "AlignedBox3d &gt; Class Reference": [[96, null]], "All": [[196, null]], "Amcl Class Reference": [[525, null]], "Amcl&lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &gt; Class Template Reference": [[45, null]], "AmclNode Class Reference": [[483, null]], "AmclParams Struct Reference": [[340, null], [574, null]], "Architecture": [[2, null]], "BaseAMCLNode Class Reference": [[485, null]], "BaseDenseGrid2&lt; Derived &gt; Class Template Reference": [[47, null]], "BaseLaserScan&lt; Derived &gt; Class Template Reference": [[49, null]], "BaseLinearGrid2&lt; Derived &gt; Class Template Reference": [[51, null]], "BaseOccupancyGrid2&lt; Derived &gt; Class Template Reference": [[53, null]], "BasePointCloud&lt; Derived &gt; Class Template Reference": [[55, null]], "BaseRegularGrid&lt; Derived, NDim &gt; Class Template Reference": [[56, null]], "BaseSparsePointCloud&lt; Derived &gt; Class Template Reference": [[58, null]], "BeamModelParam Struct Reference": [[342, null]], "BeamSensorModel&lt; OccupancyGrid &gt; Class Template Reference": [[59, null]], "BearingModelParam Struct Reference": [[344, null]], "BearingSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[61, null]], "Beluga": [[245, null]], "Beluga AMCL": [[506, null]], "Beluga ROS": [[547, null]], "Benchmarking Beluga": [[7, null]], "Bibliography": [[44, null], [524, null], [588, null]], "Bresenham2i Class Reference": [[63, null]], "Bring the code": [[591, "bring-the-code"]], "Broadcasted transforms": [[517, "broadcasted-transforms"]], "Build and source workspace": [[5, "build-and-source-workspace"]], "Building from source (with ROS)": [[5, "building-from-source-with-ros"]], "CRTP-based data adapters": [[2, "crtp-based-data-adapters"]], "CellHasher&lt; N &gt; Struct Template Reference": [[384, null]], "Check  beluga_demo_nav2_integration package": [[591, "check-beluga-demo-nav2-integration-package"]], "CircularArray&lt; T, N, F &gt; &gt; Struct Template Reference": [[455, null], [457, null]], "CircularArray&lt; T, N, F &gt; Class Template Reference": [[69, null]], "Class Hierarchy": [[244, null], [248, null], [505, null], [507, null], [546, null], [548, null]], "Class Index": [[128, null], [491, null], [535, null]], "Class List": [[29, null], [481, null], [520, null]], "Class Members": [[195, null], [197, null], [198, null], [199, null], [200, null], [201, null], [204, null], [225, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null], [232, null], [233, null], [235, null], [236, null], [238, null], [239, null], [241, null], [242, null], [497, null], [498, null], [540, null], [541, null]], "Class Members - Enumerations": [[202, null]], "Class Members - Enumerator": [[203, null]], "Class Members - Functions": [[205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [499, null], [542, null]], "Class Members - Related Functions": [[234, null]], "Class Members - Typedefs": [[237, null], [543, null]], "Class Members - Variables": [[240, null], [500, null], [544, null]], "Classes": [[30, null], [482, null], [521, null]], "Clone Beluga repository": [[5, "clone-beluga-repository"]], "Clone beluga-demos repository": [[591, "clone-beluga-demos-repository"]], "ClusterCell&lt; State &gt; Struct Template Reference": [[376, null]], "Compatibility notes": [[517, "compatibility-notes"]], "Configuring Beluga AMCL": [[10, "configuring-beluga-amcl"]], "Contact": [[0, null]], "DenseGrid2": [[13, null]], "Dependencies": [[478, "dependencies"]], "Design principles": [[3, null]], "DifferentialDriveModel&lt; StateType &gt; Class Template Reference": [[71, null]], "DifferentialDriveModelParam Struct Reference": [[348, null]], "Distribution as a range": [[2, "distribution-as-a-range"]], "Easy to (re)use": [[3, "easy-to-re-use"]], "EigenBase&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[402, null]], "Example Code": [[8, "example-code"], [8, "id2"], [8, "id5"]], "ExponentialFilter Class Reference": [[73, null]], "Extending Beluga": [[8, null]], "Features": [[11, "features"], [478, "features"], [589, null]], "File List": [[193, null], [495, null], [539, null]], "File Members": [[501, null], [502, null], [503, null]], "Files": [[496, null]], "Functional forms": [[2, "functional-forms"]], "Functions": [[211, null]], "Graph Legend": [[243, null], [504, null], [545, null]], "Implementing Estimation Algorithms": [[8, "implementing-estimation-algorithms"]], "Implementing Motion Models": [[8, "implementing-motion-models"]], "Implementing Sensor Models": [[8, "implementing-sensor-models"]], "IndexingIterator&lt; Indexable, Index &gt; Class Template Reference": [[75, null]], "Initial Pose and Transform Broadcast Parameters": [[517, "initial-pose-and-transform-broadcast-parameters"]], "Install ROS distribution": [[5, "install-ros-distribution"]], "Install dependencies": [[5, "install-dependencies"]], "Installation": [[5, null]], "Installing binaries": [[5, "installing-binaries"]], "Interface Parameters": [[517, "interface-parameters"]], "Key Considerations": [[8, "key-considerations"], [8, "id1"], [8, "id4"]], "Key concepts": [[4, null]], "LandmarkBearingDetection Struct Reference": [[350, null]], "LandmarkMap Class Reference": [[77, null]], "LandmarkModelParam Struct Reference": [[352, null]], "LandmarkPositionDetection Struct Reference": [[354, null]], "LandmarkSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[79, null]], "LaserScan": [[14, null]], "LaserScan Class Reference": [[527, null]], "Lazy evaluated": [[3, "lazy-evaluated"]], "LikelihoodFieldModel&lt; OccupancyGrid &gt; Class Template Reference": [[81, null]], "LikelihoodFieldModelBase&lt; OccupancyGrid &gt; Class Template Reference": [[83, null]], "LikelihoodFieldModelBaseParam Struct Reference": [[356, null]], "LikelihoodFieldProbModel&lt; OccupancyGrid &gt; Class Template Reference": [[85, null]], "Line&lt; Vector2, Integer &gt; Class Template Reference": [[65, null]], "LinearGrid2": [[15, null]], "Mapping the environment": [[10, "mapping-the-environment"]], "Member List": [[46, null], [48, null], [50, null], [52, null], [54, null], [57, null], [60, null], [62, null], [64, null], [66, null], [68, null], [70, null], [72, null], [74, null], [76, null], [78, null], [80, null], [82, null], [84, null], [86, null], [88, null], [90, null], [93, null], [95, null], [97, null], [99, null], [101, null], [103, null], [105, null], [107, null], [109, null], [111, null], [113, null], [116, null], [119, null], [121, null], [123, null], [125, null], [127, null], [341, null], [343, null], [345, null], [347, null], [349, null], [351, null], [353, null], [355, null], [357, null], [359, null], [361, null], [363, null], [365, null], [367, null], [369, null], [371, null], [373, null], [375, null], [377, null], [380, null], [382, null], [385, null], [387, null], [389, null], [400, null], [401, null], [403, null], [404, null], [406, null], [409, null], [411, null], [413, null], [415, null], [417, null], [419, null], [422, null], [424, null], [426, null], [428, null], [431, null], [435, null], [437, null], [439, null], [441, null], [443, null], [445, null], [447, null], [449, null], [451, null], [453, null], [456, null], [484, null], [486, null], [488, null], [490, null], [526, null], [528, null], [530, null], [532, null], [534, null], [575, null], [577, null], [580, null], [582, null]], "Memory aware": [[3, "memory-aware"]], "Misc Parameters": [[517, "misc-parameters"]], "Monte Carlo Localization": [[4, "monte-carlo-localization"]], "Motion Model Parameters": [[517, "motion-model-parameters"]], "MotionModel": [[16, null]], "MultivariateNormalDistribution&lt; T &gt; Class Template Reference": [[87, null]], "MultivariateNormalDistributionParam&lt; Vector, Matrix &gt; Class Template Reference": [[89, null]], "MultivariateUniformDistribution&lt; T, Constraint &gt; Class Template Reference": [[91, null]], "NDTCell&lt; NDim, Scalar &gt; Struct Template Reference": [[358, null]], "NDTModelParam&lt; NDim &gt; Struct Template Reference": [[360, null]], "NDTSensorModel&lt; SparseGridT &gt; Class Template Reference": [[98, null]], "Namespace List": [[280, null], [560, null]], "Namespace Members": [[274, null], [275, null], [276, null], [277, null], [278, null], [279, null], [556, null], [557, null], [558, null], [559, null]], "Namespaces": [[281, null], [561, null]], "NdtAmclNode Class Reference": [[487, null]], "NdtAmclNode3D Class Reference": [[489, null]], "Next Steps": [[8, "next-steps"], [8, "id6"]], "Next steps": [[8, "id3"]], "Nodes": [[517, "nodes"]], "Numeric&lt; T, PhantomType &gt; &gt; Struct Template Reference": [[452, null], [454, null]], "Numeric&lt; T, PhantomType, typename &gt; Class Template Reference": [[100, null]], "Observation Model Parameters": [[517, "observation-model-parameters"]], "OccupancyGrid Class Reference": [[529, null]], "OccupancyGrid2d": [[17, null]], "OmnidirectionalDriveModel Class Reference": [[102, null]], "OmnidirectionalDriveModelParam Struct Reference": [[362, null]], "Overview": [[11, null], [478, null], [516, null], [587, null], [591, "overview"], [592, "overview"]], "Parameters": [[517, "parameters"]], "Particle": [[18, null]], "Particle Filter Parameters": [[517, "particle-filter-parameters"]], "ParticleClusterizer Class Reference": [[104, null]], "ParticleClusterizerParam Struct Reference": [[364, null]], "Performance focused": [[3, "performance-focused"]], "PointCloud": [[19, null], [23, null]], "PointCloud3&lt; T, Strict &gt; Class Template Reference": [[531, null]], "Prerequisites": [[6, "prerequisites"], [8, "prerequisites"], [10, "prerequisites"]], "Primer on Particle Filtering with Beluga": [[592, null]], "Profiling Beluga": [[9, null]], "Published topics": [[517, "published-topics"]], "Quickstart": [[6, null]], "ROS 2 Reference": [[517, null]], "RandomStateDistribution": [[20, null]], "Rationale": [[1, null]], "Ray2d&lt; OccupancyGrid, Algorithm &gt; Class Template Reference": [[106, null]], "RegularGrid": [[21, null]], "Related Pages": [[296, null], [514, null], [567, null]], "Releases": [[590, null]], "Requirements": [[592, "requirements"]], "Run Beluga in simulation": [[6, "run-beluga-in-simulation"]], "Run Beluga on a robot": [[6, "run-beluga-on-a-robot"]], "Run Beluga over a recording": [[6, "run-beluga-over-a-recording"]], "Run the code": [[591, "run-the-code"]], "Running Beluga AMCL": [[10, "running-beluga-amcl"]], "SE2&lt; Scalar &gt; &gt; Struct Template Reference": [[421, null], [579, null]], "SE2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[407, null]], "SE2d, OccupancyGrid &gt; Class Template Reference": [[94, null]], "SE2d, void &gt; Class Reference": [[120, null]], "SE3&lt; Scalar &gt; &gt; Struct Template Reference": [[423, null], [581, null]], "SE3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[399, null]], "SE3d, void &gt; Class Reference": [[122, null]], "SO2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[398, null]], "SO3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[405, null]], "STL consistent": [[3, "stl-consistent"]], "STL-like abstractions": [[2, "stl-like-abstractions"]], "SensorModel": [[22, null]], "Setting things up": [[10, "setting-things-up"]], "Sophus Namespace Reference": [[554, null]], "SparsePointCloud3&lt; T, Strict &gt; Class Template Reference": [[533, null]], "SparseValueGrid&lt; MapType, NDim &gt; Class Template Reference": [[108, null]], "Statically bound": [[3, "statically-bound"]], "StationaryModel Class Reference": [[110, null]], "Subscribed topics": [[517, "subscribed-topics"]], "Subscribed transforms": [[517, "subscribed-transforms"]], "Support": [[11, "support"]], "Tasks": [[592, "tasks"]], "ThrunRecoveryProbabilityEstimator Class Reference": [[112, null]], "Troubleshooting": [[10, "troubleshooting"]], "TupleContainer&lt; InternalContainer, T &gt; Class Template Reference": [[114, null]], "TupleVector&lt; T &gt; Class Template Reference": [[117, null]], "UX centered": [[3, "ux-centered"]], "Using Beluga AMCL": [[10, null]], "Using Beluga with Nav2": [[591, null]], "ValueGrid2&lt; T &gt; Class Template Reference": [[118, null]], "ValueTraits Struct Reference": [[576, null]], "Visualize Beluga output": [[6, "visualize-beluga-output"]], "_doxygen Directory Reference": [[163, null], [492, null], [536, null]], "almost_equal_to&lt; T &gt; Struct Template Reference": [[578, null]], "as_common_tuple_indirect_fn Struct Reference": [[434, null]], "assign_fn Struct Reference": [[366, null]], "beluga Namespace Reference": [[273, null]], "beluga_amcl::AmclNode": [[517, "beluga-amcl-amclnode"]], "beluga_ros Namespace Reference": [[555, null]], "common_tuple_type&lt; T, U, Is &gt; Struct Template Reference": [[378, null]], "decay_t&lt; TupleLike&lt; Args\u2026 &gt; &gt; &gt; &gt; &gt; Struct Template Reference": [[383, null]], "decay_tuple_like&lt; T, class &gt; Struct Template Reference": [[381, null]], "declval&lt; T &gt;().likelihood_field())&gt; &gt; Struct Template Reference": [[393, null]], "default_weighted_mean_fn Struct Reference": [[386, null]], "every_n_fn Struct Reference": [[410, null]], "every_n_policy Struct Reference": [[412, null]], "has_common_tuple_type&lt; typename, typename, typename &gt; Struct Template Reference": [[390, null]], "has_likelihood_field&lt; T, class &gt; Struct Template Reference": [[392, null]], "has_single_element&lt; T, TupleLike, class &gt; Struct Template Reference": [[394, null]], "index_sequence&lt; I\u2026 &gt; &gt; Struct Template Reference": [[379, null]], "is_arithmetic_v&lt; T &gt;, void &gt; &gt; Class Template Reference": [[126, null]], "is_arithmetic_v&lt; Types &gt; &amp;&amp;\u2026), void &gt; &gt; Class Template Reference": [[124, null]], "is_tuple_like&lt; T &gt; Struct Template Reference": [[396, null]], "iterator Class Reference": [[67, null]], "make_from_state_fn&lt; Particle, State &gt; Struct Template Reference": [[388, null]], "multivariate_distribution_traits&lt; T, Enable &gt; Struct Template Reference": [[397, null]], "on_effective_size_drop_policy Struct Reference": [[414, null]], "on_motion_fn&lt; StateType &gt; Struct Template Reference": [[416, null]], "on_motion_policy&lt; Pose &gt; Struct Template Reference": [[418, null]], "on_motion_policy_base&lt; Pose &gt; Struct Template Reference": [[420, null]], "particle_traits&lt; T &gt; Struct Template Reference": [[408, null]], "policy&lt; PolicyFn &gt; Struct Template Reference": [[425, null]], "policy_base Struct Reference": [[427, null]], "propagate_base_fn Struct Reference": [[368, null]], "propagate_fn Struct Reference": [[370, null]], "random_intersperse_fn Struct Reference": [[436, null]], "random_intersperse_view&lt; Range, Fn, URNG &gt; Struct Template Reference": [[438, null]], "reweight_base_fn Struct Reference": [[372, null]], "reweight_fn Struct Reference": [[374, null]], "sample_base_fn Struct Reference": [[440, null]], "sample_fn Struct Reference": [[442, null]], "sample_view&lt; Range, Distribution, URNG &gt; Struct Template Reference": [[444, null]], "sentinel Struct Reference": [[346, null]], "spatial_hash&lt; T, Enable &gt; Struct Template Reference": [[429, null]], "state_fn Struct Reference": [[430, null]], "take_while_kld_fn Struct Reference": [[446, null]], "tf2 Namespace Reference": [[562, null]], "tuple&lt; Types\u2026 &gt; &gt; Class Template Reference": [[115, null]], "tuple_index&lt; T, TupleLike, class &gt; Struct Template Reference": [[432, null]], "tuple_index_found&lt; T, Args\u2026 &gt;()&gt; &gt; Struct Template Reference": [[395, null], [433, null]], "void_t&lt; common_tuple_type_t&lt; T, U &gt; &gt; &gt; Struct Template Reference": [[391, null]], "weight_fn Struct Reference": [[450, null]], "zip_fn Struct Reference": [[448, null]]}, "docnames": ["about/contact", "about/rationale", "concepts/architecture", "concepts/design-principles", "concepts/key-concepts", "getting-started/installation", "getting-started/quickstart", "guides/benchmarking-beluga", "guides/extending-beluga", "guides/profiling-beluga", "guides/using-beluga-amcl", "index", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage", "packages/beluga/docs/_doxygen/generated/reference/html/PointCloudPage", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/SparsePointCloudPage", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/annotated", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/citelist", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BasePointCloud", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseSparsePointCloud", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModelBase", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModelBase-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldProbModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldProbModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1", "packages/beluga/docs/_doxygen/generated/reference/html/classes", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000009", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000003", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000012", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000010", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/files", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga/docs/_doxygen/generated/reference/html/index", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/inherits", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model__base_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model__base_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__prob__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__prob__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/overlay_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/overlay_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/pages", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/point__cloud_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/point__cloud_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_2primitives_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelBaseParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelBaseParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1default__weighted__mean__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1default__weighted__mean__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__likelihood__field", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__likelihood__field_3_01T_00_01std_1_1void__t_3_01decltype_07std_1_1declval_30323e42ac79026fd6376eb5a7a94648b", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/unscented__transform_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source", "packages/beluga/docs/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode3D", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode3D-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files_files", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/globals", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/globals_defs", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/globals_file_members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/message__filters_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/message__filters_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node__3d_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node__3d_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source", "packages/beluga_amcl/docs/index", "packages/beluga_amcl/docs/ros2-reference", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1PointCloud3", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1PointCloud3-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1SparsePointCloud3", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1SparsePointCloud3-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/likelihood__field_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/likelihood__field_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_type", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2", "packages/beluga_ros/docs/_doxygen/generated/reference/html/ndt__ellipsoid_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/ndt__ellipsoid_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/point__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/point__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source", "packages/beluga_ros/docs/index", "resources/bibliography", "roadmap/features", "roadmap/releases", "tutorials/nav2-integration", "tutorials/particle-filtering"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["about/contact.md", "about/rationale.md", "concepts/architecture.md", "concepts/design-principles.md", "concepts/key-concepts.md", "getting-started/installation.md", "getting-started/quickstart.md", "guides/benchmarking-beluga.md", "guides/extending-beluga.md", "guides/profiling-beluga.md", "guides/using-beluga-amcl.md", "index.md", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/PointCloudPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/SparsePointCloudPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BasePointCloud.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseSparsePointCloud.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModelBase.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModelBase-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldProbModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldProbModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000009.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000003.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000012.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000010.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z.rst", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model__base_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model__base_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__prob__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__prob__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/overlay_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/overlay_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/point__cloud_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/point__cloud_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_2primitives_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelBaseParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelBaseParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1default__weighted__mean__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1default__weighted__mean__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__likelihood__field.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__likelihood__field_3_01T_00_01std_1_1void__t_3_01decltype_07std_1_1declval_30323e42ac79026fd6376eb5a7a94648b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/unscented__transform_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source.rst", "packages/beluga/docs/index.md", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode3D.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode3D-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files_files.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/globals.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/globals_defs.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/globals_file_members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/message__filters_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/message__filters_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node__3d_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node__3d_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source.rst", "packages/beluga_amcl/docs/index.md", "packages/beluga_amcl/docs/ros2-reference.md", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1PointCloud3.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1PointCloud3-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1SparsePointCloud3.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1SparsePointCloud3-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/likelihood__field_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/likelihood__field_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_type.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/ndt__ellipsoid_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/ndt__ellipsoid_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/point__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/point__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/sparse__point__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE3_3_01Scalar_01_4_01_4-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source.rst", "packages/beluga_ros/docs/index.md", "resources/bibliography.md", "roadmap/features.md", "roadmap/releases.md", "tutorials/nav2-integration.md", "tutorials/particle-filtering.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 4, 5, 8, 10, 16, 22, 29, 30, 39, 40, 44, 63, 65, 67, 69, 71, 77, 100, 102, 108, 110, 112, 115, 116, 128, 129, 130, 160, 184, 188, 193, 196, 199, 211, 220, 235, 237, 240, 243, 244, 245, 252, 254, 273, 274, 278, 280, 282, 283, 289, 316, 320, 326, 333, 335, 358, 386, 430, 450, 459, 467, 468, 471, 475, 478, 497, 499, 504, 506, 517, 524, 535, 540, 542, 545, 547, 562, 569, 586, 588, 591, 592], "0": [8, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 63, 69, 115, 124, 126, 129, 130, 132, 134, 136, 180, 181, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 340, 342, 344, 348, 352, 356, 358, 359, 360, 362, 364, 366, 368, 370, 372, 374, 376, 414, 430, 431, 436, 446, 450, 459, 460, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 525, 550, 552, 553, 564, 566, 569, 570, 571, 573, 574, 576, 584, 586, 592], "0003": 11, "001": [28, 340, 519, 574], "01": [44, 136, 289, 348, 362, 524, 588], "0103": 586, "01958": 273, "02": 337, "04": 10, "05": [28, 34, 340, 342, 517, 519, 569, 574], "08": 592, "09023224677087": 273, "0f": [552, 569], "0l": 283, "0u": [43, 459], "0ull": 461, "0x00": [42, 43, 273], "0x01": [42, 43, 273], "0x02": [42, 43, 273], "0x04": [42, 43, 273], "0x9e3779bu": 569, "11": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "110": [28, 34, 36, 40, 43, 130, 134, 136, 188, 247, 252, 254, 260, 268, 270, 272, 283, 285, 289, 295, 298, 305, 307, 310, 314, 316, 318, 320, 322, 335, 459, 466, 468, 471, 480, 513, 519, 564, 569, 571, 573, 586], "1109": 588, "111": [28, 34, 36, 40, 134, 136, 188, 247, 252, 254, 260, 264, 268, 270, 272, 283, 285, 289, 293, 295, 298, 305, 307, 310, 316, 322, 459, 461, 466, 468, 471, 511, 513, 515, 519, 564, 569, 571, 573], "112": [28, 34, 36, 40, 43, 130, 134, 136, 188, 254, 260, 264, 268, 270, 272, 283, 285, 287, 289, 295, 305, 310, 314, 316, 322, 459, 461, 466, 468, 471, 480, 511, 519, 569, 571, 573, 586], "113": [28, 34, 36, 40, 130, 136, 188, 247, 254, 260, 264, 268, 270, 272, 283, 285, 287, 289, 295, 298, 307, 310, 314, 316, 322, 459, 461, 466, 468, 471, 480, 513, 515, 569, 571, 573], "114": [28, 34, 36, 130, 134, 136, 188, 247, 254, 260, 264, 268, 270, 272, 283, 285, 289, 293, 295, 305, 307, 310, 316, 322, 335, 459, 461, 466, 468, 471, 480, 511, 513, 515, 519, 569, 571, 573], "11400714819323198485llu": 335, "115": [28, 34, 36, 40, 130, 136, 188, 247, 254, 258, 260, 262, 264, 270, 272, 283, 285, 287, 289, 293, 295, 307, 314, 316, 320, 322, 335, 459, 461, 466, 468, 471, 480, 511, 515, 519, 569, 571, 573], "116": [28, 34, 36, 40, 130, 136, 188, 247, 254, 260, 264, 268, 270, 283, 285, 289, 293, 307, 310, 314, 316, 320, 322, 459, 461, 466, 468, 471, 480, 513, 519, 569, 571, 573], "117": [28, 34, 36, 40, 130, 136, 188, 247, 252, 254, 258, 260, 262, 264, 268, 270, 272, 283, 285, 289, 293, 295, 307, 310, 314, 316, 320, 322, 335, 459, 461, 466, 468, 471, 511, 513, 515, 519, 569, 571, 573], "118": [28, 34, 36, 40, 130, 134, 136, 188, 247, 252, 254, 264, 270, 272, 283, 285, 289, 293, 295, 305, 307, 310, 314, 316, 320, 322, 459, 461, 466, 468, 471, 480, 511, 515, 519, 569, 571, 573, 586], "119": [28, 34, 36, 40, 130, 134, 136, 188, 247, 252, 254, 264, 268, 270, 272, 285, 289, 293, 295, 298, 305, 307, 310, 314, 316, 320, 322, 459, 461, 466, 468, 471, 480, 513, 569, 571, 573, 586], "12": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 481, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "120": [28, 34, 36, 40, 136, 188, 247, 252, 254, 264, 268, 270, 283, 285, 287, 289, 298, 305, 307, 310, 314, 322, 459, 461, 466, 468, 471, 480, 511, 513, 515, 519, 569, 571, 573, 586], "121": [28, 34, 36, 130, 134, 136, 188, 247, 252, 254, 260, 264, 270, 272, 283, 285, 287, 289, 293, 298, 305, 307, 310, 314, 335, 459, 461, 466, 468, 471, 480, 511, 519, 569, 571, 573, 586], "122": [28, 34, 36, 40, 43, 130, 136, 188, 247, 252, 254, 264, 268, 270, 283, 285, 289, 293, 295, 298, 305, 307, 310, 322, 335, 459, 461, 468, 471, 480, 513, 515, 569, 571, 573, 586], "123": [28, 34, 36, 40, 43, 130, 136, 188, 252, 254, 264, 268, 270, 283, 285, 287, 289, 293, 298, 305, 307, 310, 314, 335, 459, 461, 466, 468, 471, 495, 505, 511, 513, 519, 520, 539, 560, 569, 571, 573, 586], "12345": [29, 193, 244, 280, 546], "124": [28, 31, 33, 34, 35, 36, 39, 40, 42, 43, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 129, 133, 135, 136, 179, 181, 184, 187, 188, 189, 191, 246, 247, 249, 251, 252, 253, 254, 255, 257, 259, 261, 263, 264, 267, 269, 270, 271, 273, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 297, 298, 299, 301, 305, 306, 307, 309, 313, 315, 317, 319, 321, 322, 326, 330, 332, 334, 335, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 379, 383, 384, 386, 388, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 421, 423, 425, 427, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 455, 458, 459, 460, 461, 465, 466, 467, 468, 471, 472, 476, 480, 483, 485, 487, 489, 508, 510, 511, 512, 515, 518, 525, 527, 529, 531, 533, 549, 551, 555, 563, 565, 568, 570, 571, 572, 573, 574, 576, 579, 581, 583, 585, 586], "125": [28, 34, 36, 40, 43, 130, 136, 188, 247, 252, 254, 264, 268, 270, 283, 285, 289, 293, 305, 314, 322, 335, 459, 461, 466, 468, 471, 513, 569, 571, 573, 586], "126": [34, 36, 40, 43, 134, 136, 188, 247, 252, 254, 260, 264, 268, 270, 272, 283, 285, 289, 293, 295, 305, 307, 310, 314, 335, 459, 461, 466, 468, 471, 511, 515, 571, 573, 586], "127": [28, 34, 36, 40, 43, 134, 136, 188, 247, 252, 254, 260, 264, 270, 272, 283, 285, 289, 293, 295, 322, 335, 459, 461, 466, 468, 471, 511, 571, 573, 586], "128": [28, 34, 36, 40, 43, 134, 136, 188, 247, 252, 254, 260, 264, 268, 272, 283, 285, 289, 293, 295, 305, 314, 322, 335, 459, 461, 466, 468, 471, 515, 571, 573, 586], "129": [34, 36, 40, 43, 134, 136, 188, 247, 252, 254, 260, 264, 268, 270, 283, 285, 287, 289, 293, 295, 305, 307, 322, 459, 461, 466, 468, 471, 511, 571, 573, 586], "13": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "130": [28, 34, 36, 40, 43, 136, 188, 252, 254, 260, 264, 272, 283, 285, 287, 289, 293, 305, 307, 322, 335, 459, 461, 466, 468, 471, 511, 515, 519, 571, 573, 586], "131": [28, 34, 36, 40, 43, 134, 136, 188, 247, 252, 254, 264, 268, 283, 285, 287, 289, 293, 305, 307, 310, 322, 335, 459, 461, 468, 471, 519, 569, 571, 573, 586], "132": [28, 34, 36, 40, 43, 136, 188, 247, 252, 254, 260, 264, 268, 285, 287, 289, 293, 305, 307, 310, 322, 335, 459, 461, 466, 468, 471, 480, 511, 515, 519, 569, 571, 573], "133": [28, 34, 36, 40, 43, 136, 188, 247, 252, 254, 260, 264, 283, 285, 289, 293, 305, 307, 310, 322, 459, 461, 466, 468, 471, 480, 511, 513, 519, 569, 571, 573, 586], "134": [28, 34, 36, 40, 43, 136, 188, 247, 252, 254, 260, 268, 272, 283, 285, 287, 289, 293, 307, 310, 322, 335, 459, 461, 466, 468, 471, 513, 515, 519, 569, 571, 573], "135": [28, 34, 36, 40, 43, 134, 136, 188, 247, 252, 254, 260, 268, 272, 283, 285, 289, 293, 307, 310, 322, 335, 459, 461, 468, 471, 480, 511, 519, 569, 571, 573], "136": [28, 34, 36, 40, 43, 134, 136, 188, 247, 252, 254, 260, 268, 270, 272, 283, 289, 293, 307, 322, 459, 461, 466, 468, 471, 511, 513, 515, 519, 569, 571], "137": [28, 34, 36, 40, 43, 136, 188, 247, 252, 254, 260, 268, 270, 272, 283, 285, 289, 293, 307, 322, 335, 459, 461, 466, 468, 471, 513, 569, 571, 573], "138": [28, 34, 36, 40, 43, 130, 134, 136, 188, 252, 254, 260, 268, 270, 272, 283, 285, 289, 293, 307, 459, 461, 466, 468, 471, 511, 515, 519, 569, 571, 573], "139": [34, 36, 40, 43, 130, 136, 188, 247, 252, 254, 260, 268, 270, 283, 285, 287, 289, 307, 314, 322, 459, 466, 468, 471, 511, 513, 519, 569, 586], "14": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "140": [28, 34, 36, 40, 43, 130, 136, 188, 252, 254, 260, 268, 270, 272, 283, 287, 289, 293, 307, 314, 459, 461, 466, 468, 471, 515, 569, 571, 573, 586], "141": [34, 36, 40, 43, 130, 136, 188, 252, 254, 260, 268, 270, 283, 287, 289, 293, 314, 335, 459, 466, 468, 471, 511, 513, 519, 569, 571, 573, 586], "142": [34, 36, 40, 43, 130, 136, 188, 247, 252, 254, 260, 268, 283, 285, 287, 289, 307, 314, 335, 459, 466, 468, 471, 480, 513, 515, 519, 569, 573, 586], "143": [34, 40, 43, 130, 134, 136, 188, 247, 252, 254, 260, 270, 283, 289, 293, 314, 459, 471, 480, 515, 519, 569, 571, 573, 586], "144": [28, 34, 36, 40, 43, 130, 134, 136, 188, 252, 254, 260, 268, 270, 283, 287, 289, 314, 335, 459, 466, 468, 471, 513, 515, 519, 569, 571, 573, 586], "145": [28, 34, 36, 40, 43, 130, 134, 136, 188, 247, 252, 254, 260, 268, 289, 307, 314, 459, 466, 468, 471, 480, 513, 515, 519, 569, 571, 586], "146": [28, 34, 36, 40, 43, 130, 134, 136, 188, 252, 254, 260, 270, 283, 289, 293, 307, 314, 322, 459, 466, 468, 471, 480, 519, 569, 571, 586], "147": [28, 34, 36, 40, 43, 130, 134, 136, 188, 252, 254, 260, 268, 270, 283, 289, 293, 307, 314, 322, 459, 468, 471, 513, 519, 569, 571, 586], "148": [28, 34, 36, 40, 43, 130, 134, 136, 188, 247, 252, 254, 260, 268, 283, 289, 293, 307, 314, 322, 335, 459, 461, 466, 468, 471, 480, 519, 569, 586], "149": [34, 36, 40, 43, 130, 134, 136, 188, 247, 252, 254, 260, 270, 272, 285, 287, 289, 293, 307, 314, 322, 335, 459, 461, 466, 480, 511, 513, 519, 569, 586], "14th": [44, 524, 588], "15": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "150": [28, 34, 36, 40, 43, 130, 134, 136, 188, 252, 254, 260, 268, 270, 272, 283, 285, 287, 289, 293, 307, 314, 322, 335, 459, 461, 466, 468, 511, 519, 569, 586], "151": [28, 40, 43, 130, 134, 136, 188, 247, 252, 254, 260, 268, 272, 285, 287, 289, 293, 307, 314, 322, 335, 459, 461, 480, 513, 519, 569, 586], "152": [34, 36, 40, 43, 130, 134, 136, 188, 252, 254, 260, 270, 272, 283, 285, 287, 289, 293, 307, 314, 322, 335, 459, 461, 466, 480, 511, 519], "153": [28, 34, 36, 40, 130, 134, 136, 188, 252, 254, 258, 260, 268, 270, 272, 285, 287, 289, 307, 314, 322, 335, 459, 461, 466, 511, 513, 519, 569, 586], "154": [36, 40, 43, 130, 134, 136, 188, 247, 252, 254, 260, 268, 272, 283, 287, 289, 293, 307, 314, 322, 335, 459, 461, 466, 480, 513, 519], "155": [34, 40, 130, 134, 136, 188, 247, 252, 254, 260, 270, 272, 287, 289, 307, 314, 322, 335, 459, 461, 480, 511, 519], "156": [34, 36, 40, 130, 134, 136, 188, 252, 254, 260, 268, 270, 272, 283, 287, 289, 307, 314, 322, 459, 461, 466, 468, 513, 519], "157": [34, 36, 40, 130, 134, 136, 188, 247, 252, 254, 260, 268, 272, 283, 289, 307, 314, 322, 459, 461, 466, 468, 480, 511, 513, 519], "158": [34, 36, 40, 130, 134, 136, 188, 252, 260, 270, 272, 283, 287, 289, 307, 314, 322, 459, 461, 466, 468, 511, 513, 519], "159": [34, 36, 40, 130, 134, 136, 188, 252, 254, 260, 268, 270, 272, 283, 289, 307, 322, 335, 459, 461, 466, 468, 480, 513, 519, 586], "16": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "160": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "161": [34, 36, 40, 130, 134, 136, 188, 247, 252, 254, 260, 268, 270, 272, 283, 289, 293, 307, 314, 335, 459, 466, 468, 513, 519, 569, 586], "162": [34, 43, 136, 188, 247, 252, 254, 260, 268, 272, 283, 293, 314, 322, 459, 466, 480, 511, 519, 569, 586], "163": [34, 36, 40, 43, 130, 136, 188, 247, 252, 254, 258, 260, 262, 268, 283, 287, 289, 293, 298, 300, 307, 310, 314, 322, 335, 337, 459, 461, 519, 569, 586], "1637": 130, "164": [34, 40, 43, 136, 188, 252, 254, 260, 268, 270, 272, 283, 287, 293, 307, 314, 322, 459, 466, 480, 511, 519, 569, 586], "165": [28, 43, 134, 136, 188, 247, 252, 254, 260, 270, 272, 287, 293, 307, 322, 459, 466, 480, 519, 569, 586], "166": [28, 40, 43, 134, 136, 188, 252, 260, 268, 272, 283, 287, 307, 314, 322, 459, 466, 511, 519, 586], "167": [28, 40, 43, 134, 136, 188, 252, 254, 260, 268, 270, 272, 287, 322, 459, 480, 511, 519, 569, 586], "168": [28, 43, 134, 136, 188, 247, 252, 254, 260, 268, 272, 287, 307, 322, 335, 459, 466, 468, 480, 511, 519], "169": [28, 40, 43, 134, 136, 188, 247, 252, 254, 260, 268, 272, 307, 335, 466, 468, 511, 519, 586], "17": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 478, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 587, 592], "170": [28, 40, 43, 134, 136, 188, 247, 252, 260, 268, 272, 287, 307, 322, 335, 459, 461, 466, 468, 480, 511, 519], "171": [28, 40, 43, 134, 136, 188, 247, 254, 260, 268, 283, 287, 307, 335, 459, 461, 466, 468, 480, 511, 519], "172": [28, 40, 43, 134, 136, 188, 254, 268, 270, 283, 287, 307, 322, 335, 459, 461, 466, 519], "173": [28, 40, 136, 188, 247, 254, 268, 270, 283, 287, 307, 322, 335, 461, 466, 468, 480, 519], "174": [28, 40, 43, 130, 136, 188, 254, 268, 287, 307, 322, 461, 519, 569], "175": [28, 130, 136, 188, 254, 268, 270, 283, 287, 307, 314, 322, 335, 459, 461, 466, 480, 519, 569, 586], "176": [28, 40, 43, 130, 188, 247, 254, 268, 283, 287, 307, 314, 322, 461, 466, 468, 519, 569, 586], "177": [28, 40, 130, 136, 188, 247, 268, 283, 287, 307, 314, 322, 466, 468, 480, 519, 569, 586], "178": [28, 43, 130, 136, 188, 283, 307, 314, 322, 468, 519, 569, 586], "179": [28, 40, 43, 130, 188, 247, 283, 287, 307, 314, 335, 466, 468, 480, 519, 569, 586], "18": [12, 25, 28, 32, 34, 36, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 314, 316, 318, 320, 322, 323, 331, 333, 335, 337, 339, 459, 461, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "180": [28, 40, 130, 136, 188, 287, 307, 314, 322, 335, 466, 480, 519, 569, 574, 586], "181": [28, 43, 130, 136, 188, 270, 283, 287, 307, 314, 322, 335, 468, 480, 519, 569, 586], "182": [28, 40, 130, 136, 188, 247, 270, 283, 287, 307, 314, 322, 459, 466, 468, 480, 519, 569, 586], "183": [28, 40, 43, 130, 136, 188, 247, 270, 283, 287, 307, 314, 322, 335, 459, 466, 468, 480, 519, 569, 586], "184": [28, 40, 130, 136, 188, 283, 287, 307, 314, 322, 335, 459, 466, 468, 480, 519, 569, 586], "185": [28, 40, 43, 130, 188, 247, 270, 287, 307, 314, 322, 459, 519, 569, 586], "186": [28, 40, 43, 130, 188, 283, 307, 314, 322, 335, 459, 466, 468, 519, 569, 586], "187": [28, 40, 130, 188, 287, 298, 307, 322, 466, 468, 519, 569, 586], "188": [28, 40, 43, 130, 188, 247, 283, 287, 307, 322, 466, 519, 569, 586], "189": [28, 40, 130, 188, 247, 270, 287, 307, 322, 466, 468, 519, 569, 586], "19": [12, 25, 28, 32, 34, 36, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 314, 316, 318, 320, 322, 323, 331, 333, 335, 337, 339, 459, 461, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "190": [28, 40, 43, 130, 188, 247, 270, 283, 287, 307, 314, 322, 335, 466, 468, 569], "191": [28, 40, 188, 247, 270, 287, 307, 314, 322, 335, 466, 519, 569, 586], "192": [28, 40, 43, 130, 188, 270, 283, 287, 307, 314, 322, 335, 468, 519, 569], "193": [28, 40, 43, 188, 247, 283, 287, 307, 314, 322, 335, 468, 519, 569], "194": [28, 40, 188, 247, 270, 287, 307, 314, 322, 335, 519, 569], "195": [28, 40, 43, 188, 247, 283, 287, 307, 335, 468, 519, 569], "196": [28, 40, 188, 247, 287, 322, 335, 468, 519, 569], "197": [28, 40, 43, 188, 247, 287, 307, 322, 335, 468, 519, 569, 586], "198": [28, 40, 188, 247, 270, 322, 335, 468, 519, 569, 586], "199": [28, 40, 43, 188, 247, 270, 307, 322, 468, 519, 569, 586], "1990": 1, "1_55_0": 384, "1d": 592, "1e": [283, 569], "1u": 459, "1ul": [28, 340, 519, 574], "2": [4, 5, 6, 8, 10, 11, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 44, 47, 53, 59, 69, 71, 77, 87, 89, 92, 98, 106, 120, 122, 130, 132, 134, 136, 175, 180, 182, 183, 185, 186, 188, 190, 192, 193, 194, 244, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 271, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 317, 318, 320, 322, 323, 325, 327, 328, 329, 331, 332, 333, 335, 337, 339, 340, 342, 348, 356, 360, 366, 430, 436, 446, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 478, 479, 480, 481, 483, 487, 489, 494, 495, 505, 506, 509, 510, 511, 512, 513, 515, 516, 519, 520, 523, 524, 525, 546, 547, 550, 552, 553, 555, 560, 562, 564, 566, 568, 569, 571, 573, 574, 579, 583, 584, 586, 587, 591], "20": [10, 12, 25, 28, 32, 34, 36, 40, 41, 43, 130, 132, 134, 136, 160, 180, 182, 183, 184, 185, 186, 188, 193, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 314, 316, 318, 320, 322, 323, 331, 333, 335, 337, 339, 364, 459, 461, 464, 466, 468, 470, 471, 473, 475, 477, 478, 480, 509, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "200": [28, 40, 43, 188, 247, 270, 322, 468, 569, 586, 592], "2000": [11, 517], "2000ul": [28, 340, 519, 574], "2001": [44, 524, 588], "2005": [44, 524, 588], "2006": 588, "2007": [44, 524, 588], "20070017872": 188, "201": [28, 40, 188, 247, 270, 283, 322, 468, 519, 569, 586], "2015": 44, "2019": 41, "202": [28, 40, 43, 188, 247, 283, 307, 322, 468, 569, 586], "2020": 188, "2022": [27, 38, 136, 180, 185, 188, 192, 258, 260, 262, 266, 298, 325, 335, 337, 468, 470, 475, 480, 511, 513, 566, 586], "2023": [34, 36, 40, 130, 134, 136, 180, 185, 192, 194, 250, 252, 254, 256, 258, 260, 262, 264, 266, 270, 287, 289, 300, 307, 312, 316, 318, 325, 327, 335, 337, 339, 459, 461, 466, 470, 473, 550, 553, 566, 586], "2024": [12, 25, 27, 28, 32, 38, 43, 130, 132, 182, 183, 186, 188, 190, 194, 247, 268, 270, 272, 282, 283, 285, 291, 293, 295, 298, 302, 304, 305, 307, 308, 310, 314, 320, 322, 327, 329, 331, 333, 461, 463, 464, 466, 468, 471, 475, 477, 480, 511, 513, 515, 519, 523, 552, 569, 571, 573, 584], "2025": [323, 509, 564], "203": [40, 130, 188, 270, 283, 322, 335, 468, 569, 586], "204": [28, 40, 130, 188, 283, 307, 322, 335, 468, 519, 569, 586], "205": [28, 40, 130, 188, 283, 307, 322, 335, 468, 519, 569, 586], "206": [28, 130, 188, 307, 322, 468, 519, 569], "207": [40, 130, 188, 270, 283, 307, 322, 335, 468, 519, 569, 586], "208": [28, 40, 43, 130, 188, 270, 307, 322, 468, 569], "209": [28, 43, 130, 188, 270, 307, 322, 468, 519, 569], "21": [12, 25, 28, 32, 34, 36, 40, 41, 43, 130, 134, 136, 180, 182, 183, 185, 186, 188, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 302, 304, 305, 307, 308, 310, 314, 316, 318, 320, 322, 323, 331, 333, 335, 337, 339, 459, 461, 464, 466, 468, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "210": [28, 40, 43, 130, 270, 307, 468, 519, 569], "2104": 273, "211": [28, 43, 130, 188, 270, 307, 322, 468, 569], "212": [28, 43, 130, 188, 270, 283, 307, 322, 468, 519, 569], "213": [28, 43, 130, 188, 270, 283, 307, 322, 468, 519, 569, 586], "214": [28, 43, 130, 283, 307, 322, 569, 586], "215": [28, 40, 43, 130, 188, 270, 283, 307, 322, 335, 468, 519, 569, 586], "216": [28, 40, 43, 130, 183, 270, 283, 322, 335, 468, 569, 586], "217": [28, 40, 43, 130, 283, 307, 322, 335, 468, 569, 586], "218": [28, 43, 130, 283, 307, 322, 335, 569, 586], "219": [28, 40, 43, 130, 270, 283, 307, 322, 335, 468, 569, 586], "22": [10, 12, 25, 28, 32, 34, 36, 40, 41, 43, 130, 134, 136, 180, 182, 188, 250, 252, 254, 256, 258, 260, 262, 264, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 302, 304, 307, 308, 310, 314, 316, 318, 320, 322, 323, 331, 333, 335, 337, 459, 461, 464, 468, 471, 473, 475, 480, 509, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "220": [28, 40, 43, 130, 270, 283, 307, 335, 569, 586], "221": [28, 43, 130, 270, 307, 335, 569, 586], "222": [28, 40, 43, 130, 270, 307, 322, 335, 468, 569, 586], "223": [28, 40, 43, 130, 188, 270, 283, 307, 335, 468, 471, 569, 586], "224": [28, 40, 130, 188, 270, 283, 307, 335, 569, 586], "225": [28, 40, 43, 130, 188, 270, 283, 307, 335, 468, 569, 586], "226": [28, 40, 130, 188, 283, 307, 468, 569, 586], "227": [28, 40, 130, 270, 283, 307, 335, 468, 519, 569, 586], "228": [28, 40, 130, 188, 270, 283, 307, 519, 569], "229": [28, 40, 130, 188, 283, 468, 519, 569, 586], "23": [27, 28, 34, 36, 40, 41, 43, 44, 130, 134, 136, 180, 183, 186, 188, 192, 250, 252, 254, 256, 258, 260, 262, 264, 272, 273, 282, 283, 285, 287, 289, 295, 302, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 329, 331, 333, 335, 337, 378, 459, 461, 463, 464, 468, 471, 473, 475, 480, 511, 513, 515, 519, 524, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 588], "230": [28, 40, 130, 188, 270, 283, 307, 468, 569], "231": [28, 40, 43, 130, 188, 270, 283, 468, 519, 569], "232": [28, 43, 130, 188, 283, 468, 569], "233": [28, 40, 43, 130, 188, 270, 283, 307, 335, 468, 569], "234": [28, 40, 43, 130, 188, 283, 307, 335, 468, 569, 586], "235": [28, 43, 130, 188, 283, 307, 335, 569, 586], "236": [28, 40, 43, 130, 188, 283, 307, 335, 569, 586], "237": [28, 40, 43, 130, 188, 283, 307, 335, 569, 586], "238": [43, 130, 188, 270, 283, 307, 335, 569, 586], "239": [40, 43, 130, 188, 270, 283, 307, 335, 569, 586], "24": [12, 27, 28, 34, 36, 40, 41, 43, 130, 134, 136, 180, 183, 186, 188, 192, 250, 252, 254, 256, 260, 264, 272, 282, 283, 285, 287, 289, 305, 307, 310, 312, 314, 316, 318, 320, 322, 323, 329, 335, 337, 461, 463, 464, 468, 471, 475, 480, 511, 513, 515, 519, 550, 564, 566, 569, 571, 573, 584, 586], "240": [40, 43, 130, 188, 283, 307, 322, 335, 569, 586], "241": [43, 130, 188, 270, 283, 307, 322, 335, 569, 586], "242": [40, 43, 130, 188, 307, 322, 569, 586], "243": [40, 43, 130, 188, 307, 322, 335, 519, 569, 586], "244": [43, 130, 188, 307, 322, 519, 569, 586], "245": [40, 43, 130, 188, 519, 569, 586], "246": [40, 43, 130, 188, 307, 569, 586], "247": [130, 188, 270, 307, 335, 519, 569, 586], "248": [40, 43, 130, 188, 270, 307, 335, 569, 586], "249": [40, 130, 188, 270, 307, 335, 569], "25": [12, 27, 28, 34, 36, 40, 41, 43, 130, 134, 136, 183, 186, 188, 190, 252, 254, 256, 260, 264, 272, 282, 283, 285, 287, 289, 305, 308, 310, 312, 314, 316, 318, 320, 322, 323, 329, 335, 337, 339, 340, 461, 463, 464, 468, 471, 475, 480, 511, 513, 515, 517, 519, 550, 553, 564, 566, 569, 571, 573, 574, 586, 592], "250": [188, 270, 307, 335, 569, 586], "251": [40, 130, 188, 270, 307, 335, 569], "252": [130, 188, 283, 307, 335, 569], "253": [43, 130, 188, 270, 283, 307, 335, 569], "254": [43, 130, 188, 283, 307, 569], "255": [43, 188, 283, 307, 335, 569, 586], "256": [43, 130, 188, 283, 307, 335, 569, 586], "257": [40, 43, 188, 283, 307, 569, 586], "258": [40, 188, 283, 307, 335, 569, 586], "259": [40, 43, 188, 283, 307, 519, 569, 586], "26": [12, 27, 28, 34, 36, 41, 43, 130, 132, 136, 183, 186, 188, 190, 192, 252, 254, 256, 260, 272, 282, 283, 285, 287, 289, 300, 305, 310, 314, 316, 318, 320, 322, 323, 327, 329, 335, 339, 463, 464, 468, 470, 471, 480, 511, 513, 515, 519, 550, 564, 566, 569, 571, 573, 586], "260": [40, 188, 270, 283, 307, 519, 569, 586], "261": [40, 188, 270, 283, 307, 519, 569, 586], "262": [40, 188, 270, 283, 307, 335, 569, 586], "263": [40, 188, 270, 283, 335, 519, 569, 586], "264": [40, 43, 130, 182, 188, 270, 283, 298, 300, 307, 335, 471, 519, 569, 586], "265": [40, 43, 130, 188, 283, 307, 335, 519, 569, 586], "2654435769u": 335, "266": [40, 43, 130, 188, 270, 283, 307, 335, 519, 569, 586], "267": [40, 43, 130, 188, 283, 307, 335, 519, 569, 586], "268": [40, 43, 188, 283, 307, 335, 519, 569, 586], "269": [130, 188, 283, 335, 519, 569], "27": [12, 27, 28, 34, 36, 41, 130, 136, 183, 185, 186, 188, 190, 192, 247, 252, 254, 256, 260, 282, 283, 285, 287, 289, 298, 300, 305, 310, 316, 320, 323, 327, 329, 335, 464, 466, 468, 471, 477, 480, 511, 513, 515, 519, 550, 564, 566, 569, 571, 573, 586], "270": [43, 130, 188, 283, 335, 519, 569], "271": [188, 283, 335, 519, 569], "272": [130, 188, 283, 335, 519, 569, 586], "273": [43, 130, 188, 270, 283, 335, 519, 569, 586], "274": [43, 188, 270, 283, 335, 519, 569, 586], "275": [43, 130, 188, 270, 283, 335, 519, 569, 586], "276": [43, 188, 270, 283, 335, 519, 569, 586], "277": [43, 188, 283, 335, 519, 569, 586], "278": [43, 44, 188, 270, 283, 335, 519, 569, 586], "279": [43, 130, 188, 283, 519, 569, 586], "28": [25, 27, 28, 32, 34, 36, 38, 130, 136, 182, 183, 185, 188, 190, 247, 252, 254, 260, 268, 270, 282, 283, 285, 287, 291, 293, 295, 298, 304, 310, 316, 323, 327, 329, 339, 466, 471, 477, 480, 511, 513, 515, 519, 523, 564, 566, 569, 571, 573, 586], "280": [130, 188, 283, 519, 569, 586], "281": [43, 130, 188, 283, 519, 569, 586], "28155156327703": 273, "282": [130, 188, 283, 519, 569, 586], "283": [130, 188, 283, 519, 569, 586], "284": [43, 130, 188, 283, 519, 569, 586], "285": [43, 188, 270, 283, 519, 569, 586], "286": [43, 130, 188, 270, 283, 519, 569, 586], "287": [43, 188, 270, 283, 569, 586], "288": [43, 44, 188, 270, 283, 569, 586], "289": [43, 188, 270, 283, 569, 586], "29": [12, 27, 28, 32, 34, 36, 38, 41, 130, 136, 182, 183, 188, 192, 252, 254, 258, 262, 268, 270, 282, 283, 287, 291, 293, 295, 305, 308, 316, 323, 327, 329, 333, 459, 466, 471, 473, 477, 480, 509, 511, 513, 515, 519, 523, 552, 566, 569, 571, 573, 586], "290": [43, 188, 270, 283, 569, 586], "291": [43, 188, 270, 283, 569, 586], "292": [188, 283, 586], "293": [43, 130, 188, 270, 283, 569, 586], "294": [130, 188, 270, 283, 586], "295": [130, 188, 270, 283, 586], "296": [43, 130, 188, 270, 283, 586], "297": [43, 130, 188, 270, 283, 586], "298": [43, 130, 188, 270, 283, 569, 586], "2980539": 588, "2980632": 588, "299": [43, 130, 188, 270, 283, 569, 586], "2d": [6, 8, 10, 11, 29, 34, 35, 36, 39, 40, 47, 49, 51, 53, 59, 61, 63, 65, 67, 71, 79, 81, 85, 92, 94, 98, 102, 106, 110, 118, 133, 134, 135, 244, 245, 253, 254, 255, 256, 258, 262, 263, 264, 271, 272, 273, 280, 282, 283, 286, 287, 315, 316, 317, 332, 352, 472, 473, 479, 483, 487, 494, 495, 506, 510, 516, 517, 518, 519, 520, 525, 527, 529, 537, 539, 546, 547, 549, 550, 555, 560, 562, 565, 566], "2u": 461, "3": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 44, 53, 69, 87, 96, 112, 122, 130, 132, 134, 136, 175, 180, 182, 183, 185, 186, 188, 190, 192, 193, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 271, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 317, 318, 320, 322, 323, 325, 327, 328, 329, 331, 332, 333, 335, 337, 339, 340, 356, 366, 405, 407, 459, 460, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 478, 480, 509, 511, 513, 515, 519, 520, 523, 524, 525, 531, 533, 546, 550, 552, 553, 555, 560, 562, 563, 564, 566, 568, 569, 571, 573, 574, 581, 584, 586, 591], "30": [12, 27, 28, 34, 36, 38, 41, 130, 180, 183, 190, 247, 250, 252, 254, 258, 262, 282, 283, 291, 293, 295, 298, 300, 305, 307, 308, 322, 323, 327, 329, 333, 459, 466, 471, 473, 477, 480, 511, 513, 515, 519, 523, 552, 566, 569, 571, 586], "300": [43, 130, 188, 283, 569, 586, 592], "301": [43, 130, 188, 283, 569, 586], "302": [43, 130, 188, 283, 569, 586], "303": [43, 130, 188, 283, 569, 586], "304": [130, 188, 283, 569, 586], "305": [43, 130, 188, 283, 569, 586], "306": [130, 188, 283, 569, 586], "307": [130, 188, 283, 569, 586], "308": [43, 130, 188, 283, 569, 586], "309": [43, 130, 188, 283, 569, 586], "31": [12, 27, 28, 32, 36, 38, 40, 41, 130, 134, 180, 182, 183, 185, 250, 252, 254, 264, 268, 270, 282, 283, 291, 293, 295, 298, 300, 305, 307, 308, 323, 327, 337, 459, 461, 471, 475, 480, 511, 513, 515, 519, 523, 553, 566, 569, 571, 584, 586], "310": [43, 130, 188, 283, 569, 586], "311": [43, 130, 188, 283, 569, 586], "312": [43, 130, 188, 569, 586], "313": [43, 130, 188, 569, 586], "314": [43, 130, 188, 569, 586], "315": [43, 130, 188, 586], "316": [188, 586], "317": [43, 130, 188, 586], "318": [130, 188, 586], "319": [130, 188, 586], "32": [12, 27, 28, 32, 36, 38, 40, 41, 43, 44, 130, 134, 183, 192, 194, 250, 252, 254, 258, 262, 264, 268, 270, 272, 282, 283, 305, 314, 318, 322, 323, 327, 329, 333, 335, 337, 459, 461, 466, 471, 473, 477, 480, 511, 513, 515, 519, 523, 552, 553, 566, 569, 571, 584, 586], "320": [43, 130, 188, 586], "321": [43, 130, 188, 586], "322": [43, 130, 188, 586], "323": [43, 130, 188, 586], "324": [43, 130, 188, 586], "325": [43, 130, 188, 586], "326": [43, 188, 586], "32634787735669": 273, "327": [130, 188, 586], "328": [43, 188, 586], "329": [188, 586], "33": [12, 27, 32, 36, 38, 41, 43, 130, 180, 190, 192, 194, 250, 252, 256, 268, 270, 272, 282, 283, 289, 291, 293, 295, 298, 305, 314, 318, 320, 322, 323, 327, 335, 461, 466, 468, 471, 480, 511, 513, 515, 519, 523, 550, 552, 553, 566, 569, 586], "330": [188, 586], "331": [43, 188], "332": [43, 188, 569, 586], "333": [43, 188, 586], "334": [43, 188], "335": [43, 188, 586], "336": [43, 130, 188, 586], "337": [43, 130, 188, 586], "338": [130, 188, 586], "339": [43, 130, 188, 586], "34": [28, 32, 38, 40, 41, 44, 130, 136, 188, 190, 194, 250, 252, 256, 260, 270, 283, 285, 289, 295, 300, 302, 305, 310, 314, 320, 322, 323, 327, 331, 335, 337, 459, 461, 466, 468, 471, 477, 480, 509, 511, 513, 515, 519, 523, 524, 550, 552, 553, 564, 569, 584, 586, 588], "340": [130, 188], "341": [130, 188, 586], "342": [43, 130, 188, 586], "343": [43, 130, 188, 586], "344": [43, 130, 188, 586], "345": [43, 130, 188, 586], "346": [43, 130, 188], "347": [43, 130, 188, 586], "348": [43, 130, 188, 586], "349": [43, 130, 188, 586], "35": [12, 32, 38, 40, 41, 43, 130, 136, 185, 188, 192, 194, 250, 258, 260, 262, 268, 270, 272, 282, 283, 285, 287, 291, 295, 298, 300, 302, 305, 310, 314, 316, 320, 322, 323, 327, 331, 335, 459, 464, 466, 471, 473, 477, 480, 509, 511, 513, 515, 519, 523, 552, 553, 564, 569, 586], "350": [130, 188, 586], "351": [43, 130, 188, 586], "352": 188, "353": [130, 188, 586], "354": [43, 130, 188, 586], "355": [43, 130, 188, 586], "356": [43, 130, 188, 586], "357": [43, 130, 188, 586], "358": [43, 130, 188], "359": [43, 130, 188, 586], "36": [12, 28, 32, 34, 38, 41, 43, 130, 185, 188, 190, 192, 194, 250, 252, 258, 262, 268, 270, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 305, 310, 316, 320, 327, 335, 459, 461, 466, 468, 471, 473, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 562, 564, 569, 585, 586], "360": [43, 130, 188, 586], "361": [43, 130, 188, 586], "362": [43, 130, 188, 586], "363": [43, 130, 188, 586], "364": [43, 130, 188], "365": [130, 188, 586], "366": [43, 130, 188, 586], "367": [130, 188, 586], "368": [130, 188, 586], "369": [130, 188, 586], "37": [12, 32, 34, 38, 40, 41, 43, 130, 136, 185, 188, 194, 247, 250, 252, 260, 268, 270, 282, 283, 285, 293, 295, 298, 300, 310, 314, 322, 323, 327, 339, 459, 461, 466, 468, 471, 473, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 569, 592], "370": [130, 188, 586], "371": [130, 188, 586], "372": [43, 130, 188, 586], "373": [43, 130, 188], "374": [43, 130, 188], "375": [43, 130, 188], "376": [43, 130, 188], "377": [43, 130, 188], "378": [43, 130, 188], "379": [43, 130, 188], "38": [12, 28, 32, 38, 40, 41, 43, 130, 185, 188, 192, 194, 247, 252, 254, 258, 262, 268, 270, 283, 289, 291, 293, 295, 300, 305, 307, 316, 320, 323, 335, 339, 459, 461, 464, 466, 468, 471, 477, 480, 509, 511, 513, 515, 519, 552, 569, 584], "380": [130, 188], "381": [43, 130, 188], "382": [130, 188], "383": [130, 188], "384": [43, 130], "385": [43, 130, 188], "386": [130, 188], "387": [43, 130, 188], "388": 130, "389": [130, 188], "39": [12, 32, 34, 36, 38, 40, 41, 43, 130, 185, 188, 190, 194, 247, 250, 254, 268, 272, 282, 283, 285, 289, 295, 298, 305, 310, 316, 323, 327, 329, 335, 337, 339, 459, 461, 464, 468, 471, 473, 477, 480, 509, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "390": 130, "391": 130, "392": [43, 130], "393": [43, 130], "394": [43, 130], "395": [43, 130], "396": [43, 130], "397": [43, 130], "398": [43, 130], "399": [43, 130], "3d": [12, 19, 23, 29, 35, 36, 55, 58, 61, 71, 77, 79, 96, 98, 135, 136, 244, 245, 251, 252, 253, 254, 268, 271, 272, 273, 280, 282, 283, 301, 302, 317, 330, 331, 332, 352, 489, 494, 495, 510, 512, 519, 520, 527, 531, 533, 546, 555, 560, 562, 570, 571, 572, 573], "3d_embed": [28, 34, 36, 40, 43, 130, 134, 135, 136, 180, 182, 188, 192, 193, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 268, 270, 272, 282, 283, 287, 289, 298, 302, 305, 307, 316, 318, 323, 331, 333, 335, 337, 339, 461, 464, 466, 468, 471, 473], "3x3": [562, 585, 586], "4": [10, 12, 13, 15, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 44, 47, 51, 53, 71, 83, 87, 118, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 348, 356, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 555, 562, 564, 566, 569, 571, 573, 584, 586], "40": [12, 28, 32, 36, 41, 130, 136, 185, 188, 190, 194, 250, 252, 254, 258, 260, 262, 268, 270, 272, 283, 285, 293, 295, 298, 305, 320, 323, 329, 337, 459, 461, 466, 468, 471, 480, 509, 511, 513, 515, 519, 550, 552, 566, 569, 573, 584], "400": [43, 130], "401": [28, 43, 130, 188, 270, 471], "402": [43, 130, 188], "403": 188, "404": [43, 188], "406": 188, "407": 188, "408": [43, 188], "409": [43, 188], "41": [12, 32, 40, 41, 43, 130, 185, 188, 192, 194, 247, 250, 252, 254, 258, 262, 268, 270, 272, 282, 283, 285, 295, 298, 310, 323, 329, 339, 459, 461, 464, 466, 477, 480, 509, 511, 513, 515, 519, 552, 569, 573, 584, 586], "410": 188, "411": [43, 188], "412": 188, "413": 188, "414": [130, 188], "415": [43, 130, 188], "416": [43, 130, 188], "417": [130, 188], "418": [43, 130, 188], "419": [43, 130, 188], "42": [28, 32, 34, 36, 40, 41, 130, 136, 188, 190, 192, 194, 247, 250, 258, 260, 262, 268, 285, 289, 291, 293, 295, 305, 323, 329, 337, 459, 466, 471, 477, 480, 511, 513, 515, 519, 552, 566, 569, 584], "420": [130, 188], "421": [43, 130, 188], "422": [43, 130, 188], "423": [130, 188], "424": [43, 130, 188], "425": [43, 44, 130, 188], "426": [130, 188], "427": [43, 130, 188], "428": [43, 130, 188], "429": [130, 188], "43": [32, 36, 41, 43, 130, 188, 192, 194, 250, 252, 258, 262, 268, 270, 272, 282, 285, 293, 295, 298, 305, 316, 329, 339, 459, 477, 480, 509, 511, 513, 515, 552, 566, 573, 584], "430": [43, 130, 188], "431": [130, 188], "432": [130, 188], "433": [130, 188], "434": [130, 188], "435": [130, 188], "436": [43, 130, 188], "437": [43, 188], "438": [43, 188], "439": [43, 188], "44": [28, 34, 36, 40, 41, 43, 130, 188, 192, 194, 247, 254, 270, 272, 285, 289, 291, 293, 295, 298, 314, 316, 327, 329, 335, 337, 459, 466, 471, 473, 477, 480, 511, 513, 552, 553, 584, 586], "440": [43, 188], "441": [43, 188], "442": [43, 188], "443": [43, 188], "444": [43, 188], "445": [43, 188], "446": [43, 188], "447": [43, 188], "448": [43, 188], "449": [43, 188], "45": [32, 36, 41, 130, 182, 188, 192, 194, 250, 252, 254, 258, 262, 268, 272, 282, 283, 285, 291, 293, 295, 298, 305, 314, 316, 327, 329, 333, 335, 337, 459, 464, 471, 473, 477, 480, 511, 513, 515, 552, 553, 566, 584, 586], "450": [43, 188], "451": [43, 188], "452": [43, 188], "453": [43, 188], "454": [43, 188], "455": 188, "456": [43, 188], "457": 188, "458": 188, "459": 188, "46": [28, 32, 34, 36, 41, 43, 44, 130, 136, 182, 188, 192, 194, 247, 250, 252, 254, 260, 268, 270, 282, 283, 285, 291, 295, 314, 322, 327, 329, 333, 335, 339, 459, 464, 471, 473, 477, 480, 509, 511, 513, 524, 552, 553, 564, 584, 586, 588], "460": [43, 188], "461": [43, 188], "462": [43, 188], "463": [43, 188], "464": [43, 188], "465": [43, 188], "466": [43, 188], "467": 188, "468": [43, 188], "469": 188, "47": [32, 41, 43, 130, 182, 188, 190, 192, 194, 250, 254, 258, 262, 270, 272, 285, 291, 293, 295, 298, 305, 314, 316, 322, 327, 329, 333, 335, 337, 459, 464, 471, 473, 509, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "470": 188, "471": 188, "472": [43, 188], "473": [43, 188], "474": [43, 188], "475": [43, 188], "476": [43, 188], "477": [43, 188], "478": [43, 188], "479": [43, 188], "48": [28, 34, 36, 41, 43, 130, 136, 182, 188, 190, 192, 194, 247, 250, 254, 258, 260, 262, 268, 283, 285, 289, 291, 295, 298, 302, 305, 314, 322, 327, 329, 331, 335, 339, 459, 464, 466, 471, 473, 477, 509, 511, 513, 519, 552, 553, 564, 566, 569, 571, 584, 586], "480": [43, 188], "481": [43, 188], "482": 188, "483": [43, 188], "484": 188, "485": 188, "486": [43, 188], "487": [43, 188], "488": [43, 188], "489": [43, 188], "49": [32, 41, 43, 182, 188, 190, 192, 194, 250, 258, 262, 268, 270, 282, 283, 285, 291, 295, 298, 305, 307, 314, 327, 329, 333, 335, 459, 464, 466, 468, 471, 509, 511, 515, 552, 553, 564, 569, 586], "490": [43, 188], "491": 188, "492": [43, 188], "493": 188, "494": 188, "495": 43, "496": [43, 188], "497": [43, 188], "498": [43, 188], "499": 43, "4b": 11, "5": [6, 8, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 44, 59, 71, 79, 83, 87, 112, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 342, 348, 352, 356, 364, 414, 436, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 550, 552, 553, 562, 564, 566, 569, 571, 573, 574, 584, 586], "50": [28, 34, 40, 41, 43, 182, 188, 190, 192, 194, 247, 250, 252, 254, 256, 260, 270, 272, 282, 283, 285, 289, 291, 295, 298, 305, 314, 322, 327, 329, 335, 339, 459, 464, 466, 468, 471, 473, 509, 511, 519, 552, 553, 564, 566, 569, 571, 586], "500": [188, 517], "500ul": [28, 340, 519, 574], "501": 43, "504": 43, "505": 43, "506": 43, "507": 43, "508": 43, "509": [28, 130, 188], "51": [32, 40, 41, 43, 182, 188, 190, 192, 194, 247, 250, 252, 258, 262, 268, 272, 282, 283, 285, 293, 295, 298, 305, 310, 314, 316, 320, 322, 329, 333, 335, 339, 459, 468, 471, 473, 477, 509, 511, 515, 550, 552, 553, 569, 586], "510": [43, 188], "511": 188, "512": 188, "513": [43, 188], "514": 43, "515": 43, "516": 43, "517": 43, "519": 43, "52": [28, 32, 34, 40, 41, 136, 182, 188, 190, 192, 194, 250, 252, 260, 268, 270, 272, 282, 283, 285, 291, 293, 295, 298, 310, 314, 316, 320, 327, 329, 335, 339, 459, 464, 466, 471, 477, 480, 509, 511, 519, 550, 552, 553, 564, 566, 573, 586, 592], "522": 43, "523": [40, 43], "524": [43, 130, 364], "525": 43, "526": 43, "527": 43, "528": 43, "529": 43, "53": [32, 41, 43, 182, 188, 190, 192, 247, 258, 262, 282, 283, 285, 291, 293, 295, 298, 305, 310, 314, 316, 320, 322, 329, 333, 335, 339, 459, 466, 468, 473, 477, 480, 509, 511, 515, 519, 550, 552, 553, 569, 573, 586], "530": 43, "532": 43, "533": 43, "534": 43, "536": 43, "537": 43, "538": 43, "539": 43, "54": [28, 32, 34, 40, 41, 43, 130, 136, 180, 182, 188, 190, 247, 258, 260, 262, 268, 272, 282, 283, 285, 291, 295, 298, 305, 310, 320, 335, 337, 339, 459, 466, 468, 471, 473, 477, 509, 511, 513, 550, 552, 553, 566, 573, 586], "540": 43, "541": 43, "542": 43, "543": 43, "55": [28, 32, 40, 41, 43, 130, 180, 182, 188, 190, 260, 264, 268, 282, 283, 285, 289, 291, 293, 295, 298, 302, 305, 310, 314, 316, 320, 329, 331, 333, 335, 337, 339, 459, 471, 477, 480, 509, 511, 513, 515, 519, 550, 552, 566, 586, 592], "5555": 588, "56": [28, 32, 34, 41, 43, 130, 180, 182, 188, 190, 247, 258, 262, 283, 285, 291, 295, 298, 302, 305, 307, 310, 314, 320, 331, 333, 335, 337, 339, 459, 464, 466, 468, 473, 477, 480, 509, 511, 515, 519, 550, 552, 569, 573, 586], "57": [32, 34, 40, 41, 43, 130, 180, 182, 188, 247, 260, 268, 270, 282, 283, 285, 289, 291, 295, 298, 302, 305, 307, 310, 318, 320, 327, 331, 333, 335, 337, 339, 459, 464, 468, 473, 477, 480, 511, 513, 550, 552, 564, 566, 569, 573, 586], "58": [28, 32, 34, 41, 43, 136, 180, 182, 188, 190, 247, 256, 268, 270, 282, 285, 291, 295, 298, 302, 305, 310, 314, 320, 322, 327, 331, 335, 337, 339, 459, 464, 480, 511, 513, 519, 550, 552, 564, 566, 569, 571, 573, 586], "59": [32, 36, 40, 41, 130, 180, 182, 188, 256, 258, 260, 262, 270, 272, 282, 283, 285, 295, 298, 302, 305, 307, 310, 320, 322, 327, 331, 333, 335, 337, 339, 459, 464, 468, 473, 477, 480, 511, 513, 515, 519, 550, 552, 564, 569, 571, 573, 586], "6": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 59, 79, 83, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 342, 348, 352, 356, 399, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 562, 564, 566, 569, 571, 573, 584, 585, 586], "60": [32, 34, 36, 40, 41, 43, 136, 180, 182, 188, 190, 247, 256, 258, 260, 262, 268, 272, 282, 283, 285, 291, 295, 298, 302, 305, 307, 310, 320, 322, 327, 329, 331, 335, 337, 342, 459, 464, 466, 468, 473, 480, 511, 515, 517, 550, 552, 564, 566, 569, 571, 573, 586], "61": [32, 36, 41, 180, 188, 190, 247, 252, 258, 260, 262, 268, 270, 272, 282, 283, 285, 289, 295, 298, 305, 307, 310, 320, 322, 327, 329, 335, 337, 339, 459, 466, 477, 480, 513, 550, 552, 566, 569, 573, 586], "62": [32, 40, 41, 180, 182, 188, 190, 247, 252, 254, 256, 268, 272, 283, 285, 295, 298, 307, 310, 316, 320, 322, 325, 327, 329, 335, 337, 459, 464, 466, 468, 473, 477, 480, 513, 515, 550, 552, 569, 571, 573, 586], "63": [32, 36, 40, 41, 180, 182, 188, 190, 252, 254, 256, 258, 260, 262, 264, 272, 282, 283, 285, 289, 293, 295, 298, 305, 310, 316, 320, 322, 325, 327, 329, 333, 335, 337, 459, 466, 468, 473, 477, 480, 515, 550, 552, 564, 566, 569, 571], "64": [10, 28, 32, 40, 41, 136, 180, 182, 188, 190, 247, 252, 254, 256, 264, 268, 272, 282, 283, 285, 287, 291, 293, 295, 298, 305, 307, 310, 314, 316, 318, 320, 322, 325, 327, 329, 333, 335, 337, 459, 466, 473, 477, 513, 515, 550, 552, 566, 569, 571, 586], "64485362793663": 273, "65": [32, 36, 41, 134, 136, 180, 182, 188, 247, 252, 256, 264, 268, 272, 282, 283, 285, 291, 293, 295, 298, 305, 307, 310, 314, 316, 318, 320, 322, 325, 333, 335, 337, 339, 459, 466, 468, 473, 477, 480, 513, 515, 519, 552, 566, 569, 571, 586, 592], "66": [40, 41, 180, 182, 188, 190, 247, 252, 254, 256, 266, 272, 282, 283, 285, 291, 293, 295, 298, 305, 307, 310, 314, 316, 318, 320, 322, 325, 327, 329, 333, 335, 337, 339, 459, 464, 466, 473, 477, 480, 511, 515, 519, 550, 552, 569, 571], "67": [32, 36, 40, 41, 136, 180, 182, 188, 247, 252, 256, 264, 268, 270, 272, 282, 283, 285, 291, 293, 295, 298, 305, 307, 310, 314, 316, 320, 322, 325, 335, 339, 459, 464, 466, 473, 477, 511, 513, 550, 552, 569, 571, 586], "68": [41, 136, 180, 182, 188, 247, 252, 254, 256, 258, 262, 264, 268, 270, 272, 282, 283, 285, 289, 291, 293, 295, 298, 307, 310, 314, 316, 318, 320, 322, 325, 333, 335, 459, 464, 473, 477, 480, 513, 515, 519, 552, 569, 571, 573], "69": [36, 40, 41, 136, 180, 182, 188, 247, 252, 256, 258, 262, 264, 270, 272, 282, 283, 285, 289, 293, 295, 298, 305, 307, 310, 314, 316, 320, 322, 325, 333, 335, 339, 459, 464, 466, 473, 480, 511, 513, 515, 519, 550, 552, 566, 569, 573], "6x6": [562, 585, 586], "7": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "70": [28, 40, 41, 44, 180, 188, 190, 252, 254, 258, 262, 264, 268, 272, 283, 285, 293, 295, 298, 305, 307, 310, 314, 316, 320, 322, 335, 459, 464, 466, 468, 473, 477, 511, 513, 515, 550, 552, 566, 569, 573], "71": [36, 41, 136, 180, 188, 190, 247, 252, 256, 258, 262, 264, 268, 270, 272, 282, 283, 285, 289, 293, 295, 298, 305, 307, 310, 314, 316, 322, 327, 329, 333, 335, 459, 464, 468, 473, 480, 511, 513, 519, 550, 566, 573], "713": [44, 524, 588], "72": [36, 40, 41, 130, 180, 188, 190, 247, 252, 254, 258, 262, 264, 272, 282, 283, 285, 289, 293, 295, 298, 305, 307, 310, 314, 316, 320, 322, 327, 329, 333, 335, 459, 461, 464, 466, 473, 480, 513, 515, 519, 550, 564, 569, 573], "720": [44, 524, 588], "73": [40, 41, 130, 180, 188, 190, 247, 258, 262, 264, 268, 272, 282, 283, 285, 289, 293, 295, 298, 305, 307, 310, 314, 320, 327, 329, 335, 339, 459, 461, 464, 466, 468, 473, 511, 513, 515, 550, 564, 566, 569, 573], "74": [28, 34, 36, 41, 130, 134, 180, 188, 190, 247, 254, 258, 262, 264, 268, 272, 282, 283, 285, 295, 298, 305, 307, 310, 314, 316, 318, 320, 322, 327, 329, 333, 335, 339, 459, 461, 464, 466, 468, 477, 480, 511, 513, 550, 564, 566, 569, 571, 573, 592], "75": [28, 34, 40, 41, 43, 130, 180, 188, 247, 252, 254, 256, 258, 262, 270, 282, 283, 285, 289, 293, 295, 298, 305, 307, 310, 312, 314, 318, 320, 322, 327, 329, 333, 335, 459, 461, 464, 466, 477, 480, 511, 513, 515, 519, 550, 564, 569, 571, 573, 592], "76": [28, 34, 40, 41, 43, 130, 180, 188, 252, 256, 258, 260, 262, 264, 268, 270, 272, 282, 283, 285, 287, 295, 298, 305, 307, 310, 314, 318, 320, 329, 335, 339, 459, 461, 464, 468, 477, 515, 519, 564, 566, 569, 571, 573, 586], "77": [28, 41, 43, 130, 180, 188, 247, 254, 256, 258, 260, 262, 268, 270, 272, 282, 285, 295, 298, 305, 307, 310, 314, 318, 320, 322, 327, 329, 333, 459, 461, 464, 466, 477, 480, 511, 513, 550, 564, 566, 569, 571, 573, 586], "78": [28, 34, 40, 41, 130, 180, 188, 247, 256, 258, 260, 262, 270, 272, 282, 285, 289, 293, 295, 307, 310, 314, 318, 320, 322, 329, 333, 459, 461, 464, 466, 477, 480, 511, 513, 515, 550, 564, 571, 573, 586], "79": [28, 32, 36, 40, 41, 43, 130, 136, 180, 188, 247, 256, 258, 262, 264, 268, 285, 289, 293, 295, 298, 305, 307, 310, 314, 316, 320, 333, 335, 459, 461, 464, 466, 468, 471, 511, 513, 515, 519, 550, 564, 566, 569, 571, 573, 586], "8": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 112, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "80": [28, 32, 34, 36, 41, 130, 136, 180, 188, 247, 256, 258, 260, 262, 264, 268, 270, 272, 282, 283, 285, 293, 295, 298, 305, 307, 310, 316, 318, 320, 322, 333, 339, 459, 461, 464, 468, 471, 480, 511, 513, 519, 550, 564, 566, 571, 573, 586], "81": [28, 32, 36, 40, 41, 43, 130, 136, 180, 188, 247, 252, 254, 256, 258, 262, 264, 272, 283, 285, 289, 295, 298, 305, 307, 314, 316, 320, 322, 333, 339, 459, 461, 464, 466, 471, 480, 511, 515, 550, 564, 571, 573, 586], "82": [28, 32, 34, 36, 40, 41, 130, 134, 136, 180, 188, 247, 252, 254, 256, 258, 260, 262, 264, 268, 272, 282, 283, 285, 293, 295, 305, 307, 310, 314, 316, 322, 327, 333, 339, 459, 461, 464, 466, 468, 471, 480, 511, 513, 515, 564, 566, 571, 573, 586], "83": [28, 32, 41, 43, 130, 134, 136, 180, 188, 252, 254, 256, 258, 260, 262, 264, 268, 283, 285, 289, 295, 298, 305, 307, 310, 316, 320, 327, 333, 339, 459, 461, 464, 466, 468, 471, 511, 513, 550, 564, 566, 569, 571, 573, 586], "84": [28, 32, 34, 36, 40, 41, 130, 134, 136, 180, 188, 247, 252, 254, 256, 258, 262, 264, 268, 270, 272, 282, 283, 285, 289, 295, 298, 305, 307, 310, 314, 316, 320, 322, 327, 333, 339, 459, 461, 464, 468, 471, 480, 511, 515, 519, 550, 564, 569, 571, 573, 586], "85": [28, 32, 40, 41, 43, 130, 136, 180, 188, 247, 252, 256, 258, 260, 262, 268, 270, 283, 285, 287, 295, 307, 310, 314, 316, 320, 322, 327, 339, 459, 461, 464, 466, 468, 471, 480, 511, 513, 515, 519, 564, 566, 569, 571, 573, 586], "86": [28, 32, 34, 40, 41, 44, 130, 134, 180, 188, 247, 252, 254, 256, 258, 262, 268, 272, 282, 283, 285, 287, 289, 293, 295, 298, 305, 307, 310, 316, 318, 320, 327, 333, 459, 461, 464, 466, 468, 471, 513, 550, 564, 566, 571, 573, 586], "87": [28, 34, 40, 41, 43, 130, 136, 180, 188, 247, 252, 256, 258, 262, 270, 272, 282, 283, 285, 287, 289, 293, 295, 307, 310, 314, 316, 318, 320, 322, 327, 333, 335, 459, 461, 464, 466, 471, 480, 511, 515, 550, 564, 569, 571, 573, 586, 592], "88": [28, 40, 41, 130, 136, 180, 188, 247, 252, 256, 258, 262, 264, 268, 272, 282, 283, 285, 293, 295, 307, 310, 314, 316, 318, 320, 322, 327, 333, 335, 459, 461, 464, 468, 471, 480, 511, 513, 515, 519, 564, 566, 569, 571, 573, 586], "889486": 588, "89": [28, 32, 34, 36, 40, 41, 43, 44, 130, 180, 188, 252, 256, 258, 262, 264, 268, 272, 282, 283, 285, 287, 289, 295, 307, 310, 316, 318, 322, 333, 335, 459, 461, 464, 466, 468, 471, 511, 513, 519, 550, 564, 566, 569, 571, 573], "9": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "90": [28, 36, 40, 41, 130, 134, 136, 180, 188, 247, 252, 256, 258, 262, 264, 272, 282, 283, 285, 287, 293, 295, 307, 310, 314, 320, 322, 327, 333, 335, 364, 459, 461, 464, 466, 471, 480, 511, 513, 515, 550, 564, 569, 571, 573, 586], "900": 273, "91": [28, 36, 40, 41, 43, 130, 134, 136, 180, 188, 247, 252, 254, 256, 258, 262, 264, 268, 272, 283, 285, 295, 307, 310, 314, 316, 318, 320, 322, 327, 333, 335, 459, 461, 464, 466, 468, 471, 480, 511, 515, 519, 550, 564, 566, 569, 571, 573], "92": [28, 36, 40, 43, 130, 134, 180, 188, 247, 252, 254, 256, 258, 260, 262, 264, 268, 283, 285, 287, 295, 298, 320, 322, 327, 333, 335, 459, 461, 464, 466, 468, 471, 511, 513, 519, 550, 564, 566, 569, 571, 573], "93": [28, 36, 40, 41, 130, 134, 136, 180, 188, 247, 252, 254, 256, 258, 260, 262, 264, 272, 283, 285, 289, 295, 298, 307, 310, 314, 322, 327, 333, 335, 459, 461, 464, 466, 471, 480, 511, 513, 515, 550, 564, 566, 569, 571, 573], "94": [28, 36, 40, 41, 43, 134, 136, 180, 188, 247, 252, 254, 258, 260, 262, 264, 268, 270, 283, 285, 289, 295, 298, 310, 314, 320, 322, 327, 333, 335, 459, 464, 468, 471, 480, 511, 513, 515, 519, 550, 564, 566, 569, 571, 573], "95": [34, 36, 40, 43, 130, 134, 180, 188, 247, 252, 254, 258, 260, 262, 268, 270, 283, 285, 295, 298, 307, 310, 314, 318, 320, 327, 335, 459, 461, 464, 466, 468, 471, 480, 511, 513, 519, 550, 564, 566, 569, 571], "950": 273, "96": [28, 34, 36, 40, 136, 180, 188, 247, 252, 254, 258, 260, 264, 270, 283, 285, 289, 295, 298, 310, 314, 318, 320, 322, 327, 333, 335, 459, 464, 466, 471, 480, 513, 515, 550, 564, 566, 569, 571, 573], "9658": [29, 244, 280], "9660": [29, 193, 280, 481, 495, 505, 520, 539, 546, 560], "9670": [31, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 129, 184, 189, 273, 284, 290, 292, 294, 299, 309, 313, 319, 321, 326, 328, 334, 348, 356, 358, 360, 362, 364, 366, 368, 372, 388, 402, 412, 414, 416, 421, 423, 425, 430, 434, 436, 438, 440, 444, 446, 450, 452, 458, 460, 465, 476, 483, 487, 489, 508, 510, 525, 527, 529, 531, 533, 555, 562, 563, 568, 579, 581, 585], "97": [36, 40, 43, 134, 180, 188, 247, 252, 254, 268, 270, 283, 285, 287, 295, 298, 310, 314, 316, 318, 320, 322, 327, 333, 335, 459, 461, 468, 471, 511, 515, 519, 550, 564, 566, 569, 571, 573, 592], "972": 569, "9780262201629": 588, "98": [34, 36, 40, 180, 188, 247, 252, 254, 260, 268, 270, 272, 283, 285, 287, 293, 295, 298, 307, 310, 314, 316, 318, 320, 333, 459, 466, 468, 471, 480, 511, 513, 515, 519, 550, 564, 566, 571], "99": [32, 36, 40, 43, 180, 188, 247, 252, 254, 260, 270, 272, 283, 285, 287, 293, 295, 298, 310, 314, 316, 318, 322, 335, 459, 466, 471, 480, 511, 513, 515, 517, 519, 550, 564, 566, 569, 571, 573, 586], "990": 273, "999": [273, 460, 461], "A": [4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 75, 110, 128, 129, 243, 244, 245, 246, 252, 273, 297, 323, 336, 376, 425, 478, 491, 504, 517, 535, 545, 547, 555, 592], "AND": [42, 43, 130, 273, 305, 427], "AS": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "And": 366, "As": [3, 10], "But": [1, 314], "By": 8, "For": [0, 3, 4, 5, 8, 10, 110, 129, 130, 188, 268, 270, 273, 372, 591, 592], "If": [0, 5, 10, 32, 45, 69, 115, 130, 273, 284, 314, 323, 425, 440, 446, 458, 461, 468, 483, 487, 489, 517, 525, 531, 533, 562, 569, 591, 592], "In": [4, 6, 8, 31, 44, 77, 87, 108, 524, 569, 588, 592], "It": [1, 4, 8, 45, 47, 49, 51, 53, 55, 56, 58, 59, 69, 75, 83, 100, 108, 110, 112, 115, 122, 245, 273, 326, 358, 468, 506, 516, 517, 525, 547, 574, 592], "Its": [69, 273, 434, 435, 477, 478], "NOT": [305, 427], "No": [69, 285, 483], "Not": [258, 262, 314], "OF": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "OR": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 42, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 427, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "On": 6, "One": 591, "Ones": [270, 318], "That": [10, 69, 106, 591], "The": [2, 3, 4, 5, 6, 8, 18, 20, 31, 33, 35, 36, 37, 39, 42, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 129, 130, 133, 135, 179, 180, 181, 184, 187, 189, 191, 243, 246, 249, 251, 253, 254, 255, 257, 259, 261, 263, 267, 269, 271, 273, 283, 284, 285, 286, 288, 290, 292, 294, 297, 299, 301, 306, 309, 313, 314, 315, 317, 319, 321, 326, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 458, 460, 465, 467, 468, 472, 476, 478, 483, 485, 487, 489, 504, 517, 518, 519, 522, 525, 527, 529, 531, 533, 545, 549, 551, 555, 562, 563, 565, 568, 570, 572, 574, 576, 578, 579, 581, 591, 592], "Then": [5, 16, 22, 525], "There": [1, 6, 468, 569, 592], "These": [2, 8, 13, 17, 319, 533], "To": [2, 3, 4, 8, 289, 321, 552, 570, 591, 592], "Will": [120, 366], "_": 130, "_angular_resolut": [569, 579, 580, 581, 582], "_angular_resolutionresolut": [579, 581], "_doxygen": 8, "_linear_resolut": [569, 579, 580, 581, 582], "_linear_resolutionresolut": [579, 581], "_model": 4, "_t": 4, "ab": [136, 285, 289, 293, 464, 569, 592], "abil": 112, "abl": [4, 24, 26, 31, 33, 35, 37, 39, 42, 45, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585], "abort": [483, 487, 489], "about": [12, 129, 130, 136, 270, 273, 569, 592], "abov": [4, 100, 115, 243, 326, 364, 461, 468, 504, 545, 592], "absolut": [5, 326], "abstract": [3, 8, 38, 133, 134, 162, 169, 193, 260, 263, 264, 272, 286, 287, 298, 300, 306, 317, 323, 333, 473], "academ": [0, 1], "accept": [8, 100, 115, 326], "access": [3, 13, 15, 29, 31, 34, 36, 38, 43, 69, 75, 130, 136, 162, 165, 179, 180, 182, 188, 193, 243, 244, 246, 247, 254, 258, 262, 273, 280, 283, 289, 298, 300, 306, 307, 310, 314, 322, 323, 335, 337, 430, 444, 450, 461, 471, 504, 545, 570, 572], "accord": [20, 34, 45, 273, 282, 358, 517, 525, 592], "accordingli": [45, 525], "account": [8, 10], "accumul": [8, 129, 130, 181, 182, 187, 188, 284, 285, 364, 372, 464, 471, 592], "accur": 10, "acknowledg": 592, "acquir": 6, "across": 8, "action": [2, 3, 8, 16, 28, 37, 38, 45, 71, 72, 102, 103, 110, 128, 136, 161, 162, 189, 190, 193, 217, 231, 234, 244, 245, 259, 260, 289, 290, 291, 292, 293, 304, 337, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 412, 416, 421, 423, 478, 564, 569, 592], "action_closur": [32, 284, 285, 294, 295, 366], "actioncontrol": [71, 102], "actionsact": 137, "actionsinclud": [143, 144], "actionslikelihood_field_model_bas": 153, "activ": [480, 483, 485, 487, 489, 511, 513, 515, 517], "actual": [8, 10, 115, 517], "actuat": 592, "ad": [17, 112, 273, 517, 574], "adapt": [11, 28, 29, 31, 44, 45, 244, 273, 280, 314, 340, 434, 436, 438, 444, 460, 476, 477, 478, 518, 519, 520, 523, 524, 525, 537, 539, 546, 547, 555, 560, 574, 588, 592], "adaptor": [25, 29, 31, 32, 160, 170, 184, 193, 244, 245, 260, 280, 284, 294, 299, 309, 310, 313, 314, 319, 320, 321, 322, 366, 368, 370, 372, 374, 436, 438, 442, 446, 448, 458, 460, 461, 468, 475, 476, 477, 478, 592], "adaptor_bas": 314, "add": [10, 41, 110, 115, 130, 468, 564, 569, 592], "add_execut": 592, "addit": [10, 21, 36, 81, 85, 254, 442, 529, 592], "addition": 69, "addressof": [75, 247, 314, 322], "adequ": 592, "adjac": [130, 364], "adjacent_grid_cells_": 130, "adjoint": 188, "adjust": [8, 10, 45, 525, 592], "adl": [8, 18, 273, 430, 450, 554, 560, 569, 585, 586], "adopt": [1, 2, 3, 5, 10], "advanc": [43, 314, 459, 468], "advantag": 4, "affect": 3, "afford": [3, 15, 516], "after": [2, 4, 5, 45, 69, 75, 112, 188, 245, 247, 321, 440, 517, 525, 591, 592], "again": [10, 34, 252, 273, 517, 519, 574], "against": [10, 87, 89, 252, 326], "agent": [44, 524, 588], "aggreg": [3, 43, 69, 517, 592], "agnost": 517, "agre": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "aid": [517, 547], "aka": [17, 63], "al": 188, "algebra": [8, 188, 478], "algorithm": [3, 4, 6, 29, 32, 33, 34, 37, 38, 45, 63, 65, 67, 73, 104, 107, 112, 120, 122, 124, 126, 162, 193, 198, 207, 219, 221, 233, 236, 244, 251, 252, 257, 258, 259, 260, 261, 262, 273, 280, 284, 285, 290, 291, 292, 293, 294, 295, 309, 310, 314, 319, 320, 321, 322, 340, 346, 364, 366, 368, 370, 372, 374, 376, 386, 418, 429, 436, 440, 446, 448, 461, 467, 468, 477, 478, 479, 494, 495, 510, 511, 512, 513, 518, 519, 523, 525, 537, 539, 547, 568, 569, 585, 586, 592], "algorithm_": 316, "algorithma": 106, "algorithmbeam_model": 154, "algorithminclud": [145, 146, 147, 148], "algorithmon_effective_size_drop": 152, "algorithmrai": 106, "alia": [42, 115, 135, 273, 298, 317, 332, 465, 466, 555, 570, 572], "alias": 335, "align": [92, 96, 169, 193, 301, 330, 519, 523, 537, 539, 570, 572], "alignedbox2d": [29, 93, 128, 215, 217, 229, 231, 244, 271, 272, 273, 280], "alignedbox3d": [29, 97, 128, 215, 217, 229, 231, 244, 249, 250, 252, 271, 272, 273, 280], "alik": 5, "aliv": 592, "all": [4, 5, 6, 10, 21, 26, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 162, 188, 193, 195, 197, 198, 199, 200, 201, 204, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 243, 244, 245, 253, 254, 265, 273, 274, 277, 280, 281, 283, 294, 296, 297, 298, 301, 311, 314, 315, 316, 322, 324, 335, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 461, 462, 468, 469, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 497, 498, 501, 503, 504, 510, 514, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 540, 541, 545, 552, 555, 556, 558, 560, 561, 567, 569, 571, 573, 574, 575, 576, 577, 579, 580, 581, 582, 591, 592], "all_t": 459, "alloc": [3, 29, 69, 115, 117, 183, 244, 270, 273, 280, 467, 468], "allocator_typ": [43, 69, 70, 115, 116, 195, 237, 468], "allocator_typealloc": [43, 468], "allocator_typevoid": [43, 468], "allof": 327, "allow": [8, 14, 27, 29, 100, 130, 167, 187, 188, 193, 244, 273, 280, 284, 294, 334, 335, 429, 478, 517, 519, 527, 572, 574], "almost": 592, "almost_equal_to": [535, 540, 542, 544, 546, 568, 569, 579, 580, 581, 582], "almost_equal_toalmost_equal_to": 569, "almost_equal_tostd": 569, "alon": [568, 569], "along": [10, 13, 106, 316, 519, 574, 592], "alongsid": 10, "alpha": [73, 74, 192, 568, 569], "alpha1": [348, 362, 517], "alpha2": [348, 362, 517], "alpha3": [348, 362, 517], "alpha4": [348, 362, 517], "alpha5": [362, 517], "alpha_": 192, "alpha_fast": [28, 112, 113, 195, 240, 340, 464, 519, 540, 544, 574], "alpha_fastbeluga": 341, "alpha_fastbeluga_ro": 575, "alpha_fastdecai": 112, "alpha_fastdoubl": [28, 519], "alpha_fastexponenti": 519, "alpha_fastus": 28, "alpha_slow": [28, 112, 113, 195, 240, 340, 464, 519, 540, 544, 574], "alpha_slowbeluga": 341, "alpha_slowbeluga_ro": 575, "alpha_slowdecai": 112, "alpha_slowdoubl": [28, 519], "alpha_slowexponenti": 519, "alpha_slowus": 28, "alphabet": [244, 505, 546], "alphahuetorgba": [568, 569], "alphahuetorgbastd_msg": 569, "alphath": 73, "alreadi": [6, 36, 130, 254, 273, 308], "also": [5, 8, 10, 16, 17, 20, 22, 45, 59, 83, 130, 273, 321, 348, 362, 368, 483, 487, 489, 517, 525, 591, 592], "alsoupd": 525, "altern": [5, 6, 18], "alwai": [31, 43, 273, 425, 455, 458, 476, 586], "always_reset_initial_pos": 517, "amcl": [1, 6, 11, 28, 29, 34, 46, 128, 195, 204, 205, 210, 213, 218, 222, 226, 232, 238, 244, 258, 273, 280, 340, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 522, 523, 526, 535, 537, 539, 540, 542, 543, 546, 547, 550, 552, 553, 555, 560, 564, 566, 569, 571, 573, 574, 592], "amcl_cor": [45, 193, 340, 510, 511, 512, 513], "amcl_nod": [483, 494, 495, 517], "amclamcl": [28, 519], "amcldefinit": 519, "amclimplement": 28, "amclinlin": 526, "amclnod": [479, 480, 484, 491, 497, 499, 500, 506], "amclnode2d": [480, 505], "amclnodeamclnod": 480, "amclnodeexplicit": 484, "amclnodeprotect": 484, "amclnodeprotectedvirtu": 484, "amclparam": [28, 45, 46, 128, 195, 227, 229, 233, 235, 238, 240, 273, 341, 518, 519, 525, 526, 535, 540, 544, 555, 575], "amclparamsstruct": [28, 244, 519, 546], "american": 44, "among": [591, 592], "amount": [334, 425], "amp": [12, 28, 29, 32, 34, 36, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 134, 136, 179, 180, 181, 182, 183, 184, 185, 186, 188, 194, 217, 220, 231, 233, 234, 235, 237, 244, 247, 252, 254, 256, 258, 260, 262, 264, 268, 269, 270, 271, 272, 273, 274, 276, 280, 282, 283, 285, 287, 289, 291, 293, 295, 305, 307, 308, 310, 314, 316, 318, 320, 322, 326, 327, 328, 329, 330, 333, 334, 335, 337, 339, 346, 347, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 386, 387, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 412, 414, 415, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 459, 461, 464, 465, 466, 467, 468, 471, 473, 477, 480, 483, 484, 485, 486, 487, 488, 489, 490, 508, 509, 511, 513, 515, 519, 525, 526, 527, 529, 530, 531, 533, 550, 551, 552, 553, 554, 555, 562, 563, 564, 566, 568, 569, 571, 573, 579, 580, 581, 582, 583, 584, 585, 586], "amplitud": 260, "an": [2, 3, 4, 6, 8, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 27, 28, 29, 31, 32, 34, 36, 38, 40, 41, 42, 43, 45, 56, 59, 65, 69, 73, 75, 81, 83, 85, 87, 98, 100, 102, 106, 112, 115, 124, 126, 130, 132, 134, 136, 161, 167, 172, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 243, 244, 245, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 280, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 295, 298, 300, 301, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 321, 322, 323, 325, 326, 327, 329, 331, 333, 335, 337, 339, 356, 362, 366, 379, 384, 410, 412, 416, 430, 444, 450, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 477, 480, 483, 487, 489, 504, 509, 511, 513, 515, 517, 519, 523, 525, 545, 550, 552, 553, 554, 555, 562, 563, 564, 566, 568, 569, 571, 573, 576, 583, 584, 585, 586, 591, 592], "analyz": 43, "andino": [6, 11], "andom_interspers": [314, 436], "angl": [8, 14, 36, 49, 55, 58, 122, 254, 256, 292, 293, 421, 423, 527, 528, 540, 542, 550, 586], "angle_axi": [293, 586], "angle_incr": 550, "angle_min": 550, "angleaxi": [292, 293, 586], "anglei": 569, "anglesauto": 550, "anglex": 569, "anglez": [12, 569], "angular": [8, 28, 122, 130, 335, 340, 364], "angular_clustering_resolut": [120, 121, 122, 123, 335], "angular_clustering_resolutionclust": [120, 122], "angular_hash_resolut": [130, 195, 240, 364], "angular_hash_resolutionbeluga": 365, "angular_hash_resolutionclust": 130, "angular_hash_resolutiondoubl": 130, "angular_noise_": 8, "angular_resolut": [540, 544, 555, 568, 569, 579, 581], "angular_resolutionangular": 555, "angular_resolutionbeluga_ro": [580, 582], "angular_resolutionconst": 569, "angular_resolutionresolut": 569, "angular_stddev": 8, "angular_veloc": 8, "ani": [2, 4, 6, 12, 20, 25, 27, 28, 29, 31, 32, 34, 36, 38, 40, 41, 43, 45, 75, 106, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 244, 246, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 280, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 321, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 340, 364, 425, 440, 442, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 483, 487, 489, 509, 511, 513, 515, 517, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "anim": 592, "anomali": 8, "anoth": [16, 43, 69, 75, 87, 243, 247, 270, 504, 545], "any_of": 592, "any_polici": [28, 273, 274, 278, 305, 519], "any_view": [28, 471, 572, 573], "anyth": 1, "anywher": 273, "apach": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "apertur": [36, 254], "api": [2, 28, 30, 37, 108, 162, 188, 193, 196, 199, 211, 245, 277, 281, 482, 496, 498, 503, 506, 521, 522, 523, 537, 539, 541, 547, 552, 558, 561, 569, 583, 585], "append": [31, 115], "appli": [3, 8, 45, 184, 188, 245, 254, 273, 368, 372, 425, 468, 471, 517, 525, 586, 591, 592], "applic": [1, 3, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 478, 480, 509, 511, 513, 515, 517, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "approach": [6, 8, 268], "appropri": [2, 3, 188, 273], "approxim": [2, 4, 268, 273, 364, 517, 574], "apt": [5, 10], "ar": [1, 2, 4, 5, 6, 8, 10, 13, 15, 17, 18, 20, 29, 31, 36, 43, 45, 53, 59, 61, 69, 77, 79, 81, 85, 87, 89, 98, 104, 106, 110, 115, 129, 130, 188, 243, 245, 254, 273, 283, 294, 301, 310, 319, 360, 368, 455, 458, 468, 476, 481, 504, 517, 520, 525, 545, 552, 563, 569, 571, 573, 588, 592], "arbitrari": [29, 244, 280, 386, 471], "architectur": 8, "area": [10, 77], "arg": [5, 10, 29, 36, 41, 61, 128, 236, 237, 244, 273, 280, 305, 382, 425, 426, 465, 466], "argument": [6, 20, 41, 45, 100, 106, 115, 273, 310, 320, 321, 322, 326, 368, 370, 372, 374, 425, 436, 438, 442], "arithmet": [20, 22, 29, 39, 40, 63, 100, 244, 273, 280], "around": [10, 98, 110, 260, 273, 321, 356, 517, 519, 574, 591], "arra": [43, 69], "arrai": [28, 29, 40, 42, 43, 69, 124, 126, 127, 128, 130, 132, 164, 184, 193, 217, 220, 231, 233, 235, 237, 244, 245, 270, 273, 280, 283, 318, 334, 335, 455, 457, 466, 478, 529, 555, 562, 566, 585, 586], "arrayarrai": 126, "arrow": [67, 243, 504, 517, 545, 569], "arrow_bodi": 569, "arrow_body_bas": 569, "arrow_head": 569, "arrow_head_bas": 569, "arrow_head_left_corn": 569, "arrow_head_right_corn": 569, "arrow_head_tip": 569, "arxiv": 273, "as_common_tuple_indirect_fn": [128, 217, 231, 435, 476, 477], "as_common_tuple_indirect_fninlin": 435, "as_common_tuple_indirect_fnutil": [244, 477], "as_const": 194, "asap": 130, "asdiagon": 270, "assert": [130, 188, 260, 272, 283, 322, 333, 459, 464, 471, 473, 477, 550, 571, 573], "assert_that": 326, "assess": [8, 10], "asset": [335, 586], "assign": [4, 8, 24, 25, 28, 29, 41, 63, 69, 87, 115, 116, 130, 170, 193, 195, 205, 244, 245, 270, 280, 366, 468, 555, 568, 569, 592], "assign_clust": 130, "assign_fn": [31, 32, 128, 217, 231, 234, 367], "assign_fnfriend": 367, "assign_fnimplement": [32, 244], "assign_fninlin": 367, "assign_likelihood_field": [551, 552, 555, 556, 557], "assign_likelihood_fieldvoid": 552, "assign_obstacle_map": [555, 556, 557, 563, 564], "assign_obstacle_mapstd": 564, "assign_particle_cloud": [555, 556, 557, 568, 569], "assign_particle_cloudgeometry_msg": 569, "assign_rang": [115, 116, 195, 205, 468], "assign_rangeconstexpr": 468, "assignconstexpr": [32, 468], "assigndefinit": 32, "assoaci": [34, 342], "associ": [34, 44, 87, 108, 129, 270, 333, 342], "assum": [6, 29, 36, 244, 254, 260, 273, 280, 301, 321, 322, 330, 356, 358, 386, 430, 440, 446, 461, 471, 517, 568, 576], "assumpt": 592, "atan2": [36, 136, 254, 289, 586], "atconstexpr": 43, "attach": 517, "attribut": [81, 83, 85, 309, 340, 342, 344, 348, 350, 352, 354, 356, 358, 360, 362, 364, 376, 402, 414, 436, 483, 485, 487, 489, 574, 576, 579, 581], "auto": [8, 28, 32, 34, 36, 40, 41, 43, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 71, 79, 81, 83, 85, 89, 98, 102, 104, 106, 108, 110, 115, 118, 129, 130, 134, 136, 179, 180, 181, 182, 184, 185, 188, 190, 194, 252, 254, 256, 258, 260, 262, 264, 270, 273, 283, 285, 287, 289, 291, 293, 295, 298, 299, 300, 305, 307, 310, 314, 316, 318, 320, 322, 326, 327, 329, 333, 335, 337, 366, 368, 370, 372, 374, 388, 410, 414, 416, 425, 427, 430, 434, 436, 440, 442, 446, 448, 450, 459, 460, 461, 465, 466, 468, 471, 477, 480, 483, 485, 487, 489, 511, 513, 515, 519, 525, 527, 529, 531, 533, 550, 552, 553, 564, 566, 569, 571, 573, 586, 592], "autocovari": 188, "automat": 273, "autonom": [44, 524, 588], "autostart": [483, 485, 487, 489, 515, 517], "autostart_callback": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "autostart_callbackvoid": 515, "autostart_delai": 517, "autostart_timer_": [483, 485, 487, 489, 497, 500, 515], "autostart_timer_beluga_amcl": [484, 486, 488, 490], "autostart_timer_rclcpp": 515, "autostart_timer_tim": 515, "auxiliar": [173, 249], "avail": [5, 6, 69, 94, 273, 517, 591], "averag": [112, 130, 187, 188, 270, 273, 283, 376, 471, 517, 519, 574], "average_weight": 464, "avoid": [3, 43, 112, 335, 466, 517, 519, 574, 592], "axi": [12, 13, 47, 53, 92, 96, 120, 122, 124, 126, 136, 264, 273, 335, 519, 574, 586], "a\u017eman": 41, "b": [30, 40, 41, 42, 43, 128, 196, 197, 199, 206, 211, 240, 252, 273, 274, 278, 459, 491, 497, 499, 500, 569, 579, 580, 581, 582], "ba": 519, "back": [8, 43, 69, 70, 197, 206, 273, 468], "back_insert": 468, "backconstexpr": 43, "backward": [136, 289], "bad": [10, 468, 517, 574], "bag": 6, "bar": 592, "bare": 3, "base": [4, 8, 10, 27, 28, 29, 35, 41, 45, 47, 49, 51, 53, 55, 56, 58, 94, 104, 112, 120, 122, 129, 130, 133, 134, 161, 167, 188, 189, 193, 244, 245, 253, 255, 256, 263, 264, 272, 273, 280, 286, 287, 289, 290, 291, 292, 293, 301, 302, 304, 305, 309, 313, 317, 318, 330, 331, 333, 379, 416, 418, 421, 423, 427, 460, 461, 464, 466, 468, 473, 478, 483, 485, 487, 489, 515, 516, 517, 519, 525, 563, 564, 568, 569, 592], "base_footprint": 517, "base_frame_id": 517, "base_link": 10, "base_pose_covariance_xyz_rpi": 586, "base_pose_in_map_xyz_rpi": 586, "base_pose_in_odom": [519, 525, 526], "base_pose_in_odombas": 525, "base_valu": 295, "baseamclnod": [480, 483, 484, 486, 487, 488, 489, 490, 491, 497, 499, 500, 505, 511, 513, 515], "baseamclnodebaseamclnod": 515, "baseamclnodedefinit": [480, 511, 513, 515], "baseamclnodeexplicit": [484, 486, 488, 490], "baseamclnodeinlineprotectedvirtu": [484, 486, 488, 490], "baseamclnodeprotect": [484, 486, 488, 490], "basedensegrid2": [48, 51, 52, 53, 54, 118, 119, 128, 133, 134, 198, 200, 207, 208, 216, 230, 244, 264, 273, 529, 530, 546], "basedensegrid2dens": [134, 264], "baselaserscan": [2, 50, 128, 218, 232, 244, 255, 256, 273, 527, 528, 546, 547, 550], "baselaserscanlas": 256, "baselineargrid2": [52, 53, 54, 118, 119, 128, 198, 200, 207, 208, 213, 216, 226, 230, 244, 263, 264, 273, 287, 473, 529, 530, 546], "baselineargrid2linear": [264, 287, 473], "baseoccupancygrid2": [2, 54, 128, 198, 202, 204, 207, 210, 217, 222, 231, 238, 244, 271, 272, 273, 286, 287, 529, 530, 546, 547, 566], "baseoccupancygrid2occup": [272, 287], "basepointcloud": [128, 244, 273, 301, 302, 546, 571], "basepointcloudpoint": 302, "baseregulargrid": [47, 48, 51, 52, 53, 54, 57, 108, 109, 118, 119, 128, 198, 207, 244, 273, 317, 318, 333, 529, 530, 546], "baseregulargrid2": [134, 273, 274, 278, 317, 318], "baseregulargrid3": [273, 274, 278, 317, 318], "baseregulargridregularli": [134, 318, 333], "basesparsepointcloud": [128, 244, 273, 330, 331, 546, 573], "basesparsepointcloudspars": 331, "bash": [5, 10, 591], "basi": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 478, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "basic": [77, 251, 273, 485], "bay": 4, "bayesian": [1, 4, 44], "beam": [14, 33, 34, 59, 79, 168, 193, 244, 245, 254, 273, 325, 342, 478, 517, 527, 550], "beam_bear": 34, "beam_max_rang": [34, 197, 240, 342], "beam_max_rangebeluga": 343, "beam_max_rangedoubl": 34, "beam_max_rangemaximum": 34, "beam_model": [59, 168, 193, 324, 325, 342], "beam_skip_dist": 517, "beam_skip_error_threshold": 517, "beam_skip_threshold": 517, "beammodelparam": [33, 34, 59, 79, 128, 197, 228, 235, 240, 242, 273, 343], "beammodelparamparamet": [34, 244], "beamsensormodel": [22, 29, 33, 34, 60, 83, 128, 197, 206, 217, 222, 229, 231, 232, 235, 237, 238, 241, 244, 245, 273, 280, 342, 519, 525], "beamsensormodelbeam": 34, "beamsensormodelbeamsensormodel": 34, "bear": [29, 34, 35, 36, 61, 77, 79, 106, 107, 168, 193, 244, 245, 249, 250, 252, 254, 273, 280, 316, 325, 344, 350, 352, 354, 478, 519, 525], "bearing_error": [36, 254], "bearing_error_prob": [36, 254], "bearing_sensor_model": [61, 168, 193, 324, 325, 344], "bearingdirect": 106, "bearingmodelparam": [35, 36, 61, 128, 235, 240, 273, 345], "bearingmodelparamparamet": [36, 244], "bearingsensormodel": [22, 29, 35, 36, 62, 128, 197, 206, 217, 222, 229, 231, 232, 235, 237, 238, 241, 244, 245, 273, 280, 344], "bearingsensormodel2d": [35, 36, 273, 274, 278], "bearingsensormodel3d": [35, 36, 273, 274, 278], "bearingsensormodelbearingsensormodel": 36, "bearingsensormodelgener": 36, "becam": 1, "becaus": [1, 31, 59, 83, 115, 243, 254, 258, 262, 283, 504, 527, 545, 563, 569, 592], "becom": 1, "been": [3, 79, 293, 418, 421, 423, 517], "befor": [5, 8, 10, 75, 130, 188, 247, 326, 465, 468, 517, 519, 569, 574, 591, 592], "begin": [4, 8, 40, 43, 65, 66, 69, 70, 115, 116, 130, 188, 197, 206, 252, 285, 295, 310, 320, 322, 459, 468, 471, 533, 552, 592], "begin_adaptor": 314, "begin_cursor": [322, 459], "beginauto": 40, "beginconstexpr": [43, 468], "behav": [42, 273], "behavior": [59, 69, 75, 115], "being": [4, 20, 36, 69, 252, 273, 356, 460, 461], "bel": [4, 592], "belief": 4, "belong": [129, 130, 273, 274, 556], "below": [8, 245, 273, 290, 517, 525], "beluga": [0, 1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 163, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 274, 275, 276, 277, 278, 279, 280, 281, 296, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 514, 516, 517, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 548, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 574, 575, 576, 577, 578, 579, 580, 581, 582, 587], "beluga_3d_embedding_hpp": 12, "beluga_actions_assign_hpp": 32, "beluga_actions_hpp": 25, "beluga_actions_normalize_hpp": 285, "beluga_actions_overlay_hpp": 295, "beluga_actions_propagate_hpp": 310, "beluga_actions_reweight_hpp": 320, "beluga_algorithm_amcl_core_hpp": 28, "beluga_algorithm_cluster_based_estimation_hpp": 130, "beluga_algorithm_distance_map_hpp": 180, "beluga_algorithm_effective_sample_size_hpp": 182, "beluga_algorithm_estimation_hpp": 188, "beluga_algorithm_exponential_filter_hpp": 192, "beluga_algorithm_hpp": 27, "beluga_algorithm_raycasting_bresenham_hpp": 40, "beluga_algorithm_raycasting_hpp": 316, "beluga_algorithm_spatial_hash_hpp": 335, "beluga_algorithm_thrun_recovery_probability_estimator_hpp": 464, "beluga_algorithm_unscented_transform_hpp": 471, "beluga_amcl": [5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 497, 499, 500, 506, 591], "beluga_amcl_amcl_node_hpp": 480, "beluga_amcl_message_filters_hpp": 509, "beluga_amcl_message_filters_version_gt": [501, 502, 508, 509], "beluga_amcl_message_filters_version_major": [508, 509], "beluga_amcl_message_filters_version_minor": [508, 509], "beluga_amcl_message_filters_version_patch": [508, 509], "beluga_amcl_ndt_amcl_node_3d_hpp": 513, "beluga_amcl_ndt_amcl_node_hpp": 511, "beluga_amcl_ros2_common_hpp": 515, "beluga_amclamclnod": [483, 484], "beluga_amclbaseamclnod": [485, 486], "beluga_amclndtamclnod": [487, 488], "beluga_amclndtamclnode3d": [489, 490], "beluga_beluga_hpp": 38, "beluga_containers_circular_array_hpp": 43, "beluga_containers_hpp": 132, "beluga_containers_tuple_vector_hpp": 468, "beluga_demo_nav2": 591, "beluga_demo_nav2_launch": 591, "beluga_demo_w": 591, "beluga_eigen_compatibility_hpp": 183, "beluga_exampl": [5, 6], "beluga_motion_differential_drive_model_hpp": 136, "beluga_motion_hpp": 266, "beluga_motion_omnidirectional_drive_model_hpp": 289, "beluga_motion_stationary_model_hpp": 337, "beluga_policies_every_n_hpp": 190, "beluga_policies_hpp": 304, "beluga_policies_on_effective_size_drop_hpp": 291, "beluga_policies_on_motion_hpp": 293, "beluga_policies_policy_hpp": 305, "beluga_primitives_hpp": 307, "beluga_prologue_includ": [186, 308], "beluga_random_hpp": 312, "beluga_random_multivariate_distribution_traits_hpp": 268, "beluga_random_multivariate_normal_distribution_hpp": 270, "beluga_random_multivariate_uniform_distribution_hpp": 272, "beluga_ro": [2, 5, 479, 480, 483, 484, 510, 511, 512, 513, 515, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 540, 542, 543, 544, 547, 556, 557, 559, 574, 575, 576, 577, 578, 579, 580, 581, 582], "beluga_ros_amcl_hpp": 519, "beluga_ros_beluga_ros_hpp": 523, "beluga_ros_laser_scan_hpp": 550, "beluga_ros_likelihood_field_hpp": 552, "beluga_ros_messages_hpp": 553, "beluga_ros_ndt_ellipsoid_hpp": 564, "beluga_ros_occupancy_grid_hpp": 566, "beluga_ros_particle_cloud_hpp": 569, "beluga_ros_point_cloud_hpp": 571, "beluga_ros_sparse_point_cloud_hpp": 573, "beluga_ros_tf2_eigen_hpp": 584, "beluga_ros_tf2_sophus_hpp": 586, "beluga_rosamcl": [525, 526], "beluga_rosamclparam": [574, 575], "beluga_rosdetailalmost_equal_to": [578, 579, 580, 581, 582], "beluga_roslaserscan": [527, 528], "beluga_rosoccupancygrid": [529, 530], "beluga_rosoccupancygridvaluetrait": [576, 577], "beluga_rospointcloud3": [531, 532], "beluga_rossparsepointcloud3": [533, 534], "beluga_rosth": [519, 550, 552, 553, 564, 566, 569, 571, 573], "beluga_sensor_beam_model_hpp": 34, "beluga_sensor_bearing_sensor_model_hpp": 36, "beluga_sensor_data_dense_grid_hpp": 134, "beluga_sensor_data_landmark_map_hpp": 252, "beluga_sensor_data_laser_scan_hpp": 256, "beluga_sensor_data_linear_grid_hpp": 264, "beluga_sensor_data_ndt_cell_hpp": 282, "beluga_sensor_data_occupancy_grid_hpp": 287, "beluga_sensor_data_point_cloud_hpp": 302, "beluga_sensor_data_regular_grid_hpp": 318, "beluga_sensor_data_sparse_point_cloud_hpp": 331, "beluga_sensor_data_sparse_value_grid_hpp": 333, "beluga_sensor_data_value_grid_hpp": 473, "beluga_sensor_hpp": 325, "beluga_sensor_landmark_sensor_model_hpp": 254, "beluga_sensor_likelihood_field_model_base_hpp": 260, "beluga_sensor_likelihood_field_model_hpp": 258, "beluga_sensor_likelihood_field_prob_model_hpp": 262, "beluga_sensor_ndt_sensor_model_hpp": 283, "beluga_sensor_primitives_hpp": 323, "beluga_testing_hpp": 463, "beluga_testing_sophus_matchers_hpp": 327, "beluga_testing_sophus_printers_hpp": 329, "beluga_tutori": 592, "beluga_type_traits_hpp": 470, "beluga_type_traits_particle_traits_hpp": 298, "beluga_type_traits_strongly_typed_numeric_hpp": 339, "beluga_type_traits_tuple_traits_hpp": 466, "beluga_types_landmark_detection_types_hpp": 250, "beluga_utility_forward_like_hpp": 194, "beluga_utility_indexing_iterator_hpp": 247, "beluga_views_elements_hpp": 185, "beluga_views_hpp": 475, "beluga_views_particles_hpp": 300, "beluga_views_random_intersperse_hpp": 314, "beluga_views_sample_hpp": 322, "beluga_views_take_evenly_hpp": 459, "beluga_views_take_while_kld_hpp": 461, "beluga_views_zip_hpp": 477, "belugaactionsdetailassign_fn": [366, 367], "belugaactionsdetailpropagate_base_fn": [368, 369], "belugaactionsdetailpropagate_fn": [370, 371], "belugaactionsdetailreweight_base_fn": [372, 373], "belugaactionsdetailreweight_fn": [374, 375], "belugaamcl": [45, 46], "belugaamclparam": [340, 341], "belugabasedensegrid2": [47, 48], "belugabaselaserscan": [49, 50], "belugabaselineargrid2": [51, 52], "belugabaseoccupancygrid2": [53, 54], "belugabasepointcloud": 55, "belugabaseregulargrid": [56, 57], "belugabasesparsepointcloud": 58, "belugabeammodelparam": [342, 343], "belugabeamsensormodel": [59, 60], "belugabearingmodelparam": [344, 345], "belugabearingsensormodel": [61, 62], "belugabresenham2i": [63, 64], "belugabresenham2ilin": [65, 66], "belugabresenham2ilineiter": [67, 68], "belugabresenham2ilineiteratorsentinel": [346, 347], "belugacirculararrai": [69, 70], "belugaclusterizer_detailclustercel": [376, 377], "belugacommon_tuple_typ": [378, 379, 380], "belugadecay_tuple_lik": [381, 382, 383], "belugadetailcellhash": [384, 385], "belugadetaildefault_weighted_mean_fn": [386, 387], "belugadetailmake_from_state_fn": [388, 389], "belugadifferentialdrivemodel": [71, 72], "belugadifferentialdrivemodelparam": [348, 349], "belugaexponentialfilt": [73, 74], "belugahas_common_tuple_typ": [390, 391], "belugahas_likelihood_field": [392, 393], "belugahas_single_el": [394, 395], "belugainclud": [137, 138, 139, 140, 141, 142], "belugaindexingiter": [75, 76], "belugais_tuple_lik": 396, "belugalandmarkbearingdetect": [350, 351], "belugalandmarkmap": [77, 78], "belugalandmarkmodelparam": [352, 353], "belugalandmarkpositiondetect": [354, 355], "belugalandmarksensormodel": [79, 80], "belugalikelihoodfieldmodel": [81, 82], "belugalikelihoodfieldmodelbas": [83, 84], "belugalikelihoodfieldmodelbaseparam": [356, 357], "belugalikelihoodfieldprobmodel": [85, 86], "belugamultivariate_distribution_trait": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "belugamultivariatenormaldistribut": [87, 88], "belugamultivariatenormaldistributionparam": [89, 90], "belugamultivariateuniformdistribut": [91, 92, 93, 94, 95, 96, 97], "belugandtcel": [358, 359], "belugandtmodelparam": [360, 361], "belugandtsensormodel": [98, 99], "beluganumer": [100, 101], "belugaomnidirectionaldrivemodel": [102, 103], "belugaomnidirectionaldrivemodelparam": [362, 363], "belugaparticle_trait": [408, 409], "belugaparticlecluster": [104, 105], "belugaparticleclusterizerparam": [364, 365], "belugapolici": [425, 426], "belugapoliciesdetailevery_n_fn": [410, 411], "belugapoliciesdetailevery_n_polici": [412, 413], "belugapoliciesdetailon_effective_size_drop_polici": [414, 415], "belugapoliciesdetailon_motion_fn": [416, 417], "belugapoliciesdetailon_motion_polici": [418, 419], "belugapoliciesdetailon_motion_policy_bas": [420, 421, 422, 423, 424], "belugapolicy_bas": [427, 428], "belugaray2d": [106, 107], "belugasparsevaluegrid": [108, 109], "belugaspatial_hash": [120, 121, 122, 123, 124, 125, 126, 127, 429], "belugastate_detailstate_fn": [430, 431], "belugastationarymodel": [110, 111], "belugath": [12, 28, 34, 36, 40, 43, 130, 134, 136, 180, 182, 188, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 268, 270, 272, 282, 283, 287, 289, 298, 302, 305, 307, 316, 318, 323, 331, 333, 335, 337, 339, 461, 464, 466, 468, 471, 473], "belugathrunrecoveryprobabilityestim": [112, 113], "belugatuple_index": [432, 433], "belugatuplecontain": [114, 115, 116], "belugatuplevector": 117, "belugavaluegrid2": [118, 119], "belugaviewsdetailas_common_tuple_indirect_fn": [434, 435], "belugaviewsdetailrandom_intersperse_fn": [436, 437], "belugaviewsdetailrandom_intersperse_view": [438, 439], "belugaviewsdetailsample_base_fn": [440, 441], "belugaviewsdetailsample_fn": [442, 443], "belugaviewsdetailsample_view": [444, 445], "belugaviewsdetailtake_while_kld_fn": [446, 447], "belugaviewsdetailzip_fn": [448, 449], "belugaweight_detailweight_fn": [450, 451], "benchmark_likelihood_field_model": [258, 262], "berkelei": [335, 586], "bernoulli_distribut": 314, "best": [5, 6, 478], "better": [10, 83, 115, 591], "between": [8, 10, 28, 36, 69, 75, 112, 129, 130, 243, 245, 247, 254, 273, 313, 335, 340, 348, 362, 436, 504, 517, 519, 545, 574, 592], "beyond": 592, "bibliographi": [296, 567], "bidirectional_rang": 459, "bin_weight": 569, "binari": 3, "bind": [291, 414], "bind_back": [31, 32, 291, 310, 313, 314, 320, 322, 459, 461], "bit": [87, 89, 334, 335], "bitwis": [42, 43, 273], "black": [243, 504, 545], "blackwel": [44, 524, 588], "blob": [115, 188], "blue": [243, 504, 545, 592], "blurri": 10, "bodi": [1, 569], "bolic": 44, "bond": [479, 480, 483, 485, 487, 489, 510, 511, 515, 517], "bond_": [483, 485, 487, 489, 497, 500, 515], "bond_beluga_amcl": [484, 486, 488, 490], "bond_nod": 515, "bond_std": 515, "bondcpp": [479, 480, 510, 511, 515], "book": 588, "bool": [17, 28, 32, 40, 42, 43, 47, 51, 53, 67, 69, 75, 87, 89, 115, 118, 130, 134, 180, 190, 194, 247, 260, 270, 273, 287, 291, 293, 295, 298, 305, 307, 314, 322, 323, 340, 346, 356, 412, 414, 418, 421, 423, 425, 426, 459, 465, 466, 468, 480, 483, 487, 489, 511, 513, 519, 525, 529, 531, 533, 555, 563, 564, 566, 569, 571, 573, 574, 576, 579, 581], "boolean": [245, 425, 517, 555, 563], "boost": 384, "bootstrap": [4, 11, 592], "border": [243, 504, 545], "borrow": [59, 61, 79, 81, 85, 98], "both": [6, 18, 29, 34, 35, 36, 61, 65, 69, 79, 100, 188, 244, 245, 253, 254, 258, 273, 280, 282, 352, 358, 425, 476, 568, 569], "bound": [29, 59, 61, 79, 81, 85, 92, 96, 98, 244, 271, 272, 273, 280, 368], "boundari": [77, 78, 243, 249, 252, 273, 504, 545, 592], "boundarieslimit": 77, "box": [3, 92, 93, 96, 97, 243, 272, 504, 545], "boxth": [92, 96], "break": [8, 188, 592], "bresenham": [63, 65, 67, 178, 193, 244, 273, 315, 316, 346], "bresenham2i": [39, 40, 64, 65, 66, 67, 68, 106, 128, 197, 200, 201, 202, 203, 206, 209, 213, 214, 217, 226, 227, 228, 231, 232, 233, 237, 239, 244, 273, 316, 346, 347], "bresenham2ibresenham": [40, 244], "bresenham2ibresenham2i": 40, "bresenham2iinlin": 64, "bresenham2iinlineexplicit": 64, "bridg": 2, "brief": [29, 193, 280, 323, 481, 495, 520, 539, 560], "bright": [517, 569], "broadcast": [10, 480, 483, 485, 487, 489, 511, 513, 515], "broader": 4, "broadli": 8, "browser": [24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585], "bucket": [461, 517, 519, 574], "buffer": [479, 480, 483, 485, 487, 489, 510, 511, 512, 513, 515], "build": [1, 6, 8, 10, 516, 591, 592], "built": [5, 8, 478, 517], "burgard": [44, 524, 588], "burn": 3, "byu": 188, "c": [2, 8, 30, 43, 128, 130, 160, 184, 193, 196, 198, 199, 207, 211, 237, 240, 245, 273, 274, 278, 378, 459, 466, 475, 478, 497, 500, 587, 592], "cach": [3, 115], "cache1": [129, 130, 458, 459], "calcul": [4, 8, 27, 29, 34, 36, 61, 98, 120, 122, 124, 126, 129, 130, 167, 179, 181, 182, 187, 193, 244, 252, 254, 260, 273, 280, 291, 334, 335, 356, 414, 429, 517, 570, 592], "calculate_percentile_threshold": [129, 130], "calculate_percentile_thresholdauto": 130, "calibr": 10, "call": [17, 28, 31, 45, 161, 189, 190, 193, 245, 304, 305, 412, 425, 446, 468, 562], "callab": 273, "callabl": [8, 16, 22, 45, 71, 73, 102, 106, 110, 191, 244, 273, 321, 334, 368, 372, 429, 436, 438, 446, 460, 461], "callback": [480, 483, 485, 487, 489, 511, 513, 515], "callback_group": [510, 511], "callbackgroup": [483, 485, 487, 489, 515], "callbackreturn": [480, 483, 485, 487, 489, 515], "calmost_equal_to": [520, 560], "calmost_equal_tostd": [520, 560], "cambridg": [44, 524, 588], "camcl": [520, 560], "camclimplement": [29, 280], "camclnode2d": 481, "camclparamsstruct": [29, 280, 520, 560], "can": [1, 2, 3, 4, 5, 6, 10, 13, 18, 21, 28, 31, 36, 45, 59, 61, 69, 75, 77, 79, 83, 115, 117, 130, 245, 254, 273, 284, 290, 291, 294, 309, 319, 321, 326, 330, 366, 372, 425, 430, 446, 450, 465, 468, 517, 569, 591, 592], "candid": 569, "cannot": [43, 282], "canon": 562, "cap": [130, 364], "capabl": [45, 592], "capac": [115, 116, 198, 207, 468], "capacityconstexpr": 468, "caption": 4, "cardin": 314, "care": [3, 77, 321], "carlo": [1, 2, 11, 28, 29, 45, 244, 273, 280, 340, 478, 518, 519, 520, 523, 525, 537, 539, 546, 555, 560, 574, 592], "cartesian": [34, 49, 256, 525, 531, 533, 571, 573], "cartograph": 6, "cas_common_tuple_indirect_fnutil": [29, 280], "case": [1, 3, 6, 8, 10, 31, 34, 36, 69, 77, 112, 188, 254, 273, 342, 468, 517, 552, 569, 572, 592], "cassert": 283, "cassign_fnimplement": [29, 280], "cast": [34, 106, 107, 198, 207, 283, 316, 318, 531, 533, 571, 573, 586], "castabl": [106, 244, 273, 315], "caststd": 316, "categori": [36, 40, 67, 75, 77, 198, 240, 249, 250, 252, 254, 273, 350, 354, 573], "categorybeluga": [351, 355], "categorycategori": 250, "categorylandmarkcategori": 250, "catkin_make_isol": 5, "caus": [4, 10], "cbaseamclnod": 481, "cbasedensegrid2dens": [29, 280], "cbaselaserscanlas": [29, 280], "cbaselineargrid2linear": [29, 280], "cbaseoccupancygrid2occup": [29, 280], "cbasepointcloudpoint": [29, 280], "cbaseregulargridregularli": [29, 280], "cbasesparsepointcloudspars": [29, 280], "cbeammodelparamparamet": [29, 280], "cbeamsensormodelbeam": [29, 280], "cbearingmodelparamparamet": [29, 280], "cbearingsensormodelgener": [29, 280], "cbegin": [34, 36, 43, 69, 70, 198, 207, 254, 258, 262, 283], "cbeginconstexpr": 43, "cbeluga": [244, 546], "cbeluga_amcl": 505, "cbeluga_ro": 546, "cbresenham2ibresenham": [29, 280], "ccellhash": [29, 280], "cciabatta": 244, "ccirculararrayan": [29, 280], "cclustercella": [29, 280], "ccommon_tuple_typ": [29, 280], "ccommon_tuple_typemeta": [29, 280], "cd": [591, 592], "cdecay_tuple_lik": [29, 280], "cdecay_tuple_likemeta": [29, 280], "cdecltyp": 244, "cdefault_weighted_mean_fntempl": [29, 280], "cdetail": 244, "cdifferentialdrivemodelparamparamet": [29, 280], "cdifferentialdrivemodelsampl": [29, 280], "ceil": 461, "cell": [13, 15, 17, 21, 29, 39, 40, 47, 48, 51, 52, 53, 54, 56, 57, 65, 67, 94, 98, 104, 106, 108, 109, 118, 119, 129, 130, 134, 179, 180, 244, 260, 264, 273, 280, 282, 283, 287, 316, 318, 333, 358, 359, 360, 364, 376, 473, 529, 530, 552, 555, 563, 564, 566, 576], "cell_at": 21, "cell_cent": 564, "cell_grid": 283, "cell_index": [108, 109, 333], "cell_is_valid": 316, "cell_near": [47, 48, 51, 52, 53, 54, 56, 57, 108, 109, 118, 119, 134, 198, 207, 283, 287, 316, 318, 333, 529, 530], "cell_neareigen": [318, 333], "cell_posit": 316, "celldefinit": 130, "cellhash": [128, 217, 231, 244, 283, 385, 510, 511, 513], "cellhasherdefinit": 283, "cellndt": 563, "cells_data": [98, 99, 283], "cells_data_": 283, "cells_dataset": 283, "cells_dataspars": 98, "cells_matrix": 283, "cellsrang": [53, 56], "cend": [34, 36, 43, 69, 70, 198, 207, 254, 258, 262, 283], "cendconstexpr": 43, "center": [8, 110, 188, 260, 283, 356, 592], "centroid": [51, 56, 106], "certain": [245, 290, 572], "certainti": 592, "cevery_n_fnimplement": [29, 280], "cevery_n_policyimplement": [29, 280], "cexponentialfiltercal": [29, 280], "chain_inherit": 41, "chang": [285, 517, 591, 592], "changelog": 41, "chapter": [59, 71, 79, 83, 112, 273, 348, 356], "character": [188, 273], "charg": 517, "chas_common_tuple_typ": [29, 280], "chas_common_tuple_typemeta": [29, 280], "chas_likelihood_field": [29, 280], "chas_single_el": [29, 280], "chas_single_elementmeta": [29, 280], "chash": [29, 280], "cheap": 321, "cheapli": 425, "check": [5, 10, 13, 29, 42, 43, 47, 51, 53, 75, 115, 118, 130, 244, 273, 280, 292, 390, 418, 420, 421, 423, 465, 466, 508, 525, 566, 576], "checks_": 40, "choic": 5, "choleski": 471, "chrome": [24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585], "chunk_bi": 130, "ciabatta": [193, 255, 256, 301, 302, 317, 318, 330, 331], "ciabatta_ciabatta_hpp": 41, "ciabatta_top": [41, 244, 256, 302, 318, 331], "cindexingiteratora": [29, 280], "circl": 188, "circuit": [305, 427], "circular": [28, 29, 42, 43, 69, 132, 164, 188, 193, 244, 245, 273, 280, 455, 457], "circular_arrai": [28, 40, 69, 131, 132, 164, 193, 455, 457], "circulararrai": [29, 40, 42, 43, 70, 128, 195, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 215, 217, 218, 219, 220, 226, 229, 231, 232, 233, 235, 236, 237, 239, 244, 245, 273, 280, 456, 519], "circulararrayan": [28, 43], "circulararraycirculararrai": 43, "circulararrayfeatureflag": [42, 43, 69, 273, 274, 275, 455, 457], "circulararrayfeatureflagscirculararrayfeatureflagsfeatur": 43, "circularli": [87, 270], "cis_tuple_likemeta": [29, 280], "citat": 188, "cite": 270, "citeratorbresenham": [29, 280], "clamp": 464, "clandmarkbearingdetectionlandmark": [29, 280], "clandmarkmapbas": [29, 280], "clandmarkmodelparamparamet": [29, 280], "clandmarkpositiondetectionlandmark": [29, 280], "clandmarksensormodelgener": [29, 280], "claserscanthin": [520, 560], "class": [2, 3, 8, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 129, 130, 133, 134, 135, 136, 179, 180, 181, 182, 188, 189, 191, 192, 194, 243, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 301, 302, 305, 306, 307, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 346, 366, 368, 370, 372, 374, 376, 383, 388, 395, 397, 398, 399, 402, 405, 407, 408, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 459, 460, 461, 464, 465, 466, 467, 468, 472, 473, 476, 477, 479, 480, 504, 510, 511, 512, 513, 515, 518, 519, 530, 545, 549, 550, 553, 554, 555, 562, 565, 566, 568, 569, 570, 571, 572, 573, 578, 583, 584, 585, 586], "classif": 44, "clean": 564, "clear": [43, 69, 70, 115, 116, 198, 207, 468, 569], "clearconstexpr": 468, "clearvoid": 43, "clikelihoodfieldmodelbaselikelihood": [29, 280], "clikelihoodfieldmodelbaseparamparamet": [29, 280], "clikelihoodfieldmodellikelihood": [29, 280], "clikelihoodfieldprobmodellikelihood": [29, 280], "clinebresenham": [29, 280], "close": [1, 36, 59, 188, 592], "closer": 8, "closest": 254, "closur": [31, 32, 190, 245, 293, 310, 314, 320, 322, 366, 368, 370, 372, 374, 410, 416, 436, 442, 446, 461, 592], "cloud": [10, 29, 34, 55, 58, 59, 81, 85, 98, 169, 193, 244, 258, 262, 273, 280, 283, 301, 302, 330, 331, 480, 483, 485, 487, 489, 511, 513, 515, 517, 519, 523, 525, 531, 532, 533, 534, 537, 539, 547, 555, 568, 569, 570, 571, 573], "cloud_": [570, 571, 573], "cloudpoint": [531, 533], "cluster": [10, 27, 29, 104, 129, 130, 167, 193, 244, 273, 274, 278, 280, 306, 307, 364, 376], "cluster_based_estim": [26, 27, 104, 167, 193, 273, 274, 276, 364, 376], "cluster_based_estimateauto": 130, "cluster_id": [130, 198, 240, 376], "cluster_idbeluga": 377, "cluster_idclust": 130, "cluster_idstd": 130, "clustercel": [128, 129, 130, 198, 230, 233, 240, 241, 244, 377], "clustercella": 130, "clusterizer_detail": [128, 129, 130, 198, 230, 233, 240, 241, 244, 376, 377], "clustermap": [129, 130], "clustermapa": 130, "clustermapstd": 130, "clustersclust": 273, "clustertag": [273, 306, 307], "clutter": 59, "cmake": [5, 592], "cmake_from_state_fnfunct": [29, 280], "cmake_minimum_requir": 592, "cmakelist": 592, "cmath": [8, 33, 34, 35, 36, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 301, 302, 317, 318, 330, 331, 334, 335, 460, 461, 565, 566, 568, 569, 585, 586, 592], "cmultivariate_distribution_trait": [29, 280], "cmultivariate_distribution_traitsforward": [29, 280], "cmultivariatenormaldistributionmultivari": [29, 280], "cmultivariatenormaldistributionparammultivari": [29, 280], "cmultivariateuniformdistribut": [29, 280], "cmultivariateuniformdistributionprimari": [29, 280], "cndtamclnode2d": 481, "cndtamclnode3d3d": 481, "cndtcellrepresent": [29, 280], "cndtmodelparamparamet": [29, 280], "cndtsensormodelndt": [29, 280], "cnumeric_limit": [29, 244, 280], "cnumerichelp": [29, 280], "co": [8, 256, 586], "coccupancygridthin": [520, 560], "code": [1, 3, 11, 24, 26, 31, 33, 35, 37, 39, 42, 129, 131, 133, 135, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 181, 184, 187, 189, 191, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 384, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 494, 508, 510, 512, 518, 522, 537, 549, 551, 563, 565, 568, 570, 572, 583, 585, 592], "coeff": [188, 586], "coeffici": [188, 329], "coeffref": [188, 586], "cognit": 3, "cohes": 10, "coincid": 517, "col": [188, 283, 328, 329, 471], "colcon": [5, 591], "collabor": [0, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 117, 118, 370, 374, 390, 391, 392, 393, 394, 395, 396, 418, 425, 433, 438, 442, 444, 454, 457, 483, 485, 487, 489, 527, 529, 531, 533], "collect": [2, 4, 19, 23], "color": [517, 568, 569], "color_rgba": [568, 569], "colorrgba": [568, 569], "colsatcompiletim": [188, 268, 270, 402, 471], "colsth": 328, "column": [268, 270, 328, 471], "colwis": 283, "com": [0, 5, 34, 115, 130, 188, 258, 273, 378, 396, 430, 450, 569, 588, 591], "combin": [42, 43, 260, 273, 356, 478, 510, 511, 513, 569], "come": [2, 7, 8, 9, 589, 590, 591], "comfort": [8, 10], "command": [6, 591, 592], "comment": [243, 504, 545], "commerci": 0, "common": [4, 8, 10, 29, 83, 129, 130, 168, 193, 244, 258, 259, 260, 262, 273, 280, 282, 283, 284, 285, 294, 295, 297, 309, 310, 319, 320, 321, 322, 378, 379, 390, 391, 408, 461, 465, 466, 468, 471, 483, 485, 487, 489, 585, 586], "common_callback_group_": [483, 485, 487, 489, 497, 500, 515], "common_callback_group_beluga_amcl": [484, 486, 488, 490], "common_callback_group_common": 515, "common_callback_group_rclcpp": 515, "common_rang": 295, "common_subscription_options_": [483, 485, 487, 489, 497, 500, 515], "common_subscription_options_beluga_amcl": [484, 486, 488, 490], "common_subscription_options_common": 515, "common_subscription_options_rclcpp": 515, "common_tupl": [115, 468, 477], "common_tuple_typ": [29, 128, 236, 237, 244, 273, 280, 379, 380, 465, 466], "common_tuple_type_t": [29, 71, 102, 110, 128, 136, 244, 273, 274, 278, 280, 289, 337, 465, 466], "common_tuple_type_tconveni": 466, "common_tuple_type_ttypenam": 466, "common_tuple_typemeta": 466, "common_typ": 378, "common_type_t": [314, 379, 466], "common_types_t": 378, "commun": 517, "comnidirectionaldrivemodelparamparamet": [29, 280], "comnidirectionaldrivemodelsampl": [29, 280], "compar": [4, 87, 89, 180, 273, 326, 465, 468, 579, 581], "compat": [6, 87, 130, 245, 270, 478, 494, 506, 508, 516, 547, 591], "compil": [3, 69, 314, 335], "complet": [4, 46, 48, 50, 52, 54, 57, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 112, 113, 116, 119, 121, 123, 125, 127, 244, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 380, 382, 385, 387, 389, 400, 401, 403, 404, 406, 409, 411, 413, 415, 417, 419, 422, 424, 426, 428, 431, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 456, 484, 486, 488, 490, 505, 526, 528, 530, 532, 534, 546, 575, 577, 580, 582], "complex": [3, 4, 69, 188, 335, 592], "complianc": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "compliant": [8, 45], "compon": [2, 79, 122, 188, 245, 506, 547, 591], "compos": [3, 28, 41, 245, 298, 310, 314, 320, 368, 370, 372, 374, 425, 436, 446, 461, 478, 479, 480, 481, 483, 487, 489, 505, 506, 510, 511, 512, 513, 517, 591], "composit": [32, 366], "comput": [3, 4, 8, 10, 13, 15, 29, 34, 43, 45, 47, 51, 53, 56, 59, 61, 63, 71, 75, 77, 79, 81, 83, 85, 94, 102, 104, 106, 108, 110, 112, 118, 129, 130, 188, 244, 252, 273, 280, 283, 319, 360, 372, 378, 386, 446, 466, 471, 592], "computation": [59, 83, 283], "computationinfo": 471, "compute_free_st": 272, "compute_offset": [322, 459], "con_effective_size_drop_policyimplement": [29, 280], "con_motion_fnimplement": [29, 280], "con_motion_policy_bas": [29, 280], "con_motion_policy_baseprimari": [29, 280], "con_motion_policybas": [29, 280], "concept": [1, 2, 3, 8, 28, 115, 133, 169, 245, 252, 263, 286, 290, 291, 317, 321, 471, 592], "concret": 41, "condens": 517, "condit": [4, 12, 16, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 45, 59, 61, 71, 79, 81, 85, 98, 102, 110, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 245, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 414, 425, 459, 460, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 570, 571, 573, 584, 586, 592], "conditional_t": [98, 283, 360, 513], "confer": [44, 524, 588], "configur": [36, 45, 59, 61, 71, 79, 81, 83, 85, 98, 102, 136, 254, 283, 289, 478, 483, 485, 487, 489, 515, 517, 525, 591, 592], "confus": 335, "conjunction_v": [298, 307, 430, 450], "connect": [13, 15, 47, 51, 53, 118, 134, 264, 480, 483, 487, 489, 511, 513], "consid": [5, 10, 28, 69, 188, 243, 252, 292, 340, 504, 517, 527, 545], "consist": [4, 8, 17, 245, 273, 458, 552, 562], "const": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 32, 34, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 134, 136, 180, 182, 188, 190, 217, 231, 247, 252, 254, 256, 258, 260, 262, 264, 268, 269, 270, 271, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 305, 307, 310, 314, 316, 318, 320, 322, 326, 327, 328, 329, 333, 334, 335, 337, 339, 346, 347, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 384, 385, 386, 387, 388, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 414, 416, 418, 419, 421, 422, 423, 424, 425, 430, 431, 434, 435, 436, 440, 442, 446, 448, 450, 451, 459, 461, 464, 465, 466, 467, 468, 471, 473, 477, 480, 483, 484, 485, 486, 487, 488, 489, 490, 510, 511, 513, 515, 519, 525, 526, 527, 529, 530, 531, 533, 550, 551, 552, 554, 555, 562, 563, 564, 566, 569, 571, 573, 579, 580, 581, 582, 583, 584, 585, 586, 592], "const_": 298, "const_iter": [43, 69, 70, 198, 237], "const_iteratorconst": 43, "const_iteratorindexingiter": 43, "const_point": [43, 69, 70, 198, 237], "const_pointerconst": 43, "const_refer": [43, 69, 70, 198, 237], "const_referenceconst": 43, "const_reverse_iter": [43, 69, 70, 198, 237], "const_reverse_iteratorconst": 43, "const_reverse_iteratorstd": 43, "constant": [42, 43, 69, 136, 260, 273, 289, 519, 574, 592], "constarrow": 40, "constbeluga": [46, 48, 50, 52, 54, 57, 60, 62, 64, 66, 68, 70, 72, 78, 80, 82, 84, 86, 88, 90, 99, 103, 105, 107, 109, 111, 116, 119, 121, 123, 125, 127, 347, 359, 369, 371, 373, 375, 385, 387, 389, 411, 415, 417, 437, 441, 443, 447, 449, 528, 530], "constbeluga_amcl": [488, 490], "constbeluga_ro": [526, 528, 530, 532, 534, 580, 582], "constcalcul": 335, "constcast": 316, "constcheck": [134, 287, 519], "constcompar": [270, 569], "constcomput": [40, 130, 134, 136, 264, 287, 289, 316, 318, 333, 337], "constdefinit": [282, 283], "constderefer": 40, "constequ": 40, "constexpr": [8, 28, 31, 32, 36, 41, 42, 43, 69, 73, 94, 100, 112, 115, 124, 126, 130, 136, 184, 185, 187, 188, 189, 190, 192, 194, 254, 268, 270, 272, 273, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 305, 306, 307, 309, 310, 313, 314, 319, 320, 321, 322, 323, 334, 335, 339, 358, 366, 368, 370, 372, 374, 388, 398, 399, 402, 405, 407, 410, 412, 414, 416, 418, 421, 423, 425, 427, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 459, 460, 461, 464, 465, 466, 468, 471, 476, 477, 515, 519, 566, 569, 571, 573, 576], "constexprnoexcept": [273, 465], "constfind": [36, 252, 254], "constgener": 270, "constget": [134, 260, 264, 287, 333, 473, 511, 513, 550, 566, 571, 573], "consthash": 283, "constinequ": 40, "constoper": 471, "constoverload": [190, 291, 293, 310, 314, 320, 322, 461, 477], "constrain": [77, 79], "constraint": [244, 272, 519, 523, 537, 539, 572], "constraintth": 91, "constretriev": 287, "constreturn": [28, 34, 36, 40, 43, 252, 254, 258, 260, 262, 270, 283, 298, 468, 519], "construct": [8, 20, 28, 29, 33, 34, 35, 36, 40, 43, 45, 59, 61, 63, 65, 67, 69, 71, 73, 75, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 106, 108, 115, 118, 120, 122, 124, 126, 129, 130, 135, 136, 188, 244, 247, 253, 254, 257, 258, 259, 260, 261, 262, 270, 272, 273, 280, 283, 288, 289, 314, 322, 333, 335, 342, 344, 348, 352, 356, 360, 362, 364, 438, 444, 467, 468, 473, 531, 533, 569, 579, 581, 592], "constructor": [8, 20, 36, 40, 41, 43, 45, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 104, 106, 108, 112, 115, 118, 120, 122, 124, 126, 130, 136, 188, 190, 247, 252, 254, 283, 289, 293, 305, 314, 322, 335, 339, 412, 421, 423, 425, 438, 444, 468, 480, 483, 485, 487, 489, 511, 513, 515, 519, 525, 527, 529, 531, 533, 579, 581], "constsampl": 322, "constsentinel": 40, "constsharedptr": [480, 483, 484, 487, 488, 489, 490, 511, 513, 527, 528, 529, 530, 531, 532, 533, 534, 550, 566, 571, 573], "constview": 256, "contain": [2, 3, 6, 13, 15, 28, 29, 31, 37, 38, 45, 47, 48, 51, 52, 53, 54, 69, 71, 75, 102, 104, 108, 110, 112, 114, 115, 117, 118, 119, 124, 126, 129, 134, 162, 165, 193, 198, 207, 243, 244, 245, 246, 247, 273, 280, 316, 333, 340, 414, 446, 455, 457, 474, 478, 504, 518, 519, 520, 525, 529, 530, 545, 546, 555, 560, 563, 564, 574, 591, 592], "container": 591, "containerscontain": 138, "containersinclud": [149, 150], "containsbool": 134, "content": [8, 87], "context": [188, 273], "contigu": [15, 69, 169, 193, 245, 263, 287, 313, 473], "continu": [283, 517, 592], "contribut": [5, 8], "control": [3, 4, 8, 16, 71, 72, 102, 103, 110, 111, 136, 289, 337, 592], "control_act": [28, 45, 46], "control_action_typ": [102, 110], "control_action_window_": [28, 519], "control_actioncontrol": 45, "control_typ": [8, 16, 71, 72, 102, 103, 110, 111, 136, 198, 237, 289, 337], "control_type_2d": 136, "control_type_3d": 136, "control_typecurr": [136, 289, 337], "control_typestd": [136, 289, 337], "controla": [71, 102, 110], "conveni": [42, 43, 100, 115, 273, 317, 326, 332, 465, 468], "convent": 10, "converg": [10, 112, 517, 592], "convers": [3, 31, 32, 33, 34, 35, 36, 100, 115, 129, 130, 188, 253, 254, 273, 305, 425, 471, 517, 518, 519, 523, 537, 539, 547, 552, 554, 560, 562, 569, 583, 584, 585, 586, 592], "convert": [16, 31, 32, 34, 245, 252, 254, 268, 273, 321, 335, 398, 399, 402, 405, 407, 515, 551, 552, 554, 555, 562, 569, 583, 584, 585, 586, 592], "converted_mask_valu": 295, "convini": [135, 273, 510], "coordin": [13, 15, 17, 19, 21, 23, 47, 49, 51, 53, 56, 81, 83, 85, 94, 108, 109, 118, 120, 122, 256, 258, 260, 262, 264, 287, 318, 333, 335, 517, 525, 531, 533, 569, 579, 581, 592], "coordinates_at": [15, 17, 21, 47, 48, 51, 52, 53, 54, 56, 57, 108, 109, 118, 119, 198, 207, 260, 264, 287, 316, 318, 529, 530], "coordinates_atauto": 287, "coordinates_ateigen": [264, 318], "coordinates_for": [17, 21, 47, 48, 51, 52, 53, 54, 56, 57, 108, 109, 118, 119, 198, 207, 272, 287, 318, 529, 530], "coordinates_forauto": [287, 318], "copi": [3, 12, 25, 27, 28, 31, 32, 34, 36, 38, 40, 41, 43, 63, 65, 75, 87, 115, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 321, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 434, 459, 461, 463, 464, 466, 467, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "copied_s": 468, "coplanar": 527, "copy_tag": [434, 435, 477], "copyabl": [118, 425], "copyassign": 20, "copyconstruct": 20, "copyright": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "core": [3, 10, 39, 40, 43, 133, 134, 249, 250, 263, 264, 267, 268, 282, 283, 286, 287, 317, 318, 321, 332, 333, 471, 510, 511, 563, 564, 583, 584], "correct": [4, 8, 10, 34, 188, 268, 269, 270, 273, 468, 480, 483, 487, 489, 511, 513], "correctli": 10, "correl": 270, "correspond": [5, 8, 13, 14, 17, 20, 53, 79, 87, 104, 129, 270, 273, 284, 517, 566, 576, 591], "cos_apertur": [36, 254], "cos_theta": [258, 262], "costmap_2d_publish": 552, "could": [314, 563, 592], "couldn": 283, "count": [115, 116, 189, 190, 245, 410, 411, 412, 413, 458, 459, 461, 468], "count_": [190, 459], "counter": 412, "counterpart": 516, "countnew": 115, "countsiz": 115, "countth": 412, "cov": [282, 283], "covari": [28, 45, 46, 87, 88, 89, 90, 110, 129, 130, 187, 188, 198, 240, 268, 270, 273, 274, 279, 282, 283, 358, 398, 399, 402, 405, 407, 471, 478, 480, 483, 487, 489, 511, 513, 517, 519, 525, 526, 562, 563, 585, 586], "covariance_": 517, "covariance_fn": [28, 130, 187, 188, 270, 273, 471, 519, 586], "covariance_typ": [87, 88, 198, 237, 244, 268, 269, 270, 273, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "covariance_typeth": [268, 270], "covariance_typetypenam": [268, 270], "covariancebeluga": 359, "covariancecalcul": [28, 130, 188, 270, 471], "covarianceconstexpr": [28, 130, 188, 270, 471, 519, 586], "covariancecovari": [273, 282], "covariancederiv": [273, 471, 586], "covariancederivedconcret": 273, "covarianceeigen": 282, "covarianceeigentorowmajor": [556, 557, 562, 585, 586], "covarianceeigentorowmajorarrai": 586, "covariancer": [87, 89], "covariancerowmajortoeigen": [556, 557, 562, 585, 586], "covariancerowmajortoeigensophu": 586, "covariances_dataset": 283, "covariancet": [28, 45, 46], "covariancettyp": 45, "cover": [3, 10], "coverag": 10, "cp": [16, 18, 22], "cparticle_traitscommon": [29, 280], "cparticleclusterizerparamparamet": [29, 280], "cparticleclusterizerparticl": [29, 280], "cpo": [430, 450], "cpointcloud3thin": [520, 560], "cpolicy_baseimplement": [29, 280], "cpolicyfn": 244, "cpolicyforward": [29, 280], "cpp": [258, 262, 273, 378, 396, 430, 450, 552, 592], "cpprefer": [273, 378, 396, 430, 450], "cpropagate_base_fnimplement": [29, 280], "cpropagate_fnimplement": [29, 280], "cpu": 10, "crandom_intersperse_fnimplement": [29, 280], "crandom_intersperse_viewimplement": [29, 280], "crang": 244, "cray2dcast": [29, 280], "crbegin": [43, 69, 70, 198, 207], "crbeginconstexpr": 43, "crclcpp_lifecycl": 505, "creat": [10, 18, 20, 29, 81, 83, 85, 100, 129, 130, 190, 244, 252, 260, 273, 280, 293, 297, 298, 307, 322, 338, 339, 356, 366, 388, 410, 416, 517, 519, 563, 564, 574], "create_timer_ro": 515, "creation": 555, "cref": 519, "crend": [43, 69, 70, 198, 207], "crendconstexpr": 43, "creweight_base_fnimplement": [29, 280], "creweight_fnimplement": [29, 280], "cross": [36, 254], "crosscheck": 10, "crtp": 41, "crucial": 8, "csample_base_fnimplement": [29, 280], "csample_fnimplement": [29, 280], "csample_viewimplement": [29, 280], "csentinelpast": [29, 280], "csparsepointcloud3thin": [520, 560], "csparsevaluegridgener": [29, 280], "cspatial_hash": [29, 280], "cspatial_hashcal": [29, 280], "cstate_fncustom": [29, 280], "cstate_typ": 244, "cstationarymodela": [29, 280], "cstd": 244, "cstdint": [39, 40, 42, 43, 246, 247, 249, 250, 251, 252, 263, 264, 283, 286, 287, 334, 335, 472, 473, 551, 552], "ctake_while_kld_fnimplement": [29, 280], "cthrunrecoveryprobabilityestimatorrandom": [29, 280], "ctuple_el": [29, 280], "ctuple_index": [29, 280], "ctuple_indexmeta": [29, 280], "ctuple_s": [29, 280], "ctuplecontain": [29, 280], "ctuplecontainerprimari": [29, 280], "ctuplevectorshorthand": [29, 280], "cube": [555, 563, 564], "cubes_gener": 564, "cumul": 8, "cumulative_weight": 8, "cup": 4, "curious": 2, "current": [1, 4, 8, 28, 43, 45, 69, 71, 75, 102, 110, 115, 130, 245, 247, 293, 309, 319, 372, 412, 421, 422, 423, 424, 459, 468, 478, 480, 483, 487, 489, 511, 513, 517, 519, 525, 574, 592], "current_": 190, "current_orient": [136, 289], "current_point_": 40, "current_pose_2d": 136, "current_posit": 592, "current_st": 8, "currentth": [421, 423], "curri": 41, "cursor": [75, 76, 247, 322, 459], "cursor_": 247, "custom": [8, 10, 18, 28, 45, 273, 306, 430, 450, 519, 525, 562, 592], "cvaluegrid2gener": [29, 280], "cvaluetraitstrait": [520, 560], "cweight_fncustom": [29, 280], "cwisemax": 252, "cwisemin": 252, "cwisesqrt": 270, "cycl": [3, 592], "cyril": [44, 524, 588], "czip_fnimplement": [29, 280], "d": [0, 1, 6, 20, 30, 34, 44, 128, 196, 199, 200, 208, 211, 237, 240, 274, 278, 497, 499, 524, 540, 542, 588, 592], "d0b7315a0d90fc6143defa54596a3a95d9fa10ec": 188, "d1": [98, 200, 240, 282, 283, 358, 359, 360], "d1_rotations_soln": [335, 586], "d1beluga": 361, "d1doubl": 283, "d1scale": 283, "d2": [98, 200, 240, 282, 283, 358, 359, 360], "d2beluga": 361, "d2doubl": 283, "d2scale": 283, "dark": [243, 504, 545], "dash": [243, 504, 545], "data": [3, 6, 8, 10, 13, 15, 17, 29, 34, 36, 43, 44, 45, 47, 49, 51, 53, 55, 56, 58, 69, 70, 77, 83, 108, 109, 118, 119, 129, 130, 188, 193, 200, 208, 244, 249, 250, 254, 259, 260, 271, 272, 273, 280, 283, 348, 350, 354, 356, 358, 360, 362, 364, 376, 402, 510, 511, 517, 518, 519, 525, 527, 529, 530, 537, 539, 540, 542, 547, 549, 550, 551, 552, 555, 563, 564, 565, 566, 570, 571, 572, 573, 586, 592], "data_": [43, 333, 473], "data_at": [13, 15, 47, 48, 51, 52, 53, 54, 108, 109, 118, 119, 134, 200, 208, 264, 283, 287, 333, 529, 530], "data_atauto": [134, 264, 287], "data_atstd": 333, "data_near": [13, 47, 48, 51, 52, 53, 54, 108, 109, 118, 119, 134, 200, 208, 258, 262, 333, 529, 530], "data_nearauto": 134, "data_nearstd": 333, "dataaggreg": 69, "dataconst": [333, 473, 552, 564, 566], "dataconstexpr": 43, "datafield": [301, 330], "datagrid": [108, 118], "datainclud": 158, "datalikelihood_field_model_bas": 155, "dataset": 283, "datatyp": [29, 36, 77, 169, 193, 244, 251, 252, 254, 273, 280, 531, 533, 571, 573], "date": [5, 517], "dbuild_test": 5, "deal": 260, "debug": [282, 358, 517], "decai": [29, 244, 273, 280, 381, 465, 466, 517, 519, 574], "decay_t": [8, 29, 32, 128, 130, 188, 236, 237, 244, 273, 280, 285, 295, 298, 307, 310, 320, 368, 370, 372, 374, 378, 379, 382, 395, 408, 430, 433, 450, 465, 466, 519], "decay_tuple_lik": [29, 128, 236, 237, 244, 273, 280, 298, 382, 383, 465, 466], "decay_tuple_like_t": [273, 274, 278, 298, 465, 466, 467, 468], "decay_tuple_like_tconveni": [298, 466], "decay_tuple_like_ttypenam": [298, 466], "decay_tuple_likemeta": 466, "decid": [245, 517, 519, 574], "declar": [20, 28, 29, 244, 268, 270, 273, 280, 291, 305, 310, 320, 397, 425], "decltyp": [28, 29, 32, 40, 41, 75, 128, 130, 180, 184, 185, 244, 247, 256, 273, 280, 298, 307, 310, 314, 322, 323, 393, 408, 430, 450, 459, 465, 466, 468, 471, 519, 569], "declval": [29, 75, 128, 244, 247, 273, 280, 298, 307, 314, 322, 323, 408], "decomposit": 471, "decreas": [130, 569], "decrement": [75, 247], "dedu": 63, "deduc": [269, 270, 273], "deduct": [117, 269, 270, 271, 272, 273, 467, 468], "deeper": 8, "default": [6, 20, 29, 40, 41, 43, 63, 65, 67, 69, 75, 87, 89, 100, 106, 108, 115, 117, 120, 122, 183, 244, 247, 270, 273, 280, 284, 285, 290, 305, 309, 310, 314, 316, 319, 320, 322, 323, 333, 335, 339, 364, 368, 370, 374, 414, 425, 436, 438, 444, 446, 459, 460, 461, 467, 468, 483, 485, 487, 489, 515, 517, 519, 525, 592], "default_random_engin": [314, 322, 436, 438, 444], "default_sentinel_t": 459, "default_weighted_mean": [273, 274, 279, 471, 586], "default_weighted_mean_fn": [128, 217, 231, 273, 387, 471], "default_weighted_mean_fninlin": 387, "default_weighted_mean_fntempl": [244, 471], "default_weighted_meanconstexpr": 471, "default_weighted_meanobject": 471, "defaultbeluga": [64, 66, 68, 70, 76, 88, 90, 101, 109, 116, 121, 123, 426, 439, 445], "defaultconstruct": [40, 270, 333], "defaultdefault": [40, 43, 247, 305, 314, 322, 335, 339, 468], "defer": 41, "defin": [2, 4, 8, 10, 12, 14, 17, 18, 19, 21, 23, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 47, 49, 51, 53, 55, 56, 58, 66, 70, 75, 88, 106, 117, 130, 132, 134, 136, 161, 180, 182, 183, 185, 188, 189, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 290, 291, 292, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 370, 374, 430, 450, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 484, 508, 509, 511, 513, 515, 519, 523, 550, 552, 553, 562, 564, 566, 569, 571, 573, 584, 586, 592], "definit": [12, 28, 32, 34, 36, 40, 43, 130, 134, 136, 180, 182, 183, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 268, 270, 272, 282, 283, 287, 289, 291, 293, 298, 300, 302, 305, 307, 310, 314, 316, 318, 320, 322, 323, 327, 331, 333, 335, 337, 339, 461, 464, 466, 468, 471, 473, 477, 480, 508, 511, 513, 515, 519, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "degener": [188, 552], "degeneraci": [45, 525, 592], "degrad": [59, 273, 517], "degre": [3, 569], "delai": 517, "delet": [41, 188, 314], "deleteal": 564, "delimit": 77, "delta": [136, 270, 289, 293, 586, 592], "delta_bear": 289, "delta_rot_hat": 289, "demo_build": 591, "demo_office_navig": 591, "demonstr": [8, 591, 592], "denot": [243, 504, 545], "dens": [8, 13, 15, 47, 133, 169, 183, 193, 244, 264, 273, 520, 531, 546, 555, 560, 570, 571, 572, 573], "dense_grid": [47, 169, 193, 263, 264], "densegrid2": [15, 47, 296], "densiti": [20, 364, 569], "dep": 5, "depend": [24, 26, 31, 33, 35, 36, 37, 39, 42, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 508, 510, 511, 512, 513, 518, 522, 549, 551, 563, 565, 568, 570, 572, 583, 585, 591], "depict": [517, 592], "deplet": 592, "deprec": 130, "depth": 6, "derefer": [67, 75, 476], "deriv": [29, 48, 50, 52, 54, 57, 118, 119, 129, 133, 134, 198, 200, 202, 204, 207, 208, 210, 213, 216, 217, 218, 222, 226, 230, 231, 232, 238, 244, 255, 256, 263, 264, 267, 271, 272, 273, 280, 286, 287, 301, 302, 317, 318, 330, 331, 398, 399, 402, 405, 407], "derivedconcret": [47, 49, 51, 53, 55, 56, 58], "descend": 130, "describ": [47, 49, 51, 53, 55, 56, 58, 79, 245, 517], "descript": [10, 24, 26, 29, 31, 33, 35, 37, 39, 42, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 129, 131, 133, 135, 179, 181, 184, 187, 189, 191, 193, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 280, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 481, 483, 485, 487, 489, 495, 508, 510, 512, 518, 520, 522, 525, 527, 529, 531, 533, 539, 549, 551, 554, 555, 560, 562, 563, 565, 568, 570, 572, 574, 576, 578, 579, 581, 583, 585], "design": [8, 189, 290, 292], "desir": 290, "destin": 592, "destroi": 252, "destructor": [45, 59, 61, 65, 69, 71, 73, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 106, 108, 112, 115, 118, 120, 122, 124, 126, 412, 421, 423, 438, 444, 483, 485, 487, 489, 525, 527, 529, 531, 533, 579, 581], "detail": [8, 24, 26, 28, 29, 31, 32, 33, 35, 37, 39, 41, 42, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 128, 129, 130, 131, 133, 135, 179, 181, 184, 187, 188, 189, 190, 191, 193, 201, 209, 217, 219, 220, 227, 231, 233, 234, 235, 240, 244, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 270, 271, 273, 280, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 303, 305, 306, 309, 310, 311, 313, 314, 315, 317, 319, 320, 321, 322, 324, 326, 328, 330, 332, 334, 335, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 471, 472, 474, 476, 477, 479, 481, 483, 485, 487, 489, 495, 505, 508, 510, 511, 512, 513, 518, 519, 520, 522, 525, 527, 529, 531, 533, 535, 539, 540, 542, 544, 546, 549, 551, 554, 555, 560, 562, 563, 564, 565, 568, 569, 570, 572, 574, 576, 578, 579, 580, 581, 582, 583, 585, 586], "detect": [29, 35, 36, 61, 62, 77, 79, 80, 136, 244, 245, 249, 250, 252, 253, 254, 273, 280, 289, 292, 293, 323, 348, 350, 354, 362, 414, 418, 421, 423, 592], "detection_bearing_in_robot": 254, "detection_bearing_in_sensor": [36, 77, 78, 200, 240, 250, 252, 350], "detection_bearing_in_sensorbear": 250, "detection_bearing_in_sensorbeluga": 351, "detection_bearing_in_sensorlandmarkbearing3": 250, "detection_bearing_in_sensorth": 77, "detection_categori": [36, 77, 78, 252, 254], "detection_categoryth": 77, "detection_position_in_robot": [200, 240, 250, 252, 254, 354], "detection_position_in_robotbeluga": 355, "detection_position_in_robotdetect": 250, "detection_position_in_robotlandmarkposition3": 250, "detection_position_in_world": [77, 78, 252, 254], "detection_position_in_worldth": 77, "detection_range_in_robot": 254, "detection_weight": [36, 254], "detections2d": 79, "detectionslandmark": 61, "determin": [260, 273, 592], "devel": 5, "develop": [5, 6, 8], "deviat": [8, 34, 36, 188, 254, 260, 342, 344, 352, 356, 364, 517, 592], "diagnost": [480, 511, 513], "diagonaliz": 563, "diagram": [47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 483, 485, 487, 489, 527, 529, 531, 533], "dictat": 517, "did": [36, 254, 569], "dieter": [44, 524, 588], "diff": 569, "differ": [8, 20, 40, 43, 67, 69, 75, 98, 100, 115, 130, 188, 247, 326, 330, 335, 468, 471, 515, 569, 591, 592], "difference_typ": [40, 43, 67, 68, 69, 70, 75, 76, 115, 116, 200, 237, 247, 468], "difference_typediffer": 468, "difference_typeiter": 40, "difference_types": 43, "difference_typesign": 247, "difference_typestd": [40, 43, 247, 468], "differenti": [29, 71, 135, 136, 172, 193, 244, 245, 266, 273, 280, 478], "differential_dr": [515, 517], "differential_drive_model": [71, 172, 193, 265, 266, 348, 510, 511], "differentialdrivemodel": [2, 16, 29, 72, 128, 135, 136, 198, 200, 208, 217, 231, 232, 235, 237, 244, 245, 273, 280, 348], "differentialdrivemodel2d": [135, 136, 273, 274, 278, 510, 511, 513, 519, 525], "differentialdrivemodel2ddifferentialdrivemodel": 519, "differentialdrivemodel3d": [135, 136, 273, 274, 278, 510, 513], "differentialdrivemodeldifferentialdrivemodel": 136, "differentialdrivemodelparam": [71, 128, 135, 136, 200, 233, 236, 240, 273, 349], "differentialdrivemodelparamparamet": [136, 244], "differentialdrivemodelsampl": 136, "differentialmotionmodel": [515, 517], "digit": 335, "dim": [183, 283, 517, 569], "dimens": [282, 358, 471], "dimension": [21, 27, 29, 56, 87, 108, 130, 134, 167, 193, 244, 273, 280, 282, 283, 317, 318, 332, 333, 334, 358, 384, 518, 523, 525, 537, 539, 592], "dims_out": 283, "dir_876c246173b27422a95ea0c3c06ba40d": 8, "direct": [69, 106, 316], "directional_statist": 188, "directli": [20, 24, 26, 31, 33, 35, 37, 39, 42, 112, 129, 131, 133, 135, 179, 181, 184, 187, 189, 191, 246, 249, 253, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 332, 334, 336, 338, 458, 460, 465, 467, 469, 472, 474, 476, 508, 518, 549, 562, 565, 568, 570, 572, 583, 585], "dirti": 34, "disabl": 8, "discard": [4, 49], "discret": [4, 20, 29, 35, 79, 168, 193, 244, 245, 253, 254, 273, 280, 325, 517, 529, 566, 592], "discrete_distribut": 322, "discuss": [335, 586, 591], "disjunction_v": 188, "dispers": [8, 188], "displai": 10, "distanc": [8, 27, 28, 43, 69, 75, 106, 130, 136, 167, 179, 180, 193, 247, 252, 260, 273, 289, 292, 316, 340, 348, 356, 362, 421, 423, 459, 460, 468, 517, 592], "distance_funct": [179, 180, 260, 273], "distance_functiongiven": 273, "distance_map": [26, 27, 167, 193, 259, 260], "distance_threshold": [136, 200, 240, 289, 348, 362], "distance_thresholdbeluga": [349, 363], "distance_thresholddist": [136, 289], "distance_thresholddoubl": [136, 289], "distance_to": [314, 459], "distance_vari": [136, 289], "distancefunct": [179, 180, 260, 273], "distancefunctiona": 273, "distancetyp": [180, 273], "distinguish": 592, "distort": 10, "distri": 519, "distribut": [3, 4, 8, 11, 12, 16, 20, 25, 27, 28, 29, 32, 34, 36, 38, 40, 41, 43, 45, 46, 77, 87, 89, 90, 91, 92, 94, 96, 130, 132, 134, 136, 162, 175, 180, 182, 183, 185, 186, 188, 190, 192, 193, 194, 220, 235, 244, 245, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 280, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 311, 312, 314, 316, 318, 320, 321, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 342, 358, 364, 436, 440, 441, 442, 443, 445, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 478, 480, 509, 511, 513, 515, 517, 519, 523, 525, 526, 550, 552, 553, 555, 564, 566, 568, 569, 571, 573, 574, 584, 586, 592], "distribution_": [270, 272, 314, 322], "distribution_typ": 20, "distributiona": [89, 444], "distributionparam": [136, 289], "distributionth": 444, "distrubut": 273, "div_hashed_valu": 335, "dive": 592, "divers": [2, 4, 45, 517, 519, 525, 574], "divid": [21, 118, 245, 284], "divis": [273, 301], "djuric": 44, "do": [10, 69, 316, 517, 591, 592], "do_activ": [480, 483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 511, 513, 515], "do_activatevirtu": 515, "do_activatevoid": [480, 511, 513], "do_autostart_callback": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "do_autostart_callbackvirtu": 515, "do_beamskip": 517, "do_cleanup": [480, 483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 511, 513, 515], "do_cleanupvirtu": 515, "do_cleanupvoid": [480, 511, 513], "do_configur": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 513, 515], "do_configurevirtu": 515, "do_configurevoid": 513, "do_deactiv": [480, 483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 511, 513, 515], "do_deactivatevirtu": 515, "do_deactivatevoid": [480, 511, 513], "do_initial_pose_callback": [480, 483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 511, 513, 515], "do_initial_pose_callbackvirtu": 515, "do_initial_pose_callbackvoid": [480, 511, 513], "do_periodic_timer_callback": [480, 483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 511, 513, 515], "do_periodic_timer_callbackvirtu": 515, "do_periodic_timer_callbackvoid": [480, 511, 513], "do_shutdown": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "do_shutdownvirtu": 515, "doc": [8, 335, 384], "docker": 591, "document": [5, 25, 27, 31, 32, 34, 36, 38, 40, 43, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 129, 130, 132, 134, 136, 180, 182, 184, 185, 188, 189, 190, 192, 193, 195, 197, 198, 200, 201, 204, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 243, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 274, 280, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 304, 307, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 331, 333, 334, 335, 337, 339, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 458, 459, 460, 461, 463, 465, 466, 468, 470, 473, 475, 476, 477, 480, 483, 485, 487, 489, 495, 497, 501, 504, 508, 509, 510, 511, 513, 514, 519, 523, 525, 527, 529, 531, 533, 539, 540, 545, 550, 552, 555, 556, 560, 562, 563, 564, 566, 567, 568, 569, 571, 573, 574, 576, 578, 579, 581, 584, 585, 586], "doe": [2, 4, 20, 43, 69, 115, 188, 243, 273, 321, 425, 504, 517, 519, 531, 533, 545, 571, 573, 591, 592], "doesn": [10, 41, 87, 108, 283, 517], "doi": 588, "don": [5, 6, 31, 130, 268, 298, 316, 468], "dontaligncol": 329, "door": 592, "dot": [4, 36, 252, 254], "dot_product_a": 252, "dot_product_b": 252, "doubl": [8, 13, 17, 21, 28, 34, 36, 47, 48, 51, 52, 53, 54, 56, 57, 59, 61, 73, 74, 79, 81, 85, 98, 100, 106, 107, 108, 109, 112, 113, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 134, 136, 188, 192, 244, 254, 258, 260, 262, 272, 273, 282, 283, 285, 287, 289, 291, 301, 306, 307, 314, 316, 318, 330, 333, 334, 335, 340, 342, 344, 348, 352, 356, 358, 359, 360, 362, 364, 376, 414, 415, 436, 437, 438, 439, 446, 447, 460, 461, 464, 471, 473, 511, 513, 519, 525, 526, 527, 529, 530, 550, 555, 563, 564, 566, 569, 570, 571, 572, 573, 574, 584, 586, 592], "doublenear": 327, "doubt": 5, "down": [3, 8, 592], "download": 188, "doxygen": [243, 504, 545], "draw": [4, 29, 39, 40, 63, 65, 67, 244, 273, 280, 321, 592], "drawing_values_from_the_distribut": 270, "drift": [10, 517], "drive": [10, 29, 71, 102, 135, 136, 172, 193, 244, 245, 266, 273, 280, 288, 289, 478], "drop": [245, 290, 414], "dt": 592, "dual": 10, "due": [8, 59], "durabl": [6, 10, 517], "dure": [4, 8, 31, 112, 483, 487, 489], "dx_": 4, "dxspan_": 40, "dynam": [4, 183, 188, 283, 592], "dyspan_": 40, "e": [3, 10, 16, 30, 69, 75, 77, 100, 115, 124, 126, 128, 130, 188, 196, 199, 201, 209, 211, 247, 250, 273, 274, 326, 327, 350, 354, 497, 500, 517, 540, 592], "each": [4, 8, 13, 20, 59, 115, 124, 126, 129, 130, 179, 180, 184, 195, 197, 198, 200, 201, 204, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 245, 260, 273, 284, 299, 314, 334, 335, 372, 436, 438, 446, 461, 468, 497, 517, 531, 533, 540, 552, 555, 569, 570, 574, 592], "eagerli": [31, 245, 366], "earli": 3, "easili": 4, "echo": 10, "ecosystem": 516, "edg": 563, "editor": 10, "edu": [188, 335, 586], "eec": [335, 586], "eff": [517, 574], "effect": [4, 8, 20, 27, 28, 31, 43, 69, 77, 161, 167, 181, 193, 245, 273, 290, 291, 304, 517, 574, 592], "effective_s": [43, 69, 70, 201, 209], "effective_sample_s": [26, 27, 167, 193, 273, 274, 276, 290, 291], "effective_sample_sizeauto": [182, 291], "effective_sizeconstexpr": 43, "effici": [2, 31, 38, 131, 162, 193, 273, 570, 572], "effort": 6, "ego": 10, "eigen": [3, 8, 12, 13, 15, 17, 19, 21, 23, 29, 36, 39, 40, 47, 48, 51, 52, 53, 54, 56, 57, 63, 87, 92, 93, 96, 97, 98, 108, 109, 118, 119, 128, 133, 134, 136, 171, 183, 188, 193, 198, 204, 210, 215, 217, 221, 229, 231, 233, 235, 236, 237, 239, 240, 244, 249, 250, 254, 258, 262, 263, 264, 267, 268, 270, 271, 272, 273, 280, 282, 283, 286, 287, 289, 292, 293, 316, 317, 318, 326, 328, 329, 332, 333, 335, 337, 358, 360, 384, 385, 386, 398, 399, 402, 405, 406, 407, 463, 471, 478, 480, 483, 484, 487, 488, 510, 511, 513, 523, 529, 530, 537, 539, 547, 552, 555, 562, 563, 564, 566, 569, 570, 571, 572, 573, 583, 584, 585, 586], "eigen3": [249, 250], "eigen_compat": [133, 134, 193, 282, 283, 317, 318, 332, 333, 471, 563, 564, 570, 571, 572, 573, 585, 586], "eigen_major_vers": 183, "eigen_solv": [563, 564], "eigen_solverprecr": 563, "eigen_world_vers": 183, "eigenbas": [29, 128, 198, 204, 210, 221, 229, 233, 235, 236, 237, 239, 240, 244, 267, 268, 270, 273, 280, 406], "eigenvalu": [188, 270, 563, 564], "eigenvector": [188, 270, 563, 564], "either": [10, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 71, 115, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 425, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "ekumen": [0, 5, 8, 12, 25, 27, 28, 32, 34, 36, 38, 40, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 591], "ekumenlab": 0, "elem": 283, "element": [8, 29, 31, 69, 115, 129, 130, 160, 188, 193, 244, 245, 273, 274, 276, 280, 307, 313, 326, 327, 328, 334, 394, 421, 423, 430, 432, 436, 444, 446, 450, 451, 458, 459, 460, 461, 465, 466, 468, 471, 474, 475, 476, 477, 562, 586], "elementconstexpr": [307, 466], "elementsconstexpr": 185, "elementsdefinit": 185, "ellipoid": [563, 564], "ellipsoid": [555, 563, 564], "els": [28, 34, 36, 43, 130, 136, 188, 194, 247, 254, 270, 283, 285, 298, 310, 314, 322, 335, 461, 466, 468, 509, 571, 573], "emb": [12, 136, 273], "embed": [13, 15, 17, 21], "emphas": 245, "emplace_back": [8, 134, 283, 471, 569], "empti": [4, 28, 43, 69, 70, 115, 116, 130, 180, 201, 209, 252, 272, 458, 468, 479, 480, 483, 484, 510, 511, 512, 513, 517, 569], "emptyconstexpr": [43, 468], "en": [188, 270, 273, 378, 396, 430, 450, 569], "enabl": [32, 43, 69, 244, 268, 273, 322, 334, 335, 366, 425, 483, 485, 487, 489, 517, 519, 554, 560, 569, 574, 585, 586], "enable_borrowed_rang": [186, 308], "enable_if_t": [29, 32, 43, 69, 100, 124, 125, 126, 127, 128, 181, 182, 188, 198, 204, 210, 217, 220, 221, 229, 231, 233, 235, 236, 237, 239, 240, 244, 267, 268, 273, 280, 285, 295, 298, 305, 307, 310, 320, 334, 335, 339, 366, 368, 370, 372, 374, 378, 382, 383, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 425, 426, 430, 433, 446, 450, 459, 461, 465, 466, 467, 468, 555, 568, 569], "enable_safe_rang": 308, "enable_tf_broadcast_": [480, 483, 487, 489, 497, 500, 511, 513], "enable_tf_broadcast_beluga_amcl": [484, 488, 490], "enable_tf_broadcast_bool": [480, 511, 513], "enable_tf_broadcast_wheth": [480, 511, 513], "encod": [8, 10], "encourag": 2, "end": [4, 29, 39, 40, 43, 65, 66, 67, 69, 70, 106, 115, 116, 130, 188, 201, 209, 244, 252, 258, 262, 280, 285, 295, 310, 320, 322, 333, 346, 468, 471, 552, 569, 592], "end_cursor": [322, 459], "endauto": 40, "endconstexpr": [43, 468], "endfor": 4, "endif": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "enforc": [2, 572], "engin": [92, 93, 94, 95, 96, 97, 272, 314, 322, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "engine_": [314, 322], "engineth": [92, 94, 96, 436, 438, 444], "enhanc": 112, "enough": [4, 10], "ensur": [5, 8, 10, 130, 569, 570], "entri": [108, 130, 564], "enum": [40, 42, 43, 53, 54, 63, 64, 273, 287, 529, 530], "enumcastoutofrang": 43, "enumer": [30, 42, 63, 179, 180, 199, 273, 277, 281, 286, 287, 458, 459, 563, 564], "enumeratorkrolloveronwrit": 273, "enumeratorkstandard": 63, "environ": [5, 8, 59, 83, 273, 591], "epilogu": 193, "epsilon": [188, 273, 285, 446, 447, 460, 461, 464, 552], "epsilonmaximum": 273, "epsilonse": 446, "equal": [20, 40, 67, 69, 75, 87, 89, 247, 346, 388, 440, 459, 508, 520, 546, 560, 569, 578, 579, 581, 592], "equal_to": [520, 546, 560, 568, 569, 578, 579, 581], "equalitycompar": 20, "equat": [4, 188, 273, 592], "equip": 6, "equival": [69, 273, 378, 476, 517, 520, 546, 547, 560, 568, 569, 578, 579, 581, 591], "eras": 273, "erasur": 3, "erf": 34, "ericniebl": [115, 130], "error": [8, 36, 77, 186, 252, 254, 273, 282, 308, 326, 344, 352, 471, 483, 487, 489, 517, 519, 574], "error_": 40, "especi": [8, 10], "ess": [27, 28, 161, 167, 181, 182, 193, 245, 273, 290, 291, 304, 414], "essenti": 10, "estim": [4, 6, 10, 26, 27, 28, 29, 45, 71, 102, 110, 112, 129, 130, 136, 167, 193, 244, 270, 273, 274, 279, 280, 283, 289, 337, 364, 464, 471, 478, 480, 483, 484, 485, 487, 488, 489, 490, 511, 513, 517, 519, 525, 562, 569, 574], "estimate_clust": [129, 130, 273, 274, 276], "estimate_clustersauto": 130, "estimate_fn": [28, 130, 187, 188, 273], "estimatea": [483, 487, 489], "estimatecalcul": [28, 130, 188], "estimateconstexpr": [28, 130, 188], "estimatecovari": 130, "estimatest": 130, "estimation_typ": [28, 45, 46], "et": 188, "eta_hit": 34, "eta_short": 34, "etc": 77, "eth": 326, "euclidean": [273, 471], "euclidian": 273, "eugen": 63, "euler_angl": [335, 586], "eulerangl": [335, 586], "eval": [188, 471], "evalu": [31, 45, 130, 245, 323, 425, 525, 592], "even": [1, 3, 6, 79, 468, 591, 592], "evenli": [21, 118, 245, 458, 517], "event": [485, 515], "eventu": 6, "everi": [20, 28, 161, 189, 190, 193, 245, 304, 309, 412, 517], "every_n": [28, 161, 193, 245, 303, 304, 410, 412], "every_n_fn": [28, 29, 128, 189, 190, 217, 231, 244, 280, 411], "every_n_fnimplement": [190, 244], "every_n_fninlin": 411, "every_n_polici": [29, 128, 189, 190, 201, 209, 217, 231, 244, 280, 413], "every_n_policyconstexpr": 190, "every_n_policyimplement": [190, 244], "every_n_policyinlin": 413, "every_n_policyinlineexplicit": 413, "every_nconstexpr": [28, 190], "every_npolici": [28, 190], "everyth": 10, "evolv": [8, 245, 592], "exact": [94, 468], "exactli": [115, 268, 531, 571], "exampl": [1, 2, 6, 10, 243, 273, 504, 545, 592], "exce": 8, "except": [6, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 45, 69, 87, 89, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 483, 487, 489, 509, 511, 513, 515, 519, 523, 525, 531, 533, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "exclus": [483, 485, 487, 489, 515, 517], "exec": [5, 10], "execut": [28, 29, 45, 46, 244, 280, 284, 285, 294, 295, 309, 310, 319, 320, 368, 370, 372, 374, 478, 483, 485, 487, 489, 510, 511, 512, 513, 515, 517, 519, 525, 591, 592], "execution_polici": [28, 45, 46, 517, 519, 525, 526], "execution_policy_": [28, 519], "execution_policy_vari": [519, 525, 526, 540, 543], "execution_policy_variantexecut": 519, "execution_policy_variantstd": 519, "execution_policypolici": 45, "execution_policyvari": 525, "executionpolici": [28, 46, 195, 204, 205, 210, 213, 218, 222, 226, 232, 238, 244, 285, 295, 310, 320, 368, 369, 370, 371, 372, 373, 374, 375, 510, 511, 513], "executionpolicyan": [368, 372], "executionpolicyexecut": 45, "executionpolicyvari": [483, 485, 487, 489, 510, 511, 515], "executionpolicyvariantbeluga_amcl": [484, 486, 488, 490], "executionpolicyvariantget": 515, "executionpolicyvariantstd": [511, 515], "executionpolicyvariantsupport": [511, 515], "exercis": 3, "exhibit": 69, "exist": [1, 29, 69, 108, 115, 130, 188, 244, 273, 280, 283, 322, 368, 372, 390, 391, 444, 460, 465, 466, 517], "exp": [8, 34, 36, 254, 260, 262, 268, 282, 586, 592], "expect": [2, 8, 10, 34, 77, 188, 342, 468, 517, 531, 533, 562, 569, 571, 573], "expect_that": 326, "expected_measur": 8, "expens": [59, 252], "experi": 59, "explain": [243, 504, 545, 591], "explicit": [34, 36, 40, 41, 43, 76, 130, 136, 190, 192, 247, 252, 254, 258, 260, 262, 270, 272, 285, 289, 295, 305, 314, 316, 322, 333, 335, 468, 473, 480, 511, 513, 515, 550, 566, 569, 571, 573], "exploit": 592, "explor": [245, 506, 547], "exponenti": [8, 27, 29, 73, 167, 191, 192, 193, 244, 268, 273, 280, 464, 517, 574], "exponential_filt": [26, 27, 73, 167, 193, 464], "exponentialfilt": [74, 128, 191, 192, 201, 209, 217, 219, 231, 233, 273, 464], "exponentialfiltercal": [192, 244, 464], "exponentialfilterconstexpr": 192, "exponentialfilterinlin": 74, "exponentialfilterinlineexplicit": 74, "express": [12, 18, 20, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 122, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 366, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 508, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "extend": [2, 3, 79, 115, 245, 283], "extens": [485, 554, 560, 562, 569, 583, 584, 585, 586], "extent": 13, "extern": [36, 130, 250, 252, 254, 430, 450, 517, 546], "extra": [112, 468, 483, 485, 487, 489, 515], "extract": [402, 440, 554, 585, 586], "extrapol": [69, 273], "extrins": [122, 335, 517, 585, 586], "f": [10, 16, 17, 22, 29, 30, 40, 42, 43, 70, 128, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 215, 217, 218, 219, 220, 226, 229, 231, 232, 233, 235, 236, 237, 239, 244, 273, 274, 280, 456, 540, 542], "fa21": [335, 586], "face": [2, 268], "factor": [4, 73, 188, 245, 273, 284, 285], "factor_": 285, "factori": 273, "fail": [10, 270, 517, 592], "fall": 273, "fallback": 8, "fals": [28, 40, 43, 69, 87, 89, 180, 260, 273, 287, 335, 340, 356, 412, 414, 421, 423, 477, 480, 483, 487, 489, 511, 513, 517, 519, 531, 533, 555, 563, 564, 570, 571, 572, 573, 574], "false_typ": [32, 244, 298, 307, 322, 323, 466], "famili": 4, "far_end_cel": 316, "far_end_pose_in_local_fram": 316, "farrai": 69, "fast": [468, 517, 519, 574], "fast_averag": 464, "fast_filter_": 464, "favor": 3, "feasibl": 283, "featur": [1, 42, 43, 61, 69, 273, 506, 516, 517, 591, 592], "few": [1, 2, 4, 6, 69, 591], "fewer": 1, "fibonacci": 335, "field": [29, 81, 83, 85, 168, 193, 244, 245, 257, 258, 259, 260, 261, 262, 273, 280, 325, 478, 480, 483, 517, 519, 525, 531, 533, 552, 571, 573, 592], "field_0": [571, 573], "field_1": [571, 573], "field_2": [571, 573], "fifo": 69, "figur": [273, 592], "file": [10, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 483, 485, 487, 489, 494, 525, 527, 529, 531, 533, 537, 574, 576, 578, 579, 581, 591, 592], "filesystem": 283, "fill": [43, 69, 70, 204, 210, 243, 471, 504, 545, 552, 586], "fillvoid": 43, "filter": [4, 8, 11, 27, 28, 29, 44, 45, 73, 79, 112, 129, 130, 167, 187, 191, 192, 193, 244, 245, 251, 252, 255, 256, 273, 280, 286, 287, 340, 458, 459, 460, 464, 480, 483, 487, 489, 511, 513, 519, 524, 525, 527, 531, 533, 547, 550, 569, 571, 573, 574, 588], "final": [339, 483, 485, 487, 489, 515], "find": [6, 8, 10, 36, 77, 108, 129, 130, 252, 254, 283, 333, 465, 466, 552], "find_closest_bearing_landmark": [36, 77, 78, 204, 210, 252], "find_closest_bearing_landmarkstd": [36, 252], "find_nearest_landmark": [77, 78, 204, 210, 252, 254], "find_nearest_landmarkstd": [252, 254], "find_packag": 592, "finder": [29, 33, 34, 59, 81, 83, 85, 98, 168, 193, 244, 245, 257, 258, 259, 260, 261, 262, 273, 280, 283, 325], "finit": [13, 314, 459], "firefox": [24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585], "first": [1, 5, 6, 8, 34, 40, 43, 65, 69, 70, 106, 115, 116, 130, 180, 258, 260, 262, 305, 430, 458, 468, 517, 592], "first_": 322, "first_map_onli": 517, "first_rot": [136, 289], "first_rotation_param": 136, "firstiter": 69, "fit": [43, 69, 243, 504, 545], "fit_point": 283, "fix": [10, 40, 67, 69, 122, 569, 592], "flag": [42, 43, 45, 69, 273, 295, 525], "flat": [77, 552], "flatland": 6, "flatten": [12, 71, 136, 273, 364], "flexibl": 572, "flip": 3, "flipped_rot": [136, 289], "float": [81, 83, 85, 244, 258, 260, 262, 273, 282, 301, 330, 358, 480, 517, 519, 531, 533, 550, 552, 555, 568, 569, 570, 571, 572, 573], "float_datatyp": 571, "floor": [318, 334, 335], "floor_and_fibo_hash": [334, 335], "floor_and_fibo_hashconstexpr": 335, "flow": 3, "fmod": 569, "fn": [16, 22, 32, 219, 233, 244, 305, 310, 313, 314, 366, 367, 368, 369, 370, 371, 425, 426, 427, 428, 436, 437, 439], "fn_": 314, "fn_return_": 314, "fna": [368, 436, 438], "fnfn": 436, "fnthe": 438, "focal": 10, "focu": 11, "focus": 8, "follow": [4, 5, 6, 8, 10, 16, 18, 20, 22, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 243, 268, 289, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 468, 478, 483, 485, 487, 489, 504, 515, 525, 527, 529, 531, 533, 545, 574, 576, 578, 579, 581, 592], "footprint": [36, 254], "forc": [28, 45, 517, 519, 525], "force_upd": [28, 45, 46, 204, 210, 519, 525, 526, 540, 542], "force_update_": [28, 519], "force_updatevoid": [28, 519], "foremost": 6, "forget": 5, "form": [273, 508], "format": [8, 10, 329], "formula": [34, 258, 517], "fortun": 6, "forward": [75, 130, 136, 184, 185, 188, 194, 244, 247, 273, 285, 289, 291, 295, 305, 307, 310, 314, 320, 322, 339, 397, 425, 430, 431, 436, 438, 450, 451, 452, 459, 461, 466, 477, 525, 569, 573], "forward_iter": [40, 67], "forward_iterator_tag": [40, 67], "forward_lik": [193, 273, 274, 276, 306, 307], "forward_likeconstexpr": 194, "forward_rang": [188, 285, 459], "forwhich": [243, 504, 545], "fossa": 10, "found": [1, 8, 18, 77, 273, 430, 450, 465, 466, 517], "fox": [44, 524, 588], "fox01": [517, 588], "fr": 63, "fraction": 273, "fragment": 130, "frame": [10, 14, 17, 19, 23, 36, 49, 53, 54, 59, 61, 77, 79, 81, 85, 98, 106, 122, 202, 204, 249, 250, 252, 254, 256, 272, 273, 287, 344, 350, 354, 358, 517, 525, 527, 529, 530, 531, 533, 550, 553, 555, 566, 571, 573], "frame_id": [517, 553, 555, 564], "frame_idfram": 555, "frameframecoordin": 287, "frameplan": 53, "framework": [1, 591], "free": [8, 10, 17, 18, 53, 63, 94, 106, 260, 287, 356, 566, 576, 592], "free_at": [17, 53, 54, 204, 210, 287, 316, 529, 530], "free_atbool": 287, "free_cel": [17, 53, 54, 204, 210, 272, 287, 529, 530], "free_cellsauto": 287, "free_near": [17, 53, 54, 204, 210, 287, 529, 530], "free_nearbool": 287, "free_states_": 272, "friend": [32, 40, 43, 65, 66, 70, 75, 76, 88, 247, 270, 282, 305, 314, 322, 358, 359, 366, 427, 459], "from": [3, 4, 8, 14, 17, 19, 20, 23, 27, 29, 34, 40, 43, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 129, 130, 136, 167, 179, 184, 188, 193, 243, 244, 245, 247, 252, 254, 260, 267, 268, 270, 273, 280, 289, 297, 298, 310, 313, 314, 320, 321, 322, 326, 334, 335, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 460, 467, 468, 478, 480, 483, 485, 487, 489, 504, 511, 513, 515, 517, 519, 525, 527, 529, 531, 533, 545, 551, 552, 554, 555, 564, 569, 574, 576, 578, 579, 581, 585, 586, 591, 592], "from_vector": [204, 210, 268, 270, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "from_vectorstat": 268, "frommsg": [554, 556, 557, 562, 585, 586], "frommsgvoid": 586, "front": [43, 69, 70, 204, 210, 273], "frontconstexpr": 43, "full": [3, 43, 69, 70, 106, 204, 210, 273, 517], "fullconstexpr": 43, "fulli": 6, "function": [3, 4, 6, 8, 18, 20, 29, 30, 31, 32, 34, 36, 42, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 129, 130, 136, 179, 181, 190, 199, 244, 245, 254, 258, 262, 269, 271, 273, 277, 280, 281, 283, 289, 291, 293, 297, 298, 305, 307, 309, 313, 314, 319, 322, 326, 328, 334, 337, 338, 339, 346, 358, 364, 366, 368, 370, 372, 374, 378, 381, 384, 386, 388, 390, 394, 396, 398, 399, 402, 405, 407, 410, 412, 414, 416, 418, 421, 423, 425, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 460, 465, 466, 467, 468, 471, 482, 483, 485, 487, 489, 498, 510, 511, 512, 513, 521, 525, 527, 529, 531, 533, 541, 547, 551, 554, 555, 558, 560, 561, 562, 563, 568, 569, 576, 579, 581, 583, 585, 586], "functor": [2, 29, 244, 280, 386, 471, 569, 579, 581], "further": [11, 59, 83, 106], "furthermor": [3, 6], "fuse": 364, "futur": [8, 20, 517], "g": [3, 10, 13, 15, 17, 20, 21, 40, 42, 43, 69, 70, 77, 115, 273, 274, 497, 499, 500, 569], "g1": 20, "g2": 20, "gap": 2, "gaussian": [8, 34, 110, 260, 268, 342, 356, 517, 592], "gazebo": 591, "gazebo_model_path": 591, "ga\u0161per": 41, "gb": 10, "gcc": [480, 511, 513], "gen": [136, 289, 314, 337], "gener": [1, 2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592], "generatoran": [87, 89], "generatorth": [87, 89], "gentle2009computationalstatist": 270, "geometri": [249, 250, 271, 272, 292, 293], "geometry_msg": [479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 510, 511, 512, 513, 515, 517, 554, 555, 562, 566, 568, 569, 583, 584, 585, 586], "get": [4, 5, 42, 43, 47, 51, 53, 108, 118, 124, 130, 184, 185, 188, 252, 273, 274, 276, 287, 307, 314, 322, 335, 358, 430, 431, 466, 468, 480, 483, 485, 487, 489, 511, 513, 517, 519, 527, 529, 531, 533, 564, 566], "get_default_neighbors_kernel": [283, 360], "get_execution_polici": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "get_execution_policyauto": 515, "get_initial_estim": [480, 483, 484, 487, 488, 489, 490, 497, 499, 511, 513], "get_initial_estimateauto": [480, 511, 513], "get_motion_model": [480, 483, 484, 487, 488, 489, 490, 497, 499, 511, 513], "get_motion_modelauto": [480, 511, 513], "get_random_engin": [310, 314, 322, 436, 437, 438, 439, 444, 445], "get_random_state_gener": 28, "get_sensor_model": [480, 483, 484, 487, 488, 489, 490, 497, 499, 511, 513], "get_sensor_modelauto": 480, "get_sensor_modelbeluga": [511, 513], "getconstexpr": 43, "getsimpleextentdim": 283, "getspac": 283, "getyaw": [566, 586], "giorgio": [44, 524, 588], "git": [5, 591], "github": [5, 8, 34, 115, 130, 188, 258, 335, 569, 586, 591], "give": [335, 586], "given": [4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 31, 36, 42, 43, 45, 47, 51, 53, 56, 69, 71, 73, 75, 77, 87, 102, 104, 106, 108, 110, 118, 120, 122, 124, 126, 129, 130, 136, 181, 182, 192, 244, 245, 247, 252, 254, 264, 270, 273, 280, 284, 287, 289, 291, 294, 297, 298, 313, 316, 318, 319, 321, 322, 333, 335, 337, 368, 372, 378, 388, 446, 458, 461, 466, 476, 480, 483, 487, 489, 511, 513, 519, 525, 555, 566, 576, 592], "global": [8, 10, 14, 17, 19, 23, 480, 483, 517], "global_frame_id": 517, "global_localization_callback": [480, 483, 484, 497, 499], "global_localization_callbackvoid": 480, "global_localization_server_": [480, 483, 497, 500], "global_localization_server_beluga_amcl": 484, "global_localization_server_glob": 480, "global_localization_server_rclcpp": 480, "glpuga": [34, 258], "gmock": [326, 327], "go": [24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 479, 480, 505, 507, 508, 509, 510, 511, 512, 513, 518, 519, 522, 523, 546, 548, 549, 550, 551, 552, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586, 592], "goe": 2, "golden": 335, "good": [1, 4, 34, 273, 342], "googl": 588, "googletest": 326, "got": 10, "gov": 188, "govern": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "grai": [243, 504, 545], "graph": [24, 26, 31, 33, 35, 37, 39, 42, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 508, 510, 512, 518, 522, 549, 551, 563, 565, 568, 570, 572, 583, 585], "graphic": [244, 505, 546], "great": 3, "greater": [49, 69, 115, 129, 458, 471, 508], "green": [243, 504, 545, 592], "grid": [13, 15, 17, 21, 29, 34, 44, 47, 51, 53, 56, 59, 60, 81, 82, 83, 84, 85, 86, 94, 95, 98, 106, 107, 108, 118, 133, 134, 169, 193, 244, 258, 260, 262, 263, 264, 271, 272, 273, 280, 283, 286, 287, 316, 317, 318, 332, 333, 364, 472, 473, 478, 480, 483, 487, 489, 511, 513, 517, 520, 524, 525, 529, 530, 546, 552, 555, 560, 563, 564, 565, 566, 576, 588], "grid_": [34, 316, 566], "grid_data": 552, "grida": 555, "gridgrid": 106, "gridnew": 83, "gridoccup": [59, 81, 83, 85, 529], "gridth": 94, "grisetti": [44, 524, 588], "ground": 1, "group": [8, 120, 122, 129, 130, 188, 268, 273, 335, 478, 483, 485, 487, 489, 515], "group_bi": [129, 130], "gsb07": [517, 588], "gt": [12, 19, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 52, 54, 57, 60, 62, 63, 66, 67, 68, 70, 72, 73, 76, 77, 80, 82, 84, 86, 88, 90, 93, 95, 97, 99, 101, 102, 104, 107, 109, 110, 112, 116, 119, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 194, 195, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 346, 347, 348, 350, 352, 354, 356, 359, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 382, 385, 386, 387, 389, 400, 401, 403, 404, 406, 409, 410, 412, 414, 417, 419, 422, 424, 426, 427, 428, 430, 431, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 448, 450, 451, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 504, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 530, 532, 534, 535, 540, 542, 543, 544, 545, 546, 549, 550, 551, 552, 553, 554, 555, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 576, 580, 582, 583, 584, 585, 586], "gtest": [171, 193, 326, 463], "guarante": [130, 570], "guard": [186, 308], "guid": [10, 117, 269, 270, 271, 272, 273, 467, 468], "guidelin": 468, "h": [30, 41, 128, 196, 199, 211, 212, 225, 274, 283, 292, 293, 326, 327, 479, 480, 510, 511, 512, 513, 515, 540, 542, 562], "h5": 283, "h5cpp": [283, 510, 511], "h5f_acc_rdonli": 283, "h5file": 283, "ha": [1, 20, 79, 115, 130, 194, 270, 273, 293, 323, 418, 421, 423], "hack": 34, "half": [8, 290, 517, 574], "half_total_weight": 8, "halfwai": 364, "handi": 8, "handl": [8, 10, 188, 273, 552, 592], "happen": [8, 28, 340, 517, 519, 569, 574], "hardwar": [6, 10], "has_common_tuple_typ": [29, 128, 244, 273, 280, 391, 465, 466], "has_common_tuple_type_v": [273, 274, 279, 465, 466], "has_common_tuple_type_vconstexpr": 466, "has_common_tuple_type_vconveni": 466, "has_common_tuple_typemeta": 466, "has_likelihood_field": [128, 244, 273, 323, 393, 519, 525, 526, 540, 542], "has_likelihood_field_v": [273, 274, 279, 323, 519], "has_likelihood_field_vconstexpr": 323, "has_likelihood_field_vtrait": 323, "has_likelihood_fieldbool": 519, "has_likelihood_fielddefinit": 323, "has_member_st": [307, 430], "has_member_state_v": 307, "has_member_variable_st": [307, 430], "has_member_variable_state_v": 307, "has_member_variable_weight": [307, 450], "has_member_variable_weight_v": 307, "has_member_weight": [307, 450], "has_member_weight_v": 307, "has_non_member_st": [307, 430], "has_non_member_state_v": 307, "has_non_member_weight": [307, 450], "has_non_member_weight_v": 307, "has_single_el": [29, 128, 244, 273, 280, 307, 395, 450, 465, 466], "has_single_element_v": [273, 274, 279, 465, 466], "has_single_element_vconstexpr": 466, "has_single_element_vconveni": 466, "has_single_elementmeta": [307, 466], "has_stat": 298, "has_state_v": 298, "has_valu": [130, 283, 285, 287], "has_weight": 298, "has_weight_v": 298, "hash": [27, 29, 45, 100, 104, 120, 122, 124, 126, 128, 130, 167, 193, 217, 231, 244, 273, 280, 283, 334, 335, 338, 339, 384, 429, 446, 452, 453, 461], "hash_combin": 384, "hash_impl": [334, 335], "hash_implconstexpr": 335, "hasher": [45, 120, 122, 124, 126, 335, 446, 447, 461], "hashera": 446, "hasherhash": 446, "hashesrang": 273, "hasn": 517, "have": [3, 4, 6, 10, 13, 18, 20, 69, 75, 79, 115, 130, 188, 243, 252, 268, 273, 388, 425, 440, 468, 504, 545, 571, 573, 591, 592], "hawksbil": [10, 11], "hdf5": 283, "head": [12, 43, 268, 569, 586], "head_index": 43, "header": [8, 186, 308, 326, 508, 517, 553, 555, 564], "heading_rot": [136, 289], "heavili": 3, "height": [13, 47, 51, 53, 77, 118, 119, 134, 212, 225, 254, 264, 473, 529, 530, 540, 542, 552, 566, 571, 573], "height_": 473, "heightstd": [473, 552, 566], "help": [465, 517, 519, 574, 587], "helper": [100, 166, 193, 244, 273, 307, 338], "here": [2, 8, 10, 29, 34, 115, 193, 195, 197, 198, 200, 201, 204, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 273, 274, 280, 296, 356, 481, 495, 497, 501, 514, 520, 539, 540, 556, 560, 567], "hidden": [32, 243, 366, 504, 545], "hierarchi": [30, 482, 521], "high": 4, "higher": [2, 3, 8, 98, 130, 356], "highest": 273, "highli": 592, "highlight": 8, "histogram": 569, "histori": 6, "hit": [6, 34, 59, 79, 81, 83, 85, 98, 106, 258, 260, 262, 283, 342, 356, 517], "hmmm": 130, "hold": [13, 29, 129, 130, 244, 280, 376], "home": [6, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 483, 485, 487, 489, 525, 527, 529, 531, 533, 574, 576, 578, 579, 581], "homogen": [43, 455], "how": [5, 8, 10, 28, 243, 245, 273, 340, 348, 362, 504, 517, 545, 591, 592], "howev": [4, 69, 592], "hpp": [8, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 193, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 483, 485, 487, 489, 494, 495, 501, 502, 525, 527, 529, 531, 533, 537, 539, 547, 574, 576, 578, 579, 581, 592], "hppaction": 137, "hppassign": 137, "hppauxiliar": [36, 193, 252, 254], "hppbeam_model": 140, "hppbearing_sensor_model": 140, "hppbresenham": 145, "hppcircular_arrai": 138, "hppcompat": [480, 495, 511, 513], "hppconcept": [134, 193, 260, 264, 272, 287, 333, 473], "hppcontain": 138, "hppdata": [140, 156, 157], "hppdefin": [28, 193, 304], "hppdifferential_drive_model": 139, "hppdistance_map": 154, "hppeffective_sample_s": 152, "hppgener": [523, 539], "hppimplement": [25, 27, 34, 38, 43, 130, 132, 136, 182, 193, 258, 260, 262, 266, 270, 283, 285, 289, 291, 298, 300, 307, 310, 312, 316, 320, 322, 325, 337, 459, 461, 463, 464, 468, 470, 475, 519, 523, 539], "hppinclud": [28, 38, 193, 468, 539], "hppindexing_iter": 149, "hpplandmark": 193, "hpplandmark_detection_typ": [156, 158], "hpplandmark_sensor_model": [140, 156], "hpplikelihood_field_model": 140, "hpplikelihood_field_model_bas": [154, 155], "hpplikelihood_field_prob_model": 140, "hppmessag": [523, 539, 552, 569], "hppmotion": 139, "hppmultivariate_normal_distribut": 141, "hppmultivariate_uniform_distribut": 141, "hppndt_sensor_model": 155, "hppnormal": 137, "hppoccupancy_grid": 155, "hppomnidirectional_drive_model": [139, 151], "hppon_mot": 146, "hppoverlai": [137, 153], "hppparticl": [144, 148], "hppparticle_trait": [143, 147, 159], "hpppropag": [137, 143, 144], "hpprandom": [140, 141], "hppraycast": 154, "hppreweight": [137, 143, 144], "hppro": 495, "hppsensor": [137, 140], "hppsophus_match": 142, "hppsophus_print": 142, "hppsparse_value_grid": 155, "hppstationary_model": [139, 151], "hpptake_while_kld": 159, "hpptest": 142, "hppthrun_recovery_probability_estim": [147, 148], "hpptuple_trait": 151, "hpptuple_vector": 138, "hpputil": [523, 539], "hppvalue_grid": 155, "hppzip": 150, "hsize_t": 283, "hsl_and_hsv": 569, "hsv_to_rgb_altern": 569, "html": [8, 335, 384, 586], "http": [5, 8, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 63, 115, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 378, 384, 396, 430, 450, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 588, 591], "hue": [568, 569], "humbl": [10, 11, 591], "hypot": 34, "i": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 211, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 403, 404, 406, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 495, 497, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 540, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 580, 582, 583, 584, 585, 586, 587, 591, 592], "id": [104, 130, 252, 273, 334, 335, 376, 468, 517, 553, 555, 564, 569, 588], "idea": 321, "ident": [8, 20, 188], "identif": 254, "identifi": [8, 40, 56, 183, 586], "idiom": [2, 3], "idsindex": 334, "ie": [63, 108, 118, 169, 193, 263, 287, 333, 473, 517, 529, 562, 566, 569, 585, 586, 592], "ieee": [44, 524, 588], "ifdef": 308, "ifndef": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "ignor": [110, 254, 480, 511, 513, 517], "iii": 188, "ill": 273, "imag": [10, 61], "immedi": [480, 483], "impact": 273, "implement": [1, 2, 3, 4, 18, 24, 28, 29, 31, 32, 33, 35, 39, 41, 42, 43, 44, 45, 65, 69, 73, 87, 104, 106, 108, 112, 115, 129, 130, 131, 133, 134, 135, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 178, 179, 181, 184, 187, 188, 189, 191, 192, 193, 244, 245, 246, 253, 255, 257, 259, 260, 261, 263, 264, 267, 269, 271, 272, 273, 280, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 301, 303, 306, 309, 310, 313, 314, 315, 317, 319, 320, 321, 323, 326, 328, 330, 332, 333, 334, 336, 338, 340, 366, 368, 370, 372, 374, 396, 410, 412, 414, 416, 418, 427, 436, 438, 440, 442, 444, 446, 448, 458, 460, 461, 464, 465, 467, 468, 471, 472, 473, 474, 476, 477, 478, 517, 518, 519, 520, 523, 525, 537, 539, 546, 547, 549, 555, 560, 565, 570, 572, 574, 592], "impli": [12, 25, 27, 28, 31, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "implicit": [77, 100, 252, 270], "import": [4, 59, 61, 79, 81, 83, 85, 98, 273, 309, 319, 372, 517], "improv": [10, 44, 524, 588], "imput": 44, "ina": 562, "inaccur": 10, "inact": [480, 483, 485, 487, 489, 511, 513, 515], "inc": [12, 25, 27, 28, 32, 34, 36, 38, 40, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "includ": [4, 8, 10, 13, 15, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 193, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 483, 484, 485, 486, 487, 488, 489, 490, 495, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 539, 574, 575, 576, 577, 578, 579, 580, 581, 582, 591, 592], "includebeluga": [12, 24, 25, 26, 27, 37, 38, 131, 132, 137, 138, 139, 140, 141, 142, 162, 183, 265, 266, 303, 304, 306, 307, 311, 312, 324, 325, 462, 463, 469, 470, 474, 475], "includebeluga_amcl": [479, 480, 494, 508, 509, 510, 511, 512, 513, 515], "includebeluga_ro": [518, 519, 522, 523, 537, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "includebelugaact": [31, 32, 143, 144, 170, 284, 285, 294, 295, 309, 310, 319, 320], "includebelugaalgorithm": [28, 129, 130, 145, 146, 147, 148, 167, 179, 180, 181, 182, 187, 188, 191, 192, 315, 316, 334, 335, 464, 471], "includebelugaalgorithmraycast": [39, 40, 178], "includebelugacontain": [42, 43, 149, 150, 164, 467, 468], "includebelugadetail": [174, 186, 308], "includebelugamot": [135, 136, 151, 172, 288, 289, 336, 337], "includebelugapolici": [152, 161, 189, 190, 290, 291, 292, 293, 305], "includebelugarandom": [157, 175, 267, 268, 269, 270, 271, 272], "includebelugasensor": [33, 34, 35, 36, 153, 154, 155, 156, 168, 253, 254, 257, 258, 259, 260, 261, 262, 283, 323], "includebelugasensordata": [133, 134, 158, 169, 251, 252, 255, 256, 263, 264, 282, 286, 287, 301, 302, 317, 318, 330, 331, 332, 333, 472, 473], "includebelugatest": [171, 326, 327, 328, 329], "includebelugatyp": [173, 249, 250], "includebelugatype_trait": [166, 297, 298, 338, 339, 465, 466], "includebelugautil": [165, 194, 246, 247], "includebelugaview": [159, 160, 184, 185, 299, 300, 313, 314, 321, 322, 458, 459, 460, 461, 476, 477], "includeciabatta": [41, 177], "inclus": 112, "incorpor": 4, "incorrect": [10, 112, 268, 273], "increas": [10, 188, 517], "increment": [10, 75, 247, 412], "independ": [79, 270, 321, 592], "index": [13, 15, 17, 29, 30, 43, 47, 51, 52, 53, 54, 69, 70, 76, 108, 118, 119, 124, 126, 165, 180, 188, 193, 200, 213, 217, 226, 231, 232, 233, 234, 237, 239, 244, 246, 247, 260, 264, 273, 280, 283, 287, 432, 465, 466, 482, 521, 529, 530, 564], "index_at": [13, 47, 51, 52, 53, 54, 118, 119, 134, 213, 226, 264, 287, 529, 530], "index_atstd": 264, "index_sequ": [29, 128, 236, 237, 244, 273, 280, 334, 335, 380, 465, 466, 468], "index_sequenceunus": 334, "indexable_": 247, "indexablecontain": 75, "indexcontain": 75, "indexgrid": [51, 53], "indexing_iter": [42, 43, 75, 165, 193], "indexingiter": [43, 69, 76, 128, 200, 213, 217, 226, 231, 232, 233, 234, 237, 239, 244, 246, 247, 273], "indexingiteratora": [43, 247], "indexingiteratorindexingiter": 247, "indexpair": 180, "indic": [8, 15, 17, 51, 53, 69, 124, 126, 273, 287, 321, 323, 517, 555], "indirect": 31, "indirectli": [24, 26, 31, 33, 35, 37, 39, 42, 129, 131, 133, 135, 179, 181, 184, 187, 189, 191, 246, 249, 253, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 332, 334, 336, 338, 458, 460, 465, 467, 469, 472, 474, 476, 508, 518, 549, 565, 568, 570, 572, 583, 585], "indistinguish": 20, "individu": [59, 440], "industri": 1, "inequ": [40, 67, 346], "infer": 1, "infin": 188, "infinit": [20, 188, 268, 314, 321, 322], "inflat": [130, 517], "inflect": 364, "influenc": 8, "info": [188, 270, 471, 552, 566], "inform": [4, 28, 36, 44, 45, 254, 270, 273, 335, 372, 402, 519, 524, 525, 569, 588], "inher": 59, "inherit": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 93, 95, 97, 99, 101, 103, 105, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 123, 125, 127, 243, 244, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 382, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 403, 404, 406, 409, 411, 413, 415, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 431, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 454, 456, 457, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 526, 527, 528, 529, 530, 531, 532, 533, 534, 545, 546, 575, 577, 580, 582], "init": [115, 116, 468], "initi": [4, 8, 28, 45, 46, 69, 104, 115, 130, 184, 213, 226, 360, 402, 468, 480, 483, 485, 487, 489, 511, 513, 515, 519, 525, 526, 540, 542], "initial_pos": 517, "initial_pose_callback": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "initial_pose_callbackvoid": 515, "initial_pose_sub_": [483, 485, 487, 489, 497, 500, 515], "initial_pose_sub_beluga_amcl": [484, 486, 488, 490], "initial_pose_sub_pos": 515, "initial_pose_sub_rclcpp": 515, "initial_pose_top": 517, "initial_posit": 592, "initial_position_distribut": 592, "initial_position_sigma": 592, "initialize_from_estim": [480, 483, 484, 487, 488, 489, 490, 497, 499, 511, 513], "initialize_from_estimatebool": [480, 511, 513], "initialize_from_map": [480, 483, 484, 497, 499, 519, 525, 526, 540, 542], "initialize_from_mapbool": 480, "initialize_from_mapvoid": 519, "initializer_list": [115, 116, 468], "initializevoid": [28, 519], "initialpos": 517, "inject": [56, 112], "inlin": [8, 12, 32, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 109, 110, 116, 119, 120, 121, 122, 123, 125, 127, 185, 188, 190, 273, 283, 285, 291, 293, 295, 298, 300, 305, 307, 310, 314, 320, 322, 323, 326, 327, 358, 359, 385, 389, 417, 419, 422, 424, 426, 439, 445, 452, 453, 459, 461, 466, 471, 477, 525, 532, 534, 552, 553, 555, 562, 568, 569, 580, 582, 584, 585, 586], "inlineconstexpr": [31, 69, 112, 115, 124, 126, 184, 189, 273, 284, 290, 292, 294, 299, 309, 313, 319, 321, 368, 372, 388, 412, 414, 416, 421, 423, 425, 434, 436, 438, 444, 446, 458, 460, 476], "inlineconstexprnoexcept": [69, 73, 100, 112, 430, 450], "inlineconstexprprotect": 440, "inlineexplicit": [59, 60, 61, 62, 65, 66, 69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 102, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 426, 527, 529, 531, 532, 533, 534, 579, 580, 581, 582], "inlineexplicitconstexpr": [94, 115, 412], "inlineexplicitconstexprnoexcept": 73, "inlineexplicitnoexcept": 106, "inlinenoexcept": [69, 75, 87], "inlineprotectedstat": [82, 84, 86], "inlinestat": [400, 401, 403, 404, 406], "inlinestaticprotect": 83, "input": [4, 8, 31, 32, 73, 74, 104, 110, 129, 192, 273, 299, 321, 366, 368, 372, 440, 446, 460, 465, 466, 468, 471, 562], "input_iter": [273, 467, 468], "input_rang": [8, 188, 322, 461, 468], "inputnext": 73, "insert": [28, 129, 130, 245, 313, 314, 340, 436, 438, 461, 468, 569], "insert_iter": [467, 468], "insid": [283, 360, 591], "instal": [6, 8, 10, 591, 592], "instanc": [8, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 33, 34, 35, 36, 45, 59, 61, 69, 71, 79, 81, 83, 85, 87, 89, 98, 102, 108, 129, 130, 135, 136, 184, 243, 244, 253, 254, 257, 258, 259, 260, 261, 262, 270, 273, 280, 283, 288, 289, 342, 344, 348, 352, 356, 358, 360, 362, 364, 368, 372, 436, 446, 452, 480, 483, 487, 489, 504, 511, 513, 545, 562], "instanti": [8, 47, 49, 51, 53, 55, 56, 58, 243, 480, 483, 487, 489, 504, 511, 513, 545], "instead": [5, 8, 24, 26, 31, 33, 34, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 87, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 252, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 516, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 555, 563, 565, 568, 570, 572, 583, 585, 591, 592], "instruct": 8, "int": [4, 13, 17, 21, 32, 40, 47, 48, 51, 52, 53, 54, 56, 57, 67, 68, 75, 76, 108, 109, 118, 119, 134, 181, 182, 183, 188, 243, 247, 264, 268, 273, 282, 283, 285, 287, 295, 307, 310, 318, 320, 328, 329, 333, 358, 360, 366, 368, 370, 372, 374, 384, 385, 402, 430, 446, 450, 459, 461, 471, 504, 529, 530, 545, 550, 552, 555, 563, 564, 571, 573, 592], "int64_t": 283, "int8_t": [42, 43, 273, 552, 566, 576, 577], "integ": [15, 21, 29, 39, 40, 63, 66, 67, 68, 69, 197, 200, 201, 206, 209, 213, 214, 217, 226, 228, 231, 232, 233, 237, 239, 244, 273, 280, 283, 301, 334, 335, 346, 347, 384, 517, 592], "integerinteg": 65, "integr": [2, 8, 11, 75, 458, 479, 494, 495, 510, 512, 547, 587, 592], "integral_const": [43, 244, 335, 466], "intellig": [44, 524, 588], "intend": [1, 5], "intens": 83, "interchang": [2, 130], "interest": [188, 273], "interfac": [3, 29, 38, 41, 115, 162, 169, 193, 244, 245, 255, 273, 280, 301, 324, 330, 467, 481, 516, 520, 523, 537, 539, 547, 551, 563, 568], "intern": [20, 28, 44, 87, 112, 115, 188, 270, 412, 464, 524, 588], "internalcontain": [29, 115, 116, 128, 195, 197, 198, 200, 201, 205, 206, 207, 209, 218, 219, 220, 221, 232, 233, 235, 236, 237, 239, 244, 273, 280, 467, 468], "internalcontainercontain": 115, "interpret": [243, 273, 504, 520, 529, 545, 546, 560, 565, 566, 576], "interspers": 314, "interv": [28, 69, 340, 478, 517, 569], "inth": 562, "intrins": [335, 342, 586], "inv_resolut": 318, "invalid": [45, 87, 89, 270, 525], "invalid_argu": [283, 571, 573], "invalid_argumentif": [531, 533], "invers": [136, 188, 252, 254, 260, 282, 289, 293, 316, 569, 586], "inverse_max_dist": 260, "inverse_mean": 188, "invert": [41, 569], "investig": [34, 258], "invis": [243, 504, 545], "invoc": [20, 129], "invok": [32, 69, 87, 130, 285, 366, 446, 461], "invoke_result_t": [8, 28, 179, 180, 188, 260, 273], "involv": 31, "io": [8, 283], "ioformat": 329, "iostream": [328, 329], "iota": [549, 550, 570, 571, 572, 573], "iresult": 334, "is_adding_const": 194, "is_arithmetic_v": [29, 100, 125, 127, 128, 217, 220, 231, 233, 235, 237, 244, 273, 280, 334, 335, 339], "is_base_of": 188, "is_base_of_v": [29, 128, 188, 198, 204, 210, 221, 229, 233, 235, 236, 237, 239, 240, 244, 267, 268, 270, 273, 280, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "is_complet": [244, 466], "is_const_v": 194, "is_directori": 283, "is_execution_policy_v": [285, 295, 310, 320, 368, 370, 372, 374], "is_floating_point": 188, "is_floating_point_v": [188, 256, 282, 471], "is_fre": [17, 287, 540, 542, 566, 576, 577], "is_freestat": 566, "is_invocable_r_v": [305, 425, 426, 461], "is_invocable_v": [28, 310, 314], "is_lvalue_reference_v": [194, 322], "is_nothrow_swappable_v": [43, 69, 70], "is_obstacl": 180, "is_occupi": [17, 287, 540, 542, 566, 576, 577], "is_occupiedstat": 566, "is_particl": 298, "is_particle_range_v": [181, 182, 273, 285, 298, 310, 320, 322, 461, 464], "is_particle_v": 298, "is_random_distribut": 322, "is_random_distribution_v": 322, "is_range_closur": 32, "is_range_closure_v": [32, 366], "is_same_v": [28, 32, 36, 43, 69, 130, 136, 254, 283, 322, 333, 335, 459, 466, 471, 555, 568, 569, 571, 573], "is_tuple_lik": [128, 244, 273, 307, 430, 450, 465, 466], "is_tuple_like_v": [29, 128, 236, 237, 244, 273, 274, 279, 280, 298, 382, 383, 395, 433, 465, 466], "is_tuple_like_vconstexpr": 466, "is_tuple_like_vconveni": 466, "is_tuple_likemeta": [307, 466], "is_unknown": [287, 540, 542, 566, 576, 577], "is_unknownstat": 566, "is_valid_neighbor": 130, "isapprox": 270, "isbn": 588, "isn": 10, "isnan": 256, "issu": [6, 10, 34, 130, 258, 268], "it_": [322, 459], "iter": [8, 28, 29, 39, 40, 42, 43, 45, 65, 66, 68, 69, 70, 75, 76, 115, 128, 165, 193, 200, 213, 217, 226, 231, 232, 233, 237, 239, 244, 246, 247, 273, 280, 314, 321, 340, 346, 347, 436, 438, 467, 468, 476, 519, 525, 570], "iter_mov": [434, 435, 477], "iter_point": [571, 573], "iter_reference_t": [434, 435, 477], "iter_rvalue_reference_t": [434, 435, 477], "iter_value_t": [273, 434, 435, 467, 468, 477], "iter_zip_with": 477, "iterator_categori": [40, 67, 68, 75, 76, 226, 237, 247], "iterator_categorycategori": 247, "iterator_categoryiter": 40, "iterator_categorystd": [40, 247], "iterator_t": [314, 322, 459], "iterator_trait": [43, 69], "iteratorbresenham": [40, 244], "iteratorindexingiter": 43, "iteratorinlin": 68, "iteratorinlineexplicit": 68, "iteratoriter": [40, 43], "iteratortyp": 570, "ith": [42, 43, 273], "itr": 333, "its": [3, 8, 10, 29, 36, 43, 69, 75, 77, 244, 247, 252, 273, 280, 381, 425, 434, 435, 466, 477, 508, 516, 562, 591, 592], "itself": [2, 3, 32, 180, 483, 485, 487, 489, 515, 517, 555], "j": 273, "jalisco": [10, 11], "jammi": 10, "jazzi": [10, 11], "jellyfish": 10, "jmangelson": 188, "jointli": 188, "journal": 44, "jtc1": 335, "jtsmeaaaqbaj": 588, "jump": [8, 10, 517], "just": [6, 188, 366, 591], "k": [30, 196, 199, 227, 237, 240, 274, 461, 471, 540, 592], "kaappa": 471, "kaiju": 11, "kalman": 4, "kappa": [273, 471, 586], "kappaparamet": 273, "karrowbodylength": 569, "karrowheadlength": 569, "karrowheadwidth": 569, "karrowlength": 569, "kb": 569, "kbit": 335, "kcategori": 573, "kdefaultangularresolut": 569, "kdefaultkldz": [273, 446, 447, 460, 461], "kdefaultkldzconstexpr": 461, "kdefaultkldzdefault": 461, "kdefaultlinearresolut": 569, "kdefaultneighborkernel2d": 283, "kdefaultneighborkernel3d": 283, "kdefaultprob": [227, 240, 314, 436, 437], "kdefaultprobabilitybeluga": 437, "kdefaultprobabilitydefault": 314, "kdefaultprobabilitystat": 314, "kdefaultthreshold": [227, 240, 291, 414, 415], "kdefaultthresholdbeluga": 415, "kdefaultthresholddefault": 291, "kdefaultthresholdstat": 291, "kdifferentialmodelnam": 515, "keep": [3, 6, 273, 517, 591, 592], "kei": [2, 6, 108, 129, 130, 333, 592], "kept": [69, 115], "kernel": [8, 98, 283, 360, 592], "kextrapolateonread": [42, 43, 273], "key_typ": [108, 109, 130, 227, 237, 283, 333], "key_typekei": 333, "key_typetypenam": 333, "keywithprior": 130, "keyword": 41, "kfib": 335, "kflippingrot": 136, "kfreevalu": [540, 544, 566, 576], "kfreevaluebeluga_ro": 577, "kfreevaluefre": 566, "kfreevaluestat": 566, "kg": 569, "kglobal": [53, 272, 287], "kilt": 11, "kind": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "kindex": 466, "kinemat": 592, "klayoutrevers": [42, 43, 69, 273], "kld": [28, 44, 245, 273, 340, 460, 461, 478, 517, 519, 524, 574, 588], "kld_condit": [273, 274, 276, 446, 460, 461], "kld_conditionauto": 461, "kld_epsilon": [28, 227, 240, 340, 519, 540, 544, 574], "kld_epsilonbeluga": 341, "kld_epsilonbeluga_ro": 575, "kld_epsilondoubl": [28, 519], "kld_epsilonmaximum": 519, "kld_epsilonus": 28, "kld_z": [28, 227, 240, 340, 519, 540, 544, 574], "kld_zbeluga": 341, "kld_zbeluga_ro": 575, "kld_zdoubl": [28, 519], "kld_zupper": 519, "kld_zuse": 28, "klocal": [53, 287], "kmatch": 466, "kminpointspercel": 283, "kminvari": 283, "kmodifi": [40, 63, 64, 203, 227], "kmodifieddefinit": 40, "knav2differentialmodelnam": 515, "knav2omnidirectionalmodelnam": 515, "knin": 471, "knone": [42, 43, 69, 273], "knout": 471, "know": [314, 468, 592], "known": [2, 10, 61, 79, 348, 362, 478, 480, 483, 487, 489, 511, 513, 517, 592], "knumdim": 283, "koccupiedvalu": [540, 544, 566, 576], "koccupiedvaluebeluga_ro": 577, "koccupiedvalueoccupi": 566, "koccupiedvaluestat": 566, "komnidirectionalmodelnam": 515, "kr": 569, "krolloveronwrit": [42, 43, 273], "ksinglelin": 329, "kstandard": [40, 63, 64, 203, 227], "kstandardstandard": 40, "kstationarymodelnam": 515, "ktupleindexambigu": 466, "ktupleindexnotfound": 466, "kullback": [273, 460], "kunknownvalu": [540, 544, 566, 576], "kunknownvaluebeluga_ro": 577, "kunknownvaluestat": 566, "kunknownvalueunknown": 566, "l": [14, 30, 128, 196, 199, 211, 214, 228, 237, 240, 252, 274, 278, 471, 497, 499, 500, 535, 540, 542], "l135": 188, "l2": [98, 358], "l262": 115, "l_matrix": 471, "label": [243, 504, 545], "lack": 59, "lambda": [2, 8, 130], "lambda_short": [34, 228, 240, 342, 517], "lambda_shortbeluga": 343, "lambda_shortdoubl": 34, "lambda_shortintrins": 34, "landmark": [29, 35, 36, 61, 77, 78, 79, 168, 169, 173, 193, 244, 245, 249, 250, 251, 252, 253, 254, 273, 280, 325, 350, 354, 478], "landmark_a_bearing_in_sensor": 252, "landmark_a_position_in_world": 252, "landmark_b_bearing_in_sensor": 252, "landmark_b_distance_in_world_squar": 252, "landmark_b_position_in_world": 252, "landmark_b_squared_in_world_squar": 252, "landmark_bearing_in_robot": 254, "landmark_bearing_in_sensor": 36, "landmark_detection_typ": [35, 36, 173, 193, 251, 252, 253, 254, 350, 354], "landmark_in_robot_posit": 254, "landmark_map": [36, 61, 62, 77, 79, 80, 156, 169, 193, 254, 592], "landmark_map_": [36, 254], "landmark_mapmap": [61, 79], "landmark_posit": 592, "landmark_position_in_sensor": 252, "landmark_position_in_world": 254, "landmark_range_in_robot": 254, "landmark_sensor_model": [79, 168, 193, 324, 325, 352], "landmarkbearing3": [36, 77, 78, 249, 250, 252, 273, 274, 278, 350], "landmarkbearing3bear": [250, 252], "landmarkbearing3eigen": [250, 252], "landmarkbearingdetect": [36, 61, 128, 198, 200, 240, 249, 250, 273, 351], "landmarkbearingdetectionlandmark": [244, 250], "landmarkcategori": [36, 77, 78, 249, 250, 252, 254, 273, 274, 278, 350, 354], "landmarkcategorytyp": [250, 252], "landmarkcategoryuint32_t": [250, 252], "landmarkmap": [35, 36, 62, 78, 80, 128, 197, 204, 206, 210, 214, 215, 217, 222, 228, 229, 231, 232, 235, 237, 238, 241, 244, 251, 252, 253, 254, 273], "landmarkmapbas": [36, 244, 252, 254], "landmarkmapboundari": [77, 78, 249, 250, 252, 273, 274, 278], "landmarkmapboundariesboundari": [250, 252], "landmarkmapboundarieseigen": [250, 252], "landmarkmapclass": [61, 79], "landmarkmapinlin": 78, "landmarkmapinlineexplicit": 78, "landmarkmaplandmarkmap": 252, "landmarkmodelparam": [79, 128, 235, 240, 253, 254, 273, 353], "landmarkmodelparamparamet": [244, 254], "landmarkposition3": [77, 78, 249, 250, 252, 254, 273, 274, 278, 354], "landmarkposition3eigen": [250, 252], "landmarkposition3posit": [250, 252], "landmarkpositiondetect": [77, 79, 128, 198, 200, 240, 249, 250, 252, 254, 273, 355], "landmarkpositiondetectionlandmark": [244, 250], "landmarks_": 252, "landmarks_set_position_data": [77, 78, 228, 237, 252], "landmarks_set_position_datastd": 252, "landmarks_set_position_datavector": 252, "landmarksensormodel": [22, 29, 80, 128, 214, 217, 222, 228, 229, 231, 232, 235, 237, 238, 241, 244, 245, 253, 254, 273, 280, 352], "landmarksensormodel2d": [253, 254, 273, 274, 278], "landmarksensormodel3d": [253, 254, 273, 274, 278], "landmarksensormodelgener": 254, "landmarksensormodellandmarksensormodel": 254, "landmarkslist": 77, "lang": 43, "languag": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "laps": 517, "larg": [1, 4, 10, 252, 260, 468, 517], "larger": 3, "laser": [49, 169, 193, 244, 255, 258, 260, 262, 273, 356, 480, 483, 487, 489, 511, 513, 517, 519, 525, 527, 550], "laser_callback": [487, 488, 489, 490, 497, 499, 511, 513], "laser_callbackvoid": [511, 513], "laser_likelihood_max_dist": 517, "laser_max_rang": 517, "laser_min_rang": 517, "laser_model_typ": 517, "laser_scan": [49, 169, 193, 479, 480, 508, 509, 510, 511, 512, 513, 518, 519, 522, 523, 525, 526, 527, 537, 539], "laser_scan_connection_": [480, 483, 487, 489, 497, 500, 511, 513], "laser_scan_connection_beluga_amcl": [484, 488, 490], "laser_scan_connection_connect": [480, 511, 513], "laser_scan_filter_": [480, 483, 487, 489, 497, 500, 511, 513], "laser_scan_filter_beluga_amcl": [484, 488, 490], "laser_scan_filter_std": [480, 511, 513], "laser_scan_filter_transform": [480, 511, 513], "laser_scan_sub_": [480, 483, 487, 489, 497, 500, 511, 513], "laser_scan_sub_beluga_amcl": [484, 488, 490], "laser_scan_sub_las": [480, 511, 513], "laser_scan_sub_std": [480, 511, 513], "laser_scanlas": 525, "laserscan": [2, 10, 49, 296, 480, 483, 484, 487, 488, 511, 517, 519, 520, 523, 525, 526, 528, 535, 537, 539, 540, 542, 543, 546, 547, 549, 550, 555, 560], "laserscaninlin": 528, "laserscaninlineexplicit": 528, "laserscanlaserscan": 550, "laserscanthin": [519, 546, 550], "last": [6, 8, 43, 69, 70, 115, 116, 188, 273, 348, 362, 468, 483, 487, 489, 517, 519, 574, 592], "last_in": 468, "last_known_estimate_": [480, 483, 487, 489, 497, 500, 511, 513], "last_known_estimate_beluga_amcl": [484, 488, 490], "last_known_estimate_last": [480, 511, 513], "last_known_estimate_std": [480, 511, 513], "last_known_odom_transform_in_map_": [480, 483, 487, 489, 497, 500, 511, 513], "last_known_odom_transform_in_map_beluga_amcl": [484, 488, 490], "last_known_odom_transform_in_map_last": [480, 511, 513], "last_known_odom_transform_in_map_std": [480, 511, 513], "last_out": 468, "lastsentinel": 69, "latch": 517, "latest": 5, "latest_pose_": 293, "launch": [6, 10, 591], "law": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "layer": [112, 480, 494, 495, 508, 511, 513], "layout": [3, 15, 43, 69, 273, 519, 520, 531, 533, 546, 555, 560, 570, 571, 572, 573], "lazili": [184, 245, 299, 425], "lead": [314, 572], "least": [5, 10, 184, 334, 517, 533, 555, 569, 573], "left": [305, 309, 427, 428], "left_hash": 335, "legend": [47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 483, 485, 487, 489, 527, 529, 531, 533], "leibler": [273, 460], "length": [3, 21], "length_error": 43, "length_errorif": 69, "less": [8, 31, 83, 115, 130, 273, 517, 572, 574], "let": [8, 10, 34, 592], "level": [29, 193, 244, 280, 481, 495, 505, 520, 539, 546, 560], "leverag": [2, 516], "lflag": [42, 43, 273], "li": 44, "lib": [384, 592], "librari": [2, 3, 8, 36, 38, 108, 130, 162, 193, 245, 250, 252, 254, 298, 300, 306, 326, 384, 478, 506, 547, 562, 587, 592], "licens": [1, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "lidar": [6, 10, 34, 59, 79, 81, 83, 85, 98, 258, 262, 283, 517, 527, 547], "lie": [8, 188, 268, 273, 283, 360, 478, 517], "lifecycl": [479, 480, 481, 483, 485, 487, 489, 505, 506, 510, 511, 512, 513, 515, 517], "lifecycle_nod": [479, 480, 508, 509, 510, 511, 512, 513, 515], "lifecyclenod": [483, 485, 487, 489, 505, 508, 509, 515], "lifecyclenodeinterfac": 480, "lifecyclepublish": [480, 483, 485, 487, 489, 513, 515], "lifetim": [59, 61, 79, 81, 85, 98, 569], "lifo": 69, "like": [3, 6, 8, 10, 29, 39, 42, 43, 71, 75, 102, 110, 115, 136, 166, 178, 188, 193, 244, 245, 273, 280, 289, 298, 307, 314, 316, 337, 378, 381, 391, 394, 396, 430, 450, 465, 466, 467, 470, 517, 569, 592], "likelihood": [2, 8, 34, 81, 83, 85, 98, 168, 193, 244, 245, 257, 258, 259, 260, 261, 262, 273, 283, 319, 325, 358, 360, 478, 483, 517, 519, 525, 537, 539, 551, 552, 555, 592], "likelihood_at": [98, 99, 214, 228, 282, 283, 358, 359], "likelihood_atdoubl": [282, 283], "likelihood_field": [29, 81, 82, 83, 84, 85, 86, 128, 214, 228, 244, 260, 273, 280, 323, 517, 519, 525, 526, 537, 539, 540, 542, 555], "likelihood_field_": [81, 83, 85, 228, 240, 258, 260, 262], "likelihood_field_beluga": [82, 84, 86], "likelihood_field_definit": 260, "likelihood_field_model": [81, 168, 193, 324, 325], "likelihood_field_model_bas": [83, 137, 140, 168, 193, 257, 258, 261, 262, 356], "likelihood_field_origin": [81, 82, 83, 84, 85, 86, 214, 228, 260, 519, 525, 526, 540, 542], "likelihood_field_originauto": [260, 519], "likelihood_field_prob_model": [85, 168, 193, 324, 325], "likelihood_field_pub_": [480, 483, 497, 500], "likelihood_field_pub_beluga_amcl": 484, "likelihood_field_pub_likelihood": 480, "likelihood_field_pub_rclcpp_lifecycl": 480, "likelihood_field_valuegrid2": 260, "likelihood_fieldconst": [260, 519], "likelihood_valu": 260, "likelihoodfieldcommonmodel": [81, 83, 85, 260], "likelihoodfieldmodel": [2, 8, 22, 82, 128, 214, 217, 228, 229, 231, 232, 235, 237, 241, 244, 245, 257, 258, 273, 519, 525], "likelihoodfieldmodelbas": [29, 81, 82, 84, 85, 86, 128, 214, 215, 222, 228, 229, 232, 237, 238, 240, 241, 244, 258, 259, 260, 262, 273, 280, 356], "likelihoodfieldmodelbaselikelihood": [258, 260, 262], "likelihoodfieldmodelbaselikelihoodfieldmodelbas": 260, "likelihoodfieldmodelbaseparam": [81, 83, 85, 128, 229, 235, 240, 242, 257, 258, 259, 260, 261, 262, 273, 357], "likelihoodfieldmodelbaseparamparamet": [244, 258, 260, 262], "likelihoodfieldmodellikelihood": 258, "likelihoodfieldmodellikelihoodfieldmodel": 258, "likelihoodfieldmodelparam": [81, 257, 258, 273, 274, 278], "likelihoodfieldmodelparamlikelihoodfieldmodelbaseparam": 258, "likelihoodfieldmodelparamparamet": 258, "likelihoodfieldprobmodel": [86, 128, 214, 217, 228, 229, 231, 232, 235, 237, 241, 244, 261, 262, 273, 519, 525], "likelihoodfieldprobmodellikelihood": 262, "likelihoodfieldprobmodellikelihoodfieldprobmodel": 262, "likelihoodfieldprobmodelparam": [85, 261, 262, 273, 274, 278], "likelihoodfieldprobmodelparamlikelihoodfieldmodelbaseparam": 262, "likelihoodfieldprobmodelparamparamet": 262, "likewis": 10, "limit": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 75, 91, 94, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 334, 335, 337, 338, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 574, 584, 586], "limited_rang": 468, "line": [10, 29, 39, 40, 63, 66, 67, 68, 128, 197, 200, 201, 206, 209, 213, 214, 217, 226, 228, 231, 232, 233, 237, 239, 244, 273, 280, 346, 347, 569], "line_list": 569, "linear": [8, 15, 17, 29, 51, 118, 130, 169, 193, 244, 263, 273, 280, 287, 364, 472, 473, 478, 586], "linear_clustering_resolut": [120, 121, 122, 123, 335], "linear_clustering_resolutionclust": [120, 122], "linear_grid": [51, 169, 193, 286, 287, 472, 473], "linear_hash_resolut": [130, 228, 240, 364], "linear_hash_resolutionbeluga": 365, "linear_hash_resolutionclust": 130, "linear_hash_resolutiondoubl": 130, "linear_noise_": 8, "linear_resolut": [540, 544, 555, 568, 569, 579, 581], "linear_resolutionbeluga_ro": [580, 582], "linear_resolutionconst": 569, "linear_resolutionlinear": 555, "linear_resolutionresolut": 569, "linear_stddev": 8, "linear_veloc": 8, "lineargrid2": [17, 51, 296], "linearli": 569, "linebresenham": 40, "linelin": 40, "link": [195, 197, 198, 200, 201, 204, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 274, 326, 497, 501, 540, 556], "linux": 11, "list": [5, 8, 30, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 195, 197, 198, 200, 201, 204, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 244, 274, 281, 296, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 379, 383, 384, 386, 388, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 421, 423, 425, 427, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 455, 482, 483, 485, 487, 489, 496, 497, 501, 505, 514, 521, 525, 527, 529, 531, 533, 540, 546, 556, 561, 567, 569, 574, 576, 579, 581], "listen": [483, 485, 487, 489, 515], "literatur": [283, 360], "littl": 1, "ll": 254, "llt": 471, "llvm": [186, 308], "load": [3, 10, 517, 591], "load_from_hdf5": 283, "local": [1, 3, 5, 6, 10, 11, 14, 17, 19, 23, 28, 29, 34, 45, 115, 130, 244, 258, 262, 273, 280, 340, 478, 517, 518, 519, 520, 523, 525, 527, 537, 539, 546, 555, 560, 574, 591, 592], "localization_launch": 6, "localization_map": 6, "localization_params_fil": 6, "locat": [8, 77, 252], "log": [12, 36, 136, 188, 254, 260, 262, 268, 289, 293, 335, 483, 487, 489, 517, 569, 586], "logic": [3, 305, 427], "long": [1, 20, 112], "longer": 3, "longitudin": 362, "longstand": 516, "look": [8, 29, 115, 244, 245, 273, 280, 467, 480, 483], "lookup": 273, "lookup_transform": [480, 483, 484, 497, 499], "lookup_transformstd": 480, "loss": [3, 517, 519, 574], "lot": 468, "low": [4, 468, 592], "lower": [10, 49, 130, 517, 574], "lsquo": 45, "lt": [10, 12, 19, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 52, 54, 57, 60, 62, 63, 66, 67, 68, 70, 72, 73, 76, 77, 80, 82, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102, 104, 107, 109, 110, 112, 116, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 346, 347, 348, 350, 352, 354, 356, 359, 361, 362, 364, 366, 368, 370, 372, 374, 377, 380, 382, 385, 386, 387, 389, 400, 401, 403, 404, 406, 409, 410, 412, 414, 417, 419, 422, 424, 426, 427, 428, 430, 431, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 448, 450, 451, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 483, 484, 485, 487, 488, 489, 490, 504, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 530, 532, 534, 535, 540, 542, 543, 544, 545, 546, 549, 550, 551, 552, 553, 554, 555, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 576, 580, 582, 583, 584, 585, 586], "lvalu": [20, 31, 42, 43, 65, 273], "m": [22, 30, 43, 44, 69, 70, 108, 128, 188, 196, 199, 211, 215, 229, 237, 240, 274, 471, 497, 499, 500, 540, 542, 592], "m_pi": 34, "m_usedclass": [243, 504, 545], "ma": [44, 524, 564, 588], "macro": [41, 326, 496, 503, 508], "made": 5, "magazin": 44, "mai": [5, 6, 8, 10, 12, 25, 27, 28, 31, 32, 34, 36, 38, 40, 41, 43, 69, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 572, 573, 584, 586, 591, 592], "main": [12, 20, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 42, 43, 129, 130, 133, 134, 135, 136, 179, 180, 181, 182, 184, 187, 188, 189, 191, 192, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 280, 282, 283, 284, 286, 287, 288, 289, 290, 292, 294, 297, 298, 299, 301, 302, 305, 306, 307, 309, 313, 315, 316, 317, 318, 319, 321, 323, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 460, 461, 464, 465, 466, 467, 468, 471, 472, 473, 476, 518, 519, 520, 522, 549, 550, 551, 552, 553, 555, 560, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 592], "maintain": [45, 525, 570], "major": [508, 509, 517, 529, 562, 566, 585, 586], "make": [3, 10, 31, 34, 69, 258, 262, 268, 273, 321, 326, 364, 388, 568, 569, 591, 592], "make_action_closur": [32, 310, 320], "make_cluster_map": 130, "make_from_pair": 130, "make_from_st": [28, 273, 274, 279, 297, 298, 322, 519, 592], "make_from_state_fn": [128, 217, 231, 244, 273, 297, 298, 322, 389], "make_from_state_fnfunct": 298, "make_from_statea": [298, 322], "make_from_stateconstexpr": [298, 322], "make_index_sequ": [335, 378, 466, 468], "make_likelihood_field": [81, 82, 83, 84, 85, 86, 215, 229, 260], "make_likelihood_fieldstat": 260, "make_opt": [264, 316], "make_origin_transform": 566, "make_pair": [130, 188, 471], "make_particle_filt": [480, 483, 484, 487, 488, 489, 490, 497, 499, 511, 513], "make_particle_filterauto": [480, 511, 513], "make_polici": [190, 273, 274, 279, 291, 293, 305], "make_policy_fn": [190, 273, 291, 293, 305], "make_policyconstexpr": [190, 291, 293, 305], "make_policymak": [190, 291, 293, 305], "make_priority_queu": [129, 130], "make_priority_queueauto": 130, "make_signed_t": [75, 247, 335], "make_subrang": 468, "make_transform": 270, "make_tupl": 335, "make_unsigned_t": 335, "make_view_closur": [314, 322, 459, 461], "manag": [5, 8, 61, 79, 483, 485, 487, 489, 515, 517], "mangelson": 188, "mangelson2020tro": 188, "mani": [1, 2, 3, 28, 77, 340, 517, 592], "manifold": [188, 273], "manual": [28, 45, 519, 525], "map": [6, 8, 19, 23, 28, 29, 34, 36, 44, 45, 46, 59, 60, 61, 62, 69, 77, 79, 80, 81, 83, 85, 98, 108, 129, 130, 169, 179, 180, 188, 193, 244, 249, 250, 251, 252, 254, 260, 268, 273, 280, 283, 356, 360, 480, 483, 487, 489, 510, 511, 513, 517, 519, 524, 525, 526, 555, 564, 568, 569, 571, 573, 586, 588, 591], "map_": [489, 497, 500, 513], "map_beluga_amcl": [490, 513], "map_boundaries_": 252, "map_callback": [480, 483, 484, 497, 499], "map_callbackvoid": 480, "map_distribution_": 519, "map_limit": [77, 78, 215, 229, 252], "map_limitslandmarkmapboundari": 252, "map_ndt": 513, "map_path": 10, "map_saver_cli": 10, "map_serv": 10, "map_siz": 592, "map_sub_": [480, 483, 497, 500], "map_sub_beluga_amcl": 484, "map_sub_occup": 480, "map_sub_rclcpp": 480, "map_top": 517, "map_typ": [28, 34, 36, 45, 46, 59, 60, 61, 62, 79, 80, 81, 82, 83, 84, 85, 86, 98, 99, 108, 109, 229, 237, 254, 258, 260, 262, 283, 333, 564], "map_typemap": [34, 258, 260, 262, 283], "map_typemaptyp": 333, "map_typeoccupancygrid": [34, 258, 260, 262], "map_typesparsegridt": 283, "map_typeunderli": 333, "map_visualization_pub_": [489, 497, 500, 513], "map_visualization_pub_beluga_amcl": 490, "map_visualization_pub_map": 513, "map_visualization_pub_rclcpp_lifecycl": 513, "map_yaml_path": 6, "mapnew": 59, "mapoccup": 525, "mapped_typ": [98, 108, 109, 229, 237, 283, 333], "mapped_typetypenam": 333, "mapped_typevalu": 333, "mapth": 129, "maptyp": [109, 200, 208, 219, 220, 227, 229, 233, 235, 237, 244, 273, 332, 333, 555, 563, 564], "maptypeassoci": 108, "maptypecontain": 555, "margin": 4, "marker": [483, 485, 487, 489, 515, 553, 555, 563, 564, 568, 569], "marker_arrai": [479, 480, 515, 553, 563, 564, 568, 569], "markerarrai": [10, 483, 485, 487, 489, 513, 515, 517, 553, 555, 563, 564, 568, 569], "markermark": 563, "mask": [42, 43, 53, 273, 287, 294], "mask_rang": 295, "mask_range_": 295, "mask_valu": 295, "mask_value_": 295, "maskrang": 295, "maskvalu": 295, "mass": 592, "match": [3, 4, 8, 10, 29, 36, 59, 69, 71, 94, 102, 110, 124, 126, 136, 244, 254, 280, 289, 294, 337, 386, 465, 466, 517, 531, 533, 555, 571, 573, 592], "matcher": [171, 193, 326, 327, 463], "mathemat": [8, 273, 471], "mathrm": [4, 592], "matric": [328, 478], "matrix": [8, 87, 90, 183, 188, 215, 217, 229, 231, 235, 237, 239, 244, 268, 269, 270, 273, 282, 283, 328, 329, 335, 358, 398, 399, 402, 405, 407, 471, 510, 511, 531, 552, 555, 562, 563, 564, 569, 571, 583, 584, 585, 586], "matrix2xd": 282, "matrix3": [188, 562, 585, 586], "matrix3d": [480, 483, 484, 487, 488, 511, 519, 525, 526], "matrix3x": [19, 183, 571], "matrix3xd": 282, "matrix6d": [489, 490, 513], "matrix_s": [229, 240, 268, 402], "matrix_sizebeluga": 406, "matrix_typ": [89, 90, 229, 237, 270], "matrix_typematrix": 270, "matrix_typeth": 270, "matrixbas": [188, 273, 471, 586], "matrixl": 471, "max": [34, 188, 252, 272, 283, 322, 326, 342, 446, 447, 459, 461, 471, 517, 527, 528, 550, 552, 569], "max_beam": [517, 527, 528, 550], "max_beams_": 550, "max_beamsmaximum": 527, "max_bin_weight": 569, "max_distance_valu": [179, 180, 260, 273], "max_distance_valueth": 273, "max_el": [129, 130, 319, 320], "max_it": 552, "max_laser_dist": [229, 240, 258, 260, 262, 356], "max_laser_distancebeluga": 357, "max_laser_distancedoubl": [258, 260, 262], "max_laser_distancemaximum": [258, 260, 262], "max_obstacle_dist": [229, 240, 260, 356], "max_obstacle_distancebeluga": 357, "max_obstacle_distancedoubl": 260, "max_obstacle_distancemaximum": 260, "max_particl": [10, 28, 229, 240, 340, 517, 519, 540, 544, 574], "max_particlesbeluga": 341, "max_particlesbeluga_ro": 575, "max_particlesmaximum": [28, 519], "max_particlesstd": [28, 519], "max_prior": 130, "max_rang": [14, 49, 106, 107, 256, 316, 527, 528, 540, 542, 550], "max_range_": [316, 550], "max_rangeauto": 550, "max_rangemaximum": [106, 527], "max_siz": [43, 69, 70, 215, 229], "max_sizeconstexpr": 43, "max_val": 552, "max_weight": 130, "maxim": 252, "maxima": 273, "maximum": [10, 14, 43, 69, 273, 340, 342, 356, 517, 527, 550, 574], "maxmaximum": 446, "mayb": 130, "maybe_ndt": 283, "maybe_unus": [110, 111, 334, 335, 337, 483, 484, 485, 486, 487, 488, 489, 490, 515], "mcl": [1, 11, 478, 547, 592], "mean": [8, 13, 15, 17, 28, 29, 87, 88, 89, 90, 129, 130, 187, 188, 229, 240, 243, 244, 270, 273, 274, 279, 280, 282, 283, 358, 364, 386, 471, 478, 504, 517, 545, 586, 592], "mean_": 270, "mean_fn": [130, 187, 188, 270, 273, 283, 471, 586], "mean_fncal": 273, "mean_so3": 586, "mean_vector": 188, "meana": 89, "meanan": 87, "meanbeluga": 359, "meancalcul": [130, 188, 270, 283, 471], "meanconstexpr": [130, 188, 270, 283, 471, 586], "meanderiv": [273, 471, 586], "meanderivedconcret": 273, "meaneigen": 282, "meanfn": [273, 471, 586], "meanfncal": 273, "meanin": 115, "meanmean": [273, 282], "means_dataset": 283, "means_matrix": 283, "measur": [4, 8, 10, 22, 28, 34, 45, 46, 59, 61, 79, 81, 85, 98, 99, 106, 245, 282, 283, 319, 358, 359, 360, 517, 519, 525, 526, 527, 550, 592], "measurement_cel": 283, "measurement_typ": [8, 22, 28, 34, 36, 45, 46, 59, 60, 61, 62, 79, 80, 81, 82, 85, 86, 98, 99, 229, 237, 254, 258, 262, 283], "measurement_typemeasur": [34, 36, 254, 258, 262, 283], "measurement_typestd": [34, 36, 254, 258, 262, 283], "measurementa": 525, "measurementmeasur": 45, "mechan": [8, 28, 273, 340], "median": 8, "meet": [8, 87, 89, 531, 533], "member": [18, 20, 29, 30, 38, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 162, 193, 244, 273, 280, 281, 298, 300, 306, 314, 322, 323, 326, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 379, 381, 383, 384, 386, 388, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 421, 423, 425, 427, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 455, 466, 468, 482, 483, 485, 487, 489, 496, 517, 521, 525, 527, 529, 531, 533, 561, 574, 576, 579, 581], "memori": [10, 13, 15, 69, 130, 169, 193, 260, 273, 301, 330, 479, 480, 523, 537, 539, 565, 566, 568, 569, 570], "merit": 273, "messag": [10, 480, 483, 484, 485, 486, 487, 488, 489, 490, 513, 515, 517, 519, 520, 523, 527, 529, 531, 533, 537, 539, 546, 547, 549, 550, 551, 552, 554, 555, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "message_filt": [479, 480, 483, 487, 489, 494, 495, 501, 502, 510, 511, 512, 513], "messagea": 555, "messagefilt": [480, 483, 487, 489, 511, 513], "messagemark": 555, "messagemessag": 555, "messageparticl": 555, "messaget": [480, 483, 484], "meta": [244, 273, 378, 381, 390, 394, 396, 432, 465], "metadata": [10, 552], "metaprogram": 3, "meter": [14, 28, 106, 108, 120, 122, 333, 340, 517, 527, 529, 555, 566, 569, 579, 581, 592], "method": [1, 4, 44, 45, 65, 83, 115, 188, 268, 270, 273, 323, 430, 450, 465, 466, 525], "metric": [28, 161, 193, 290, 291, 304], "might": [34, 130, 273], "migrat": [4, 516], "min": [43, 130, 136, 252, 260, 272, 273, 289, 316, 322, 340, 446, 447, 460, 461, 527, 528, 550, 552, 569, 592], "min_angl": [293, 416, 417, 421, 422, 423, 424], "min_angle_": 293, "min_angleth": [421, 423], "min_dist": [293, 416, 417, 421, 422, 423, 424, 592], "min_distance_": 293, "min_distanceth": [421, 423], "min_el": [252, 592], "min_it": 552, "min_likelihood": 98, "min_particl": [10, 28, 229, 240, 340, 517, 519, 540, 544, 574], "min_particle_weight": 592, "min_particlesbeluga": 341, "min_particlesbeluga_ro": 575, "min_particlesminimum": [28, 519], "min_particlesstd": [28, 519], "min_rang": [14, 49, 256, 527, 528, 540, 542, 550], "min_range_": 550, "min_rangeauto": 550, "min_rangeminimum": 527, "min_scale_factor": 569, "min_val": 552, "minim": [3, 36, 77, 252, 260, 591], "minimization_funct": 252, "minimum": [3, 10, 14, 273, 340, 421, 423, 460, 517, 527, 550, 574, 592], "minimum_likelihood": [229, 240, 283, 360], "minimum_likelihoodbeluga": 361, "minimum_likelihooddoubl": 283, "minimum_likelihoodlikelihood": 283, "minmax_el": 552, "minminimum": [273, 446], "minor": [508, 509], "minu": [273, 471, 586], "miodrag": 44, "misc": 477, "mismatch": 4, "miss": [34, 44, 342], "mit": [44, 524, 588], "mix": 3, "mixin": 41, "mixin_bas": 41, "mixin_impl": 41, "mixtur": 517, "mkdir": [5, 591, 592], "mm": 569, "mobil": [516, 517], "modal": 4, "model": [2, 4, 10, 11, 16, 17, 22, 29, 33, 34, 35, 36, 38, 45, 59, 61, 69, 71, 79, 81, 83, 85, 98, 102, 110, 135, 136, 162, 168, 172, 173, 193, 244, 245, 249, 252, 253, 254, 257, 258, 259, 260, 261, 262, 265, 266, 273, 280, 283, 288, 289, 319, 320, 321, 324, 325, 336, 337, 356, 372, 373, 374, 375, 478, 480, 483, 487, 489, 510, 511, 513, 519, 525], "model_unknown_spac": [229, 240, 260, 356], "model_unknown_spacebeluga": 357, "model_unknown_spacebool": 260, "model_unknown_spacewheth": 260, "modela": 372, "modern": [2, 43, 466], "modifi": [63, 75, 247], "modified_": 40, "modul": 478, "modular": 478, "monocular": 61, "mont": [1, 2, 11, 28, 29, 45, 244, 273, 280, 340, 478, 518, 519, 520, 523, 525, 537, 539, 546, 555, 560, 574, 592], "more": [8, 24, 26, 31, 33, 35, 37, 39, 42, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 129, 131, 133, 135, 179, 181, 184, 187, 188, 189, 191, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 270, 271, 273, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 386, 388, 390, 391, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 487, 489, 508, 510, 512, 518, 522, 525, 527, 529, 531, 533, 549, 551, 554, 555, 562, 563, 565, 568, 570, 572, 574, 576, 578, 579, 581, 583, 585], "most": [1, 3, 8, 10, 36, 69, 130, 483, 485, 487, 489, 508, 515, 517, 569], "mostderiv": 41, "mostli": [282, 358], "motion": [4, 10, 11, 16, 28, 29, 37, 38, 45, 71, 79, 102, 110, 161, 162, 193, 244, 245, 273, 280, 292, 293, 304, 348, 362, 416, 418, 420, 421, 423, 478, 480, 483, 487, 489, 510, 511, 513, 518, 519, 525, 592], "motion_distribut": 592, "motion_model": [28, 45, 46, 519, 525, 526, 592], "motion_model_": [28, 519], "motion_model_sigma": 592, "motion_model_vari": [480, 483, 519, 525, 526, 540, 543], "motion_model_variantbeluga_amcl": 484, "motion_model_variantget": 480, "motion_model_variantmot": 519, "motion_model_variantstd": 519, "motion_modelmot": 45, "motion_modelvari": 525, "motioninclud": 151, "motionmodel": [2, 28, 46, 71, 102, 110, 195, 204, 205, 210, 213, 218, 222, 226, 232, 238, 244, 296, 510, 511, 513], "motionmodelclass": 45, "motionmodelvari": [487, 489, 510, 511, 513], "motionmodelvariantbeluga_amcl": [488, 490], "motionmodelvariantget": [511, 513], "motionmodelvariantstd": [511, 513], "motionmodelvariantsupport": [511, 513], "motionmot": 139, "movabl": 22, "move": [8, 10, 28, 31, 32, 34, 36, 40, 43, 63, 69, 87, 130, 182, 188, 194, 247, 252, 254, 258, 260, 262, 270, 283, 285, 293, 295, 298, 305, 310, 314, 316, 320, 321, 322, 333, 434, 459, 461, 468, 473, 477, 519, 550, 566, 571, 573, 592], "move_tag": [434, 435, 477], "movement": [519, 574, 592], "msg": [479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 508, 509, 510, 511, 512, 513, 515, 517, 527, 528, 529, 530, 531, 532, 533, 534, 549, 550, 551, 552, 553, 554, 555, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "msgt": [508, 509], "msgthe": 562, "mt19937": 322, "mth": [245, 468, 476, 477], "much": [3, 348, 362, 468], "multi": [87, 188], "multimod": 4, "multinomi": [245, 321, 478, 592], "multipl": [4, 252, 273, 316, 319, 412, 468, 569, 570], "multipli": [36, 254, 372, 471, 592], "multivari": [29, 87, 89, 91, 92, 94, 96, 175, 193, 244, 245, 267, 269, 270, 271, 272, 273, 280, 312, 478], "multivariate_distribution_trait": [29, 87, 128, 175, 193, 198, 204, 210, 221, 229, 233, 235, 236, 237, 239, 240, 244, 269, 270, 273, 280, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "multivariate_distribution_traitsforward": [268, 270], "multivariate_normal_distribut": [28, 87, 89, 175, 193, 311, 312], "multivariate_uniform_distribut": [91, 92, 94, 96, 140, 175, 193, 311, 312], "multivariatenormaldistribut": [2, 20, 28, 88, 128, 198, 215, 217, 218, 219, 229, 231, 232, 233, 235, 237, 239, 244, 245, 269, 270, 273, 274, 276, 519], "multivariatenormaldistributionmultivari": [28, 270], "multivariatenormaldistributionmultivariatenormaldistribut": 270, "multivariatenormaldistributionparam": [87, 90, 128, 215, 217, 229, 231, 235, 237, 239, 244, 269, 270, 273], "multivariatenormaldistributionparammultivari": 270, "multivariatenormaldistributionparammultivariatenormaldistributionparam": 270, "multivariateuniformdistribut": [92, 93, 94, 95, 96, 97, 128, 215, 217, 229, 231, 244, 245, 271, 272, 273, 274, 276, 519], "multivariateuniformdistributionconstexpr": 272, "multivariateuniformdistributionmultivariateuniformdistribut": 272, "multivariateuniformdistributionprimari": 272, "mundan": 1, "must": [3, 5, 6, 8, 20, 45, 47, 49, 51, 53, 55, 56, 58, 59, 65, 69, 75, 83, 87, 89, 108, 118, 188, 273, 301, 321, 330, 430, 450, 517, 531, 533, 562, 570, 571, 573, 592], "mutabl": [18, 305, 322, 461, 573], "mutat": [3, 65], "mutual": [483, 485, 487, 489, 515, 517], "n": [4, 21, 27, 28, 29, 30, 34, 40, 42, 43, 56, 70, 108, 126, 127, 128, 130, 134, 161, 167, 184, 185, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 226, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 244, 245, 252, 273, 274, 278, 280, 282, 283, 304, 317, 318, 332, 333, 334, 335, 358, 385, 412, 456, 468, 471, 476, 477, 491, 497, 499, 500, 564, 569, 592], "n_": [517, 574], "naction": [29, 280], "nahuel": 188, "name": [10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 71, 79, 81, 83, 85, 87, 98, 102, 110, 166, 182, 183, 193, 245, 285, 296, 297, 310, 320, 322, 368, 461, 464, 470, 517, 555, 571, 573, 586], "namebeluga": [54, 64, 530], "namespac": [8, 12, 18, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 129, 130, 133, 134, 135, 136, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 430, 450, 458, 459, 460, 461, 464, 465, 466, 467, 468, 471, 472, 473, 476, 477, 480, 509, 511, 513, 515, 518, 519, 520, 522, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "nan": 49, "nasa": 188, "native_doubl": 283, "native_int": 283, "natur": [2, 3, 44, 524, 588], "nav": 517, "nav2": [10, 289, 506, 517, 547, 552], "nav2_amcl": [515, 516, 517, 591], "nav2_costmap_2d": 552, "nav2_integration_demo": 591, "nav2_map_serv": 10, "nav_msg": [479, 480, 483, 484, 515, 517, 519, 520, 523, 529, 530, 537, 539, 546, 547, 551, 552, 555, 560, 565, 566], "navig": [517, 591], "navigation2": 552, "nbeluga": 560, "nbeluga_amcl": 481, "nbeluga_rosth": [520, 560], "nbelugath": [29, 280], "nbsp": [31, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 129, 184, 189, 273, 284, 290, 292, 294, 299, 309, 313, 319, 321, 326, 328, 334, 348, 356, 358, 360, 362, 364, 366, 368, 372, 388, 402, 412, 414, 416, 421, 423, 425, 430, 434, 436, 438, 440, 444, 446, 450, 452, 458, 460, 465, 476, 483, 487, 489, 508, 510, 525, 527, 529, 531, 533, 555, 562, 563, 568, 579, 581, 585], "nclusterizer_detail": [29, 280], "ncovari": 282, "ndash": [44, 524], "ndetail": [29, 280, 520, 560], "ndim": [21, 47, 48, 51, 52, 53, 54, 57, 109, 118, 119, 198, 200, 207, 208, 214, 219, 220, 227, 228, 229, 230, 231, 233, 234, 235, 237, 240, 244, 282, 283, 317, 318, 332, 333, 359, 361, 529, 530, 546, 555, 563, 564], "ndim1": 21, "ndimdimens": [56, 108, 555], "ndt": [29, 98, 244, 273, 280, 282, 283, 358, 481, 487, 489, 494, 495, 505, 510, 511, 512, 513, 537, 539, 563, 564], "ndt_amcl_nod": [487, 494, 495, 513, 515], "ndt_amcl_node_3d": [489, 494, 495], "ndt_cell": [193, 283, 358, 359, 510, 511, 563, 564], "ndt_cell_typ": [98, 99, 230, 237, 283, 513], "ndt_cell_typendt": 283, "ndt_cell_typetypenam": 283, "ndt_ellipsoid": [537, 539], "ndt_sensor_model": [98, 140, 193, 324, 325, 360, 384, 510, 511], "ndtamcl": [510, 511, 513], "ndtamclnod": [488, 491, 497, 499, 500, 510, 511], "ndtamclnode2d": [505, 511], "ndtamclnode3d": [490, 491, 497, 499, 500, 512, 513], "ndtamclnode3d3d": [505, 513], "ndtamclnode3dexplicit": 490, "ndtamclnode3dndtamclnode3d": 513, "ndtamclnode3dprotect": 490, "ndtamclnode3dprotectedvirtu": 490, "ndtamclnodeexplicit": 488, "ndtamclnodendtamclnod": 511, "ndtamclnodeprotect": 488, "ndtamclnodeprotectedvirtu": 488, "ndtamclvari": [487, 488, 489, 490, 510, 511, 513], "ndtamclvariantal": [511, 513], "ndtamclvariantstd": [511, 513], "ndtcell": [128, 198, 214, 228, 229, 230, 231, 234, 235, 237, 240, 244, 273, 282, 283, 359, 563, 564], "ndtcell2d": [273, 274, 278, 282, 283, 510, 511, 513], "ndtcell2f": [273, 274, 278, 282], "ndtcell3d": [273, 274, 278, 282, 283, 513], "ndtcell3f": [273, 274, 278, 282], "ndtcellrepresent": [282, 283], "ndtmaprepresent": [487, 489, 510, 511, 512, 513], "ndtmaprepresentationbeluga": 513, "ndtmaprepresentationt": 283, "ndtmaprepresentationunderli": 513, "ndtmodelparam": [98, 128, 200, 229, 230, 240, 244, 273, 283, 361], "ndtmodelparam2d": [273, 274, 278, 283], "ndtmodelparam3d": [273, 274, 278, 283], "ndtmodelparamparamet": 283, "ndtsensormodel": [29, 99, 128, 214, 216, 217, 228, 229, 230, 231, 232, 235, 237, 241, 244, 273, 280, 283, 360, 487, 489, 510, 511, 512, 513], "ndtsensormodelndt": 283, "ndtsensormodelndtsensormodel": 283, "nearbi": 592, "nearest": [17, 47, 51, 53, 56, 77, 108, 118, 134, 179, 180, 252, 254, 260, 273, 287, 318, 333, 592], "nearest_obstacle_distance_map": [179, 180, 260, 273, 274, 276], "nearest_obstacle_distance_mapauto": [180, 260], "nearest_obstacle_index": 180, "necessari": [3, 5, 6, 8, 10, 45, 283, 517, 525, 531, 533, 574, 591], "necessarili": 69, "need": [0, 2, 3, 8, 10, 20, 32, 59, 115, 117, 189, 252, 273, 292, 314, 322, 434, 478, 515, 517, 562, 586, 592], "neg": 270, "negat": [307, 430, 450], "neigen": 280, "neighbor": [47, 51, 98, 104, 105, 130, 216, 230, 273, 360], "neighbor_hash": 130, "neighbor_pos": 130, "neighborhood": [13, 15, 47, 51, 53, 118, 134, 260, 264], "neighborhood4": [13, 15, 47, 48, 51, 52, 53, 54, 118, 119, 134, 216, 230, 260, 264, 529, 530], "neighborhood4auto": [134, 264], "neighbors_funct": [130, 179, 180, 260, 273], "neighbors_functiongiven": 273, "neighbors_kernel": [230, 240, 283, 360], "neighbors_kernelbeluga": 361, "neighbors_kernelneighbor": 283, "neighbors_kernelstd": 283, "neighborsauto": 130, "neighborsfunct": [130, 179, 180, 260, 273], "neighborsfunctiona": 273, "neighborst": 273, "nelement": 184, "neural": [44, 524, 588], "never": 1, "new": [4, 20, 34, 36, 41, 59, 61, 79, 81, 83, 85, 89, 100, 115, 130, 188, 245, 254, 260, 270, 273, 298, 366, 372, 388, 440, 468, 476, 477, 478, 592], "new_cap": [115, 116, 468], "new_capnew": 115, "new_po": 459, "newer": 273, "next": [28, 45, 87, 270, 314, 322, 459, 519, 525, 592], "next_cluster_id": 130, "next_stat": 8, "niebloid": 8, "nio": 280, "nip": [44, 524, 588], "nmaximum": 69, "nnumber": 334, "noalia": 188, "node": [10, 34, 479, 480, 481, 483, 485, 487, 489, 505, 506, 510, 511, 512, 513, 515, 591], "node_interfac": 480, "node_nam": [483, 484, 485, 486, 487, 488, 489, 490, 515], "node_namespac": [483, 484, 485, 486, 487, 488, 489, 490, 515], "node_opt": [483, 484, 485, 486, 487, 488, 489, 490, 515], "nodeopt": [480, 483, 484, 485, 486, 487, 488, 489, 490, 511, 513, 515], "nodiscard": [28, 34, 36, 40, 41, 43, 130, 134, 136, 192, 194, 247, 252, 254, 256, 258, 260, 262, 264, 268, 270, 272, 282, 283, 287, 289, 314, 316, 318, 322, 333, 337, 459, 468, 473, 519, 550, 566, 571, 573], "noexcept": [40, 42, 43, 63, 64, 69, 70, 73, 75, 87, 100, 101, 106, 112, 115, 192, 194, 247, 270, 273, 285, 307, 314, 316, 322, 339, 430, 431, 434, 435, 450, 451, 459, 464, 465, 466, 468, 477], "noexceptbeluga": [64, 70, 74, 76, 88, 101, 107, 113, 116, 431, 451], "noexceptcheck": 247, "noexceptclear": [43, 468], "noexceptcomput": 247, "noexceptconstruct": [192, 316], "noexceptconstructor": 464, "noexceptderefer": 247, "noexceptforward": 247, "noexceptget": 43, "noexcepthelp": 466, "noexceptmov": 270, "noexceptpop": 43, "noexceptpost": 247, "noexceptpr": 247, "noexceptreset": [28, 192, 464], "noexceptreturn": [43, 194, 307, 466, 468], "noexceptrewind": 247, "noexceptupd": 192, "nois": [8, 10, 34, 110, 136, 260, 289, 342, 348, 356, 362, 364, 517, 592], "noiseless": 188, "noisi": [8, 10, 34, 342, 592], "noisy_angular_veloc": 8, "noisy_linear_veloc": 8, "nolint": [40, 43, 183, 186, 194, 270, 308, 329, 339, 466, 477, 586], "nomin": 69, "nomotion_update_callback": [480, 483, 484, 497, 499], "nomotion_update_callbackvoid": 480, "nomotion_update_server_": [480, 483, 497, 500], "nomotion_update_server_beluga_amcl": 484, "nomotion_update_server_no": 480, "nomotion_update_server_rclcpp": 480, "non": [0, 1, 28, 29, 42, 43, 53, 69, 83, 106, 188, 244, 273, 280, 282, 305, 321, 427, 430, 450, 555, 563, 570, 572, 586], "none": [69, 284], "nonlinear": 273, "nonneg": 517, "nor": 592, "norm": [8, 36, 136, 188, 254, 289, 293, 316], "normal": [4, 8, 24, 25, 28, 29, 34, 36, 87, 89, 170, 175, 188, 193, 244, 245, 252, 254, 268, 269, 270, 273, 280, 282, 312, 358, 364, 460, 461, 478, 517, 519, 552, 574, 592], "normal_distribut": [2, 8, 89, 90, 136, 245, 270, 289, 337, 592], "normalize_and_cap_weight": 130, "normalize_and_squar": 182, "normalize_closur": 285, "normalize_fn": [284, 285], "normalizeconstexpr": 285, "normalized_weight": [182, 188], "normalizedefinit": 285, "note": [8, 18, 53, 56, 69, 77, 283, 527, 562, 592], "notethi": [59, 61, 79, 83], "noth": 115, "notic": [36, 130, 188, 254], "now": [5, 10, 335, 592], "nowher": [75, 247], "npolici": [29, 280], "nsophu": 280, "nsophussophu": 560, "nstate_detail": [29, 280], "nstd": [29, 280], "ntest": 280, "ntf2tf2": 560, "nth": 245, "nth_element": 130, "ntr": 188, "nullari": 314, "nullopt": [28, 45, 47, 51, 77, 108, 134, 252, 264, 273, 316, 333, 471, 487, 511, 525, 586], "nullptr": [247, 283, 487, 511, 550, 571, 573], "num_dim": [98, 230, 240, 282, 283, 358, 513], "num_dimbeluga": 359, "num_dimnumb": 282, "num_dimstat": 282, "num_particl": [130, 230, 240, 376], "num_particlesbeluga": 377, "num_particlesnumb": 130, "num_particlesstd": 130, "number": [4, 8, 10, 11, 28, 92, 94, 96, 108, 118, 129, 130, 188, 243, 245, 252, 273, 290, 328, 333, 335, 340, 358, 368, 376, 436, 438, 440, 444, 460, 473, 504, 517, 519, 527, 545, 550, 569, 574, 592], "number_of_cycl": 592, "number_of_particl": 592, "numer": [8, 29, 101, 128, 129, 130, 166, 181, 182, 187, 188, 193, 216, 217, 230, 231, 244, 273, 280, 284, 285, 306, 307, 338, 339, 453, 464, 471, 478, 511, 592], "numeric_limit": [29, 100, 128, 188, 244, 280, 285, 335, 338, 339, 454, 461, 464, 527, 528, 550, 552], "numericconstexpr": 339, "numerichelp": [130, 307, 339], "nview": [29, 280], "nweight_detail": [29, 280], "o": [5, 8, 10, 30, 34, 69, 128, 196, 199, 211, 217, 231, 252, 258, 273, 274, 282, 328, 329, 358, 359, 468, 497, 499, 523, 535, 537, 539, 540, 542, 547, 563, 568, 591], "object": [8, 18, 20, 25, 29, 31, 32, 34, 36, 87, 89, 100, 130, 136, 160, 170, 182, 184, 188, 189, 190, 193, 244, 245, 252, 254, 258, 260, 262, 270, 273, 280, 283, 284, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 305, 306, 307, 309, 310, 313, 314, 319, 320, 321, 322, 335, 337, 366, 368, 370, 372, 374, 388, 410, 414, 416, 425, 427, 430, 434, 436, 438, 442, 444, 446, 448, 450, 458, 460, 461, 465, 466, 468, 471, 475, 476, 477], "observ": [1, 8], "obstacl": [17, 27, 34, 167, 179, 180, 193, 260, 273, 342, 356, 517, 555, 564], "obstacle_map": 273, "obstacle_mask": [17, 53, 54, 179, 180, 217, 231, 260, 273, 287, 529, 530], "obstacle_maska": 273, "obstacle_maskauto": 287, "obtain": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 245, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 299, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "occup": [17, 29, 34, 53, 59, 81, 83, 85, 94, 106, 169, 193, 244, 260, 271, 272, 273, 280, 286, 478, 480, 483, 487, 489, 511, 513, 517, 520, 529, 546, 552, 560, 565, 566, 576], "occupancy_grid": [53, 140, 157, 169, 193, 259, 260, 271, 272, 479, 480, 515, 518, 519, 522, 523, 529, 537, 539, 551, 552, 576], "occupancygrid": [2, 29, 33, 34, 60, 82, 84, 86, 95, 107, 128, 197, 198, 206, 207, 214, 215, 217, 219, 221, 222, 228, 229, 231, 232, 233, 235, 236, 237, 238, 240, 241, 244, 257, 258, 259, 260, 261, 262, 271, 272, 273, 280, 315, 316, 480, 483, 484, 517, 519, 520, 523, 525, 526, 530, 535, 537, 539, 540, 542, 544, 546, 547, 551, 552, 555, 560, 565, 566, 576, 577], "occupancygrid2d": [2, 53, 59, 83, 296], "occupancygrida": [94, 106], "occupancygridinlin": 530, "occupancygridinlineexplicit": 530, "occupancygridinlinestat": 530, "occupancygridoccupancygrid": 566, "occupancygridthin": [519, 546, 566], "occupancygridtyp": [59, 83], "occupi": [17, 53, 287, 566, 576], "occur": [483, 487, 489], "odom": [10, 480, 483, 487, 489, 511, 513, 517], "odom_alpha1": 10, "odom_alpha5": 10, "odom_frame_id": 517, "odometri": [6, 10, 29, 71, 102, 110, 135, 136, 172, 193, 244, 245, 266, 273, 280, 288, 289, 337, 348, 362, 517, 525], "ofeigen": [19, 23], "off": [5, 112], "offic": 591, "offici": 5, "offset": [75, 76, 247, 260, 283], "ofsophu": [19, 23], "often": [3, 8], "old": [130, 283], "older": 273, "oldest": 69, "omit": 6, "omni_motion_model": 289, "omnidirect": [29, 102, 172, 193, 244, 245, 266, 273, 280, 288, 289, 478], "omnidirectional_dr": [515, 517], "omnidirectional_drive_model": [102, 172, 193, 265, 266, 362, 510, 511], "omnidirectionaldrivemodel": [8, 16, 29, 103, 128, 198, 217, 231, 232, 235, 237, 244, 245, 273, 280, 288, 289, 362, 510, 511, 513, 519, 525], "omnidirectionaldrivemodelinlin": 103, "omnidirectionaldrivemodelinlineexplicit": 103, "omnidirectionaldrivemodelomnidirectionaldrivemodel": 289, "omnidirectionaldrivemodelparam": [102, 128, 200, 233, 235, 236, 240, 273, 288, 289, 363], "omnidirectionaldrivemodelparamparamet": [244, 289], "omnidirectionaldrivemodelsampl": [244, 289], "omnimotionmodel": [515, 517], "on_activ": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "on_activatecallbackreturn": 515, "on_cleanup": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "on_cleanupcallbackreturn": 515, "on_configur": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "on_configurecallbackreturn": 515, "on_deactiv": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "on_deactivatecallbackreturn": 515, "on_effective_size_drop": [28, 161, 193, 245, 303, 304, 414], "on_effective_size_drop_polici": [28, 29, 128, 217, 227, 231, 240, 244, 280, 290, 291, 415], "on_effective_size_drop_policyimplement": [244, 291], "on_effective_size_drop_policyinlin": 415, "on_effective_size_drop_policystat": 415, "on_effective_size_dropconstexpr": [28, 291], "on_effective_size_droppolici": [28, 291], "on_mot": [28, 161, 193, 245, 303, 304, 416, 418, 420, 421, 423], "on_motion_fn": [29, 128, 217, 231, 244, 280, 292, 293, 417], "on_motion_fnimplement": 293, "on_motion_polici": [29, 128, 217, 231, 244, 280, 292, 293, 419], "on_motion_policy_bas": [29, 128, 217, 231, 244, 280, 292, 293, 421, 422, 423, 424], "on_motion_policy_baseconstexpr": 293, "on_motion_policy_baseprimari": 293, "on_motion_policybas": 293, "on_motionconstexpr": 293, "on_motionpolici": 293, "on_shutdown": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "on_shutdowncallbackreturn": 515, "onc": [6, 31, 273, 591], "one": [6, 10, 29, 39, 40, 65, 67, 87, 94, 115, 130, 188, 244, 273, 280, 322, 425, 442, 517, 555, 562, 569, 592], "oner": 3, "ones": 478, "onli": [5, 12, 40, 61, 67, 69, 75, 100, 110, 115, 130, 136, 252, 273, 283, 321, 326, 330, 334, 517, 533, 569, 571, 573, 574, 591], "online_async_launch": 10, "onto": 525, "op": [69, 366, 483, 485, 487, 489, 515], "opac": 569, "open": [6, 11, 335, 478, 591], "opendataset": 283, "oper": [2, 8, 32, 34, 36, 40, 41, 42, 43, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 127, 130, 136, 188, 190, 192, 217, 231, 234, 245, 247, 254, 258, 262, 270, 272, 273, 274, 276, 282, 283, 285, 289, 291, 293, 295, 298, 305, 307, 310, 314, 320, 322, 328, 329, 335, 337, 339, 346, 347, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 384, 385, 386, 387, 388, 389, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 459, 461, 464, 471, 477, 520, 527, 540, 542, 546, 560, 569, 578, 579, 580, 581, 582, 592], "opera": [24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585], "opt": [5, 10, 31, 591], "opt_landmark_bearing_in_sensor": 36, "opt_landmark_position_in_world": 254, "optim": [3, 29, 39, 40, 63, 244, 252, 273, 280, 468], "optin": 43, "option": [8, 13, 15, 28, 36, 45, 46, 69, 77, 106, 108, 129, 130, 133, 134, 188, 252, 254, 263, 264, 273, 284, 285, 288, 289, 293, 313, 314, 315, 316, 332, 333, 376, 471, 479, 480, 483, 484, 485, 487, 488, 489, 490, 510, 511, 512, 513, 515, 518, 519, 525, 526, 586], "order": [2, 31, 41, 122, 129, 130, 188, 273, 310, 320, 335, 368, 370, 372, 374, 586], "org": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 384, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "organ": [8, 245], "orient": [8, 188, 566, 569, 586], "origin": [8, 14, 17, 19, 23, 53, 81, 83, 85, 106, 260, 287, 298, 316, 519, 525, 527, 528, 529, 530, 531, 532, 533, 534, 540, 542, 550, 551, 552, 555, 566, 571, 573], "origin_": [550, 566, 571, 573], "originconst": [550, 566, 571, 573], "originlas": 527, "originpoint": [531, 533], "osan": 328, "ostream": [282, 328, 329, 358, 359], "other": [2, 4, 8, 10, 20, 40, 43, 45, 67, 68, 69, 70, 75, 76, 87, 88, 89, 90, 130, 243, 245, 247, 270, 301, 309, 310, 314, 320, 330, 346, 347, 368, 370, 372, 374, 425, 436, 446, 459, 461, 465, 476, 504, 517, 545, 569, 591, 592], "otheranoth": 87, "otherdistribut": 87, "otherparamet": 89, "otherwis": [43, 47, 51, 69, 87, 89, 115, 412, 414, 421, 423, 483, 487, 489, 592], "our": [6, 586, 592], "out": [1, 3, 6, 8, 43, 45, 555, 562, 584, 585, 586], "out_cov": 471, "out_mean": 471, "out_of_rang": [43, 108], "out_of_rangeif": 69, "outa": 562, "outerstrid": 571, "output": [10, 29, 73, 192, 244, 273, 280, 328, 434, 464, 471, 476, 477, 592], "output_": 192, "outth": 562, "over": [3, 4, 8, 10, 21, 53, 112, 115, 188, 245, 252, 273, 287, 458, 517, 523, 537, 539, 547, 551, 563, 568, 592], "overal": [130, 273], "overhead": 3, "overlai": [170, 193, 259, 260], "overlaid": 294, "overlay_closur": 295, "overlay_fn": [294, 295], "overlayconstexpr": 295, "overlaydefinit": 295, "overload": [18, 32, 40, 42, 43, 63, 67, 100, 115, 190, 245, 273, 282, 305, 307, 310, 320, 326, 346, 358, 366, 368, 370, 372, 374, 386, 410, 412, 414, 416, 425, 430, 434, 436, 442, 446, 448, 450, 468, 471, 477, 523, 537, 539, 547, 552, 554, 560, 562, 569, 583, 584, 585, 586], "overrid": [323, 480, 483, 484, 485, 487, 489, 511, 513, 515], "overridebeluga_amcl": [484, 486, 488, 490], "overridecallback": [480, 511, 513, 515], "overridedestructor": 515, "overwrit": [69, 273], "overwritten": 273, "ow": 3, "own": [10, 17, 592], "p": [4, 5, 13, 17, 18, 19, 20, 21, 23, 30, 47, 48, 51, 52, 53, 54, 56, 57, 108, 109, 118, 119, 128, 134, 196, 199, 211, 218, 232, 237, 240, 273, 287, 318, 333, 460, 461, 497, 499, 500, 517, 529, 530, 535, 540, 542, 574, 591, 592], "p0": [40, 63, 64, 65, 66], "p0_": 40, "p0line": 65, "p0start": 63, "p1": [40, 63, 64, 65, 66, 130], "p1_": 40, "p1end": 63, "p1line": 65, "p2": 130, "p2593r1": 335, "packag": [5, 8, 10, 516], "page": [29, 44, 243, 244, 273, 280, 297, 298, 335, 408, 504, 524, 545, 586, 591, 592], "pair": [8, 34, 43, 45, 59, 69, 75, 81, 85, 108, 130, 188, 258, 262, 273, 333, 476, 480, 483, 484, 487, 488, 489, 490, 511, 513, 519, 525, 526, 555, 563, 564], "paper": 335, "par": 517, "parallel": [478, 517], "parallel_polici": [28, 510, 511, 513, 515, 519, 525], "param": [10, 20, 28, 34, 36, 45, 46, 59, 60, 61, 62, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 102, 103, 136, 218, 232, 254, 258, 260, 262, 264, 270, 283, 289, 519, 525, 526], "param_typ": [20, 34, 36, 59, 60, 61, 62, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 102, 103, 136, 232, 237, 254, 258, 260, 262, 270, 283, 289], "param_typebearingmodelparam": 36, "param_typedifferentialdrivemodelparam": 136, "param_typelandmarkmodelparam": 254, "param_typemultivariatenormaldistributionparam": 270, "param_typendtmodelparam": 283, "param_typeomnidirectionaldrivemodelparam": 289, "param_typeparamet": [36, 136, 254, 283, 289], "param_typeth": 270, "paramconst": 270, "paramet": [6, 8, 20, 28, 29, 33, 34, 35, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 105, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 129, 130, 135, 184, 243, 244, 253, 257, 259, 261, 269, 270, 273, 280, 282, 283, 288, 289, 292, 321, 326, 328, 334, 340, 342, 344, 348, 352, 356, 360, 362, 364, 368, 372, 388, 412, 414, 418, 420, 421, 423, 436, 438, 444, 446, 452, 454, 480, 483, 485, 487, 489, 504, 511, 513, 515, 518, 519, 520, 525, 527, 529, 531, 533, 545, 546, 555, 560, 562, 563, 574, 579, 581, 591], "parameter": 321, "parameters_": 130, "parametersparamet": 273, "parametr": [20, 188, 273, 480, 483, 487, 489, 511, 513, 562, 585, 586], "params_": [28, 34, 36, 81, 83, 85, 98, 136, 232, 240, 254, 258, 260, 262, 270, 283, 289, 519], "params_beluga": [82, 84, 86], "params_definit": [258, 260, 262], "params_param_typ": [258, 260, 262], "params_path": 6, "paramsdistribut": 87, "paramsnew": 87, "paramsparamet": [45, 59, 61, 71, 79, 81, 83, 85, 98, 102, 525], "paramsth": 87, "paramvoid": 270, "parent": 180, "part": [4, 28, 188, 340], "partial": [3, 510], "particl": [4, 8, 10, 11, 16, 22, 27, 28, 29, 34, 36, 44, 45, 46, 59, 61, 71, 79, 81, 83, 85, 98, 102, 104, 110, 112, 129, 130, 136, 160, 166, 167, 181, 182, 187, 188, 193, 217, 218, 231, 232, 244, 245, 254, 258, 262, 273, 280, 283, 284, 285, 289, 290, 294, 296, 297, 298, 306, 307, 309, 310, 319, 320, 321, 322, 334, 335, 337, 340, 368, 372, 376, 389, 408, 414, 429, 430, 440, 446, 450, 460, 461, 464, 470, 471, 474, 475, 478, 480, 483, 485, 487, 489, 510, 511, 512, 513, 515, 519, 523, 524, 525, 526, 537, 539, 540, 542, 547, 555, 568, 569, 574, 588], "particle_cloud": [6, 517, 522, 523, 537, 539, 547, 578, 579, 581], "particle_cloud_pub_": [483, 485, 487, 489, 497, 500, 515], "particle_cloud_pub_beluga_amcl": [484, 486, 488, 490], "particle_cloud_pub_particl": 515, "particle_cloud_pub_rclcpp_lifecycl": 515, "particle_filter_": [480, 483, 487, 489, 497, 500, 511, 513], "particle_filter_beluga_amcl": [484, 488, 490], "particle_filter_particl": [480, 511, 513], "particle_filter_std": [480, 511, 513], "particle_mark": 517, "particle_markers_pub_": [483, 485, 487, 489, 497, 500, 515], "particle_markers_pub_beluga_amcl": [484, 486, 488, 490], "particle_markers_pub_particl": 515, "particle_markers_pub_rclcpp_lifecycl": 515, "particle_trait": [128, 166, 181, 182, 193, 235, 237, 241, 244, 273, 284, 285, 309, 310, 319, 320, 321, 322, 388, 409, 460, 461, 464, 469, 470, 569], "particle_traitscommon": 298, "particle_typ": [28, 244, 519, 525, 526, 540, 543], "particle_typestd": 519, "particle_typeweight": 519, "particlecluster": [29, 105, 128, 129, 130, 216, 217, 218, 230, 231, 232, 244, 273, 280, 364], "particleclusterizerinlin": 105, "particleclusterizerinlineexplicit": 105, "particleclusterizerparam": [104, 105, 128, 129, 130, 195, 228, 240, 241, 273, 365], "particleclusterizerparamparamet": [130, 244], "particleclusterizerparticl": [130, 244], "particleclusterizerparticlecluster": 130, "particlefilt": [16, 22], "particles_": [28, 244, 519], "particlesa": 555, "particlesconst": [28, 519], "particlesdistribut": 555, "particlespos": 555, "particleth": 273, "particletyp": [28, 46, 195, 204, 205, 210, 213, 218, 222, 226, 232, 238, 244], "particletypeful": 45, "particular": [8, 108, 273, 517], "particularli": [273, 348, 356], "pass": [188, 273, 425, 434], "past": [39, 40, 43, 65, 67, 69, 75, 346], "patch": [508, 509], "path": [5, 10, 283, 516, 591, 592], "path_to_hdf5_fil": 283, "pattern": [2, 100, 572], "pdf": [188, 273, 335, 586], "peak": [130, 364], "per": [120, 122, 335, 480, 483, 487, 489, 511, 513, 569, 592], "per_cluster_estim": 130, "percentag": [129, 291, 414, 517], "percentil": [129, 130, 364], "percentileth": 129, "percept": [260, 356], "perfect_odometri": 6, "perform": [4, 6, 11, 45, 59, 83, 106, 115, 188, 189, 273, 289, 292, 517, 525, 592], "period": [189, 480, 483, 485, 487, 489, 511, 513, 515, 517], "periodic_timer_callback": [483, 484, 485, 486, 487, 488, 489, 490, 497, 499, 515], "periodic_timer_callbackvoid": 515, "permiss": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "petar": 44, "pf_err": 517, "pf_z": 517, "pgm": 10, "phantom": 100, "phantomtyp": [29, 101, 128, 216, 217, 230, 231, 244, 280, 338, 339, 453], "phantomtypeempti": 100, "phantomtypephantom": [452, 454], "physic": 59, "pi": [11, 13, 17, 47, 48, 51, 52, 53, 54, 56, 57, 108, 109, 118, 119, 134, 136, 260, 264, 287, 289, 318, 517, 519, 529, 530, 574], "pictur": 6, "pigrid": [47, 51, 53, 56], "pipelin": 510, "pitch": [122, 335, 586], "pitch_aux": 586, "pitch_clustering_resolut": [122, 123, 335], "pitch_clustering_resolutionclust": 122, "pkg": [5, 6, 10], "place": [3, 75, 136, 247, 260, 289, 348, 362, 364], "plai": [6, 8], "plainmatrix": [188, 268, 402], "plane": [36, 47, 51, 53, 56, 108, 118, 254, 264, 287, 318, 333, 525, 527], "platform": [11, 283, 517], "pleas": 0, "plenti": [2, 6], "plot": 592, "plu": [8, 10, 34, 182, 258, 262, 283, 471], "plugin": 517, "po": 459, "point": [10, 18, 19, 23, 28, 29, 34, 36, 40, 43, 49, 55, 58, 59, 60, 63, 65, 69, 75, 79, 81, 82, 85, 86, 98, 99, 130, 136, 169, 182, 188, 193, 243, 244, 247, 254, 256, 258, 262, 273, 280, 282, 283, 289, 298, 300, 301, 306, 307, 310, 330, 331, 335, 337, 340, 358, 430, 450, 461, 471, 480, 483, 485, 504, 515, 517, 519, 525, 531, 532, 533, 534, 540, 542, 545, 552, 562, 569, 570, 571, 573, 583, 584, 586, 592], "point_cloud": [55, 169, 193, 519, 522, 523, 525, 526, 531, 537, 539], "point_cloud2": [508, 509, 512, 513, 570, 571, 572, 573], "point_cloud2_iter": [570, 571, 572, 573], "point_cloud_connection_": [480, 483, 497, 500], "point_cloud_connection_beluga_amcl": 484, "point_cloud_connection_connect": 480, "point_cloud_filter_": [480, 483, 497, 500], "point_cloud_filter_beluga_amcl": 484, "point_cloud_filter_std": 480, "point_cloud_filter_transform": 480, "point_cloud_sub_": [480, 483, 497, 500], "point_cloud_sub_beluga_amcl": 484, "point_cloud_sub_point": 480, "point_cloud_sub_std": 480, "point_cloud_top": 517, "point_cloudpoint": 525, "point_field_convers": [570, 571, 572, 573], "point_step": [570, 571], "pointcloud": [55, 58, 296, 483], "pointcloud2": [480, 483, 484, 489, 490, 513, 517, 519, 520, 523, 531, 532, 533, 534, 537, 539, 546, 555, 560, 570, 571, 572, 573], "pointcloud2constiter": [571, 573], "pointcloud3": [532, 535, 540, 542, 543, 546, 555, 570, 571], "pointcloud3d": [555, 556, 559, 570, 571], "pointcloud3f": [555, 556, 559, 570, 571], "pointcloud3pointcloud3": 571, "pointcloud3thin": 571, "pointer": [40, 43, 67, 68, 69, 70, 75, 76, 232, 237, 247], "pointerdecltyp": 247, "pointerpoint": 40, "pointervalu": [43, 247], "pointervalue_typ": 43, "pointervector2": 40, "points2d": [59, 81, 85], "points_in_cartesian_coordin": [49, 50, 218, 232, 256, 527, 528], "points_in_cartesian_coordinatesauto": 256, "points_in_cel": 283, "points_in_polar_coordin": [49, 50, 218, 232, 256, 527, 528], "points_in_polar_coordinatesauto": 256, "points_matrix": 571, "points_view": [283, 573], "pointsauto": [571, 573], "pointslidar": 98, "polar": [49, 256, 525], "polici": [2, 10, 11, 28, 29, 37, 38, 45, 128, 162, 193, 201, 209, 217, 218, 227, 231, 232, 240, 244, 245, 273, 280, 285, 295, 309, 310, 319, 320, 368, 369, 370, 371, 372, 373, 374, 375, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 478, 483, 485, 487, 489, 510, 511, 515, 517, 518, 519, 525], "policiesamcl_cor": 146, "policiesinclud": 152, "policy_": [285, 295], "policy_bas": [128, 231, 234, 273, 305, 428], "policy_basefriend": 428, "policy_baseimplement": [244, 305], "policyconstexpr": 305, "policyfn": [217, 218, 231, 232, 244, 305, 426], "policyforward": [28, 291, 305, 310, 320], "policypolici": 305, "policyth": [368, 372], "polymorph": 3, "pop": [69, 130, 180, 480, 511, 513], "pop_back": [43, 69, 70, 218, 232], "pop_backstd": 43, "pop_front": [43, 69, 70, 218, 232], "pop_frontstd": 43, "popul": [321, 517, 519, 552, 574], "popular": [1, 6], "port": 517, "portion": 21, "pos_": 459, "pose": [6, 8, 10, 12, 28, 36, 45, 46, 71, 77, 92, 94, 96, 102, 104, 105, 110, 130, 136, 188, 217, 231, 244, 250, 252, 254, 272, 273, 289, 292, 293, 337, 344, 354, 419, 421, 423, 478, 480, 483, 485, 487, 489, 511, 513, 515, 519, 525, 526, 552, 554, 555, 562, 566, 568, 569, 574, 585, 586, 592], "pose_arrai": [479, 480, 510, 511, 512, 513, 515, 568, 569], "pose_pub_": [483, 485, 487, 489, 497, 500, 515], "pose_pub_beluga_amcl": [484, 486, 488, 490], "pose_pub_estim": 515, "pose_pub_rclcpp_lifecycl": 515, "pose_stamp": 515, "pose_with_covari": [585, 586], "pose_with_covariance_stamp": [479, 480, 510, 511, 512, 513], "posearrai": [10, 483, 485, 487, 489, 515, 517, 555, 568, 569], "poseth": [104, 418, 420], "posewithcovari": [562, 585, 586], "posewithcovariancestamp": [480, 483, 484, 485, 486, 487, 488, 489, 490, 511, 513, 515, 517], "posit": [8, 10, 69, 75, 79, 247, 249, 252, 254, 273, 287, 335, 478, 563, 564, 566, 586, 592], "positioncent": 563, "possibl": [2, 4, 10, 16, 17, 22, 446, 461, 591], "possibli": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 45, 108, 245, 273, 307, 425, 465, 466], "post": [40, 67, 75, 517], "posterior": [4, 273, 368, 592], "potenti": [75, 519, 520, 533, 546, 555, 560, 572, 573], "pow": [8, 592], "power": [2, 6], "pplane": [47, 53, 56], "practic": 314, "practition": 1, "pragma": [480, 511, 513], "pre": [75, 83, 273, 358], "prealloc": 130, "precalcul": 36, "precis": 569, "precomput": [94, 471], "predic": [2, 130, 245, 425], "predict": [4, 8], "predtyp": 283, "prefigur": 4, "prefix": [6, 40, 67], "presenc": [42, 43, 273], "present": [108, 283, 333, 360], "preserv": 2, "press": [44, 524, 588], "prev": [293, 314, 421, 422, 423, 424, 459], "prev_error_": 40, "prevent": [34, 45, 525, 592], "previou": [4, 71, 102, 110, 136, 289, 337, 421, 423], "previous_orient": [136, 289], "previous_pos": [136, 289], "previous_pose_pose_2d": 136, "prevth": [421, 423], "primari": [91, 114, 244, 273, 323, 420], "primarili": 11, "primit": [28, 34, 36, 37, 38, 130, 136, 162, 179, 180, 182, 188, 193, 254, 258, 262, 283, 289, 297, 298, 299, 300, 310, 335, 337, 339, 392, 393, 430, 450, 461, 471, 510, 511, 518, 519, 568, 569], "principl": 8, "print": 328, "printer": [171, 193, 328, 463], "prior": [4, 368, 592], "prioriti": [129, 130], "priority_queu": [130, 180], "privat": [8, 28, 34, 36, 40, 43, 130, 136, 190, 192, 243, 247, 252, 254, 270, 272, 283, 285, 289, 293, 295, 314, 316, 322, 333, 335, 339, 459, 464, 468, 473, 504, 519, 545, 550, 566, 571, 573], "privatebas": [243, 504, 545], "prob": [29, 85, 168, 193, 244, 261, 262, 273, 280, 325, 569], "probabilist": [6, 44, 59, 71, 79, 83, 112, 245, 254, 273, 342, 348, 352, 356, 524, 588], "probabilityth": [436, 438], "probabl": [2, 4, 8, 17, 20, 28, 29, 36, 112, 244, 245, 254, 260, 273, 280, 313, 314, 356, 436, 437, 438, 439, 440, 464, 517, 519, 569, 574, 592], "problem": [44, 283, 592], "proceed": [5, 44, 524, 588], "process": [4, 8, 44, 45, 130, 483, 485, 487, 489, 515, 517, 524, 588], "processor": 10, "prod_i": 592, "produc": [8, 31, 45, 245], "product": 252, "profession": 0, "program": [2, 3, 8, 273], "proj": [129, 130, 461], "project": [5, 8, 36, 63, 129, 130, 188, 252, 254, 268, 273, 516, 525, 592], "project_nam": 592, "projected_valu": 8, "projth": 129, "prologu": [186, 193], "proof": [1, 252], "propag": [2, 4, 16, 24, 25, 28, 29, 170, 193, 244, 245, 280, 298, 368, 370, 592], "propagate_base_fn": [128, 217, 231, 309, 310, 369, 370, 371], "propagate_base_fnimplement": [244, 310], "propagate_base_fninlin": [369, 371], "propagate_fn": [128, 217, 231, 309, 310, 371], "propagate_fnimplement": [244, 310], "propagate_fninlin": 371, "propagateconstexpr": 310, "propagatedefinit": 310, "proper": 570, "properli": 10, "properti": [194, 273, 327, 592], "proport": [273, 569], "propos": [4, 6, 592], "propriocept": 592, "protect": [81, 82, 83, 84, 85, 86, 243, 260, 322, 440, 442, 480, 483, 485, 487, 489, 504, 511, 513, 515, 545], "protectedbas": [243, 504, 545], "protocol": 396, "prototyp": 273, "provid": [3, 8, 18, 41, 45, 75, 81, 83, 85, 87, 89, 94, 100, 115, 260, 272, 273, 326, 421, 423, 468, 478, 483, 485, 487, 489, 506, 508, 515, 516, 517, 525, 547, 569], "provis": 6, "proxi": 569, "pseudo": 8, "ptrdiff_t": [40, 43, 67, 69, 115, 130, 188, 459, 468], "pub": 188, "public": [8, 28, 34, 36, 40, 43, 45, 47, 49, 51, 53, 56, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 118, 120, 122, 124, 126, 130, 134, 136, 190, 192, 243, 247, 252, 254, 256, 258, 260, 262, 264, 270, 272, 283, 285, 287, 289, 293, 295, 298, 302, 305, 310, 314, 316, 318, 320, 322, 331, 333, 335, 337, 339, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 379, 383, 384, 386, 388, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 421, 423, 425, 430, 434, 436, 438, 442, 444, 446, 448, 450, 452, 455, 459, 464, 468, 473, 480, 483, 485, 487, 489, 504, 511, 513, 515, 519, 525, 527, 529, 531, 533, 545, 550, 566, 571, 573, 574, 576, 579, 581, 591], "publicbas": [243, 504, 545], "publish": [6, 10, 480, 483, 485, 487, 489, 513, 515, 569], "pull": 569, "punish": 468, "pure": 6, "purpl": [243, 504, 517, 545, 569], "purpos": [1, 282, 358], "push": [42, 43, 69, 130, 180, 273, 480, 511, 513], "push_back": [43, 69, 70, 115, 116, 218, 232, 264, 273, 283, 468, 564, 569], "push_back_impl": 468, "push_backconstexpr": 468, "push_backstd": 43, "push_front": [43, 69, 70, 218, 232, 273], "push_frontstd": 43, "put": [2, 10, 592], "py": [6, 10, 591], "pz": [34, 258, 262], "q": [4, 592], "qo": [6, 517], "qualiti": [1, 11], "quantil": [273, 460, 461, 517, 519, 574], "quaternion": [188, 273, 586], "quaternionbas": 188, "queri": 254, "queue": [129, 130, 179, 180], "quickli": 10, "quickmcl": [34, 258], "quit": [6, 468], "quot": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 509, 510, 511, 512, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "r": [0, 5, 17, 21, 30, 115, 116, 128, 196, 199, 211, 219, 233, 237, 240, 274, 278, 298, 326, 327, 468, 540, 542, 569], "r1": 316, "radian": [14, 28, 120, 122, 340, 421, 423, 555, 569, 579, 581], "rai": [29, 34, 59, 83, 106, 244, 258, 260, 262, 273, 280, 315, 316, 356], "rainbow": 569, "raison": 1, "ram": 10, "ramiro": [34, 283], "random": [3, 8, 13, 15, 20, 28, 29, 33, 34, 35, 36, 37, 38, 43, 45, 75, 87, 89, 91, 92, 94, 96, 112, 135, 136, 162, 165, 188, 193, 244, 246, 247, 253, 254, 257, 258, 259, 260, 261, 262, 273, 280, 288, 289, 309, 310, 313, 314, 321, 322, 336, 337, 340, 342, 356, 368, 397, 398, 399, 402, 405, 407, 436, 438, 440, 442, 444, 510, 511, 513, 517, 518, 519, 574, 592], "random_access_iterator_tag": [75, 247], "random_access_rang": [321, 322, 459], "random_engin": 592, "random_interspers": [28, 29, 160, 193, 244, 245, 280, 436, 438, 474, 475], "random_intersperse_fn": [128, 217, 227, 231, 240, 313, 314, 437], "random_intersperse_fnimplement": [244, 314], "random_intersperse_fninlin": 437, "random_intersperse_fnstat": 437, "random_intersperse_view": [128, 219, 233, 244, 313, 314, 439], "random_intersperse_viewconstexpr": 314, "random_intersperse_viewimplement": 314, "random_intersperse_viewrandom_intersperse_view": 314, "random_intersperseconstexpr": 314, "random_interspersedefinit": 314, "random_probability_estimator_": [28, 519], "random_st": 28, "random_state_gener": [28, 45, 46], "random_state_generator_": 28, "random_state_generator_typ": 28, "random_state_generatora": 45, "random_state_prob": 28, "randominclud": 157, "randomli": [321, 460], "randomnumberdistribut": [20, 444], "randomrandom": 141, "randomstatedistribut": [87, 296], "randomstategener": [28, 46, 195, 204, 205, 210, 213, 218, 222, 226, 232, 238, 244, 510, 511, 513], "randomstategeneratora": 45, "randomstategeneratorstd": [511, 513], "randomstategeneratortyp": [511, 513], "rang": [3, 8, 10, 13, 14, 15, 17, 21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 67, 69, 79, 81, 83, 85, 91, 94, 98, 104, 106, 108, 109, 112, 113, 115, 116, 118, 119, 129, 130, 160, 162, 168, 170, 179, 180, 181, 182, 184, 185, 187, 188, 193, 219, 220, 233, 235, 244, 245, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 272, 273, 280, 282, 283, 284, 285, 286, 287, 290, 291, 294, 295, 297, 298, 299, 300, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 342, 346, 352, 356, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 414, 415, 430, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 458, 459, 460, 461, 464, 467, 468, 471, 475, 476, 477, 478, 517, 518, 519, 527, 528, 529, 530, 533, 540, 542, 549, 550, 552, 555, 563, 564, 568, 569, 570, 571, 572, 573, 586, 592], "range_": [322, 459], "range_access": [314, 322, 459], "range_difference_t": 322, "range_error": 254, "range_error_prob": 254, "range_map": 592, "range_max": 550, "range_measur": 592, "range_min": 550, "range_v3_major": [130, 186, 308], "range_v3_minor": [130, 186, 308], "range_value_t": [8, 130, 188, 256, 295, 298, 310, 314, 322, 461, 555, 568, 569], "rangea": [112, 273, 436, 438, 444], "rangean": [368, 372, 446], "ranger": 11, "ranges_value_t": 434, "rangesauto": 550, "rangesensormodel": 8, "rangesourc": 446, "rangesv3": 3, "rangeth": [129, 273, 414, 436, 438, 444], "rao": [44, 524, 588], "rarr": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "raspberri": 11, "rate": [112, 517, 519, 574], "rather": [69, 273, 440], "ratio": [112, 335, 569], "raw_difference_typ": 247, "ray2d": [34, 107, 128, 198, 207, 219, 221, 233, 236, 244, 273, 315, 316], "ray2dcast": [34, 316], "ray2dray2d": 316, "raycast": [26, 27, 33, 34, 63, 65, 67, 106, 167, 193, 346], "raycastingraycast": 145, "raytrac": [39, 59, 178, 193, 316], "rbegin": [43, 69, 70, 219, 233], "rbeginconstexpr": 43, "rclcpp": [480, 483, 484, 485, 486, 487, 488, 489, 490, 510, 511, 513, 515, 553, 555], "rclcpp_lifecycl": [479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 508, 509, 510, 511, 512, 513, 515], "re": [1, 34, 41, 83, 188, 310, 320, 368, 370, 372, 374, 480, 483, 484, 485, 487, 489, 511, 513, 515, 517, 586], "reach": [43, 69, 273, 468, 592], "react": 273, "read": [4, 34, 59, 69, 283, 314, 322, 342, 459, 517, 592], "readabl": [3, 40, 43, 183, 586], "readi": 547, "real": [8, 10, 87, 108, 188, 333], "reason": 188, "receiv": [563, 564], "recent": 508, "recommend": [6, 112, 592], "reconfigur": 10, "recov": [36, 112, 517, 519, 574], "recoveri": [28, 340], "recovery_alpha_fast": 517, "recovery_alpha_slow": 517, "recur": 2, "recurs": 4, "red": [243, 504, 517, 545, 569, 592], "reduc": 10, "ref": [314, 322, 519], "refer": [8, 11, 15, 18, 28, 30, 36, 40, 43, 68, 70, 76, 194, 196, 199, 211, 233, 237, 245, 247, 250, 252, 254, 258, 262, 277, 281, 307, 314, 322, 466, 477, 482, 496, 498, 503, 506, 519, 521, 541, 547, 558, 561, 566, 591], "reference_typ": [115, 116, 233, 237, 468], "reference_typerang": 468, "reference_typerefer": 468, "reference_wrapp": [314, 322, 436, 437, 442, 443, 519], "referencedecltyp": 247, "referencefin": 100, "referencerefer": 40, "referencevalu": [43, 247], "referencevalue_typ": 43, "referencevector2": 40, "refin": 8, "reflect": 10, "regardless": 106, "region": [4, 29, 77, 92, 96, 244, 271, 272, 273, 280], "regular": [2, 13, 17, 21, 29, 56, 108, 134, 169, 193, 244, 273, 280, 283, 317, 332, 333], "regular_grid": [56, 133, 134, 169, 193, 332, 333], "regulargrid": [13, 56, 296], "regularli": [3, 56, 244, 273, 317], "reinitialize_global_loc": 517, "reinterpret_cast": 283, "reintroduc": 130, "rel": [1, 61, 252, 348, 362, 517, 592], "relat": [0, 6, 30, 160, 182, 193, 199, 243, 285, 299, 310, 320, 322, 366, 464, 475, 478, 485, 504, 545], "relationfil": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "releas": 5, "relev": 69, "reli": [2, 3, 61, 83, 273], "reliabl": [6, 517], "reloc": [480, 483], "remain": 468, "remap": 517, "rememb": [5, 10], "remov": [41, 468, 508, 592], "remove_cv_t": [75, 247], "remove_if": 592, "remove_reference_t": [75, 194, 247], "rend": [43, 69, 70, 219, 233], "rendconstexpr": 43, "renorm": 188, "rep": [11, 586], "repeat": [20, 69], "repeat_n": [187, 188], "replac": [4, 115, 160, 193, 321, 468, 475, 592], "replic": 569, "report": 527, "repres": [4, 8, 10, 16, 17, 22, 45, 59, 77, 81, 83, 85, 87, 89, 98, 108, 124, 126, 130, 188, 243, 249, 250, 252, 273, 335, 440, 483, 487, 489, 504, 517, 525, 531, 533, 545, 555, 569, 585, 592], "represent": [8, 34, 59, 61, 79, 81, 83, 85, 98, 188, 244, 258, 260, 262, 268, 273, 283, 358, 398, 399, 402, 405, 407, 489, 510, 513, 586], "representative_st": [130, 233, 240, 376], "representative_statebeluga": 377, "representative_statest": 130, "reproduc": 3, "req": [480, 483, 484], "request": [480, 483, 484, 517], "request_head": [480, 483, 484], "request_nomotion_upd": 517, "requir": [8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 67, 69, 71, 79, 81, 83, 85, 87, 89, 98, 102, 110, 130, 132, 134, 136, 166, 180, 182, 183, 185, 186, 188, 190, 192, 193, 194, 244, 245, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 280, 282, 283, 285, 287, 289, 291, 293, 295, 296, 297, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 321, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 346, 368, 408, 436, 438, 444, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 525, 533, 550, 552, 553, 555, 564, 566, 569, 571, 573, 574, 584, 586], "resampl": [4, 11, 28, 44, 45, 112, 245, 273, 321, 340, 414, 440, 478, 517, 519, 525, 569, 574], "resample_interv": [28, 233, 240, 340, 517, 519, 540, 544, 574], "resample_intervalbeluga": 341, "resample_intervalbeluga_ro": 575, "resample_intervalfilt": 28, "resample_intervalnumb": 519, "resample_intervalstd": [28, 519], "resample_policy_": [28, 519], "research": [0, 1], "reserv": [115, 116, 130, 219, 233, 283, 468, 471, 569], "reserveconstexpr": 468, "reset": [10, 20, 28, 73, 74, 87, 88, 112, 113, 192, 219, 233, 270, 314, 464, 517], "resetconstexpr": [28, 192, 464], "resetvoid": 270, "residu": 273, "residual_fn": [273, 471, 586], "residual_fncal": 273, "residualfn": [273, 471, 586], "residualfncal": 273, "resiz": [115, 116, 219, 233, 468, 471, 552], "resizeconstexpr": 468, "resolut": [21, 47, 51, 53, 56, 108, 109, 118, 119, 120, 122, 124, 125, 126, 127, 219, 233, 260, 283, 318, 333, 334, 335, 364, 473, 517, 519, 520, 529, 530, 540, 542, 546, 552, 554, 555, 560, 562, 564, 566, 568, 569, 574, 579, 581, 583, 584, 585, 586], "resolution_": [333, 335, 473], "resolution_dataset": 283, "resolution_in_each_axis_t": [124, 125, 126, 127, 233, 237, 335], "resolution_in_each_axis_tstd": 335, "resolution_in_each_axis_ttyp": 335, "resolutiondefinit": 130, "resolutiondoubl": [333, 473, 552, 564, 566], "resolutiongrid": [108, 118], "resolutionstd": [124, 126], "resolutionth": 334, "resourc": 517, "respect": [2, 4, 10, 69, 122, 592], "respons": [8, 480, 483, 484], "rest": [1, 5, 41, 517, 592], "result": [3, 4, 8, 20, 31, 32, 41, 87, 91, 100, 134, 188, 243, 264, 268, 269, 270, 273, 301, 314, 334, 366, 398, 399, 402, 405, 407, 425, 461, 471, 504, 517, 519, 545, 592], "result_of_t": [273, 471], "result_typ": [20, 87, 88, 233, 237, 268, 269, 270, 273, 314, 322, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "result_typesophu": 268, "result_typeth": [268, 270], "result_typetypenam": [268, 270], "ret": [283, 586], "retri": 517, "retriev": [13, 53], "return": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 32, 34, 36, 40, 41, 43, 45, 59, 61, 65, 69, 77, 79, 81, 83, 85, 87, 98, 106, 108, 115, 130, 134, 136, 179, 180, 182, 184, 185, 188, 190, 192, 194, 244, 245, 247, 252, 254, 256, 258, 260, 262, 264, 268, 270, 272, 273, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 298, 305, 307, 310, 314, 316, 318, 320, 322, 327, 329, 333, 334, 335, 337, 339, 368, 370, 372, 374, 383, 388, 394, 396, 412, 418, 421, 423, 432, 434, 436, 438, 446, 458, 459, 460, 461, 464, 465, 466, 468, 471, 473, 476, 477, 483, 487, 489, 519, 525, 550, 552, 553, 564, 566, 569, 571, 573, 584, 585, 586, 592], "returnsa": [59, 61, 71, 79, 81, 85, 92, 94, 96, 98, 102, 104, 110, 129, 273, 555, 562, 563], "returnsan": [45, 525], "returnscel": [47, 51], "returnsdist": 106, "returnsful": 106, "returnsgrid": 56, "returnslikelihood": 83, "returnsplan": [51, 53, 56], "returnsrang": [47, 51, 53, 56], "returnssize_t": 452, "returnssubtend": 63, "returnsth": [77, 87, 89, 112, 120, 122, 124, 126, 129, 334, 388, 562], "returnstru": [87, 89, 412, 414, 421, 423, 483, 487, 489], "reus": [1, 2], "reusabl": [2, 3, 478, 506], "revers": [43, 69, 273], "reverse_iter": [43, 69, 70, 233, 237], "reverse_iteratorrevers": 43, "reverse_iteratorstd": 43, "reversed_": 40, "revisit": [8, 283], "reweight": [22, 24, 25, 28, 29, 170, 193, 244, 245, 280, 372, 374, 592], "reweight_base_fn": [128, 217, 231, 319, 320, 373, 374, 375], "reweight_base_fnimplement": [244, 320], "reweight_base_fninlin": [373, 375], "reweight_fn": [128, 217, 231, 319, 320, 375], "reweight_fnimplement": [244, 320], "reweight_fninlin": 375, "reweightconstexpr": 320, "reweightdefinit": 320, "rewind": 75, "rflag": [42, 43, 273], "rgba": [568, 569], "rh": 282, "right": [273, 305, 427, 428], "right_hash": 335, "rigidli": 517, "rmw_request_id_t": [480, 483, 484], "rng": 8, "ro": [1, 6, 10, 11, 34, 479, 480, 481, 483, 487, 489, 494, 505, 506, 510, 511, 512, 513, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 591], "robot": [1, 8, 10, 11, 36, 44, 59, 71, 79, 83, 112, 188, 250, 254, 273, 342, 344, 348, 352, 354, 356, 478, 516, 517, 524, 525, 588, 591, 592], "robot_model_typ": 517, "robot_pose_in_world": [36, 254], "robust": [8, 112, 364], "role": 8, "roll": [42, 122, 273, 335, 586], "roll_aux": 586, "roll_clustering_resolut": [122, 123, 335], "roll_clustering_resolutionclust": 122, "rollingwindow": [28, 42, 43, 273, 274, 278, 519], "rollov": 69, "ros2": [5, 6, 10, 551, 552, 555, 569, 591], "ros2_common": [479, 480, 485, 495, 510, 511, 512, 513], "ros_distro": [5, 10], "rosdep": [5, 591], "roslaunch": 6, "rospack": 6, "rosrun": 6, "rotat": [12, 94, 120, 122, 136, 188, 268, 273, 289, 334, 335, 348, 362, 421, 423, 517, 555, 566, 569, 574, 579, 581, 586], "rotation_noise_from_rot": [136, 233, 240, 289, 348, 362], "rotation_noise_from_rotationbeluga": [349, 363], "rotation_noise_from_rotationdoubl": [136, 289], "rotation_noise_from_rotationrot": [136, 289], "rotation_noise_from_transl": [136, 233, 240, 289, 348, 362], "rotation_noise_from_translationbeluga": [349, 363], "rotation_noise_from_translationdoubl": [136, 289], "rotation_noise_from_translationrot": [136, 289], "rotation_param": 289, "rotation_vari": [136, 289], "roti": 586, "rotx": 586, "rotz": [12, 36, 254, 586], "rough": 130, "roughli": [244, 505, 546], "routin": [258, 262], "row": [268, 270, 328, 329, 529, 562, 566, 585, 586], "rowmajor": 586, "rowsatcompiletim": [188, 268, 270, 283, 402, 471], "rowsth": 328, "rowwis": 283, "rpy": [122, 585, 586], "rsquo": 45, "rtabmap": 6, "rule": 4, "run": 11, "runner": [45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 483, 485, 487, 489, 525, 527, 529, 531, 533, 574, 576, 578, 579, 581], "runtim": [3, 519, 525, 592], "runtime_error": [270, 519], "runtime_errorif": [45, 87, 89, 525], "rvalu": [31, 42, 65, 273, 310], "rviz": [6, 10, 569], "rviz2": [6, 10, 591], "safari": [24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585], "safeti": 100, "sake": [471, 592], "same": [18, 49, 69, 75, 87, 106, 108, 188, 252, 283, 289, 301, 330, 334, 335, 358, 425, 517, 531, 533, 552, 571, 573, 585, 586, 591], "same_category_landmarks_view": 252, "sampl": [2, 3, 4, 8, 10, 16, 27, 28, 29, 36, 44, 71, 91, 94, 102, 110, 112, 130, 135, 136, 160, 161, 167, 181, 193, 244, 245, 273, 280, 283, 288, 289, 290, 291, 304, 309, 337, 340, 368, 386, 387, 440, 442, 444, 446, 460, 471, 474, 475, 517, 518, 519, 524, 555, 568, 569, 586, 588, 592], "sample_base_fn": [128, 220, 235, 321, 322, 441, 442], "sample_base_fnimplement": [244, 322], "sample_base_fninlineprotect": [441, 443], "sample_fn": [128, 217, 231, 321, 322, 443, 586], "sample_fnimplement": [244, 322], "sample_fninlin": 443, "sample_from_distribut": [220, 235, 322, 440, 441, 442, 443], "sample_from_distributionconstexpr": 322, "sample_from_rang": [220, 235, 322, 440, 441, 442, 443], "sample_from_rangeconstexpr": 322, "sample_nois": 8, "sample_so3": 586, "sample_view": [128, 220, 235, 244, 321, 322, 445], "sample_viewconstexpr": 322, "sample_viewimplement": 322, "sample_viewsample_view": 322, "sampleconstexpr": [322, 586], "sampledefinit": 322, "sampleuniform": 272, "sampling_fn_2d": 136, "sampling_fn_3d": 136, "sane": 8, "satisfi": [8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 71, 79, 81, 83, 85, 98, 102, 110, 115, 245, 273, 368, 425, 436, 438, 444, 460, 461, 555, 570], "satur": 568, "save": [10, 130], "sc22": 335, "scalar": [8, 14, 19, 23, 29, 40, 65, 67, 87, 89, 128, 183, 188, 198, 214, 217, 228, 229, 230, 231, 234, 235, 237, 240, 244, 256, 268, 270, 273, 280, 282, 283, 292, 293, 326, 327, 328, 329, 334, 346, 359, 386, 387, 398, 399, 402, 405, 407, 416, 417, 422, 424, 471, 520, 527, 528, 531, 532, 533, 534, 535, 540, 542, 543, 544, 546, 550, 552, 554, 555, 560, 562, 568, 569, 571, 573, 580, 582, 583, 584, 585, 586, 592], "scalar_typ": [87, 88, 89, 90, 98, 235, 237, 268, 270, 282, 283, 358, 359, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 513], "scalar_typeflo": 282, "scalar_typescalar": 282, "scalar_typeth": [268, 270], "scalar_typetypenam": [268, 270], "scalardoubl": 550, "scalarexpect": [571, 573], "scalarrang": 550, "scalart": [571, 573], "scalarth": [326, 328, 421, 423], "scale": [98, 283, 358, 360, 517, 552, 569], "scale_factor": 569, "scaled_l_matrix": 471, "scan": [10, 29, 49, 169, 193, 244, 255, 256, 273, 280, 480, 483, 487, 489, 511, 513, 517, 519, 525, 527, 528, 550, 592], "scan_": 550, "scan_frame_id": 517, "scan_top": 517, "scanlas": 527, "scatter": [1, 77], "scenario": [189, 290, 292, 591], "scheme": 592, "screen": 10, "se": [8, 92, 96, 175, 193, 271, 272, 312, 478, 519, 520, 525, 546, 560, 568, 579, 581], "se2": [8, 12, 29, 33, 34, 35, 36, 98, 128, 129, 130, 135, 136, 187, 188, 217, 231, 244, 253, 254, 259, 260, 267, 268, 271, 272, 273, 280, 282, 283, 288, 289, 292, 293, 315, 316, 326, 327, 328, 329, 334, 335, 336, 337, 358, 359, 407, 422, 510, 511, 513, 518, 519, 520, 535, 540, 542, 544, 546, 554, 555, 560, 562, 565, 566, 568, 569, 580, 585, 586], "se2bas": [29, 128, 188, 198, 204, 210, 221, 233, 235, 236, 237, 239, 244, 267, 268, 273, 280, 404], "se2d": [8, 12, 17, 29, 34, 35, 36, 59, 71, 81, 83, 85, 92, 93, 95, 102, 104, 105, 106, 107, 110, 121, 128, 130, 135, 136, 215, 217, 220, 229, 231, 235, 244, 253, 254, 258, 260, 262, 271, 272, 273, 280, 289, 292, 293, 316, 334, 335, 337, 416, 480, 483, 484, 487, 488, 511, 519, 525, 526, 529, 551, 552, 555, 566], "se2near": [326, 327], "se2nearauto": 327, "se3": [12, 29, 35, 36, 98, 128, 135, 136, 187, 188, 217, 231, 244, 251, 252, 267, 268, 271, 272, 273, 280, 282, 283, 292, 293, 334, 335, 358, 359, 399, 424, 513, 520, 535, 540, 542, 544, 546, 549, 550, 554, 555, 560, 562, 568, 569, 570, 571, 572, 573, 582, 585, 586], "se3bas": [29, 128, 188, 198, 204, 210, 221, 233, 235, 236, 237, 239, 244, 267, 268, 273, 280, 401], "se3d": [12, 14, 19, 23, 29, 35, 36, 71, 77, 96, 97, 123, 128, 135, 136, 215, 217, 220, 229, 231, 235, 244, 252, 253, 254, 271, 272, 273, 280, 334, 335, 344, 489, 490, 513, 527, 528, 531, 532, 533, 534, 550, 571, 573], "search": 252, "sec": 569, "second": [8, 34, 115, 130, 180, 258, 260, 262, 305, 333, 425, 517, 592], "second_rot": [136, 289], "second_rotation_param": 136, "section": [8, 188, 273, 352, 592], "see": [8, 11, 12, 16, 20, 22, 25, 27, 28, 29, 32, 34, 36, 38, 40, 41, 43, 59, 61, 63, 71, 79, 81, 83, 85, 98, 102, 106, 112, 115, 130, 132, 134, 136, 166, 180, 182, 183, 185, 186, 188, 190, 192, 193, 194, 244, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 342, 348, 352, 356, 378, 384, 396, 408, 430, 450, 459, 460, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 525, 550, 552, 553, 555, 564, 566, 569, 571, 573, 584, 586, 591], "seed": 283, "seem": [273, 283], "seen": [1, 569], "select": [28, 273, 340, 466, 478, 517, 519, 525, 574], "selective_resampl": [28, 235, 240, 340, 517, 519, 540, 544, 574], "selective_resamplingbeluga": 341, "selective_resamplingbeluga_ro": 575, "selective_resamplingbool": [28, 519], "selective_resamplingwheth": [28, 519], "self": [41, 134, 256, 264, 287, 318, 333, 592], "self_typ": 41, "selfadjointeigensolv": [188, 270, 563, 564], "semant": 20, "semiregular_box_t": 314, "sens": 592, "sensibl": 273, "sensor": [4, 10, 11, 14, 19, 22, 23, 28, 29, 37, 38, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 77, 79, 81, 83, 85, 98, 108, 118, 162, 193, 244, 245, 249, 250, 271, 272, 273, 280, 319, 342, 344, 350, 352, 356, 358, 360, 372, 384, 392, 393, 478, 480, 483, 487, 489, 510, 511, 513, 517, 518, 519, 525, 549, 550, 551, 552, 563, 564, 565, 566, 570, 571, 572, 573, 592], "sensor_callback": [480, 483, 484, 497, 499], "sensor_callbackvoid": 480, "sensor_model": [28, 45, 46, 519, 525, 526, 592], "sensor_model_": [28, 519], "sensor_model_sigma": 592, "sensor_model_vari": [480, 483, 519, 525, 526, 540, 543], "sensor_model_variantbeluga_amcl": 484, "sensor_model_variantget": 480, "sensor_model_variantsensor": 519, "sensor_model_variantstd": 519, "sensor_modelsensor": 45, "sensor_modelvari": 525, "sensor_msg": [10, 479, 480, 483, 484, 487, 488, 489, 490, 508, 509, 510, 511, 512, 513, 517, 519, 520, 523, 527, 528, 531, 532, 533, 534, 537, 539, 546, 547, 549, 550, 555, 560, 570, 571, 572, 573], "sensor_noise_": 8, "sensor_pose_in_robot": [36, 235, 240, 344], "sensor_pose_in_robotbeluga": 345, "sensor_pose_in_robotpos": 36, "sensor_pose_in_robotsophu": 36, "sensor_pose_in_world": [36, 77, 78, 252], "sensor_pose_in_worldth": 77, "sensor_rang": 592, "sensor_stddev": 8, "sensorinclud": [153, 154, 155, 156], "sensormodel": [2, 28, 46, 59, 61, 79, 83, 98, 195, 204, 205, 210, 213, 218, 222, 226, 232, 238, 244, 296], "sensormodelclass": 45, "sensormultivariate_uniform_distribut": 157, "sensorsensor": 140, "sentinel": [29, 39, 40, 43, 65, 67, 68, 69, 70, 128, 217, 231, 244, 280, 347], "sentinel_for": [40, 346], "sentinelinlin": 347, "sentinelpast": [40, 244], "separ": [6, 329], "seq": [28, 45, 46, 285, 295, 310, 320, 517, 592], "sequenc": [4, 20, 87, 517], "sequenced_polici": [28, 45, 285, 295, 510, 511, 513, 515, 519, 525], "sequences_": 468, "sequenti": [44, 478, 517], "seri": [44, 524, 588], "server": [10, 480, 483, 517], "servic": [0, 480, 483], "set": [4, 6, 8, 20, 28, 29, 45, 59, 87, 89, 98, 112, 129, 130, 244, 245, 269, 270, 273, 280, 289, 460, 478, 480, 483, 487, 489, 511, 513, 517, 519, 525, 552, 563, 569, 591, 592], "set_initial_pos": 517, "setpoint": 592, "setup": [5, 10, 591], "sever": [5, 468, 591], "sfina": 323, "sh": 591, "shall": 508, "shape": [2, 555], "share": 6, "shared_ptr": [480, 483, 484], "sharedptr": [480, 483, 484, 485, 486, 487, 488, 489, 490, 511, 513, 515], "shift": 334, "short": [34, 112, 305, 342, 427, 517], "shorthand": [117, 244, 273, 467], "should": [8, 10, 18, 108, 252, 268, 270, 282, 412, 414, 421, 423, 425, 460, 471, 517, 591, 592], "should_interspers": 314, "show": [24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585, 592], "shown": [4, 243, 504, 545, 592], "shutdown": 517, "side": [3, 21], "sigma": 273, "sigma_bear": [36, 235, 240, 254, 344, 352], "sigma_bearingbeluga": [345, 353], "sigma_bearingdoubl": [36, 254], "sigma_bearingstandard": [36, 254], "sigma_hit": [34, 235, 240, 260, 342, 356, 517], "sigma_hitbeluga": [343, 357], "sigma_hitdoubl": [34, 260], "sigma_hitstandard": [34, 260], "sigma_point": 471, "sigma_rang": [235, 240, 254, 352], "sigma_rangebeluga": 353, "sigma_rangedoubl": 254, "sigma_rangestandard": 254, "sign": 75, "signal": 44, "signatur": [483, 485, 487, 489, 515], "signed_typ": 335, "signed_valu": 335, "signific": 334, "similar": [20, 194, 268, 273], "simpl": [3, 8, 516, 591], "simplest": 6, "simpli": 1, "simplic": 592, "simplifi": [2, 289, 592], "simul": [8, 591, 592], "sin": [8, 256, 586], "sin_apertur": [36, 254], "sin_theta": [258, 262], "sinc": [4, 43, 273, 440, 455, 572, 591], "singl": [29, 42, 43, 129, 130, 244, 273, 280, 307, 376, 394, 465, 466, 517, 569], "site": [335, 586], "size": [21, 27, 28, 43, 69, 70, 75, 108, 109, 115, 116, 118, 119, 130, 161, 167, 180, 181, 188, 193, 220, 235, 245, 264, 272, 273, 283, 290, 291, 304, 321, 322, 333, 402, 444, 458, 459, 461, 464, 468, 473, 527, 528, 529, 530, 533, 534, 540, 542, 550, 552, 555, 563, 564, 566, 568, 569, 570, 571, 573, 592], "size_": [43, 459], "size_of_datatyp": 571, "size_t": [13, 15, 17, 28, 40, 42, 43, 51, 52, 53, 54, 69, 108, 115, 118, 119, 120, 122, 124, 126, 129, 130, 179, 180, 184, 185, 190, 260, 264, 272, 273, 283, 287, 306, 307, 333, 334, 335, 339, 340, 376, 379, 384, 410, 411, 412, 413, 446, 447, 452, 455, 457, 459, 460, 461, 464, 465, 466, 468, 473, 519, 527, 528, 529, 530, 533, 550, 552, 555, 562, 566, 568, 569, 573, 574, 585, 586, 592], "size_typ": [43, 69, 70, 75, 115, 116, 235, 237, 247, 468], "size_types": [43, 468], "size_typestd": [43, 468], "sizeconstexpr": [43, 468], "sized_rang": [188, 291, 321, 322, 459, 464, 468, 569], "sizeof": [124, 334, 335, 466, 468, 570, 571], "sizes": 563, "sizesampl": 555, "sizestd": [333, 473, 550, 552, 566, 573], "skip": 517, "slam": [6, 10], "slam_toolbox": 10, "slow": [10, 517, 519, 574], "slow_averag": 464, "slow_filter_": 464, "slower": [258, 262, 316], "small": [77, 268, 517], "smooth": [59, 73, 83], "so": [1, 17, 18, 36, 41, 117, 188, 254, 273, 321, 323, 335, 425, 430, 450, 465, 468, 569, 592], "so2": [8, 12, 33, 34, 36, 94, 135, 136, 188, 253, 254, 258, 262, 268, 282, 283, 288, 289, 293, 315, 316, 326, 327, 328, 329, 335, 336, 337, 398, 565, 566, 569, 586], "so2bas": [29, 128, 188, 198, 204, 210, 221, 233, 235, 236, 237, 239, 244, 267, 268, 273, 280, 403], "so2d": [8, 34, 106, 107, 130, 136, 272, 289, 316, 337, 566], "so2near": [326, 327], "so2nearauto": 327, "so3": [187, 188, 267, 268, 282, 293, 335, 405, 569, 586], "so3bas": [29, 128, 188, 198, 204, 210, 221, 233, 235, 236, 237, 239, 244, 267, 268, 273, 280, 400], "so3d": [12, 36, 254, 272], "softwar": [2, 10, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "solut": [6, 478], "solv": 592, "solver": [188, 270, 478, 563], "some": [3, 10, 13, 16, 22, 77, 110, 273, 310, 485, 592], "someth": 569, "somewhat": 517, "soon": [7, 9, 508, 589, 590], "sophu": [3, 8, 12, 14, 17, 29, 33, 34, 35, 36, 59, 71, 77, 81, 83, 85, 92, 93, 94, 95, 96, 97, 98, 102, 104, 105, 106, 107, 110, 120, 121, 122, 123, 128, 129, 130, 135, 136, 171, 187, 188, 193, 198, 204, 210, 215, 217, 220, 221, 229, 231, 233, 235, 236, 237, 239, 244, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 267, 268, 271, 272, 273, 280, 282, 283, 288, 289, 292, 293, 301, 302, 315, 316, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 344, 358, 359, 398, 399, 400, 401, 403, 404, 405, 407, 416, 421, 422, 423, 424, 463, 478, 480, 483, 484, 487, 488, 489, 490, 510, 511, 512, 513, 518, 519, 520, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 540, 542, 544, 546, 547, 549, 550, 551, 552, 555, 556, 557, 560, 562, 565, 566, 568, 569, 570, 571, 572, 573, 574, 579, 580, 581, 582, 585, 586], "sophus_match": [171, 193, 462, 463], "sophus_print": [171, 193, 462, 463], "sophussophu": [569, 586], "sort": [2, 8, 129, 130, 188, 244, 505, 546], "sorted_pair": 8, "sourc": [6, 10, 11, 24, 26, 31, 33, 35, 37, 39, 42, 106, 129, 131, 133, 135, 179, 181, 184, 187, 189, 191, 245, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 436, 458, 460, 462, 465, 467, 469, 472, 474, 476, 478, 479, 508, 510, 512, 518, 522, 549, 551, 563, 565, 568, 570, 572, 583, 585, 591, 592], "source_cell_": 316, "source_frame_id": [480, 483, 484], "source_pos": [106, 107, 316], "source_pose_in_local_frame_": 316, "source_posepos": 106, "source_posit": 316, "space": [12, 13, 14, 15, 17, 19, 21, 23, 29, 56, 63, 65, 77, 92, 94, 96, 134, 136, 175, 188, 193, 244, 245, 260, 271, 272, 273, 280, 292, 293, 312, 317, 318, 333, 356, 416, 421, 423, 458, 478, 517, 562, 585, 586, 592], "spare": 3, "spars": [29, 58, 98, 108, 129, 130, 169, 193, 244, 273, 280, 283, 330, 332, 333, 519, 520, 533, 546, 555, 560, 572, 573], "sparse_point_cloud": [58, 169, 193, 518, 519, 522, 523, 533, 537, 539], "sparse_value_grid": [108, 140, 169, 193, 283, 510, 511, 563, 564], "sparsegridt": [99, 214, 216, 217, 228, 229, 230, 231, 232, 235, 237, 241, 244, 283], "sparsegridttyp": 98, "sparsepointcloud3": [534, 535, 540, 542, 543, 546, 555, 572, 573], "sparsepointcloud3d": [555, 556, 559, 572, 573], "sparsepointcloud3f": [480, 483, 519, 525, 526, 555, 556, 559, 572, 573], "sparsepointcloud3fsparsepointcloud3": 480, "sparsepointcloud3sparsepointcloud3": 573, "sparsepointcloud3thin": [519, 573], "sparsevaluegrid": [98, 109, 128, 200, 208, 219, 220, 227, 229, 233, 235, 237, 244, 273, 283, 332, 333, 511, 513, 555, 563, 564], "sparsevaluegrid2": [273, 274, 278, 332, 333, 510, 511, 513], "sparsevaluegrid3": [273, 274, 278, 332, 333, 513], "sparsevaluegridgener": [283, 333], "sparsevaluegridsparsevaluegrid": 333, "spatial": [4, 27, 45, 104, 120, 122, 124, 126, 130, 167, 193, 252, 273, 334, 335, 446, 517, 574, 592], "spatial_hash": [26, 27, 28, 45, 46, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 167, 193, 217, 220, 231, 233, 235, 237, 244, 273, 518, 519, 568, 569], "spatial_hash_function_": 130, "spatial_hashcal": 335, "spatial_hasher_": [28, 519], "spatial_hasher_typ": [28, 45, 46], "spatial_hashera": 45, "spatial_hashspatial_hash": 335, "spatial_resolution_": 517, "spatial_resolution_i": [519, 540, 544, 574], "spatial_resolution_theta": [519, 540, 544, 574], "spatial_resolution_thetabeluga_ro": 575, "spatial_resolution_thetadoubl": 519, "spatial_resolution_thetaspati": 519, "spatial_resolution_x": [519, 540, 544, 574], "spatial_resolution_xbeluga_ro": 575, "spatial_resolution_xdoubl": 519, "spatial_resolution_xspati": 519, "spatial_resolution_ybeluga_ro": 575, "spatial_resolution_ydoubl": 519, "spatial_resolution_yspati": 519, "spawn": 591, "speak": 100, "special": [3, 29, 42, 92, 94, 96, 98, 100, 120, 122, 124, 126, 244, 267, 271, 272, 273, 280, 292, 323, 334, 338, 378, 379, 383, 391, 395, 398, 399, 402, 405, 407, 421, 423, 433, 452, 454, 455, 457, 465, 508, 510, 520, 546, 560, 562, 568, 569, 579, 581], "specializationdefinit": 509, "specif": [2, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 63, 106, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 245, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "specifi": [8, 18, 20, 115, 129, 130, 189, 243, 245, 273, 284, 291, 292, 356, 412, 414, 421, 423, 468, 504, 508, 545, 592], "speed": [6, 471], "spiral": 112, "spread": 335, "sqrt": [34, 136, 260, 289, 461, 471], "squar": 471, "squared_background_dist": 260, "squared_dist": 260, "squared_max_dist": 260, "squared_weight_sum": 188, "squarednorm": [252, 260], "src": [5, 292, 293, 510, 511, 552, 591, 592], "srv": [479, 480, 483, 484, 510, 511, 512, 513, 517], "ss": [16, 283], "stachniss": [44, 524, 588], "stack": 3, "staff": 0, "stamp": [480, 483, 484, 553, 555], "stamp_messag": [553, 555, 556, 557], "stamp_messagemessag": 553, "stand": 1, "standalon": 517, "standard": [2, 3, 8, 20, 36, 40, 63, 89, 108, 130, 188, 245, 250, 252, 254, 273, 342, 344, 352, 356, 364, 460, 461, 508, 517, 519, 566, 574, 576, 592], "start": [1, 8, 10, 65, 106, 273, 468, 508], "state": [4, 8, 16, 18, 20, 22, 27, 28, 29, 34, 35, 36, 45, 59, 61, 71, 79, 81, 83, 85, 87, 94, 98, 102, 104, 105, 106, 110, 112, 120, 121, 122, 123, 129, 130, 136, 167, 187, 193, 198, 217, 230, 231, 233, 240, 241, 244, 245, 253, 254, 258, 262, 270, 273, 274, 279, 280, 283, 289, 292, 293, 297, 298, 299, 300, 306, 307, 309, 310, 319, 320, 322, 334, 335, 337, 368, 372, 377, 389, 408, 416, 425, 429, 430, 431, 446, 461, 464, 480, 483, 484, 485, 486, 487, 488, 489, 490, 510, 511, 512, 513, 515, 517, 519, 525, 555, 568, 569, 592], "state_detail": [34, 36, 128, 130, 136, 217, 231, 244, 254, 258, 262, 273, 283, 289, 298, 300, 306, 307, 310, 335, 337, 430, 431, 461, 569], "state_fn": [34, 36, 128, 130, 136, 217, 231, 254, 258, 262, 273, 283, 289, 298, 300, 306, 307, 310, 335, 337, 431, 461, 569], "state_fncustom": [244, 307], "state_fninlin": 431, "state_t": [273, 274, 278, 297, 298, 388, 461, 555, 568, 569], "state_ttyp": [298, 461], "state_ttypenam": [298, 461, 569], "state_typ": [8, 16, 22, 28, 34, 36, 45, 46, 59, 60, 61, 62, 71, 72, 79, 80, 81, 82, 85, 86, 98, 99, 102, 103, 110, 111, 136, 235, 237, 244, 254, 258, 262, 273, 283, 289, 297, 298, 337, 408, 409, 461, 510, 511, 512, 513, 569], "state_type2d": [136, 289, 337], "state_typesophu": [34, 258, 262, 289, 337], "state_typest": [34, 36, 254, 258, 262, 283], "state_typestatetyp": [36, 136, 254], "state_typestd": [283, 298, 513], "state_typeth": 298, "stateconstexpr": [34, 36, 130, 136, 254, 258, 262, 283, 289, 298, 300, 307, 310, 335, 337, 461, 569], "statecustom": [34, 36, 130, 136, 254, 258, 262, 283, 289, 298, 300, 307, 310, 335, 337, 461], "statehistogram": 569, "statesamplingfunct": [8, 16, 71, 102, 110, 310, 368, 369, 370, 371], "statesamplingfunctiona": 368, "statesconstexpr": [130, 300, 322, 569], "statesdefinit": [130, 300, 322], "statesrang": [104, 273], "stateth": [120, 122], "statetyp": [35, 36, 62, 72, 80, 135, 136, 197, 198, 200, 206, 208, 214, 217, 222, 228, 229, 231, 232, 235, 237, 238, 241, 244, 253, 254, 292, 293, 417, 512, 513], "statetypest": 513, "statetypeth": 292, "statetypetyp": [61, 71, 79], "statetypetypenam": 513, "stateweightingfunct": [8, 22, 59, 61, 79, 81, 85, 98], "static": [59, 81, 83, 85, 130, 136, 260, 268, 270, 272, 282, 283, 289, 291, 314, 329, 337, 358, 359, 398, 399, 402, 405, 406, 407, 414, 436, 466, 477, 529, 566, 571, 573, 576], "static_assert": [8, 28, 43, 130, 136, 188, 256, 268, 270, 282, 283, 285, 291, 295, 298, 310, 314, 320, 322, 333, 335, 459, 461, 464, 468, 471, 569, 571, 573], "static_cast": [40, 41, 43, 130, 134, 188, 247, 258, 260, 262, 264, 283, 291, 295, 322, 335, 459, 461, 464, 466, 468, 471, 550, 552, 569, 571, 573, 584, 586, 592], "staticconstexpr": 402, "stationari": [29, 110, 172, 193, 244, 266, 273, 280, 336, 337, 515, 517], "stationary_model": [110, 172, 193, 265, 266, 510, 511], "stationarymodel": [16, 111, 128, 198, 217, 231, 235, 237, 273, 336, 337, 510, 511, 513, 519, 525], "stationarymodela": [244, 337], "stationarymodelinlin": 111, "statisfi": [245, 460], "statist": [8, 44, 478], "std": [2, 8, 13, 15, 17, 28, 29, 32, 34, 36, 40, 42, 43, 45, 46, 47, 51, 52, 53, 54, 59, 61, 63, 67, 69, 70, 71, 75, 77, 79, 81, 85, 87, 89, 90, 98, 100, 102, 106, 108, 110, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 134, 136, 160, 179, 180, 181, 182, 183, 184, 185, 188, 190, 193, 194, 195, 197, 198, 200, 201, 204, 205, 206, 207, 209, 210, 217, 218, 219, 220, 221, 229, 231, 232, 233, 235, 236, 237, 239, 240, 244, 245, 247, 252, 254, 256, 258, 260, 262, 264, 267, 268, 270, 272, 273, 280, 282, 283, 285, 287, 289, 291, 293, 295, 298, 305, 306, 307, 310, 314, 316, 320, 321, 322, 323, 328, 329, 333, 334, 335, 337, 338, 339, 340, 358, 359, 360, 366, 368, 370, 372, 374, 376, 378, 379, 380, 382, 383, 386, 387, 391, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 425, 426, 430, 431, 433, 434, 435, 436, 437, 442, 443, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 464, 465, 466, 467, 468, 471, 473, 475, 477, 478, 480, 483, 484, 485, 486, 487, 488, 489, 490, 510, 511, 513, 515, 519, 520, 525, 526, 527, 528, 529, 530, 531, 533, 546, 550, 552, 553, 555, 560, 562, 563, 564, 566, 568, 569, 571, 573, 574, 576, 577, 578, 579, 581, 585, 586, 592], "std_msg": [568, 569], "std_srv": [479, 480, 483, 484, 510, 511, 512, 513, 517], "stddev": 8, "stdexcept": [42, 43, 283], "stdhash": [452, 453], "stdnumeric_limit": 454, "stdtuple_el": [455, 456], "stdtuple_s": 457, "step": [4, 10, 45, 112, 483, 485, 487, 489, 515, 517, 525, 574], "step_": 40, "step_to": 40, "stide": 301, "still": 569, "stl": [245, 310], "storag": [10, 69, 115, 169, 193, 263, 287, 473], "store": [8, 108, 333, 592], "storeag": [529, 566], "str": 283, "strafe": [289, 362, 517], "strafe_noise_from_transl": [235, 240, 289, 362], "strafe_noise_from_translationbeluga": 363, "strafe_noise_from_translationdoubl": 289, "strafe_noise_from_translationtransl": 289, "strafe_param": 289, "strasdat": 188, "strategi": 44, "stream": [42, 43, 273, 328], "streamlin": 6, "streamprecis": 329, "strict": [532, 534, 540, 542, 543, 546, 555, 570, 571, 572, 573], "strictif": [531, 533], "strictli": [3, 75, 100, 247], "stride": [523, 537, 539, 570, 571, 572], "string": [480, 483, 484, 485, 486, 487, 488, 489, 490, 515, 517], "string_view": [480, 483, 484, 515, 553, 555], "stringstream": 283, "strive": 3, "strong": [11, 273], "strongli": [28, 29, 100, 130, 166, 193, 244, 273, 280, 306, 307, 338, 339], "strongly_typed_numer": [100, 130, 166, 193, 306, 307, 452, 454], "struct": [8, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 67, 100, 129, 130, 135, 136, 180, 188, 189, 190, 243, 244, 249, 250, 253, 254, 259, 260, 267, 268, 273, 280, 282, 283, 285, 288, 289, 290, 291, 292, 293, 295, 297, 298, 305, 306, 307, 309, 310, 313, 314, 319, 320, 321, 322, 323, 334, 335, 338, 339, 459, 460, 461, 465, 466, 471, 476, 477, 481, 504, 511, 513, 518, 519, 520, 529, 545, 555, 565, 566, 568, 569, 592], "structur": [3, 8, 15, 36, 69, 252, 254, 478, 547, 592], "subclass": 547, "subrang": 130, "subscrib": [6, 479, 480, 483, 485, 487, 489, 508, 509, 510, 511, 512, 513], "subscribermessage_filt": 509, "subscript": [75, 480, 483, 485, 487, 489, 511, 513, 515], "subscription_opt": [510, 511], "subscriptionopt": [483, 485, 487, 489, 515], "subsequ": 5, "subset": 108, "substanti": 1, "substitut": 289, "success": [188, 270, 471, 483, 487, 489], "sudo": [5, 10], "suffici": 335, "suit": 478, "suitabl": [6, 508, 555, 568, 592], "sum": [8, 188, 284, 285, 517, 574], "super": [243, 504, 545], "supercov": 63, "support": [1, 3, 5, 13, 41, 61, 71, 75, 79, 130, 136, 245, 268, 273, 283, 298, 310, 314, 321, 368, 478, 510, 511, 513, 517, 519, 525, 571, 573, 591], "sure": [10, 31, 326, 592], "surfac": 77, "surject": 56, "surpass": [421, 423], "surpris": 3, "svg": [24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 565, 568, 570, 572, 583, 585], "swap": [40, 42, 43, 69, 70, 220, 235, 273, 274, 276, 591], "swapconstexpr": [40, 43], "swapvoid": 43, "symlink": 591, "symmetr": [87, 89, 136, 270, 289], "symmetri": [40, 346], "symptom": 10, "synchron": [480, 483, 487, 489, 511, 513], "synthes": 8, "synthet": [6, 44, 524, 588], "system": [4, 5, 10, 21, 44, 83, 245, 258, 262, 517, 524, 587, 588, 591], "t": [2, 4, 5, 6, 10, 16, 17, 20, 22, 29, 30, 31, 32, 40, 41, 42, 43, 45, 70, 88, 101, 108, 119, 127, 128, 130, 183, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 267, 268, 269, 270, 272, 273, 274, 278, 280, 283, 297, 298, 307, 316, 322, 323, 326, 327, 328, 329, 334, 335, 338, 339, 379, 380, 386, 387, 400, 401, 403, 404, 406, 409, 430, 431, 442, 443, 450, 451, 453, 456, 459, 461, 465, 466, 467, 468, 471, 472, 473, 497, 500, 504, 517, 519, 532, 534, 540, 542, 543, 545, 546, 551, 552, 555, 569, 570, 571, 572, 573, 592], "t1": 316, "t2": 316, "tabl": [273, 342, 348, 356, 517], "tag": [40, 67], "tail": [41, 251, 252, 268, 586], "tail_index_": 43, "take": [8, 10, 20, 75, 106, 245, 273, 314, 321, 322, 425, 430, 436, 438, 442, 446, 450, 458, 460, 461, 467, 468, 592], "take_evenli": [160, 193, 245, 474, 475, 549, 550, 570, 571, 572, 573], "take_evenly_fn": [458, 459], "take_evenly_view": 459, "take_evenlyconstexpr": 459, "take_evenlydefinit": 459, "take_exactli": [28, 518, 519, 568, 569, 592], "take_whil": [39, 40, 315, 316, 460, 461], "take_while_kld": [28, 29, 160, 193, 244, 245, 280, 446, 474, 475], "take_while_kld_fn": [128, 217, 231, 447, 460, 461], "take_while_kld_fnimplement": [244, 461], "take_while_kld_fninlin": 447, "take_while_kldconstexpr": 461, "take_while_klddefinit": 461, "taken": [273, 321], "tangent": [188, 273, 562, 585, 586], "tangential_space_to_xyz_rpi": [585, 586], "tangential_space_to_xyz_rpyeigen": 586, "tani": 118, "target": [4, 5, 11, 75, 247, 273, 459, 592], "target_frame_id": [480, 483, 484], "target_link_librari": 592, "target_s": 461, "task": 10, "tbf05": [517, 588, 592], "tbuilt": 100, "technic": [366, 592], "techniqu": [3, 8, 44, 524, 588, 592], "telement": 69, "teleop_twist_keyboard": 6, "teleoper": 6, "templ": [243, 504, 545], "templat": [2, 8, 28, 29, 32, 34, 35, 36, 40, 41, 42, 43, 63, 67, 92, 96, 102, 104, 110, 112, 129, 130, 134, 136, 179, 180, 181, 182, 183, 184, 185, 188, 194, 243, 244, 247, 253, 254, 256, 258, 260, 262, 264, 268, 269, 270, 271, 272, 273, 280, 282, 283, 285, 287, 289, 291, 292, 293, 295, 297, 298, 302, 305, 307, 310, 314, 316, 317, 318, 320, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 346, 366, 368, 370, 372, 374, 386, 414, 427, 430, 434, 436, 440, 442, 446, 448, 450, 459, 461, 464, 465, 466, 467, 468, 471, 473, 477, 478, 480, 483, 504, 508, 509, 510, 511, 513, 519, 525, 545, 551, 552, 553, 554, 555, 562, 563, 564, 568, 569, 571, 573, 583, 584, 585, 586], "term": [1, 112, 268], "termin": 6, "test": [5, 162, 193], "testingtest": 142, "textual": [248, 507, 548], "tf": [10, 12, 136, 273, 282, 358, 359, 480, 483, 487, 489], "tf2": [480, 483, 484, 515, 547, 552, 556, 557, 565, 566, 569, 583, 584, 585, 586], "tf2_echo": 10, "tf2_eigen": [522, 523, 537, 539, 547, 552, 568, 569, 585, 586], "tf2_geometry_msg": [565, 566, 583, 584, 585, 586], "tf2_ro": [10, 479, 480, 483, 485, 487, 489, 510, 511, 512, 513, 515], "tf2_sophu": [515, 522, 523, 537, 539, 547, 551, 552, 568, 569], "tf2tf2": [584, 586], "tf_broadcast": 517, "tf_broadcaster_": [483, 485, 487, 489, 497, 500, 515], "tf_broadcaster_beluga_amcl": [484, 486, 488, 490], "tf_broadcaster_std": 515, "tf_broadcaster_transform": 515, "tf_buffer_": [483, 485, 487, 489, 497, 500, 515], "tf_buffer_beluga_amcl": [484, 486, 488, 490], "tf_buffer_std": 515, "tf_buffer_transform": 515, "tf_listener_": [483, 485, 487, 489, 497, 500, 515], "tf_listener_beluga_amcl": [484, 486, 488, 490], "tf_listener_std": 515, "tf_listener_transform": 515, "than": [31, 49, 69, 83, 115, 129, 130, 273, 356, 440, 458, 471, 476, 508, 517, 569, 574], "thei": [4, 8, 13, 15, 17, 87, 130, 245, 258, 262, 274, 476, 556, 569, 586], "them": [2, 5, 8, 10, 69, 130, 334, 478, 569, 592], "therebi": 112, "therefor": 4, "theta": [120, 130, 256, 517, 586], "theta_clustering_resolut": [120, 121, 335], "theta_clustering_resolutionclust": 120, "thi": [1, 2, 3, 4, 6, 8, 10, 12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 545, 546, 547, 548, 549, 550, 551, 552, 553, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 591, 592], "thin": [517, 527, 529, 531, 533, 546, 547, 549, 555, 565, 570, 572], "thing": [252, 591], "thoroughli": 591, "those": [1, 2, 115, 252, 468, 592], "though": [1, 115, 572, 591], "thousand": 6, "thread_loc": [136, 289, 337], "threadsaf": [28, 29, 42, 43, 69, 244, 273, 280], "three": [322, 442, 531, 533], "threshold": [129, 130, 136, 245, 289, 290, 291, 292, 348, 362, 364, 414, 415, 421, 423], "thresholdpercentag": 414, "through": [5, 8, 130, 243, 268, 335, 504, 545, 562, 592], "throughout": 2, "throughput": 3, "throw": [43, 108, 270, 283, 519, 531, 533, 571, 573], "thru": 10, "thrun": [44, 524, 588], "thrun_recovery_probability_estim": [26, 27, 28, 112, 193, 518, 519], "thrunrecoveryprobabilityestim": [28, 113, 128, 217, 219, 221, 231, 233, 236, 273, 464, 519], "thrunrecoveryprobabilityestimatorconstexpr": 464, "thrunrecoveryprobabilityestimatorinlin": 113, "thrunrecoveryprobabilityestimatorrandom": [28, 244, 464], "thu": [5, 13, 15, 21, 59, 61, 79, 81, 85, 98, 273], "tiancheng": 44, "tie": [36, 254], "tim": 335, "time": [3, 4, 8, 10, 28, 29, 39, 40, 65, 67, 69, 112, 120, 122, 124, 126, 244, 245, 252, 273, 280, 314, 321, 335, 340, 468, 515, 517, 529, 553, 555, 566, 592], "timelin": 11, "timepoint": [480, 483, 484], "timer": [483, 485, 487, 489, 515], "timer_": [483, 485, 487, 489, 497, 500, 515], "timer_beluga_amcl": [484, 486, 488, 490], "timer_rclcpp": 515, "timer_tim": 515, "timerbas": [483, 485, 487, 489, 515], "timestamp": [553, 555], "timestamptim": 555, "tnumer": 452, "to2d": [12, 136, 273, 274, 276], "to2dsophu": [12, 136], "to3d": [12, 136, 273, 274, 276], "to3dsophu": [12, 136], "to_cel": 283, "to_likelihood": 260, "to_vector": [221, 236, 268, 270, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "to_vectorstat": 268, "todo": [34, 188, 258, 283], "togeth": [8, 10, 364, 569], "tomsg": [552, 554, 556, 557, 562, 569, 583, 584, 585, 586], "tomsggeometry_msg": [552, 569, 584, 586], "too": [8, 53, 130, 188, 468, 517, 569], "tool": [3, 5, 10, 591], "toolbox": [6, 10], "toolkit": [1, 11], "top": [130, 180, 364, 478], "topic": [6, 10], "topleftcorn": 188, "total": [8, 112, 273, 284, 285, 592], "total_weight": [130, 182, 464], "trace": [59, 83, 106, 107, 221, 236, 316], "traceauto": 316, "track": 273, "trade": 3, "trait": [3, 29, 38, 136, 162, 166, 175, 182, 193, 244, 267, 270, 273, 280, 285, 289, 297, 298, 307, 310, 320, 322, 337, 408, 461, 464, 465, 468, 469, 470, 529, 565, 566, 576], "transact": [44, 524, 588], "transfer": 273, "transfer_fn": [273, 471, 586], "transfer_fncal": 273, "transferfn": [273, 471, 586], "transferfncal": 273, "transform": [8, 10, 12, 14, 17, 19, 23, 28, 33, 34, 35, 36, 83, 130, 136, 184, 185, 187, 188, 252, 253, 254, 255, 256, 258, 259, 260, 262, 273, 282, 285, 286, 287, 295, 299, 300, 310, 317, 318, 320, 322, 358, 471, 480, 483, 485, 487, 489, 511, 513, 519, 525, 527, 550, 554, 562, 573, 585, 586, 592], "transform_": 270, "transform_broadcast": [479, 480, 510, 511, 512, 513, 515], "transform_listen": [479, 480, 510, 511, 512, 513, 515], "transform_reduc": [34, 36, 254, 258, 262, 283, 471, 592], "transform_toler": 517, "transformbroadcast": [483, 485, 487, 489, 515], "transformed_sigma_point": 471, "transformedt": [273, 471, 586], "transformedtst": 273, "transformlisten": [483, 485, 487, 489, 515], "transformt": [480, 483], "transient": [6, 10, 517], "transit": [245, 309, 480, 483, 485, 487, 489, 511, 513, 515], "translat": [8, 12, 36, 94, 120, 122, 136, 188, 254, 258, 262, 268, 273, 282, 289, 293, 316, 327, 329, 335, 348, 358, 362, 421, 423, 517, 566, 569, 574, 579, 581, 586], "translation_noise_from_rot": [136, 236, 240, 289, 348, 362], "translation_noise_from_rotationbeluga": [349, 363], "translation_noise_from_rotationdoubl": [136, 289], "translation_noise_from_rotationtransl": [136, 289], "translation_noise_from_transl": [136, 236, 240, 289, 348, 362], "translation_noise_from_translationbeluga": [349, 363], "translation_noise_from_translationdoubl": [136, 289], "translation_noise_from_translationtransl": [136, 289], "translation_param": [136, 289], "translationtyp": 569, "transpos": [188, 270, 282, 283, 471], "travers": 77, "treat": [136, 289, 440, 552], "tree": 485, "triangl": 569, "triangle_list": 569, "trigger": [28, 161, 189, 190, 193, 245, 273, 290, 291, 292, 293, 304, 412, 414, 416, 421, 423, 517], "trinari": [566, 576], "trivial": 273, "tro": 588, "troubleshoot": 6, "true": [6, 10, 17, 20, 28, 29, 40, 43, 45, 69, 75, 115, 180, 244, 273, 280, 293, 307, 394, 396, 412, 418, 421, 423, 465, 466, 468, 508, 517, 519, 531, 533, 564, 569, 571, 573, 574, 592], "true_typ": [32, 244, 298, 307, 322, 323, 466], "truncat": [243, 273, 504, 545], "try": [2, 6, 24, 26, 31, 33, 35, 37, 39, 42, 47, 49, 51, 53, 55, 56, 58, 65, 81, 83, 85, 108, 114, 117, 118, 129, 131, 133, 135, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 175, 176, 179, 181, 184, 187, 189, 191, 243, 246, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 368, 370, 372, 374, 390, 391, 392, 393, 394, 395, 396, 418, 420, 425, 427, 433, 438, 440, 442, 444, 454, 457, 458, 460, 461, 462, 465, 467, 469, 472, 474, 476, 479, 480, 483, 485, 487, 489, 504, 507, 508, 510, 512, 518, 522, 527, 529, 531, 533, 545, 548, 549, 551, 563, 564, 565, 568, 570, 572, 583, 585, 591, 592], "try_emplac": 130, "tscalar": [531, 533], "tthe": [87, 91, 273, 326, 328], "ttupl": 334, "tunderli": [100, 452, 454], "tune": [6, 10], "tupl": [2, 28, 29, 45, 71, 102, 110, 114, 116, 117, 120, 122, 124, 125, 128, 132, 135, 136, 164, 166, 184, 185, 193, 195, 197, 198, 200, 201, 205, 206, 207, 209, 217, 218, 219, 220, 221, 231, 232, 233, 235, 236, 237, 239, 244, 245, 256, 273, 280, 286, 287, 288, 289, 298, 306, 307, 334, 335, 336, 337, 378, 379, 381, 383, 390, 391, 394, 395, 396, 430, 432, 433, 434, 435, 450, 465, 466, 467, 468, 470, 476, 477, 478, 510, 511, 512, 513, 519, 525, 592], "tuple_el": [29, 42, 43, 128, 236, 237, 244, 280, 455, 456], "tuple_element_t": [379, 466], "tuple_index": [29, 128, 244, 273, 280, 433, 465, 466], "tuple_index_found": [29, 128, 244, 280, 465, 466], "tuple_index_foundconstexpr": 466, "tuple_index_help": [465, 466], "tuple_index_helperconstexpr": 466, "tuple_index_t": [273, 274, 278, 465, 466], "tuple_index_tconveni": 466, "tuple_index_ttypenam": 466, "tuple_index_v": [273, 274, 279, 465, 466], "tuple_index_vconstexpr": 466, "tuple_index_vconveni": 466, "tuple_indexmeta": 466, "tuple_s": [29, 42, 43, 128, 244, 280, 457, 466], "tuple_size_v": [307, 378, 430, 466], "tuple_trait": [135, 136, 166, 193, 288, 289, 297, 298, 306, 307, 336, 337, 378, 379, 381, 383, 390, 391, 394, 395, 396, 432, 433, 469, 470], "tuple_vector": [114, 115, 117, 131, 132, 164, 183, 193, 270], "tuplecontain": [115, 116, 128, 195, 197, 198, 200, 201, 205, 206, 207, 209, 218, 219, 220, 221, 232, 233, 235, 236, 237, 239, 244, 273, 467, 468], "tuplecontainerconstexpr": 468, "tuplecontainerprimari": 468, "tuplelik": [29, 128, 236, 237, 244, 273, 280, 307, 382, 395, 433, 465, 466], "tupletupl": [124, 184], "tuplevector": [2, 28, 45, 128, 244, 245, 273, 274, 276, 467, 468, 510, 511, 513, 519], "tuplevectorshorthand": 468, "tuplevectortuplevector": 468, "turn": 592, "turtlebot": [11, 591], "tutori": [591, 592], "tutorial_param": 592, "tweak": 10, "twice": 130, "two": [2, 4, 6, 10, 18, 29, 42, 43, 69, 79, 87, 243, 244, 273, 280, 322, 348, 362, 378, 425, 442, 466, 468, 504, 518, 523, 525, 537, 539, 545, 592], "two_d_sampling_fn": 136, "two_epsilon": 461, "two_squared_sigma": 260, "txt": 592, "type": [3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 34, 35, 36, 38, 40, 41, 42, 43, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 116, 117, 118, 125, 126, 128, 129, 130, 133, 134, 136, 162, 166, 171, 182, 187, 188, 191, 192, 193, 195, 197, 198, 200, 201, 205, 206, 207, 209, 217, 218, 219, 220, 221, 231, 232, 233, 235, 236, 237, 239, 244, 247, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 267, 268, 269, 270, 272, 273, 280, 282, 283, 285, 286, 287, 289, 292, 297, 298, 301, 302, 306, 307, 310, 317, 318, 320, 322, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 350, 354, 358, 378, 379, 380, 381, 382, 383, 386, 388, 390, 391, 394, 396, 398, 399, 402, 405, 407, 408, 414, 418, 420, 421, 423, 430, 432, 434, 436, 438, 450, 452, 454, 455, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 508, 510, 512, 513, 519, 520, 523, 525, 527, 529, 531, 533, 537, 539, 546, 547, 549, 550, 552, 555, 560, 562, 565, 566, 568, 569, 570, 571, 572, 573, 579, 581, 583, 584, 585, 586, 591], "type_trait": [28, 37, 38, 42, 43, 100, 135, 136, 162, 181, 182, 187, 188, 193, 246, 247, 282, 283, 284, 285, 288, 289, 305, 306, 307, 309, 310, 313, 314, 319, 320, 321, 322, 332, 333, 334, 335, 336, 337, 378, 379, 381, 383, 388, 390, 391, 394, 395, 396, 408, 432, 433, 452, 454, 460, 461, 464, 467, 468, 471, 479, 480, 568, 569], "type_traitsdifferential_drive_model": 151, "type_traitseffective_sample_s": 147, "type_traitsnorm": 143, "type_traitssampl": 159, "typeaspointfieldtyp": [571, 573], "typecommon": 466, "typedef": [20, 30, 35, 42, 115, 129, 135, 199, 249, 253, 257, 261, 273, 277, 281, 297, 306, 317, 332, 465, 467, 508, 510, 512, 521, 541, 555, 558, 561, 570, 572], "typedefbeluga": [60, 62, 68, 70, 72, 76, 78, 80, 82, 84, 86, 88, 90, 99, 103, 109, 111, 116, 125, 127, 359, 380, 382, 400, 401, 403, 404, 406, 409], "typedefbeluga_ro": [526, 528, 532, 534], "typedefstd": 456, "typenam": [28, 40, 41, 42, 43, 45, 47, 49, 51, 53, 55, 56, 58, 65, 67, 69, 71, 75, 87, 89, 98, 101, 102, 106, 108, 110, 115, 118, 130, 134, 136, 183, 188, 216, 217, 230, 231, 244, 247, 256, 264, 268, 269, 270, 273, 282, 283, 287, 289, 292, 293, 297, 298, 302, 314, 316, 317, 318, 322, 331, 332, 333, 335, 337, 338, 339, 346, 358, 378, 379, 386, 391, 396, 398, 399, 402, 405, 407, 416, 417, 429, 436, 438, 444, 452, 454, 455, 457, 465, 466, 467, 468, 471, 473, 480, 483, 508, 509, 510, 511, 512, 513, 531, 533, 551, 552, 555, 562, 563, 564, 568, 569, 571, 573, 579, 581, 585, 586], "typereturn": 466, "typesbearing_sensor_model": 156, "typesel": 115, "typeslandmark_map": 158, "typestd": 466, "typet": 43, "typic": [2, 8, 517, 527, 547, 591], "u": [16, 29, 30, 43, 87, 88, 128, 194, 196, 199, 211, 222, 236, 237, 238, 240, 244, 270, 273, 274, 280, 322, 379, 380, 442, 443, 465, 466, 540, 542, 571, 573], "u_": 4, "u_t": [4, 592], "ubuntu": [5, 10], "uij": 282, "uint32_t": [249, 250, 273, 335], "uint64_t": 335, "uint8_t": [40, 53, 63, 287], "unary_fn": 310, "unaryexpr": 270, "unbias": 188, "uncertainti": [8, 188, 273, 592], "unchang": 309, "unconfigur": [480, 483, 485, 487, 489, 511, 513, 515], "undef": 186, "undefin": [69, 75, 115], "under": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "underli": [43, 69, 83, 100, 108, 339, 452, 510, 529, 566], "underlying_hasher_": 335, "underlying_typ": 100, "underlying_type_t": 43, "underlying_typetag": 100, "understand": [8, 592], "undesir": 77, "undocu": [243, 504, 545], "unexpect": [34, 342], "uniform": [29, 87, 89, 91, 92, 94, 96, 175, 188, 193, 244, 245, 271, 272, 273, 280, 312, 321, 440, 478, 517, 592], "uniform_distribut": 245, "uniform_int_distribut": [272, 322], "uniform_real_distribut": 272, "uniformli": 94, "uniformrandombitgener": [20, 87, 89, 436, 438, 444], "union": [29, 481, 520], "unique_ptr": [480, 483, 484, 485, 487, 488, 489, 490, 511, 513, 515], "unit": [188, 569], "unit_complex": [188, 258, 262, 316, 327, 329], "unit_quaternion": [188, 293, 586], "unitari": [87, 270], "uniti": 569, "unitless": [28, 340], "unitx": 569, "unknown": [53, 260, 287, 314, 356, 552, 566, 576], "unknown_mask": [17, 53, 54, 222, 238, 260, 287, 529, 530], "unknown_maskauto": 287, "unknown_space_occupancy_prob": [258, 262], "unkwnown": 17, "unless": [3, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "unlik": [8, 321, 476], "unnecessarili": 468, "unnorm": [4, 592], "unordered_map": [129, 130, 283, 510, 511, 513, 569], "unordered_set": [460, 461], "unorgan": [19, 23], "unpack": 334, "unreachable_sentinel_t": 322, "unscent": [273, 471, 586], "unscented_transform": [26, 27, 193, 273, 274, 276, 386, 585, 586], "unscented_transformauto": [471, 586], "unsign": [335, 552], "unsigned_typ": 335, "unsigned_valu": 335, "unstabl": 10, "until": [69, 460, 468, 592], "unwrap": [3, 314, 322, 436, 442], "up": [1, 4, 5, 6, 8, 130, 273, 480, 483, 564, 591, 592], "updat": [4, 5, 8, 10, 28, 34, 36, 45, 46, 59, 61, 73, 79, 81, 83, 85, 110, 112, 222, 238, 245, 254, 260, 309, 319, 340, 348, 362, 372, 464, 480, 483, 485, 487, 489, 511, 513, 515, 517, 519, 525, 526, 540, 542, 569, 574], "update_map": [28, 34, 36, 45, 46, 59, 60, 61, 62, 79, 80, 81, 82, 83, 84, 85, 86, 222, 238, 254, 260, 519, 525, 526, 540, 542], "update_mapvoid": [28, 34, 36, 254, 260, 519], "update_min_a": [28, 238, 240, 340, 517, 519, 540, 544, 574], "update_min_abeluga": 341, "update_min_abeluga_ro": 575, "update_min_adoubl": [28, 519], "update_min_amin": 28, "update_min_arot": 519, "update_min_d": [28, 238, 240, 340, 517, 519, 540, 544, 574], "update_min_dbeluga": 341, "update_min_dbeluga_ro": 575, "update_min_ddoubl": [28, 519], "update_min_dmin": 28, "update_min_dtransl": 519, "update_policy_": [28, 519], "updateauto": [28, 519], "upgrad": 5, "upon": [8, 517], "upper": [273, 364, 460, 461, 517, 574], "upstream": 5, "url": 588, "urng": [16, 92, 93, 94, 95, 96, 97, 219, 220, 233, 235, 244, 272, 313, 314, 321, 322, 436, 437, 439, 440, 441, 442, 443, 445], "urnga": [436, 438, 444], "urngth": [92, 94, 96], "us": [2, 4, 5, 6, 8, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 45, 59, 61, 65, 67, 69, 71, 75, 77, 79, 81, 83, 85, 87, 89, 98, 100, 102, 104, 108, 110, 112, 115, 120, 122, 124, 126, 129, 130, 132, 134, 135, 136, 162, 180, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 243, 244, 245, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 270, 272, 273, 280, 282, 283, 285, 287, 289, 290, 291, 292, 293, 295, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 331, 332, 333, 334, 335, 337, 339, 340, 342, 344, 352, 356, 358, 360, 364, 368, 372, 379, 383, 398, 399, 402, 405, 407, 408, 414, 425, 436, 444, 446, 455, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 477, 478, 480, 504, 508, 509, 510, 511, 512, 513, 515, 517, 519, 523, 525, 527, 531, 533, 545, 550, 552, 553, 555, 562, 564, 566, 569, 570, 571, 572, 573, 574, 584, 586, 592], "usa": [44, 524, 588], "usag": [41, 100, 260, 517], "use_cell_s": [563, 564], "use_cell_sizevoid": 564, "use_composit": 6, "use_map_top": 517, "use_mean_covari": [563, 564], "use_mean_covariancebool": 564, "user": [2, 3, 18, 31, 188, 273, 284, 478, 483, 485, 487, 489, 515, 520, 546, 560, 568, 579, 581], "usual": 547, "uth": [87, 273], "util": [28, 35, 36, 39, 40, 42, 43, 75, 129, 130, 162, 193, 251, 252, 269, 270, 273, 306, 307, 309, 310, 313, 314, 315, 316, 321, 322, 334, 335, 378, 396, 434, 462, 465, 466, 471, 472, 473, 476, 479, 480, 485, 515, 518, 519, 537, 547, 551, 563, 565, 566, 568, 585, 586], "utilitycircular_arrai": 149, "v": [17, 30, 128, 188, 196, 199, 211, 223, 237, 239, 268, 274, 278, 322, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 442, 443, 535, 540, 542, 569, 592], "v3": [8, 28, 31, 32, 33, 34, 35, 36, 39, 40, 43, 69, 115, 129, 130, 179, 180, 181, 182, 184, 185, 187, 188, 245, 251, 252, 253, 254, 255, 256, 259, 260, 282, 284, 285, 286, 287, 290, 291, 294, 295, 297, 298, 299, 300, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 458, 459, 460, 461, 464, 467, 468, 471, 476, 477, 518, 519, 549, 550, 563, 564, 568, 569, 570, 571, 572, 573, 592], "valid": [16, 18, 20, 22, 45, 130, 273, 283, 323, 517], "valu": [8, 10, 13, 14, 15, 17, 19, 20, 21, 23, 28, 29, 32, 34, 40, 42, 43, 49, 67, 69, 70, 73, 75, 87, 89, 100, 108, 115, 116, 118, 129, 130, 169, 179, 180, 184, 187, 188, 193, 194, 244, 245, 260, 270, 273, 280, 283, 284, 285, 287, 294, 298, 307, 309, 313, 314, 321, 322, 323, 326, 328, 332, 333, 334, 335, 342, 356, 360, 388, 389, 402, 436, 438, 461, 465, 466, 468, 471, 472, 473, 508, 517, 519, 520, 527, 529, 546, 550, 552, 555, 560, 562, 564, 565, 566, 568, 571, 573, 576, 577, 592], "value_": 339, "value_grid": [118, 140, 169, 193, 259, 260, 518, 519, 551, 552], "value_or": [34, 258, 262, 314, 471], "value_trait": [17, 53, 287, 529, 530, 540, 542, 566], "value_traitsstat": 566, "value_typ": [40, 43, 67, 68, 69, 70, 75, 76, 108, 115, 116, 237, 239, 247, 468], "value_typeiter": 40, "value_typestd": [247, 468], "value_typet": 43, "value_typevalu": [43, 247, 468], "value_typevector2": 40, "valuea": 273, "valuebeluga": 64, "valuegrid2": [81, 83, 85, 119, 128, 200, 208, 212, 219, 220, 223, 224, 225, 233, 235, 239, 241, 244, 260, 273, 472, 473, 519, 551, 552, 555], "valuegrid2gener": 473, "valuegrid2valuegrid2": 473, "valueinput": 334, "valueth": [115, 334, 388], "valuetrait": [529, 535, 540, 542, 544, 565, 566, 577], "valuetraitsinlinestat": 577, "valuetraitsstat": 577, "valuetraitstrait": [546, 566], "valuetyp": 8, "var": 10, "vari": 1, "variabl": [30, 31, 83, 87, 89, 184, 187, 188, 189, 199, 243, 273, 277, 281, 284, 289, 290, 292, 294, 297, 299, 306, 309, 313, 319, 321, 323, 430, 450, 458, 460, 465, 466, 476, 482, 498, 504, 521, 541, 545, 591], "varianc": [8, 188, 592], "variant": [4, 40, 63, 64, 65, 66, 188, 202, 239, 465, 510, 511, 512, 513, 515, 518, 519, 525], "variant_": 40, "variantbresenham": 65, "variantvariantbresenham": 40, "variat": 1, "ve": 10, "vector": [2, 8, 21, 28, 29, 33, 34, 35, 36, 47, 48, 51, 52, 53, 54, 56, 57, 59, 61, 65, 77, 79, 81, 85, 87, 90, 98, 104, 108, 109, 115, 117, 118, 119, 129, 130, 133, 134, 179, 180, 183, 188, 215, 217, 229, 231, 235, 237, 239, 244, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 273, 274, 278, 280, 282, 283, 286, 287, 318, 333, 350, 358, 360, 384, 385, 386, 387, 398, 399, 402, 405, 407, 467, 468, 471, 472, 473, 478, 519, 525, 526, 529, 530, 552, 555, 563, 564, 565, 566, 585, 586, 592], "vector2": [39, 40, 66, 67, 68, 197, 200, 201, 206, 209, 213, 214, 217, 226, 228, 231, 232, 233, 237, 239, 244, 256, 326, 327, 346, 347, 552, 562, 569, 583, 584, 586], "vector22d": 65, "vector2d": [8, 13, 15, 17, 47, 48, 51, 52, 53, 54, 65, 118, 119, 130, 134, 136, 264, 272, 282, 287, 289, 337, 529, 530, 566], "vector2i": [13, 17, 40, 47, 48, 51, 52, 53, 54, 63, 64, 118, 119, 134, 264, 283, 287, 316, 360, 510, 511, 513, 529, 530], "vector2ipoint": 63, "vector2near": [326, 327], "vector2nearauto": 327, "vector3": [23, 183, 326, 327, 573, 586], "vector3d": [12, 36, 249, 250, 252, 254, 272, 273, 282, 335], "vector3i": [283, 360, 513], "vector3near": [326, 327], "vector3nearauto": 327, "vector4": 188, "vector_typ": [87, 88, 89, 90, 237, 239, 244, 268, 270, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "vector_typeth": [268, 270], "vector_typetypenam": [268, 270], "vector_typevector": 270, "vectorshorthand": [183, 270, 468], "vectorstd": [183, 270, 468], "veloc": [8, 592], "velocitymotionmodel": 8, "veri": [5, 20, 130, 252], "verifi": [10, 273, 460, 461], "version": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 79, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 508, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 591, 592], "vertex_color": 569, "vertic": 569, "via": [45, 517], "view": [2, 3, 8, 14, 19, 23, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 128, 129, 130, 162, 179, 180, 181, 182, 187, 188, 193, 217, 219, 220, 227, 231, 233, 235, 240, 244, 245, 251, 252, 253, 254, 255, 256, 280, 282, 284, 285, 286, 287, 294, 295, 298, 309, 310, 315, 316, 317, 318, 319, 320, 366, 368, 370, 372, 374, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 464, 467, 468, 471, 478, 518, 519, 549, 550, 563, 564, 568, 569, 570, 571, 572, 573, 586, 592], "view_": [40, 67, 314, 322, 459], "view_adaptor": [244, 314], "view_closur": [32, 321, 322, 366, 586], "view_facad": [244, 322, 459], "view_interfac": [40, 244], "viewseffective_sample_s": 148, "viewsinclud": 159, "viewsnorm": 144, "viewstuple_vector": 150, "virtual": [483, 485, 487, 489, 515], "visibl": 77, "vision": 1, "visit": [180, 519], "visual": [10, 243, 489, 504, 513, 517, 545, 555, 568, 592], "visualization_msg": [479, 480, 483, 485, 487, 489, 513, 515, 517, 553, 555, 563, 564, 568, 569], "void": [28, 29, 32, 34, 36, 40, 42, 43, 45, 59, 61, 69, 73, 79, 81, 83, 85, 87, 112, 115, 121, 123, 125, 127, 128, 130, 192, 217, 220, 231, 233, 235, 237, 244, 254, 260, 268, 270, 273, 280, 298, 307, 314, 322, 323, 334, 335, 381, 390, 394, 397, 429, 432, 459, 464, 466, 468, 480, 483, 485, 487, 489, 511, 513, 515, 519, 525, 551, 552, 554, 555, 562, 563, 564, 585, 586], "void_t": [29, 128, 244, 273, 280, 298, 307, 322, 323, 393, 465, 466], "volatil": 6, "volum": 77, "w": [4, 5, 22, 30, 44, 128, 130, 196, 199, 211, 224, 237, 240, 241, 273, 274, 278, 285, 320, 322, 378, 396, 430, 450, 497, 499, 524, 540, 542, 552, 569, 586, 588], "w0": 471, "w_i": [517, 574], "w_t": 4, "wa": [8, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 243, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 483, 485, 487, 489, 504, 517, 525, 527, 529, 531, 533, 545, 555, 574, 576, 578, 579, 581], "wai": [10, 100, 335], "wait": 517, "wall": [77, 592], "want": [5, 8, 10, 34, 516], "warranti": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "wcpp": [480, 511, 513], "we": [6, 8, 10, 32, 34, 36, 115, 117, 130, 188, 254, 283, 314, 372, 468, 569, 586, 591, 592], "weight": [4, 8, 18, 22, 28, 29, 34, 36, 45, 59, 61, 79, 81, 83, 85, 98, 104, 105, 112, 129, 130, 181, 182, 187, 188, 240, 241, 244, 245, 254, 258, 262, 270, 273, 274, 278, 279, 280, 283, 284, 285, 291, 297, 298, 299, 300, 306, 307, 309, 319, 320, 321, 322, 342, 356, 364, 372, 376, 386, 387, 388, 408, 440, 441, 442, 443, 450, 451, 464, 471, 478, 510, 511, 513, 517, 519, 525, 555, 568, 569, 574, 586, 592], "weight_cap_percentil": [130, 240, 241, 364], "weight_cap_percentilebeluga": 365, "weight_cap_percentileclust": 130, "weight_cap_percentiledoubl": 130, "weight_detail": [128, 130, 182, 188, 217, 231, 244, 273, 298, 300, 306, 307, 450, 451, 471, 569], "weight_fn": [128, 130, 182, 188, 217, 231, 273, 298, 300, 306, 307, 451, 471, 569], "weight_fncustom": [244, 307], "weight_fninlin": 451, "weight_t": [273, 274, 278, 297, 298, 555, 568, 569], "weight_ttyp": 298, "weight_ttypenam": [298, 569], "weight_typ": [8, 22, 34, 36, 59, 60, 61, 62, 79, 80, 81, 82, 85, 86, 98, 99, 237, 241, 254, 258, 262, 273, 283, 297, 298, 408, 409, 569], "weight_typedoubl": [34, 36, 254, 258, 262, 283], "weight_typestd": 298, "weight_typeth": 298, "weight_typeweight": [34, 36, 254, 258, 262, 283], "weightaverag": 130, "weightbeluga": 377, "weightconstexpr": [130, 182, 188, 298, 300, 307, 471, 569], "weightcustom": [130, 182, 188, 298, 300, 307, 471], "weightdoubl": 130, "weighted_mean_fn": 8, "weighted_median": 8, "weighted_median_fn": 8, "weightnumer": [28, 511, 513, 569], "weights_it": 188, "weightsconstexpr": [130, 188, 285, 300, 322, 471, 569, 586], "weightsdefinit": [130, 188, 285, 300, 322, 471], "weightsrang": [104, 273], "weightt": [28, 46, 195, 204, 205, 210, 213, 218, 222, 226, 232, 238, 244], "weighttag": [28, 273, 306, 307, 511, 513, 569], "weightttyp": 45, "weighttyp": 8, "weightweight": 28, "well": [2, 8, 10, 29, 244, 273, 280, 297, 298, 408, 478, 592], "were": 289, "wg21": 335, "what": [18, 100, 112, 115, 273, 326, 569, 591], "wheel": [10, 11], "when": [2, 3, 4, 6, 8, 10, 16, 28, 43, 45, 47, 49, 51, 53, 55, 56, 58, 61, 69, 77, 79, 87, 115, 245, 260, 273, 283, 290, 321, 340, 356, 412, 430, 434, 450, 468, 508, 517, 519, 574, 592], "where": [4, 18, 36, 129, 179, 180, 188, 189, 245, 254, 260, 273, 290, 292, 412, 446, 468, 476, 477, 517, 519, 574, 592], "wherea": 517, "wherev": 2, "whether": [13, 45, 273, 323, 340, 356, 483, 487, 489, 517, 525, 574], "which": [2, 4, 5, 8, 10, 20, 21, 24, 26, 28, 29, 31, 33, 35, 37, 39, 42, 94, 104, 106, 129, 131, 133, 135, 179, 181, 184, 187, 189, 191, 194, 243, 244, 246, 249, 253, 257, 259, 261, 263, 265, 267, 269, 271, 273, 280, 284, 286, 288, 290, 292, 294, 297, 299, 303, 306, 309, 311, 313, 315, 317, 319, 321, 323, 324, 326, 328, 332, 334, 336, 338, 340, 364, 391, 414, 436, 438, 458, 460, 465, 467, 469, 472, 474, 476, 504, 508, 517, 518, 525, 527, 545, 549, 565, 568, 569, 570, 572, 583, 585], "whichev": 98, "while": [2, 4, 8, 43, 130, 180, 245, 273, 460, 592], "whole": [252, 592], "whose": [29, 244, 273, 280, 307, 364, 432, 465, 466, 555], "why": [34, 258], "wide": [1, 2, 3, 10, 478], "width": [13, 47, 51, 53, 118, 119, 134, 224, 241, 260, 264, 473, 529, 530, 540, 542, 552, 566, 571, 573], "width_": 473, "widthgrid": 118, "widthstd": [260, 473, 552, 566], "wiki": [188, 270, 273, 569], "wikipedia": [188, 270, 273, 569], "wild": 1, "window": [42, 273], "wise": [3, 516, 591], "wish": 592, "within": [8, 77, 92, 96, 130, 243, 272, 376, 504, 545, 591], "without": [3, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 45, 108, 130, 132, 134, 136, 169, 180, 182, 183, 185, 186, 188, 190, 192, 193, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 330, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 537, 539, 550, 552, 553, 564, 566, 569, 571, 572, 573, 584, 586, 591], "wn": 471, "wolfram": [44, 524, 588], "word": [2, 6, 87], "work": [2, 8, 10, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 245, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 483, 485, 487, 489, 517, 525, 527, 529, 531, 533, 574, 576, 578, 579, 581], "workaround": 273, "workflow": [5, 6, 8], "workspac": 591, "world": [8, 36, 77, 81, 83, 85, 249, 250, 252, 254, 260, 273, 592], "world_in_sensor_transform": 252, "world_pose_typ": [36, 77, 78, 237, 241, 252], "world_pose_typesophu": 252, "world_pose_typetyp": 252, "world_to_likelihood_field_transform_": [81, 83, 85, 240, 241, 258, 260, 262], "world_to_likelihood_field_transform_beluga": [82, 84, 86], "world_to_likelihood_field_transform_definit": [258, 260, 262], "world_to_likelihood_field_transform_sophu": [258, 260, 262], "wors": 69, "worth": [6, 8], "would": 20, "wrap": [480, 483, 547], "wrap_sensor_data": [480, 483, 484, 497, 499], "wrap_sensor_datastd": 480, "wrapper": [517, 519, 520, 523, 527, 529, 531, 533, 537, 539, 546, 547, 549, 550, 555, 560, 565, 566, 570, 571, 572, 573], "write": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 69, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 517, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 592], "written": 592, "www": [12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 384, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "x": [4, 12, 13, 17, 19, 20, 21, 23, 34, 36, 40, 47, 48, 51, 52, 53, 54, 65, 118, 119, 120, 122, 130, 134, 136, 254, 256, 258, 262, 264, 268, 272, 287, 289, 301, 327, 330, 335, 517, 519, 529, 530, 531, 533, 552, 562, 566, 569, 571, 573, 574, 584, 586], "x10": [258, 262], "x86": 10, "x_": [4, 40, 592], "x_0": [4, 592], "x_clustering_resolut": [120, 121, 122, 123, 335], "x_clustering_resolutionclust": [120, 122], "x_distribution_": 272, "x_k": 592, "x_offset": [258, 262], "x_t": [4, 592], "xi": [13, 17, 20, 21, 47, 48, 51, 52, 53, 54, 118, 119, 134, 264, 287, 529, 530], "xigrid": [47, 53], "xml": [6, 10], "xplane": [47, 53], "xspan_": 40, "xstep_": 40, "xy": 517, "xyaw": 517, "xyz": [122, 335, 531, 533, 571, 573, 586], "y": [5, 12, 13, 17, 19, 20, 23, 34, 36, 40, 43, 47, 48, 51, 52, 53, 54, 65, 69, 118, 119, 120, 122, 130, 134, 136, 254, 256, 258, 262, 264, 272, 287, 289, 301, 327, 330, 335, 517, 519, 529, 530, 531, 533, 552, 562, 566, 569, 571, 573, 574, 584, 586, 591], "y_": 40, "y_clustering_resolut": [120, 121, 122, 123, 335], "y_clustering_resolutionclust": [120, 122], "y_distribution_": 272, "y_offset": [258, 262], "yaml": 10, "yaml_filenam": 10, "yaw": [122, 188, 335, 517, 562, 586], "yaw_aux": 586, "yaw_clustering_resolut": [122, 123, 335], "yaw_clustering_resolutionclust": 122, "yellow": [243, 504, 545], "yet": [1, 130, 569], "yi": [13, 17, 47, 48, 51, 52, 53, 54, 118, 119, 134, 264, 287, 529, 530], "yield": [75, 188, 247, 273, 592], "yigrid": [47, 53], "you": [0, 5, 6, 8, 10, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 326, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586, 591, 592], "your": [5, 6, 10, 592], "your_typ": 100, "yplane": [47, 53], "yspan_": 40, "ystep_": 40, "yyaw": 517, "z": [12, 19, 23, 30, 34, 36, 122, 128, 136, 196, 199, 240, 242, 254, 268, 272, 273, 301, 327, 330, 335, 446, 447, 460, 461, 519, 525, 531, 533, 552, 569, 571, 573, 574, 586], "z_": [4, 592], "z_clustering_resolut": [122, 123, 335], "z_clustering_resolutionclust": 122, "z_distribution_": 272, "z_hit": [34, 240, 242, 260, 342, 356, 517], "z_hitbeluga": [343, 357], "z_hitdoubl": [34, 260], "z_hitweight": [34, 260], "z_max": [34, 240, 242, 342, 517], "z_maxbeluga": 343, "z_maxdoubl": 34, "z_maxweight": 34, "z_mean": 34, "z_rand": [10, 34, 240, 242, 342, 517], "z_randbeluga": 343, "z_randdoubl": 34, "z_random": [240, 242, 260, 356], "z_randombeluga": 357, "z_randomdoubl": 260, "z_randomweight": 260, "z_randweight": 34, "z_short": [34, 240, 242, 342, 517], "z_shortbeluga": 343, "z_shortdoubl": 34, "z_shortweight": 34, "z_t": [4, 592], "zero": [3, 12, 73, 87, 136, 188, 192, 254, 270, 273, 458, 464, 471, 517, 552, 569, 586], "zip": [8, 29, 129, 130, 160, 193, 244, 245, 255, 256, 280, 282, 298, 434, 448, 467, 468, 471, 474, 475, 568, 569, 586], "zip_fn": [128, 217, 231, 449, 468, 476, 477], "zip_fnimplement": [244, 477], "zip_fninlin": 449, "zip_view": [283, 448, 477], "zip_with": [130, 273], "zip_with_view": 434, "zipconstexpr": [468, 477], "zipgiven": [468, 477], "zsee": 446, "zupper": 273, "zyx": [335, 586], "\u00eatre": 1, "\u03b7": 4, "\u2124": 63}, "titles": ["Contact", "Rationale", "Architecture", "Design principles", "Key concepts", "Installation", "Quickstart", "Benchmarking Beluga", "Extending Beluga", "Profiling Beluga", "Using Beluga AMCL", "Overview", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File", "Beluga: Beluga named requirements: DenseGrid2", "Beluga: Beluga named requirements: LaserScan", "Beluga: Beluga named requirements: LinearGrid2", "Beluga: Beluga named requirements: MotionModel", "Beluga: Beluga named requirements: OccupancyGrid2d", "Beluga: Beluga named requirements: Particle", "Beluga: Beluga named requirements: PointCloud", "Beluga: Beluga named requirements: RandomStateDistribution", "Beluga: Beluga named requirements: RegularGrid", "Beluga: Beluga named requirements: SensorModel", "Beluga: Beluga named requirements: PointCloud", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File", "Beluga: Class List", "Classes", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File", "Beluga: Bibliography", "Beluga: beluga::Amcl&amp;lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseDenseGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLaserScan&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLinearGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseOccupancyGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BasePointCloud&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: beluga::BaseRegularGrid&amp;lt; Derived, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseSparsePointCloud&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: beluga::BeamSensorModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BearingSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i Class Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator Class Reference", "Beluga: Member List", "Beluga: beluga::CircularArray&amp;lt; T, N, F &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModel&amp;lt; StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::ExponentialFilter Class Reference", "Beluga: Member List", "Beluga: beluga::IndexingIterator&amp;lt; Indexable, Index &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LandmarkMap Class Reference", "Beluga: Member List", "Beluga: beluga::LandmarkSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModelBase&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldProbModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistribution&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistributionParam&amp;lt; Vector, Matrix &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; T, Constraint &amp;gt; Class Template Reference", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, Eigen::AlignedBox2d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE3d, Eigen::AlignedBox3d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::NDTSensorModel&amp;lt; SparseGridT &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Numeric&amp;lt; T, PhantomType, typename &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::ParticleClusterizer Class Reference", "Beluga: Member List", "Beluga: beluga::Ray2d&amp;lt; OccupancyGrid, Algorithm &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::SparseValueGrid&amp;lt; MapType, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::StationaryModel Class Reference", "Beluga: Member List", "Beluga: beluga::ThrunRecoveryProbabilityEstimator Class Reference", "Beluga: Member List", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, T &amp;gt; Class Template Reference", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, std::tuple&amp;lt; Types... &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::TupleVector&amp;lt; T &amp;gt; Class Template Reference", "Beluga: beluga::ValueGrid2&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE2d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE3d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Tuple&amp;lt; Types... &amp;gt;, std::enable_if_t&amp;lt;(std::is_arithmetic_v&amp;lt; Types &amp;gt; &amp;amp;&amp;amp;...), void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; std::array&amp;lt; T, N &amp;gt;, std::enable_if_t&amp;lt; std::is_arithmetic_v&amp;lt; T &amp;gt;, void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: Class Index", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; actions Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; containers Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; motion Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; random Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; testing Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; raycasting Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; policies Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; utility Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; actions Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; data Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference", "Beluga: _doxygen Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File", "Beluga: File List", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File", "Beluga: Class Members", "All", "Beluga: Class Members", "Beluga: Class Members", "Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Enumerations", "Beluga: Class Members - Enumerator", "Beluga: Class Members", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Related Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Typedefs", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Variables", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Graph Legend", "Beluga: Class Hierarchy", "Beluga: API Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File", "Beluga: Class Hierarchy", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model_base.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model_base.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_prob_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_prob_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File", "Beluga: beluga Namespace Reference", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace List", "Namespaces", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/overlay.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/overlay.hpp Source File", "Beluga: Related Pages", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/point_cloud.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/point_cloud.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/primitives.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_point_cloud.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_point_cloud.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File", "Beluga: beluga::AmclParams Struct Reference", "Beluga: Member List", "Beluga: beluga::BeamModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::BearingModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator::sentinel Struct Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkBearingDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkPositionDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModelBaseParam Struct Reference", "Beluga: Member List", "Beluga: beluga::NDTCell&amp;lt; NDim, Scalar &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::NDTModelParam&amp;lt; NDim &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::ParticleClusterizerParam Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::assign_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::clusterizer_detail::ClusterCell&amp;lt; State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::common_tuple_type&amp;lt; T, U, Is &amp;gt; Struct Template Reference", "Beluga: beluga::common_tuple_type&amp;lt; T, U, std::index_sequence&amp;lt; I... &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; T, class &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::detail::CellHasher&amp;lt; N &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::detail::default_weighted_mean_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::detail::make_from_state_fn&amp;lt; Particle, State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::has_common_tuple_type&amp;lt; typename, typename, typename &amp;gt; Struct Template Reference", "Beluga: beluga::has_common_tuple_type&amp;lt; T, U, std::void_t&amp;lt; common_tuple_type_t&amp;lt; T, U &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::has_likelihood_field&amp;lt; T, class &amp;gt; Struct Template Reference", "Beluga: beluga::has_likelihood_field&amp;lt; T, std::void_t&amp;lt; decltype(std::declval&amp;lt; T &amp;gt;().likelihood_field())&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::is_tuple_like&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Eigen::EigenBase&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::particle_traits&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_effective_size_drop_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_fn&amp;lt; StateType &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Sophus::SE3&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy&amp;lt; PolicyFn &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy_base Struct Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::state_detail::state_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::views::detail::as_common_tuple_indirect_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_view&amp;lt; Range, Fn, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_view&amp;lt; Range, Distribution, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_while_kld_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::zip_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::weight_detail::weight_fn Struct Reference", "Beluga: Member List", "Beluga: std::hash&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::numeric_limits&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: std::tuple_element&amp;lt; I, beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::tuple_size&amp;lt; beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/unscented_transform.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File", "Overview", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File", "Beluga AMCL: Class List", "Classes", "Beluga AMCL: beluga_amcl::AmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::BaseAMCLNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::NdtAmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::NdtAmclNode3D Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: Class Index", "Beluga AMCL: _doxygen Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference", "Beluga AMCL: File List", "Files", "Beluga AMCL: Class Members", "Class Members", "Beluga AMCL: Class Members - Functions", "Beluga AMCL: Class Members - Variables", "Beluga AMCL: File Members", "Beluga AMCL: File Members", "File Members", "Beluga AMCL: Graph Legend", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: API Reference", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/message_filters.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/message_filters.hpp Source File", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node_3d.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node_3d.hpp Source File", "Beluga AMCL: Related Pages", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File", "Overview", "ROS 2 Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File", "Beluga ROS: Class List", "Classes", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File", "Beluga ROS: Bibliography", "Beluga ROS: beluga_ros::Amcl Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::LaserScan Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::PointCloud3&amp;lt; T, Strict &amp;gt; Class Template Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::SparsePointCloud3&amp;lt; T, Strict &amp;gt; Class Template Reference", "Beluga ROS: Member List", "Beluga ROS: Class Index", "Beluga ROS: _doxygen Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include Directory Reference", "Beluga ROS: File List", "Beluga ROS: Class Members", "Class Members", "Beluga ROS: Class Members - Functions", "Beluga ROS: Class Members - Typedefs", "Beluga ROS: Class Members - Variables", "Beluga ROS: Graph Legend", "Beluga ROS: Class Hierarchy", "Beluga ROS: API Reference", "Beluga ROS: Class Hierarchy", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/likelihood_field.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/likelihood_field.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File", "Beluga ROS: Sophus Namespace Reference", "Beluga ROS: beluga_ros Namespace Reference", "Beluga ROS: Namespace Members", "Beluga ROS: Namespace Members", "Namespace Members", "Beluga ROS: Namespace Members", "Beluga ROS: Namespace List", "Namespaces", "Beluga ROS: tf2 Namespace Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/ndt_ellipsoid.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/ndt_ellipsoid.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File", "Beluga ROS: Related Pages", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/point_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/point_cloud.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/sparse_point_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/sparse_point_cloud.hpp Source File", "Beluga ROS: beluga_ros::AmclParams Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid::ValueTraits Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; T &amp;gt; Struct Template Reference", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; Sophus::SE3&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga ROS: Member List", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File", "Overview", "Bibliography", "Features", "Releases", "Using Beluga with Nav2", "Primer on Particle Filtering with Beluga"], "titleterms": {"1": 592, "2": [517, 592], "3": 592, "3d_embed": 12, "4": 592, "5": 592, "6": 592, "7": 592, "_doxygen": [163, 492, 536], "abstract": 2, "action": [24, 25, 31, 32, 137, 143, 144, 153, 170, 284, 285, 294, 295, 309, 310, 319, 320], "adapt": 2, "advertis": 517, "algorithm": [8, 26, 27, 28, 39, 40, 106, 129, 130, 145, 146, 147, 148, 152, 154, 167, 178, 179, 180, 181, 182, 187, 188, 191, 192, 315, 316, 334, 335, 464, 471], "alignedbox2d": 92, "alignedbox3d": 96, "all": 196, "almost_equal_to": 578, "amcl": [10, 45, 506, 518, 519, 525], "amcl_cor": 28, "amcl_nod": [479, 480], "amclnod": [483, 517], "amclparam": [340, 574], "amp": 124, "architectur": 2, "arg": [383, 395, 433], "as_common_tuple_indirect_fn": 434, "assign": [31, 32], "assign_fn": 366, "awar": 3, "base": 2, "baseamclnod": 485, "basedensegrid2": 47, "baselaserscan": 49, "baselineargrid2": 51, "baseoccupancygrid2": 53, "basepointcloud": 55, "baseregulargrid": 56, "basesparsepointcloud": 58, "beam_model": [33, 34], "beammodelparam": 342, "beamsensormodel": 59, "bearing_sensor_model": [35, 36], "bearingmodelparam": 344, "bearingsensormodel": 61, "belief": 592, "beluga": [5, 6, 7, 8, 9, 10, 12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 493, 494, 506, 508, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 537, 538, 547, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586, 591, 592], "beluga_amcl": [479, 480, 493, 494, 508, 509, 510, 511, 512, 513, 515, 517], "beluga_demo_nav2_integr": 591, "beluga_ro": [518, 519, 522, 523, 537, 538, 549, 550, 551, 552, 553, 555, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "benchmark": 7, "bibliographi": [44, 524, 588], "binari": 5, "bound": 3, "bresenham": [39, 40], "bresenham2i": 63, "bring": 591, "broadcast": 517, "build": 5, "carlo": 4, "cellhash": 384, "center": 3, "check": 591, "ciabatta": [41, 177], "circular_arrai": [42, 43], "circulararrai": [69, 455, 457], "class": [29, 30, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 128, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 381, 392, 394, 432, 481, 482, 483, 485, 487, 489, 491, 497, 498, 499, 500, 505, 507, 520, 521, 525, 527, 529, 531, 533, 535, 540, 541, 542, 543, 544, 546, 548], "clone": [5, 591], "cluster_based_estim": [129, 130], "clustercel": 376, "code": [8, 591], "common_tuple_typ": 378, "common_tuple_type_t": 391, "compat": 517, "compil": 592, "concept": 4, "configur": 10, "consider": 8, "consist": 3, "constraint": 91, "contact": 0, "contain": [42, 43, 131, 132, 138, 149, 150, 164, 467, 468], "crtp": 2, "data": [2, 133, 134, 155, 158, 169, 251, 252, 255, 256, 263, 264, 282, 286, 287, 301, 302, 317, 318, 330, 331, 332, 333, 472, 473], "decay_t": 383, "decay_tuple_lik": 381, "declval": 393, "default_weighted_mean_fn": 386, "demo": 591, "dense_grid": [133, 134], "densegrid2": 13, "depend": [5, 478], "deriv": [47, 49, 51, 53, 55, 56, 58], "design": 3, "detail": [174, 186, 308], "develop": 592, "differential_drive_model": [135, 136], "differentialdrivemodel": 71, "differentialdrivemodelparam": 348, "directori": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 492, 493, 494, 536, 537, 538], "distance_map": [179, 180], "distribut": [2, 5, 444], "easi": 3, "effective_sample_s": [181, 182], "eigen_compat": 183, "eigenbas": 402, "element": [184, 185], "enabl": [397, 429], "enumer": [202, 203], "environ": 10, "epilogu": 186, "estim": [8, 187, 188, 592], "evalu": 3, "every_n": [189, 190], "every_n_fn": 410, "every_n_polici": 412, "exampl": 8, "executionpolici": 45, "exponential_filt": [191, 192], "exponentialfilt": 73, "extend": 8, "f": [69, 455, 457], "featur": [11, 478, 589], "file": [12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 495, 496, 501, 502, 503, 508, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 539, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "filter": [517, 592], "fn": 438, "focus": 3, "form": 2, "forward_lik": 194, "from": 5, "function": [2, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 234, 499, 542], "graph": [243, 504, 545], "gt": [45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 65, 69, 71, 75, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 106, 108, 114, 115, 117, 118, 120, 122, 124, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 358, 360, 376, 378, 379, 381, 383, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 416, 418, 420, 421, 423, 425, 429, 432, 433, 438, 444, 452, 454, 455, 457, 531, 533, 578, 579, 581], "has_common_tuple_typ": 390, "has_likelihood_field": 392, "has_single_el": 394, "hierarchi": [244, 248, 505, 507, 546, 548], "home": [12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 493, 494, 508, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 537, 538, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "hpp": [12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 508, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "i": [378, 379], "implement": 8, "includ": [12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 493, 494, 508, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 537, 538, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "index": [75, 128, 491, 535], "index_sequ": 379, "indexing_iter": [246, 247], "indexingiter": 75, "initi": [517, 592], "instal": 5, "integ": 65, "interfac": 517, "internalcontain": 114, "is_arithmetic_v": [124, 126], "is_tuple_lik": 396, "iter": 67, "kei": [4, 8], "landmark": 592, "landmark_detection_typ": [249, 250], "landmark_map": [251, 252], "landmark_sensor_model": [253, 254], "landmarkbearingdetect": 350, "landmarkmap": [61, 77, 79], "landmarkmodelparam": 352, "landmarkpositiondetect": 354, "landmarksensormodel": 79, "laser_scan": [255, 256, 549, 550], "laserscan": [14, 527], "lazi": 3, "legend": [243, 504, 545], "like": 2, "likelihood_field": [393, 551, 552], "likelihood_field_model": [257, 258], "likelihood_field_model_bas": [259, 260], "likelihood_field_prob_model": [261, 262], "likelihoodfieldmodel": 81, "likelihoodfieldmodelbas": 83, "likelihoodfieldmodelbaseparam": 356, "likelihoodfieldprobmodel": 85, "line": 65, "linear_grid": [263, 264], "lineargrid2": 15, "list": [29, 46, 48, 50, 52, 54, 57, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 116, 119, 121, 123, 125, 127, 193, 280, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 380, 382, 385, 387, 389, 400, 401, 403, 404, 406, 409, 411, 413, 415, 417, 419, 422, 424, 426, 428, 431, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 456, 481, 484, 486, 488, 490, 495, 520, 526, 528, 530, 532, 534, 539, 560, 575, 577, 580, 582], "local": 4, "lt": [45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 65, 69, 71, 75, 79, 81, 83, 85, 87, 89, 91, 98, 100, 106, 108, 114, 115, 117, 118, 124, 126, 358, 360, 376, 378, 379, 381, 383, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 416, 418, 420, 421, 423, 425, 429, 432, 433, 438, 444, 452, 454, 455, 457, 531, 533, 578, 579, 581], "make_from_state_fn": 388, "map": [10, 592], "maptyp": 108, "matrix": 89, "member": [46, 48, 50, 52, 54, 57, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 116, 119, 121, 123, 125, 127, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 274, 275, 276, 277, 278, 279, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 380, 382, 385, 387, 389, 400, 401, 403, 404, 406, 409, 411, 413, 415, 417, 419, 422, 424, 426, 428, 431, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 456, 484, 486, 488, 490, 497, 498, 499, 500, 501, 502, 503, 526, 528, 530, 532, 534, 540, 541, 542, 543, 544, 556, 557, 558, 559, 575, 577, 580, 582], "memori": 3, "messag": 553, "message_filt": [508, 509], "misc": 517, "model": [8, 517, 592], "mont": 4, "motion": [8, 135, 136, 139, 151, 172, 265, 266, 288, 289, 336, 337, 517], "motionmodel": [16, 45], "multivariate_distribution_trait": [267, 268, 397], "multivariate_normal_distribut": [269, 270], "multivariate_uniform_distribut": [271, 272], "multivariatenormaldistribut": 87, "multivariatenormaldistributionparam": 89, "multivariateuniformdistribut": 91, "n": [69, 384, 455, 457], "namespac": [273, 274, 275, 276, 277, 278, 279, 280, 281, 554, 555, 556, 557, 558, 559, 560, 561, 562], "nav2": 591, "ndim": [56, 108, 358, 360], "ndt_amcl_nod": [510, 511], "ndt_amcl_node_3d": [512, 513], "ndt_cell": 282, "ndt_ellipsoid": [563, 564], "ndt_sensor_model": 283, "ndtamclnod": 487, "ndtamclnode3d": 489, "ndtcell": 358, "ndtmodelparam": 360, "ndtsensormodel": 98, "next": 8, "node": 517, "normal": [284, 285], "note": 517, "numer": [100, 452, 454], "observ": 517, "occupancy_grid": [286, 287, 565, 566], "occupancygrid": [59, 81, 83, 85, 94, 106, 529], "occupancygrid2d": 17, "omnidirectional_drive_model": [288, 289], "omnidirectionaldrivemodel": 102, "omnidirectionaldrivemodelparam": 362, "on_effective_size_drop": [290, 291], "on_effective_size_drop_polici": 414, "on_mot": [292, 293], "on_motion_fn": 416, "on_motion_polici": 418, "on_motion_policy_bas": 420, "output": 6, "over": 6, "overlai": [294, 295], "overview": [11, 478, 516, 587, 591, 592], "packag": 591, "page": [296, 514, 567], "paramet": [517, 592], "particl": [18, 299, 300, 388, 517, 592], "particle_cloud": [568, 569], "particle_trait": [297, 298, 408], "particlecluster": 104, "particleclusterizerparam": 364, "particletyp": 45, "perform": 3, "phantomtyp": [100, 452, 454], "point_cloud": [301, 302, 570, 571], "pointcloud": [19, 23], "pointcloud3": 531, "polici": [146, 152, 161, 189, 190, 290, 291, 292, 293, 303, 304, 305, 425], "policy_bas": 427, "policyfn": 425, "pose": [418, 420, 517], "predict": 592, "prerequisit": [6, 8, 10], "primer": 592, "primit": [306, 307, 323], "principl": 3, "profil": 9, "prologu": 308, "propag": [309, 310], "propagate_base_fn": 368, "propagate_fn": 370, "publish": 517, "quickstart": 6, "random": [141, 157, 175, 267, 268, 269, 270, 271, 272, 311, 312], "random_interspers": [313, 314], "random_intersperse_fn": 436, "random_intersperse_view": 438, "randomstatedistribut": 20, "randomstategener": 45, "rang": [2, 438, 444], "rational": 1, "ray2d": 106, "raycast": [39, 40, 145, 178, 315, 316], "re": 3, "record": 6, "refer": [24, 26, 31, 33, 35, 37, 39, 42, 45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 117, 118, 120, 122, 124, 126, 129, 131, 133, 135, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 187, 189, 191, 246, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 284, 286, 288, 290, 292, 294, 297, 299, 301, 303, 306, 309, 311, 313, 315, 317, 319, 321, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 458, 460, 462, 465, 467, 469, 472, 474, 476, 479, 483, 485, 487, 489, 492, 493, 494, 508, 510, 512, 517, 518, 522, 525, 527, 529, 531, 533, 536, 537, 538, 549, 551, 554, 555, 562, 563, 565, 568, 570, 572, 574, 576, 578, 579, 581, 583, 585], "regular_grid": [317, 318], "regulargrid": 21, "relat": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 234, 296, 514, 567], "releas": 590, "repositori": [5, 591], "requir": 592, "resampl": 592, "reweight": [319, 320], "reweight_base_fn": 372, "reweight_fn": 374, "ro": [5, 517, 547], "robot": 6, "ros2_common": 515, "run": [6, 10, 591, 592], "runner": [12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 493, 494, 508, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 537, 538, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "sampl": [321, 322], "sample_base_fn": 440, "sample_fn": 442, "sample_view": 444, "scalar": [358, 421, 423, 579, 581], "se2": [421, 579], "se2bas": 407, "se2d": [94, 120], "se3": [423, 581], "se3bas": 399, "se3d": 122, "sensor": [8, 33, 34, 35, 36, 133, 134, 140, 153, 154, 155, 156, 157, 158, 168, 169, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 282, 283, 286, 287, 301, 302, 317, 318, 323, 324, 325, 330, 331, 332, 333, 472, 473], "sensormodel": [22, 45], "sentinel": 346, "servic": 517, "set": 10, "simul": 6, "so2bas": 398, "so3bas": 405, "sophu": 554, "sophus_match": [326, 327], "sophus_print": [328, 329], "sourc": [5, 12, 25, 27, 28, 32, 34, 36, 38, 40, 41, 43, 130, 132, 134, 136, 180, 182, 183, 185, 186, 188, 190, 192, 194, 247, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 282, 283, 285, 287, 289, 291, 293, 295, 298, 300, 302, 304, 305, 307, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 327, 329, 331, 333, 335, 337, 339, 459, 461, 463, 464, 466, 468, 470, 471, 473, 475, 477, 480, 509, 511, 513, 515, 519, 523, 550, 552, 553, 564, 566, 569, 571, 573, 584, 586], "sparse_point_cloud": [330, 331, 572, 573], "sparse_value_grid": [332, 333], "sparsegridt": 98, "sparsepointcloud3": 533, "sparsevaluegrid": 108, "spatial_hash": [334, 335, 429], "state": [376, 388], "state_fn": 430, "statetyp": [61, 71, 79, 416], "static": 3, "stationary_model": [336, 337], "stationarymodel": 110, "step": [8, 592], "stl": [2, 3], "strict": [531, 533], "strongly_typed_numer": [338, 339], "struct": [340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 430, 432, 433, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 457, 574, 576, 578, 579, 581], "subscrib": 517, "support": 11, "system": 592, "t": [69, 87, 91, 100, 114, 117, 118, 126, 378, 381, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 429, 432, 433, 452, 454, 455, 457, 531, 533, 578], "take_evenli": [458, 459], "take_while_kld": [460, 461], "take_while_kld_fn": 446, "task": 592, "templat": [45, 47, 49, 51, 53, 55, 56, 58, 59, 61, 65, 69, 71, 75, 79, 81, 83, 85, 87, 89, 91, 94, 98, 100, 106, 108, 114, 115, 117, 118, 124, 126, 358, 360, 376, 378, 379, 381, 383, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 405, 407, 408, 416, 418, 420, 421, 423, 425, 429, 432, 433, 438, 444, 452, 454, 455, 457, 531, 533, 578, 579, 581], "test": [142, 171, 326, 327, 328, 329, 462, 463], "tf2": 562, "tf2_eigen": [583, 584], "tf2_sophu": [585, 586], "thing": 10, "thrun_recovery_probability_estim": 464, "thrunrecoveryprobabilityestim": 112, "topic": 517, "transform": 517, "troubleshoot": 10, "tupl": 115, "tuple_index": 432, "tuple_index_found": [395, 433], "tuple_trait": [465, 466], "tuple_vector": [467, 468], "tuplecontain": 114, "tuplelik": [383, 394, 432], "tuplevector": 117, "type": [115, 124, 156, 158, 173, 249, 250], "type_trait": [143, 147, 151, 159, 166, 297, 298, 338, 339, 465, 466, 469, 470], "typedef": [237, 543], "typenam": [100, 390], "u": [378, 391], "unscented_transform": 471, "up": 10, "updat": 592, "urng": [438, 444], "us": [3, 10, 591], "util": [149, 165, 194, 246, 247], "ux": 3, "value_grid": [472, 473], "valuegrid2": 118, "valuetrait": 576, "variabl": [240, 500, 544], "vector": 89, "vector2": 65, "view": [144, 148, 150, 159, 160, 184, 185, 299, 300, 313, 314, 321, 322, 458, 459, 460, 461, 474, 475, 476, 477], "visual": 6, "void": [120, 122, 124, 126], "void_t": 391, "weight_fn": 450, "weightt": 45, "work": [12, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 493, 494, 508, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 537, 538, 549, 550, 551, 552, 553, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 583, 584, 585, 586], "workspac": 5, "zip": [476, 477], "zip_fn": 448}})