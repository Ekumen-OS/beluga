Search.setIndex({"alltitles": {"/home/runner/work/beluga/beluga/beluga/include Directory Reference": [[167, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; actions Relation": [[129, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; containers Relation": [[130, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; motion Relation": [[131, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; policies Relation": [[132, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; random Relation": [[133, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; sensor Relation": [[134, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; testing Relation": [[135, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference": [[153, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File": [[12, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; type_traits Relation": [[136, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; views Relation": [[137, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference": [[161, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference": [[22, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File": [[23, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference": [[29, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File": [[30, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference": [[271, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File": [[272, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference": [[292, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File": [[293, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference": [[302, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File": [[303, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; raycasting Relation": [[138, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; type_traits Relation": [[139, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; views Relation": [[140, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference": [[158, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference": [[24, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File": [[25, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File": [[26, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp File Reference": [[121, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp Source File": [[122, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference": [[170, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File": [[171, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference": [[172, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File": [[173, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference": [[178, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File": [[179, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference": [[182, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File": [[183, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference": [[169, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference": [[298, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File": [[299, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference": [[37, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File": [[38, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference": [[314, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File": [[315, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File": [[444, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/unscented_transform.hpp Source File": [[451, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference": [[35, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File": [[36, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; utility Relation": [[141, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; views Relation": [[142, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference": [[155, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference": [[123, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File": [[124, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference": [[40, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File": [[41, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference": [[447, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File": [[448, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference": [[165, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File": [[177, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File": [[291, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File": [[174, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion -&gt; type_traits Relation": [[143, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference": [[163, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference": [[252, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File": [[253, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference": [[127, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File": [[128, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference": [[275, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File": [[276, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference": [[316, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File": [[317, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies -&gt; algorithm Relation": [[144, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference": [[152, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference": [[286, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File": [[287, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference": [[180, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File": [[181, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference": [[277, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File": [[278, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference": [[279, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File": [[280, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File": [[288, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference": [[289, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File": [[290, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random -&gt; sensor Relation": [[145, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference": [[166, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference": [[294, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File": [[295, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference": [[254, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File": [[255, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference": [[256, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File": [[257, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference": [[258, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File": [[259, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; algorithm Relation": [[146, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; data Relation": [[147, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; types Relation": [[148, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference": [[159, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference": [[306, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File": [[307, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference": [[31, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File": [[32, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference": [[33, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File": [[34, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&gt; types Relation": [[149, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference": [[160, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference": [[125, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File": [[126, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference": [[242, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File": [[243, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference": [[246, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File": [[247, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference": [[250, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File": [[251, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File": [[269, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference": [[273, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File": [[274, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference": [[300, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File": [[301, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference": [[312, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File": [[313, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference": [[452, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File": [[453, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference": [[244, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File": [[245, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference": [[248, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File": [[249, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File": [[270, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference": [[162, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference": [[442, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File": [[443, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference": [[308, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File": [[309, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference": [[310, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File": [[311, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference": [[157, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference": [[449, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File": [[450, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference": [[282, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File": [[283, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference": [[318, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File": [[319, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference": [[445, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File": [[446, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference": [[164, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference": [[240, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File": [[241, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference": [[156, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File": [[185, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference": [[237, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File": [[238, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views -&gt; type_traits Relation": [[150, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference": [[151, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference": [[454, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File": [[455, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference": [[175, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File": [[176, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference": [[284, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File": [[285, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference": [[296, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File": [[297, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference": [[304, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File": [[305, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference": [[438, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File": [[439, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference": [[440, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File": [[441, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference": [[456, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File": [[457, null]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference": [[168, null]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File": [[39, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference": [[475, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference": [[476, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference": [[459, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File": [[460, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference": [[461, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File": [[462, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference": [[487, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File": [[488, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File": [[490, null]], "/home/runner/work/beluga/beluga/beluga_ros/include Directory Reference": [[510, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference": [[509, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference": [[494, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File": [[495, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference": [[498, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File": [[499, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference": [[521, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File": [[522, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File": [[523, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference": [[533, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File": [[534, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference": [[536, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File": [[537, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference": [[545, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File": [[546, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference": [[547, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File": [[548, null]], "1 Develop": [[554, "develop"]], "1.1 Parameters": [[554, "parameters"]], "1.2 Landmark map": [[554, "landmark-map"]], "1.3 Initial belief": [[554, "initial-belief"]], "1.4 System modelling": [[554, "system-modelling"]], "1.5 Filter prediction step": [[554, "filter-prediction-step"]], "1.6 Filter update step": [[554, "filter-update-step"]], "1.6.2 Filter resampling step": [[554, "filter-resampling-step"]], "1.7 Estimate": [[554, "estimate"]], "2 Compile and run": [[554, "compile-and-run"]], "Advertised services": [[492, "advertised-services"], [493, "advertised-services"]], "AlignedBox2d &gt; Class Reference": [[84, null]], "AlignedBox3d &gt; Class Reference": [[88, null]], "All": [[187, null]], "Amcl Class Reference": [[501, null]], "Amcl&lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &gt; Class Template Reference": [[43, null]], "AmclNode Class Reference": [[465, null]], "AmclNodelet Class Reference": [[467, null]], "AmclParams Struct Reference": [[320, null], [538, null]], "Architecture": [[2, null]], "BaseAMCLNode Class Reference": [[469, null]], "BaseDenseGrid2&lt; Derived &gt; Class Template Reference": [[45, null]], "BaseLaserScan&lt; Derived &gt; Class Template Reference": [[47, null]], "BaseLinearGrid2&lt; Derived &gt; Class Template Reference": [[49, null]], "BaseOccupancyGrid2&lt; Derived &gt; Class Template Reference": [[51, null]], "BaseRegularGrid&lt; Derived, NDim &gt; Class Template Reference": [[53, null]], "BeamModelParam Struct Reference": [[322, null]], "BeamSensorModel&lt; OccupancyGrid &gt; Class Template Reference": [[55, null]], "BearingModelParam Struct Reference": [[324, null]], "BearingSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[57, null]], "Beluga": [[236, null]], "Beluga AMCL": [[485, null]], "Beluga ROS": [[519, null]], "Benchmarking Beluga": [[7, null]], "Bibliography": [[42, null], [500, null], [550, null]], "Bresenham2i Class Reference": [[59, null]], "Broadcasted transforms": [[492, "broadcasted-transforms"], [493, "broadcasted-transforms"]], "Build and source workspace": [[5, "build-and-source-workspace"]], "Building from source (with ROS)": [[5, "building-from-source-with-ros"]], "CRTP-based data adapters": [[2, "crtp-based-data-adapters"]], "Called services": [[492, "called-services"]], "CellHasher&lt; N &gt; Struct Template Reference": [[368, null]], "CircularArray&lt; T, N, F &gt; &gt; Struct Template Reference": [[435, null], [437, null]], "CircularArray&lt; T, N, F &gt; Class Template Reference": [[65, null]], "Class Hierarchy": [[235, null], [239, null], [484, null], [486, null], [518, null], [520, null]], "Class Index": [[120, null], [473, null], [507, null]], "Class List": [[27, null], [463, null], [496, null]], "Class Members": [[186, null], [188, null], [189, null], [190, null], [191, null], [192, null], [195, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [226, null], [227, null], [229, null], [230, null], [232, null], [233, null], [478, null], [479, null], [512, null], [513, null]], "Class Members - Enumerations": [[193, null]], "Class Members - Enumerator": [[194, null]], "Class Members - Functions": [[196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [480, null], [514, null]], "Class Members - Related Functions": [[225, null]], "Class Members - Typedefs": [[228, null], [481, null], [515, null]], "Class Members - Variables": [[231, null], [482, null], [516, null]], "Classes": [[28, null], [464, null], [497, null]], "Clone Beluga repository": [[5, "clone-beluga-repository"]], "Clone beluga_demo": [[553, "clone-beluga-demo"]], "ClusterCell&lt; State &gt; Struct Template Reference": [[360, null]], "Compatibility Notes": [[492, "compatibility-notes"]], "Compatibility notes": [[493, "compatibility-notes"]], "Conclusion": [[553, "conclusion"]], "Contact": [[0, null]], "Create the workspace": [[553, "create-the-workspace"]], "DenseGrid2": [[13, null]], "Dependencies": [[458, "dependencies"]], "Design principles": [[3, null]], "DifferentialDriveModel&lt; StateType &gt; Class Template Reference": [[67, null]], "DifferentialDriveModelParam Struct Reference": [[328, null]], "Distribution as a range": [[2, "distribution-as-a-range"]], "Easy to (re)use": [[3, "easy-to-re-use"]], "EigenBase&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[382, null]], "Explanation": [[553, "explanation"]], "ExponentialFilter Class Reference": [[69, null]], "Extending Beluga": [[8, null]], "Features": [[11, "features"], [458, "features"], [551, null]], "File List": [[184, null], [477, null], [511, null]], "Functional forms": [[2, "functional-forms"]], "Functions": [[202, null]], "Graph Legend": [[234, null], [483, null], [517, null]], "IndexingIterator&lt; Indexable, Index &gt; Class Template Reference": [[71, null]], "Initial Pose and Transform Broadcast Parameters": [[492, "initial-pose-and-transform-broadcast-parameters"], [493, "initial-pose-and-transform-broadcast-parameters"]], "Install ROS distribution": [[5, "install-ros-distribution"]], "Install dependencies": [[5, "install-dependencies"]], "Installation": [[5, null]], "Installing binaries": [[5, "installing-binaries"]], "Interface Parameters": [[492, "interface-parameters"], [493, "interface-parameters"]], "Key concepts": [[4, null]], "LandmarkBearingDetection Struct Reference": [[330, null]], "LandmarkMap Class Reference": [[73, null]], "LandmarkModelParam Struct Reference": [[332, null]], "LandmarkPositionDetection Struct Reference": [[334, null]], "LandmarkSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[75, null]], "LaserScan": [[14, null]], "LaserScan Class Reference": [[503, null]], "Lazy evaluated": [[3, "lazy-evaluated"]], "LikelihoodFieldModel&lt; OccupancyGrid &gt; Class Template Reference": [[77, null]], "LikelihoodFieldModelParam Struct Reference": [[336, null]], "Line&lt; Vector2, Integer &gt; Class Template Reference": [[61, null]], "LinearGrid2": [[15, null]], "Member List": [[44, null], [46, null], [48, null], [50, null], [52, null], [54, null], [56, null], [58, null], [60, null], [62, null], [64, null], [66, null], [68, null], [70, null], [72, null], [74, null], [76, null], [78, null], [80, null], [82, null], [85, null], [87, null], [89, null], [91, null], [93, null], [95, null], [97, null], [99, null], [101, null], [103, null], [105, null], [108, null], [111, null], [113, null], [115, null], [117, null], [119, null], [321, null], [323, null], [325, null], [327, null], [329, null], [331, null], [333, null], [335, null], [337, null], [339, null], [341, null], [343, null], [345, null], [347, null], [349, null], [351, null], [353, null], [355, null], [357, null], [359, null], [361, null], [364, null], [366, null], [369, null], [371, null], [380, null], [381, null], [383, null], [384, null], [386, null], [389, null], [391, null], [393, null], [395, null], [397, null], [399, null], [402, null], [404, null], [406, null], [409, null], [413, null], [415, null], [417, null], [419, null], [421, null], [423, null], [425, null], [427, null], [429, null], [431, null], [433, null], [436, null], [466, null], [468, null], [470, null], [472, null], [502, null], [504, null], [506, null], [539, null], [541, null], [544, null]], "Memory aware": [[3, "memory-aware"]], "Misc Parameters": [[492, "misc-parameters"], [493, "misc-parameters"]], "Monte Carlo Localization": [[4, "monte-carlo-localization"]], "Motion Model Parameters": [[492, "motion-model-parameters"], [493, "motion-model-parameters"]], "MotionModel": [[16, null]], "MultivariateNormalDistribution&lt; T &gt; Class Template Reference": [[79, null]], "MultivariateNormalDistributionParam&lt; Vector, Matrix &gt; Class Template Reference": [[81, null]], "MultivariateUniformDistribution&lt; T, Constraint &gt; Class Template Reference": [[83, null]], "NDTCell&lt; NDim, Scalar &gt; Struct Template Reference": [[338, null]], "NDTModelParam&lt; NDim &gt; Struct Template Reference": [[340, null]], "NDTSensorModel&lt; SparseGridT &gt; Class Template Reference": [[90, null]], "Namespace List": [[267, null], [530, null]], "Namespace Members": [[261, null], [262, null], [263, null], [264, null], [265, null], [266, null], [527, null], [528, null], [529, null]], "Namespaces": [[268, null], [531, null]], "NdtAmclNode Class Reference": [[471, null]], "Nodelets": [[492, "nodelets"]], "Nodes": [[493, "nodes"]], "Numeric&lt; T, PhantomType &gt; &gt; Struct Template Reference": [[432, null], [434, null]], "Numeric&lt; T, PhantomType, typename &gt; Class Template Reference": [[92, null]], "Observation Model Parameters": [[492, "observation-model-parameters"], [493, "observation-model-parameters"]], "OccupancyGrid Class Reference": [[505, null]], "OccupancyGrid2d": [[17, null]], "OmnidirectionalDriveModel Class Reference": [[94, null]], "OmnidirectionalDriveModelParam Struct Reference": [[342, null]], "Overview": [[11, null], [458, null], [491, null], [549, null], [553, "overview"], [554, "overview"]], "Parameters": [[492, "parameters"], [493, "parameters"]], "Particle": [[18, null]], "Particle Filter Parameters": [[492, "particle-filter-parameters"], [493, "particle-filter-parameters"]], "ParticleClusterizer Class Reference": [[96, null]], "ParticleClusterizerParam Struct Reference": [[344, null]], "Performance focused": [[3, "performance-focused"]], "Prerequisites": [[6, "prerequisites"]], "Primer on Particle Filtering with Beluga": [[554, null]], "Profiling Beluga": [[9, null]], "Published topics": [[492, "published-topics"], [493, "published-topics"]], "Quickstart": [[6, null]], "ROS 2 Reference": [[493, null]], "ROS Reference": [[492, null]], "RandomStateDistribution": [[19, null]], "Rationale": [[1, null]], "Ray2d&lt; OccupancyGrid, Algorithm &gt; Class Template Reference": [[98, null]], "RegularGrid": [[20, null]], "Related Pages": [[281, null], [489, null], [535, null]], "Releases": [[552, null]], "Requirements": [[553, "requirements"], [554, "requirements"]], "Run Beluga in simulation": [[6, "run-beluga-in-simulation"]], "Run Beluga on a robot": [[6, "run-beluga-on-a-robot"]], "Run Beluga over a recording": [[6, "run-beluga-over-a-recording"]], "Run the example": [[553, "run-the-example"]], "SE2&lt; Scalar &gt; &gt; Struct Template Reference": [[401, null], [543, null]], "SE2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[387, null]], "SE2d, OccupancyGrid &gt; Class Template Reference": [[86, null]], "SE2d, void &gt; Class Reference": [[112, null]], "SE3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[379, null]], "SE3d, void &gt; Class Reference": [[114, null]], "SO2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[378, null]], "SO3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[385, null]], "STL consistent": [[3, "stl-consistent"]], "STL-like abstractions": [[2, "stl-like-abstractions"]], "SensorModel": [[21, null]], "Sophus Namespace Reference": [[524, null]], "SparseValueGrid&lt; MapType, NDim &gt; Class Template Reference": [[100, null]], "Statically bound": [[3, "statically-bound"]], "StationaryModel Class Reference": [[102, null]], "Subscribed topics": [[492, "subscribed-topics"], [493, "subscribed-topics"]], "Subscribed transforms": [[492, "subscribed-transforms"], [493, "subscribed-transforms"]], "Support": [[11, "support"]], "Tasks": [[554, "tasks"]], "ThrunRecoveryProbabilityEstimator Class Reference": [[104, null]], "TupleContainer&lt; InternalContainer, T &gt; Class Template Reference": [[106, null]], "TupleVector&lt; T &gt; Class Template Reference": [[109, null]], "UX centered": [[3, "ux-centered"]], "Using Beluga AMCL on an AMR": [[10, null]], "Using Beluga with Nav2": [[553, null]], "ValueGrid2&lt; T &gt; Class Template Reference": [[110, null]], "ValueTraits Struct Reference": [[540, null]], "Visualize Beluga output": [[6, "visualize-beluga-output"]], "_doxygen Directory Reference": [[154, null], [474, null], [508, null]], "almost_equal_to&lt; T &gt; Struct Template Reference": [[542, null]], "as_common_tuple_indirect_fn Struct Reference": [[412, null]], "assign_fn Struct Reference": [[346, null]], "beluga Namespace Reference": [[260, null]], "beluga_amcl/AmclNodelet": [[492, "beluga-amcl-amclnodelet"]], "beluga_amcl::AmclNode": [[493, "beluga-amcl-amclnode"]], "beluga_demo_nav2 package": [[553, "beluga-demo-nav2-package"]], "beluga_ros Namespace Reference": [[525, null]], "common_tuple_type&lt; T, U, Is &gt; Struct Template Reference": [[362, null]], "decay_t&lt; TupleLike&lt; Args\u2026 &gt; &gt; &gt; &gt; &gt; Struct Template Reference": [[367, null]], "decay_tuple_like&lt; T, class &gt; Struct Template Reference": [[365, null]], "every_n_fn Struct Reference": [[390, null]], "every_n_policy Struct Reference": [[392, null]], "has_common_tuple_type&lt; typename, typename, typename &gt; Struct Template Reference": [[372, null]], "has_single_element&lt; T, TupleLike, class &gt; Struct Template Reference": [[374, null]], "index_sequence&lt; I\u2026 &gt; &gt; Struct Template Reference": [[363, null]], "is_arithmetic_v&lt; T &gt;, void &gt; &gt; Class Template Reference": [[118, null]], "is_arithmetic_v&lt; Types &gt; &amp;&amp;\u2026), void &gt; &gt; Class Template Reference": [[116, null]], "is_tuple_like&lt; T &gt; Struct Template Reference": [[376, null]], "iterator Class Reference": [[63, null]], "make_from_state_fn&lt; Particle, State &gt; Struct Template Reference": [[370, null]], "msg Namespace Reference": [[526, null]], "multivariate_distribution_traits&lt; T, Enable &gt; Struct Template Reference": [[377, null]], "normalize_base_fn Struct Reference": [[348, null]], "normalize_fn Struct Reference": [[350, null]], "on_effective_size_drop_policy Struct Reference": [[394, null]], "on_motion_fn Struct Reference": [[396, null]], "on_motion_policy&lt; Pose &gt; Struct Template Reference": [[398, null]], "on_motion_policy_base&lt; Pose &gt; Struct Template Reference": [[400, null]], "particle_traits&lt; T &gt; Struct Template Reference": [[388, null]], "policy&lt; PolicyFn &gt; Struct Template Reference": [[403, null]], "policy_base Struct Reference": [[405, null]], "propagate_base_fn Struct Reference": [[352, null]], "propagate_fn Struct Reference": [[354, null]], "random_intersperse_fn Struct Reference": [[414, null]], "random_intersperse_view&lt; Range, Fn, URNG &gt; Struct Template Reference": [[416, null]], "reweight_base_fn Struct Reference": [[356, null]], "reweight_fn Struct Reference": [[358, null]], "sample_base_fn Struct Reference": [[418, null]], "sample_fn Struct Reference": [[420, null]], "sample_view&lt; Range, Distribution, URNG &gt; Struct Template Reference": [[422, null]], "sentinel Struct Reference": [[326, null]], "spatial_hash&lt; T, Enable &gt; Struct Template Reference": [[407, null]], "state_fn Struct Reference": [[408, null]], "take_evenly_fn Struct Reference": [[424, null]], "take_while_kld_fn Struct Reference": [[426, null]], "tf2 Namespace Reference": [[532, null]], "tuple&lt; Types\u2026 &gt; &gt; Class Template Reference": [[107, null]], "tuple_index&lt; T, TupleLike, class &gt; Struct Template Reference": [[410, null]], "tuple_index_found&lt; T, Args\u2026 &gt;()&gt; &gt; Struct Template Reference": [[375, null], [411, null]], "void_t&lt; common_tuple_type_t&lt; T, U &gt; &gt; &gt; Struct Template Reference": [[373, null]], "weight_fn Struct Reference": [[430, null]], "zip_fn Struct Reference": [[428, null]]}, "docnames": ["about/contact", "about/rationale", "concepts/architecture", "concepts/design-principles", "concepts/key-concepts", "getting-started/installation", "getting-started/quickstart", "guides/benchmarking-beluga", "guides/extending-beluga", "guides/profiling-beluga", "guides/using-beluga-amcl", "index", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/annotated", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/citelist", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1", "packages/beluga/docs/_doxygen/generated/reference/html/classes", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/files", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga/docs/_doxygen/generated/reference/html/index", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/inherits", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/pages", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/unscented__transform_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source", "packages/beluga/docs/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source", "packages/beluga_amcl/docs/index", "packages/beluga_amcl/docs/ros-reference", "packages/beluga_amcl/docs/ros2-reference", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source", "packages/beluga_ros/docs/index", "resources/bibliography", "roadmap/features", "roadmap/releases", "tutorials/nav2-integration", "tutorials/particle-filtering"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["about/contact.md", "about/rationale.md", "concepts/architecture.md", "concepts/design-principles.md", "concepts/key-concepts.md", "getting-started/installation.md", "getting-started/quickstart.md", "guides/benchmarking-beluga.md", "guides/extending-beluga.md", "guides/profiling-beluga.md", "guides/using-beluga-amcl.md", "index.md", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE3d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z.rst", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/unscented__transform_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source.rst", "packages/beluga/docs/index.md", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1BaseAMCLNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source.rst", "packages/beluga_amcl/docs/index.md", "packages/beluga_amcl/docs/ros-reference.md", "packages/beluga_amcl/docs/ros2-reference.md", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source.rst", "packages/beluga_ros/docs/index.md", "resources/bibliography.md", "roadmap/features.md", "roadmap/releases.md", "tutorials/nav2-integration.md", "tutorials/particle-filtering.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 4, 5, 16, 21, 27, 28, 37, 38, 42, 59, 61, 63, 65, 67, 73, 92, 94, 100, 102, 104, 107, 108, 120, 121, 122, 151, 175, 179, 184, 187, 190, 202, 211, 226, 228, 231, 234, 235, 236, 243, 245, 260, 261, 267, 269, 270, 276, 299, 303, 308, 313, 315, 338, 408, 430, 439, 447, 448, 455, 458, 478, 480, 482, 483, 485, 492, 493, 500, 512, 517, 519, 537, 550, 554], "0": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 65, 107, 116, 118, 121, 122, 124, 126, 128, 171, 172, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 320, 322, 324, 328, 332, 336, 338, 339, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 394, 408, 409, 414, 426, 430, 439, 440, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 493, 495, 499, 522, 523, 534, 537, 538, 540, 546, 548, 554], "0003": 11, "001": [26, 320, 492, 495, 538], "01": [42, 128, 276, 328, 342, 500, 550], "01958": 260, "02": 317, "05": [26, 32, 320, 322, 492, 493, 495, 537, 538], "08": 554, "09023224677087": 260, "0f": 537, "0l": 270, "0u": 41, "0ul": 439, "0ull": 441, "0x00": [40, 41, 260], "0x01": [40, 41, 260], "0x02": [40, 41, 260], "0x04": [40, 41, 260], "0x9e3779b9": 270, "1": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "10": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 65, 107, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 493, 495, 499, 522, 523, 534, 537, 538, 546, 548, 550, 554], "100": [30, 34, 38, 126, 128, 243, 245, 249, 251, 255, 257, 259, 270, 272, 274, 280, 283, 290, 293, 297, 299, 303, 305, 313, 315, 336, 448, 451, 460, 462, 488, 492, 493, 495, 523, 534, 540, 548, 554], "101": [30, 34, 38, 41, 126, 128, 238, 243, 245, 249, 251, 255, 257, 259, 270, 272, 274, 276, 280, 283, 288, 290, 293, 297, 299, 301, 303, 313, 315, 446, 448, 451, 460, 488, 490, 495, 534, 548], "102": [26, 30, 34, 38, 122, 238, 243, 245, 249, 251, 257, 259, 270, 272, 274, 276, 278, 283, 288, 290, 293, 297, 299, 301, 303, 305, 313, 439, 448, 451, 460, 462, 495, 523, 534, 548], "103": [30, 32, 34, 38, 41, 122, 126, 128, 238, 243, 245, 249, 251, 255, 257, 259, 270, 272, 274, 276, 280, 283, 290, 293, 297, 299, 301, 303, 305, 313, 315, 439, 448, 451, 460, 462, 488, 490, 495, 534, 537, 548], "104": [32, 34, 38, 41, 122, 238, 243, 245, 251, 255, 257, 259, 270, 272, 276, 283, 288, 290, 293, 297, 299, 303, 305, 313, 315, 439, 451, 488, 490, 534, 537, 548], "105": [26, 32, 34, 38, 122, 179, 238, 243, 245, 249, 251, 255, 257, 259, 270, 272, 274, 276, 280, 283, 288, 290, 293, 297, 299, 301, 303, 305, 315, 439, 446, 448, 451, 460, 462, 488, 490, 495, 534, 537, 548], "106": [26, 32, 34, 38, 41, 122, 179, 238, 243, 245, 249, 255, 257, 259, 276, 283, 290, 297, 299, 301, 303, 305, 315, 439, 446, 451, 460, 462, 495, 534, 537, 548], "107": [26, 32, 34, 38, 122, 179, 243, 245, 251, 255, 257, 259, 270, 272, 276, 283, 288, 290, 293, 297, 299, 301, 303, 305, 315, 446, 451, 460, 488, 490, 534, 537, 548], "108": [26, 32, 34, 38, 122, 126, 128, 179, 238, 243, 245, 249, 255, 257, 259, 270, 272, 276, 280, 283, 288, 290, 293, 297, 299, 301, 305, 315, 446, 448, 451, 460, 462, 488, 490, 495, 523, 534, 537, 548], "109": [26, 32, 34, 38, 41, 122, 126, 128, 179, 238, 243, 245, 257, 259, 270, 272, 276, 280, 283, 288, 290, 293, 297, 299, 301, 446, 448, 451, 460, 462, 523, 534, 537, 548], "10u": 537, "11": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 554], "110": [26, 32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 255, 257, 259, 270, 272, 276, 280, 283, 288, 290, 293, 297, 299, 301, 303, 305, 315, 446, 448, 451, 488, 490, 523, 534, 537, 548], "1109": 550, "111": [26, 32, 34, 38, 122, 126, 128, 179, 238, 243, 245, 251, 255, 257, 259, 270, 272, 274, 276, 280, 283, 288, 290, 293, 299, 305, 441, 446, 448, 451, 460, 462, 488, 523, 534, 537], "112": [26, 32, 34, 38, 41, 122, 126, 128, 179, 245, 251, 255, 257, 259, 270, 272, 274, 276, 280, 288, 293, 297, 299, 305, 441, 446, 448, 451, 462, 490, 523, 537, 548], "113": [26, 32, 34, 38, 122, 128, 179, 238, 245, 249, 251, 255, 257, 259, 270, 272, 276, 280, 283, 290, 293, 297, 299, 305, 441, 446, 448, 451, 488, 523, 537], "114": [26, 32, 34, 122, 126, 128, 179, 238, 245, 249, 251, 255, 257, 259, 270, 272, 274, 276, 280, 288, 290, 293, 299, 305, 315, 441, 446, 448, 451, 462, 488, 490, 523, 537], "11400714819323198485llu": 315, "115": [26, 32, 34, 38, 122, 128, 179, 238, 245, 249, 251, 257, 259, 270, 272, 276, 280, 290, 297, 299, 303, 305, 315, 441, 446, 448, 451, 462, 495, 537], "116": [26, 32, 34, 38, 122, 128, 179, 238, 245, 249, 251, 255, 257, 270, 276, 290, 293, 297, 299, 303, 305, 441, 446, 448, 451, 488, 490, 495, 523, 537], "117": [26, 32, 34, 38, 122, 128, 179, 238, 243, 245, 249, 251, 255, 257, 259, 270, 272, 276, 280, 290, 293, 297, 299, 303, 305, 315, 441, 446, 448, 451, 462, 488, 495, 537], "118": [26, 32, 34, 38, 122, 126, 128, 179, 238, 243, 245, 249, 251, 257, 259, 270, 272, 276, 288, 290, 293, 297, 299, 303, 305, 441, 446, 448, 490, 495, 537, 548], "119": [26, 32, 34, 38, 126, 128, 179, 238, 243, 245, 249, 251, 255, 257, 259, 272, 274, 276, 283, 288, 290, 293, 297, 299, 303, 305, 441, 446, 448, 460, 488, 495, 537, 548], "12": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 463, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 554], "120": [26, 32, 34, 38, 122, 128, 179, 238, 243, 245, 249, 251, 255, 257, 270, 272, 274, 276, 283, 288, 290, 293, 297, 305, 441, 446, 448, 460, 488, 490, 495, 537, 548], "121": [26, 32, 34, 122, 126, 128, 179, 238, 243, 245, 249, 251, 257, 259, 270, 272, 276, 280, 283, 288, 290, 293, 297, 315, 441, 446, 448, 495, 523, 537, 548], "122": [26, 32, 34, 38, 41, 122, 128, 179, 238, 243, 245, 249, 251, 255, 257, 270, 274, 276, 280, 283, 288, 290, 293, 305, 315, 441, 448, 460, 488, 490, 495, 523, 537, 548], "123": [26, 32, 34, 38, 41, 128, 179, 243, 245, 249, 251, 255, 257, 270, 272, 276, 280, 283, 288, 290, 293, 297, 315, 441, 446, 448, 477, 484, 488, 495, 496, 511, 523, 530, 537, 548], "12345": [27, 184, 235, 267, 518], "124": [26, 29, 31, 32, 33, 34, 37, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 121, 122, 125, 127, 128, 170, 172, 175, 178, 179, 180, 182, 237, 238, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 254, 256, 257, 258, 260, 270, 271, 272, 273, 275, 276, 277, 279, 280, 282, 283, 284, 288, 289, 290, 292, 296, 298, 300, 302, 304, 305, 308, 312, 314, 315, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 363, 367, 368, 370, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 401, 403, 405, 408, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 435, 438, 440, 441, 445, 446, 447, 448, 452, 456, 465, 467, 469, 471, 487, 490, 494, 495, 501, 503, 505, 521, 523, 525, 533, 536, 538, 540, 543, 545, 547, 548], "125": [26, 32, 34, 38, 41, 128, 179, 238, 243, 245, 249, 251, 255, 257, 270, 272, 276, 280, 288, 297, 305, 315, 441, 446, 448, 462, 488, 495, 523, 537, 548], "126": [32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 249, 251, 255, 257, 259, 270, 272, 276, 288, 290, 293, 297, 315, 441, 446, 448, 462, 488, 490, 495, 523, 548], "127": [26, 32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 249, 251, 257, 259, 270, 272, 276, 305, 315, 441, 446, 448, 495, 523, 548], "128": [26, 32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 249, 251, 255, 259, 270, 272, 274, 276, 288, 297, 305, 315, 441, 446, 448, 462, 488, 490, 495, 523, 548], "129": [32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 249, 251, 255, 257, 270, 274, 276, 288, 290, 305, 441, 446, 448, 460, 488, 495, 523, 548], "13": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "130": [26, 32, 34, 38, 41, 128, 179, 243, 245, 249, 251, 259, 270, 272, 274, 276, 288, 290, 305, 315, 441, 446, 448, 460, 490, 495, 523, 548], "131": [26, 32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 249, 251, 255, 270, 272, 274, 276, 288, 290, 293, 305, 315, 441, 448, 488, 495, 523], "132": [26, 32, 34, 38, 41, 128, 179, 238, 243, 245, 249, 251, 255, 272, 276, 288, 290, 293, 305, 315, 441, 446, 448, 460, 488, 490, 495, 537, 548], "133": [26, 32, 34, 38, 41, 128, 179, 238, 243, 245, 249, 251, 270, 274, 276, 288, 290, 293, 305, 441, 446, 448, 490, 495, 537], "134": [26, 32, 34, 38, 41, 128, 179, 238, 243, 245, 249, 255, 259, 270, 272, 276, 290, 293, 305, 315, 441, 446, 448, 460, 488, 490, 495, 537], "135": [26, 32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 249, 255, 259, 270, 272, 276, 290, 293, 305, 315, 441, 448, 460, 462, 488, 490, 537], "136": [26, 32, 34, 38, 41, 126, 128, 179, 238, 243, 245, 249, 255, 257, 259, 270, 272, 276, 290, 305, 441, 446, 448, 460, 462, 495, 537], "137": [26, 32, 34, 38, 41, 122, 128, 179, 238, 243, 245, 249, 255, 257, 259, 270, 272, 276, 290, 305, 315, 441, 446, 448, 488, 495, 537], "138": [26, 32, 34, 38, 41, 122, 126, 128, 179, 243, 245, 249, 255, 257, 259, 270, 272, 274, 276, 290, 441, 446, 448, 460, 462, 488, 548], "139": [32, 34, 38, 41, 122, 128, 238, 243, 245, 249, 255, 257, 270, 274, 276, 290, 297, 305, 446, 448, 462, 495, 537, 548], "14": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "140": [26, 32, 34, 38, 41, 122, 128, 243, 245, 255, 257, 259, 270, 272, 274, 276, 290, 297, 441, 446, 448, 460, 488, 495, 548], "141": [32, 34, 38, 41, 122, 128, 179, 243, 245, 249, 255, 257, 270, 272, 274, 276, 297, 315, 446, 448, 460, 462, 488, 495, 548], "142": [32, 34, 38, 41, 122, 128, 238, 243, 245, 255, 270, 272, 276, 290, 297, 315, 446, 448, 462, 495, 548], "143": [32, 38, 41, 122, 126, 128, 238, 243, 245, 257, 270, 272, 274, 276, 297, 460, 488, 495, 548], "144": [26, 32, 34, 38, 41, 122, 126, 128, 243, 245, 255, 257, 270, 272, 276, 297, 315, 446, 448, 462, 495, 548], "145": [26, 32, 34, 38, 41, 122, 126, 128, 238, 243, 245, 255, 276, 290, 297, 446, 448, 460, 495, 548], "146": [26, 32, 34, 38, 41, 122, 126, 128, 243, 245, 249, 257, 270, 272, 276, 290, 297, 305, 446, 448, 460, 462, 495, 537, 548], "147": [26, 32, 34, 38, 41, 122, 126, 128, 243, 245, 249, 255, 257, 270, 272, 276, 290, 297, 305, 448, 495, 537], "148": [26, 32, 34, 38, 41, 122, 126, 128, 238, 243, 245, 249, 255, 270, 272, 274, 276, 290, 297, 305, 315, 441, 446, 448, 460, 462, 537, 548], "149": [32, 34, 38, 41, 122, 126, 128, 238, 243, 245, 249, 257, 259, 272, 274, 276, 290, 297, 305, 315, 441, 446, 495, 537], "14th": [42, 500, 550], "15": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "150": [26, 32, 34, 38, 41, 122, 126, 128, 179, 243, 245, 249, 255, 257, 259, 270, 272, 274, 276, 290, 297, 305, 315, 441, 446, 448, 460, 462, 537], "151": [26, 38, 41, 122, 126, 128, 179, 238, 243, 245, 249, 255, 259, 272, 274, 276, 290, 297, 305, 315, 441, 488, 537], "152": [32, 34, 38, 41, 122, 126, 128, 179, 243, 245, 249, 257, 259, 270, 272, 274, 276, 290, 297, 305, 315, 441, 446, 460, 462, 488, 495, 537], "153": [26, 32, 34, 38, 122, 126, 128, 179, 243, 245, 249, 255, 257, 259, 274, 276, 290, 297, 305, 315, 441, 446, 495, 537], "154": [34, 38, 41, 122, 126, 128, 179, 238, 243, 245, 249, 255, 259, 270, 274, 276, 290, 297, 305, 315, 441, 446, 460, 462, 488, 495, 537, 548], "155": [32, 38, 122, 126, 128, 179, 238, 243, 245, 249, 257, 259, 272, 274, 276, 290, 297, 305, 315, 441, 460, 462, 488, 495, 537, 548], "156": [32, 34, 38, 122, 126, 128, 179, 243, 245, 249, 255, 257, 259, 270, 276, 290, 297, 305, 441, 446, 448, 460, 488, 537, 548], "157": [32, 34, 38, 122, 126, 128, 179, 238, 243, 245, 249, 255, 259, 270, 274, 276, 290, 297, 305, 441, 446, 448, 460, 462, 495, 537, 548], "158": [32, 34, 38, 122, 126, 128, 179, 243, 249, 257, 259, 270, 276, 290, 297, 305, 441, 446, 448, 460, 488, 495, 537, 548], "159": [32, 34, 38, 126, 128, 243, 245, 249, 255, 257, 259, 270, 276, 290, 305, 315, 441, 446, 448, 460, 462, 537, 548], "16": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 554], "160": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548], "161": [32, 34, 38, 126, 128, 238, 243, 245, 249, 255, 257, 259, 270, 276, 290, 297, 315, 446, 448, 462, 488, 495, 537, 548], "162": [32, 41, 128, 238, 243, 245, 249, 255, 259, 270, 272, 274, 297, 305, 446, 495, 537, 548], "163": [32, 34, 38, 41, 122, 128, 238, 243, 245, 249, 255, 270, 272, 274, 276, 283, 285, 290, 293, 297, 305, 315, 317, 441, 462, 488, 495, 537, 548], "1637": 122, "164": [32, 38, 41, 128, 243, 245, 249, 255, 257, 259, 270, 272, 274, 290, 297, 305, 446, 495, 537, 548], "165": [26, 41, 126, 128, 238, 243, 245, 249, 257, 259, 272, 274, 290, 305, 446, 462, 488, 537, 548], "166": [26, 38, 41, 126, 128, 243, 249, 255, 259, 270, 272, 274, 290, 297, 305, 446, 462, 495, 537, 548], "167": [26, 38, 41, 126, 128, 243, 245, 249, 255, 257, 259, 274, 305, 488, 537, 548], "168": [26, 41, 126, 128, 238, 243, 245, 249, 255, 259, 290, 305, 315, 446, 448, 462, 537, 548], "169": [26, 38, 41, 126, 128, 238, 243, 245, 249, 255, 259, 274, 290, 315, 446, 448, 488, 537], "17": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 458, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 549, 554], "170": [26, 38, 41, 126, 128, 238, 243, 249, 255, 259, 274, 290, 305, 315, 441, 446, 448, 462, 488, 537, 548], "171": [26, 38, 41, 126, 128, 238, 245, 249, 255, 270, 274, 290, 315, 441, 446, 448, 488, 537], "172": [26, 38, 41, 126, 128, 245, 249, 255, 257, 270, 274, 290, 305, 315, 441, 446, 462, 488, 537], "173": [26, 38, 122, 128, 238, 245, 249, 255, 257, 270, 274, 290, 305, 315, 441, 446, 448, 488, 537], "174": [26, 38, 41, 122, 128, 245, 249, 255, 274, 290, 305, 441, 462, 488, 537], "175": [26, 122, 128, 245, 249, 255, 257, 270, 274, 290, 297, 305, 315, 441, 446, 537], "176": [26, 38, 41, 122, 238, 245, 249, 255, 270, 274, 290, 297, 305, 441, 446, 448, 462, 537, 548], "177": [26, 38, 122, 128, 238, 249, 255, 270, 290, 297, 305, 446, 448, 462, 537, 548], "178": [26, 41, 122, 128, 249, 270, 274, 290, 297, 305, 448, 495, 537, 548], "179": [26, 38, 41, 122, 238, 249, 270, 274, 290, 297, 315, 446, 448, 462, 495, 537, 548], "18": [12, 23, 26, 30, 32, 34, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 297, 299, 301, 303, 305, 313, 315, 317, 319, 439, 441, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "180": [26, 38, 122, 128, 249, 274, 290, 297, 305, 315, 446, 495, 537, 538, 548], "181": [26, 41, 122, 128, 249, 257, 270, 274, 290, 297, 305, 315, 448, 462, 495, 537, 548], "182": [26, 38, 122, 128, 179, 238, 249, 257, 270, 274, 290, 297, 305, 446, 448, 495, 537, 548], "183": [26, 38, 41, 122, 128, 179, 238, 249, 257, 270, 274, 290, 297, 305, 315, 446, 448, 462, 495, 537, 548], "184": [26, 38, 122, 128, 179, 249, 270, 274, 290, 297, 305, 315, 446, 448, 462, 495, 537, 548], "185": [26, 38, 41, 122, 179, 238, 249, 257, 274, 290, 297, 305, 495, 537], "186": [26, 38, 41, 122, 179, 249, 270, 274, 290, 297, 305, 315, 446, 448, 462, 495, 537, 548], "187": [26, 38, 122, 179, 249, 274, 283, 290, 305, 446, 448, 462, 495, 537], "188": [26, 38, 41, 122, 179, 238, 249, 270, 274, 290, 305, 446, 495, 537], "189": [26, 38, 122, 179, 238, 257, 290, 305, 446, 448, 462, 495, 537], "19": [12, 23, 26, 30, 32, 34, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 297, 299, 301, 303, 305, 313, 315, 317, 319, 439, 441, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "190": [26, 38, 41, 179, 238, 257, 270, 290, 297, 305, 315, 446, 448, 495, 537], "191": [26, 38, 122, 179, 238, 257, 290, 297, 305, 315, 446, 462, 495, 537], "192": [26, 38, 41, 179, 257, 270, 290, 297, 305, 315, 448, 495, 537, 548], "193": [26, 38, 41, 179, 238, 270, 290, 297, 305, 315, 448, 462, 495, 537, 548], "194": [26, 38, 179, 238, 257, 290, 297, 305, 315, 462, 495, 537, 548], "195": [26, 38, 41, 179, 238, 270, 290, 315, 448, 495, 537, 548], "196": [26, 38, 179, 238, 305, 315, 448, 462, 495, 537, 548], "197": [26, 38, 41, 179, 238, 290, 305, 315, 448, 495, 537, 548], "198": [26, 38, 179, 238, 257, 305, 315, 448, 462, 495, 537, 548], "199": [26, 38, 41, 179, 238, 257, 290, 305, 448, 495, 537, 548], "1990": 1, "1_55_0": 368, "1d": 554, "1e": [270, 537], "1ul": [26, 320, 439, 495, 538], "2": [4, 5, 6, 11, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 45, 51, 55, 65, 67, 73, 79, 81, 84, 90, 98, 112, 114, 122, 124, 126, 128, 166, 171, 173, 174, 176, 177, 179, 181, 183, 184, 185, 235, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 300, 301, 303, 305, 307, 309, 310, 311, 312, 313, 315, 317, 319, 320, 322, 328, 336, 340, 346, 348, 408, 414, 424, 426, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 458, 459, 460, 462, 463, 465, 471, 476, 477, 484, 485, 487, 488, 490, 491, 492, 495, 496, 499, 500, 501, 518, 519, 522, 523, 525, 526, 530, 532, 534, 536, 537, 538, 543, 545, 546, 548, 549, 553], "20": [12, 23, 26, 30, 32, 34, 38, 39, 41, 122, 124, 126, 128, 151, 171, 173, 174, 175, 176, 177, 179, 184, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 297, 299, 301, 303, 305, 313, 315, 317, 319, 344, 439, 441, 444, 446, 448, 450, 451, 453, 455, 457, 458, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "200": [26, 38, 41, 179, 238, 257, 305, 448, 462, 495, 537, 548, 554], "2000": [11, 493], "2000ul": [26, 320, 495, 538], "2001": [42, 500, 550], "2005": [42, 500, 550], "2006": 550, "2007": [42, 500, 550], "20070017872": 179, "201": [26, 38, 179, 238, 257, 270, 305, 448, 495, 537, 548], "2015": 42, "2019": 39, "202": [26, 38, 41, 122, 179, 238, 270, 290, 305, 448, 462, 495, 537, 548], "2020": 260, "2022": [25, 36, 128, 171, 176, 179, 183, 249, 253, 283, 307, 315, 317, 448, 450, 455, 460, 488, 534, 548], "2023": [32, 34, 38, 122, 126, 128, 171, 176, 179, 183, 185, 241, 243, 245, 247, 249, 251, 253, 257, 274, 276, 285, 290, 295, 299, 301, 307, 309, 315, 317, 319, 439, 441, 446, 450, 453, 462, 522, 523, 534, 548], "2024": [12, 23, 25, 26, 30, 36, 41, 122, 124, 173, 174, 177, 181, 185, 238, 255, 257, 259, 269, 270, 272, 278, 280, 283, 287, 288, 290, 291, 293, 297, 303, 305, 309, 311, 313, 441, 443, 444, 446, 448, 451, 455, 457, 460, 462, 488, 490, 495, 499, 537, 546], "203": [38, 122, 179, 257, 270, 305, 315, 448, 495, 537, 548], "204": [26, 38, 122, 179, 270, 290, 305, 315, 448, 462, 495, 537, 548], "205": [26, 38, 122, 179, 270, 290, 305, 315, 448, 462, 495, 537, 548], "206": [26, 122, 179, 290, 305, 448, 462, 495, 537, 548], "207": [38, 122, 179, 257, 270, 290, 305, 315, 448, 462, 495, 537], "208": [26, 38, 41, 122, 179, 257, 290, 305, 448, 462, 495, 537, 548], "209": [26, 41, 122, 179, 257, 290, 305, 448, 462, 495, 537], "21": [12, 23, 26, 30, 32, 34, 38, 39, 41, 122, 126, 128, 171, 173, 174, 176, 177, 179, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 283, 287, 288, 290, 291, 293, 297, 299, 301, 303, 305, 313, 315, 317, 319, 439, 441, 444, 446, 448, 451, 453, 455, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "210": [26, 38, 41, 122, 179, 257, 290, 448, 495, 537], "2104": 260, "211": [26, 41, 122, 179, 257, 290, 305, 448, 495, 537], "212": [26, 41, 122, 179, 257, 270, 290, 305, 448, 495, 537], "213": [26, 41, 122, 179, 257, 270, 290, 305, 448, 495, 537, 548], "214": [26, 41, 122, 179, 270, 290, 305, 495, 537, 548], "215": [26, 38, 41, 122, 179, 257, 270, 290, 305, 315, 448, 495, 537, 548], "216": [26, 38, 41, 122, 174, 179, 257, 270, 305, 315, 448, 495, 537, 548], "217": [26, 38, 41, 122, 179, 270, 290, 305, 315, 448, 495, 537, 548], "218": [26, 41, 122, 179, 270, 290, 305, 315, 495, 537, 548], "219": [26, 38, 41, 122, 179, 257, 270, 290, 305, 315, 448, 495, 537, 548], "22": [12, 23, 26, 30, 32, 34, 38, 39, 41, 122, 126, 128, 171, 173, 179, 241, 243, 245, 247, 249, 251, 255, 257, 259, 269, 270, 272, 274, 276, 278, 287, 290, 291, 293, 297, 299, 301, 303, 305, 313, 315, 317, 439, 441, 444, 448, 451, 453, 455, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "220": [26, 38, 41, 122, 179, 257, 270, 290, 315, 495, 537, 548], "221": [26, 41, 122, 179, 257, 290, 315, 495, 537, 548], "222": [26, 38, 41, 122, 179, 257, 290, 305, 315, 448, 495, 537, 548], "223": [26, 38, 41, 122, 179, 257, 270, 290, 315, 448, 495, 537, 548], "224": [26, 38, 122, 179, 257, 270, 290, 315, 495, 537, 548], "225": [26, 38, 41, 122, 179, 257, 270, 290, 315, 448, 495, 537, 548], "226": [26, 38, 122, 179, 270, 290, 448, 495, 537, 548], "227": [26, 38, 122, 179, 257, 270, 290, 315, 448, 495, 537, 548], "228": [26, 38, 122, 179, 257, 270, 290, 495, 537], "229": [26, 38, 122, 179, 270, 448, 537, 548], "23": [25, 26, 32, 34, 38, 39, 41, 42, 122, 126, 128, 171, 174, 177, 179, 183, 241, 243, 245, 247, 249, 251, 259, 260, 269, 270, 272, 274, 276, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 311, 313, 315, 317, 362, 439, 441, 443, 444, 448, 451, 453, 455, 460, 462, 488, 490, 495, 500, 522, 523, 534, 537, 546, 548, 550], "230": [26, 38, 122, 179, 257, 270, 290, 448, 495, 537], "231": [26, 38, 41, 122, 179, 257, 270, 448, 495, 537], "232": [26, 41, 122, 179, 270, 448, 495, 537], "233": [26, 38, 41, 122, 179, 257, 270, 290, 315, 448, 495, 537], "234": [26, 38, 41, 122, 179, 270, 290, 315, 448, 495, 537, 548], "235": [26, 41, 122, 179, 270, 290, 315, 495, 537, 548], "236": [26, 38, 41, 122, 179, 270, 290, 315, 495, 537, 548], "237": [26, 38, 41, 122, 270, 290, 315, 495, 537, 548], "238": [41, 122, 179, 257, 270, 290, 315, 495, 537, 548], "239": [38, 41, 122, 257, 270, 290, 315, 495, 537, 548], "24": [12, 25, 26, 32, 34, 38, 39, 41, 122, 126, 128, 171, 174, 177, 179, 183, 241, 243, 245, 247, 249, 251, 259, 269, 270, 272, 274, 276, 288, 290, 293, 295, 297, 299, 301, 303, 305, 311, 315, 317, 441, 443, 444, 448, 451, 455, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "240": [38, 41, 122, 270, 290, 305, 315, 495, 537, 548], "241": [41, 122, 257, 270, 290, 305, 315, 495, 537, 548], "242": [38, 41, 122, 290, 305, 495, 537, 548], "243": [38, 41, 122, 290, 305, 315, 495, 537, 548], "244": [41, 122, 290, 305, 495, 537, 548], "245": [38, 41, 122, 495, 537, 548], "246": [38, 41, 122, 290, 495, 537, 548], "247": [122, 257, 290, 315, 495, 537, 548], "248": [38, 41, 122, 257, 290, 315, 495, 537, 548], "249": [38, 257, 290, 315, 495, 537, 548], "25": [12, 25, 26, 32, 34, 38, 39, 41, 122, 126, 128, 174, 177, 179, 181, 243, 245, 247, 249, 251, 259, 269, 270, 272, 274, 276, 288, 291, 293, 295, 297, 299, 301, 303, 305, 311, 315, 317, 319, 320, 441, 443, 444, 448, 451, 455, 460, 462, 488, 490, 493, 495, 522, 523, 534, 537, 538, 546, 548, 554], "250": [122, 257, 290, 315, 495, 537], "251": [38, 122, 257, 290, 315, 495, 537, 548], "252": [122, 270, 290, 315, 495, 537, 548], "253": [41, 122, 257, 270, 290, 315, 495, 537], "254": [41, 270, 290, 537, 548], "255": [41, 122, 179, 270, 290, 315, 537, 548], "256": [41, 179, 270, 290, 315, 537, 548], "257": [38, 41, 179, 270, 290, 537, 548], "258": [38, 179, 270, 290, 315, 537, 548], "259": [38, 41, 179, 270, 290, 537], "26": [12, 25, 26, 32, 34, 39, 41, 122, 124, 128, 174, 177, 179, 181, 183, 243, 245, 247, 249, 259, 269, 270, 272, 274, 276, 280, 285, 288, 293, 297, 299, 301, 303, 305, 309, 311, 315, 319, 443, 444, 448, 450, 451, 460, 462, 488, 490, 495, 523, 534, 537, 546, 548], "260": [38, 179, 257, 270, 290, 537, 548], "261": [38, 179, 257, 270, 290, 537, 548], "262": [38, 179, 257, 270, 290, 315, 537, 548], "263": [38, 179, 257, 270, 315, 548], "264": [38, 41, 122, 173, 179, 257, 270, 283, 285, 290, 315, 451, 537, 548], "265": [38, 41, 122, 179, 270, 290, 315], "2654435769u": 315, "266": [38, 41, 122, 179, 257, 270, 290, 315, 548], "267": [38, 41, 179, 270, 290, 315, 548], "268": [38, 41, 122, 179, 270, 290, 315, 548], "269": [122, 179, 270, 315, 537, 548], "27": [12, 25, 26, 32, 34, 39, 122, 128, 174, 176, 177, 179, 181, 183, 238, 243, 245, 247, 249, 269, 270, 272, 274, 276, 280, 283, 285, 288, 293, 299, 303, 309, 311, 315, 444, 446, 448, 451, 457, 460, 462, 488, 490, 495, 523, 534, 537, 546, 548], "270": [41, 179, 270, 315, 537, 548], "271": [122, 179, 270, 315, 537], "272": [122, 179, 270, 315, 537, 548], "273": [41, 179, 257, 270, 315, 537, 548], "274": [41, 122, 179, 257, 270, 315, 537, 548], "275": [41, 179, 257, 270, 315, 537, 548], "276": [41, 179, 257, 270, 315, 537, 548], "277": [41, 179, 270, 315, 537], "278": [41, 42, 122, 179, 257, 270, 315, 537, 548], "279": [41, 122, 179, 270, 537, 548], "28": [23, 25, 26, 30, 32, 34, 36, 122, 128, 173, 174, 176, 179, 181, 238, 243, 245, 249, 255, 257, 269, 270, 274, 278, 280, 283, 287, 293, 299, 309, 311, 319, 446, 451, 457, 460, 462, 488, 490, 499, 523, 534, 537, 546, 548], "280": [122, 179, 270, 537, 548], "281": [41, 122, 179, 270, 537, 548], "28155156327703": 260, "282": [122, 179, 270, 537, 548], "283": [122, 179, 270, 537], "284": [41, 179, 270, 548], "285": [41, 122, 179, 257, 270, 548], "286": [41, 179, 257, 270, 548], "287": [41, 179, 257, 270, 548], "288": [41, 42, 179, 257, 270, 548], "289": [41, 179, 257, 270, 548], "29": [12, 25, 26, 30, 32, 34, 36, 39, 122, 128, 173, 179, 183, 243, 245, 249, 255, 257, 269, 270, 274, 278, 280, 288, 291, 299, 309, 311, 313, 439, 446, 451, 453, 457, 460, 462, 488, 490, 499, 523, 534, 537, 546, 548], "290": [41, 179, 257, 270, 548], "291": [41, 179, 257, 270, 548], "292": [122, 179, 270], "293": [41, 122, 179, 257, 270], "294": [122, 179, 257, 270], "295": [122, 179, 257, 270], "296": [41, 122, 179, 257, 270], "297": [41, 122, 179, 257, 270], "298": [41, 122, 179, 257, 270], "2980539": 550, "2980632": 550, "299": [41, 122, 179, 257, 270], "2d": [6, 11, 27, 32, 33, 34, 37, 38, 45, 47, 49, 51, 55, 57, 59, 61, 63, 67, 75, 77, 84, 86, 90, 94, 98, 102, 110, 125, 126, 127, 179, 235, 236, 244, 245, 246, 247, 249, 250, 251, 258, 259, 260, 267, 269, 270, 273, 274, 298, 299, 300, 312, 332, 452, 453, 459, 461, 465, 467, 471, 476, 477, 485, 487, 491, 492, 493, 494, 495, 496, 501, 503, 505, 509, 511, 518, 519, 521, 522, 523, 525, 530, 532, 533, 534], "2u": 441, "2x2": 179, "3": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 51, 65, 79, 88, 104, 114, 122, 124, 126, 128, 166, 171, 173, 174, 176, 177, 179, 181, 183, 184, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 300, 301, 303, 305, 307, 309, 310, 311, 312, 313, 315, 317, 319, 320, 336, 346, 385, 387, 439, 440, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 458, 460, 462, 488, 490, 495, 499, 500, 522, 523, 525, 532, 534, 537, 538, 546, 548, 553], "30": [12, 25, 26, 32, 34, 36, 39, 122, 171, 179, 181, 238, 241, 243, 245, 249, 269, 270, 278, 283, 285, 288, 290, 291, 305, 309, 311, 313, 439, 446, 451, 453, 457, 460, 462, 488, 490, 499, 523, 534, 537, 546, 548], "300": [41, 122, 179, 270, 554], "301": [41, 122, 179, 270], "302": [41, 122, 179, 270], "303": [41, 122, 179, 270], "304": [122, 179, 270], "305": [41, 122, 179, 270], "306": [122, 179, 270], "307": [122, 270], "308": [41, 122, 179, 270], "309": [41, 122, 270], "31": [12, 25, 26, 30, 34, 36, 38, 39, 122, 126, 171, 173, 176, 179, 241, 243, 245, 249, 251, 255, 257, 269, 270, 278, 280, 283, 285, 288, 290, 291, 309, 317, 439, 441, 451, 455, 460, 462, 488, 490, 499, 522, 523, 534, 537, 546, 548], "310": [41, 122, 270], "311": [41, 122, 270], "312": [41, 122], "313": [41, 122], "314": [41, 122], "315": 41, "316": 122, "317": [41, 122], "318": 122, "319": 122, "32": [12, 25, 30, 34, 36, 38, 39, 41, 42, 122, 126, 179, 183, 185, 241, 243, 245, 251, 255, 257, 259, 269, 270, 288, 297, 301, 305, 309, 311, 313, 315, 317, 439, 441, 446, 451, 453, 457, 460, 462, 488, 490, 499, 522, 523, 534, 537, 548], "320": [41, 122, 179], "321": [41, 122, 179], "322": [41, 122, 179], "323": [41, 122, 179], "324": [41, 122, 179], "325": [41, 179], "326": [41, 122, 179], "32634787735669": 260, "327": 179, "328": [41, 179], "329": 179, "33": [12, 25, 26, 30, 34, 36, 39, 41, 122, 171, 179, 181, 183, 185, 241, 243, 247, 255, 257, 259, 269, 270, 272, 276, 278, 283, 288, 297, 301, 303, 305, 309, 315, 441, 446, 448, 451, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 548], "330": 179, "331": [41, 179], "332": [41, 179], "333": [41, 179], "334": [41, 179], "335": [41, 122, 179], "336": [41, 122, 179], "337": [41, 122, 179], "338": [122, 179], "339": [41, 122, 179], "34": [12, 30, 36, 38, 39, 42, 122, 128, 179, 181, 185, 241, 243, 247, 257, 270, 272, 276, 280, 285, 288, 293, 297, 303, 305, 309, 315, 317, 439, 441, 446, 448, 451, 457, 460, 462, 488, 490, 495, 499, 500, 522, 523, 534, 537, 548, 550], "340": [122, 179], "341": [122, 179], "342": [41, 122, 179], "343": [41, 122, 179], "344": [41, 122, 179], "345": [41, 122, 179], "346": [41, 122, 179], "347": [41, 122, 179], "348": [41, 122, 179], "349": [41, 122], "35": [12, 26, 30, 36, 38, 39, 41, 122, 128, 176, 179, 183, 185, 241, 255, 257, 259, 269, 270, 272, 274, 278, 280, 283, 285, 288, 293, 297, 299, 303, 305, 309, 315, 444, 446, 451, 453, 457, 460, 462, 488, 490, 499, 522, 523, 534, 537, 548], "350": [122, 179], "351": 41, "352": 122, "353": 122, "354": [41, 122], "355": [41, 122], "356": [41, 122], "357": [41, 122], "358": [41, 122], "359": [41, 122], "36": [12, 30, 32, 36, 39, 41, 122, 176, 181, 183, 185, 241, 243, 255, 257, 269, 270, 272, 274, 276, 278, 280, 283, 285, 288, 293, 299, 303, 309, 315, 439, 441, 446, 448, 451, 453, 457, 460, 462, 488, 490, 495, 523, 532, 534, 537, 547, 548], "360": [41, 122], "361": [41, 122], "362": [41, 122], "363": [41, 122], "364": [41, 122], "365": [122, 179], "366": [41, 122, 179], "367": [122, 179], "368": [122, 179], "369": [122, 179], "37": [26, 30, 32, 36, 38, 39, 41, 122, 128, 176, 185, 238, 241, 243, 249, 255, 257, 269, 270, 283, 285, 293, 297, 305, 309, 319, 441, 446, 448, 451, 453, 457, 460, 462, 488, 490, 522, 523, 534, 537, 554], "370": [122, 179], "371": [122, 179], "372": [41, 122, 179], "373": [41, 122, 179], "374": [41, 122], "375": [41, 122, 179], "376": [41, 122], "377": [41, 122], "378": [41, 122], "379": [41, 122], "38": [26, 30, 36, 38, 39, 41, 122, 176, 183, 185, 238, 243, 245, 249, 255, 257, 270, 272, 276, 278, 280, 285, 288, 290, 299, 303, 315, 319, 441, 444, 446, 448, 451, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "380": 122, "381": [41, 122], "382": 122, "383": 122, "384": [41, 122], "385": [41, 122], "386": 122, "387": [41, 122], "388": 122, "389": 122, "39": [26, 30, 32, 34, 36, 38, 39, 41, 122, 176, 179, 181, 185, 238, 241, 245, 255, 259, 269, 270, 276, 283, 288, 293, 299, 309, 311, 315, 317, 319, 441, 444, 448, 453, 457, 460, 462, 488, 495, 523, 546], "390": 122, "391": 122, "392": [41, 122, 179], "393": [41, 122, 179], "394": [41, 122, 179], "395": [41, 122, 179], "396": [41, 122, 179], "397": [41, 122, 179], "398": [41, 122, 179], "399": [41, 122, 179], "3d": [12, 27, 33, 34, 57, 67, 73, 75, 88, 90, 127, 128, 235, 236, 242, 243, 244, 245, 255, 258, 259, 260, 267, 269, 270, 300, 312, 332, 503, 532], "3d_embed": [26, 32, 34, 38, 41, 122, 126, 127, 128, 171, 173, 179, 183, 184, 185, 238, 241, 243, 245, 247, 249, 251, 255, 257, 259, 269, 270, 274, 276, 283, 288, 290, 299, 301, 313, 315, 317, 319, 441, 444, 446, 448, 451, 453], "3x3": [260, 532, 547, 548], "4": [12, 13, 15, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 45, 49, 51, 67, 77, 79, 110, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 328, 336, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 525, 532, 534, 537, 546, 548], "40": [30, 34, 39, 122, 128, 176, 181, 185, 241, 243, 245, 249, 255, 257, 259, 270, 272, 283, 288, 303, 311, 317, 441, 446, 448, 460, 462, 488, 490, 523], "400": [41, 179], "401": [41, 122, 179], "402": [41, 179], "403": 179, "404": 41, "408": 41, "409": 41, "41": [26, 30, 38, 39, 41, 122, 176, 183, 185, 238, 241, 243, 245, 255, 257, 259, 269, 270, 280, 283, 293, 311, 319, 441, 444, 446, 457, 462, 488, 495, 523, 546], "411": 41, "413": 122, "414": 122, "415": [41, 122], "416": [41, 122], "417": 122, "418": [41, 122], "419": [41, 122], "42": [30, 32, 34, 38, 39, 122, 128, 179, 181, 183, 185, 238, 241, 255, 276, 278, 280, 288, 311, 317, 446, 457, 462, 488, 490, 495, 523], "420": 122, "421": [41, 122], "422": [41, 122], "423": 122, "424": [41, 122], "425": [41, 42, 122], "426": 122, "427": [41, 122], "428": [41, 122], "429": 122, "43": [26, 30, 34, 39, 41, 122, 179, 183, 185, 241, 243, 249, 255, 257, 259, 269, 280, 283, 288, 299, 311, 319, 457, 462, 488, 523, 548], "430": [41, 122], "431": 122, "432": 122, "433": 122, "434": 122, "435": 122, "436": 41, "437": 41, "438": 41, "439": 41, "44": [32, 34, 38, 39, 41, 122, 179, 183, 185, 238, 245, 257, 259, 276, 278, 283, 297, 299, 309, 311, 315, 317, 446, 453, 457, 462, 488, 490, 495, 523, 534, 537, 548], "440": 41, "441": 41, "442": 41, "443": 41, "444": 41, "445": 41, "446": 41, "447": 41, "448": 41, "449": 41, "45": [26, 30, 34, 39, 122, 173, 179, 183, 185, 241, 243, 245, 249, 255, 259, 269, 270, 278, 280, 283, 288, 297, 299, 309, 311, 313, 315, 317, 439, 444, 453, 457, 462, 488, 495, 523, 534, 537, 546], "450": 41, "451": 41, "452": 41, "453": 41, "454": 41, "456": 41, "46": [30, 32, 34, 39, 41, 42, 122, 128, 173, 183, 185, 238, 241, 243, 245, 255, 257, 269, 270, 278, 297, 305, 309, 311, 313, 315, 319, 439, 444, 453, 457, 460, 462, 488, 490, 500, 523, 537, 546, 548, 550], "460": 41, "461": 41, "462": 41, "463": 41, "464": 41, "465": 41, "466": 41, "468": 41, "47": [26, 30, 39, 41, 122, 173, 181, 183, 185, 241, 245, 257, 259, 272, 278, 283, 288, 297, 299, 305, 309, 311, 313, 315, 317, 439, 444, 453, 460, 488, 495, 523, 534, 537, 546], "472": 41, "473": 41, "474": 41, "475": 41, "476": 41, "477": 41, "478": 41, "479": 41, "48": [32, 34, 39, 41, 128, 173, 181, 183, 185, 238, 241, 245, 255, 270, 272, 276, 278, 283, 288, 297, 305, 309, 311, 315, 319, 439, 444, 446, 453, 457, 488, 490, 534, 546], "480": 41, "481": 41, "483": 41, "486": 41, "487": 41, "488": 41, "489": 41, "49": [26, 30, 39, 41, 173, 181, 183, 185, 241, 249, 255, 257, 269, 270, 272, 278, 280, 283, 288, 290, 297, 309, 311, 313, 315, 439, 444, 446, 448, 460, 488, 490, 522, 523, 537, 546], "490": 41, "492": 41, "495": 41, "496": 41, "497": 41, "498": 41, "499": 41, "4b": 11, "4d": 179, "5": [6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 55, 67, 75, 77, 79, 104, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 322, 328, 332, 336, 344, 394, 414, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 493, 495, 499, 522, 523, 532, 534, 537, 538, 546, 548], "50": [32, 38, 39, 41, 173, 181, 183, 185, 238, 241, 243, 245, 247, 257, 259, 269, 270, 272, 276, 278, 280, 283, 288, 297, 305, 309, 311, 315, 319, 439, 444, 446, 448, 453, 460, 488, 522, 523, 534, 546], "500": 493, "5000": 492, "500ul": [26, 320, 495, 538], "501": 41, "504": 41, "505": 41, "506": 41, "507": 41, "508": 41, "51": [26, 30, 38, 39, 41, 173, 181, 183, 185, 238, 241, 243, 249, 255, 259, 269, 270, 272, 280, 283, 288, 293, 297, 299, 303, 305, 311, 313, 315, 319, 439, 448, 453, 457, 460, 488, 495, 522, 523, 546], "510": 41, "513": 41, "514": 41, "515": 41, "516": 41, "517": 41, "519": 41, "52": [30, 32, 38, 39, 128, 173, 181, 183, 185, 241, 243, 255, 257, 259, 269, 270, 272, 278, 283, 293, 297, 299, 303, 309, 311, 315, 319, 439, 444, 446, 457, 460, 462, 488, 490, 495, 522, 523, 537, 546, 554], "522": 41, "523": [38, 41], "523598": 492, "524": [41, 122, 344], "525": 41, "526": 41, "527": 41, "528": 41, "529": 41, "53": [26, 30, 39, 41, 122, 171, 173, 181, 183, 238, 249, 269, 270, 272, 278, 280, 283, 288, 293, 297, 299, 303, 305, 311, 313, 315, 319, 439, 446, 448, 453, 457, 462, 488, 490, 522, 523, 534, 537, 546], "530": 41, "532": 41, "533": 41, "534": 41, "536": 41, "537": 41, "538": 41, "539": 41, "54": [26, 30, 32, 38, 39, 41, 122, 128, 171, 173, 181, 238, 249, 255, 259, 269, 270, 272, 278, 283, 288, 293, 303, 315, 317, 319, 439, 446, 448, 451, 453, 457, 460, 488, 495, 522, 523, 537, 546], "540": 41, "541": 41, "542": 41, "543": 41, "55": [26, 30, 38, 39, 41, 122, 171, 173, 181, 249, 251, 255, 269, 270, 272, 276, 278, 283, 288, 293, 297, 299, 303, 311, 313, 315, 317, 319, 439, 451, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548, 554], "5555": 550, "56": [26, 30, 32, 39, 41, 122, 171, 173, 181, 238, 270, 272, 278, 283, 288, 290, 293, 297, 303, 313, 315, 317, 319, 439, 444, 446, 448, 451, 453, 457, 460, 462, 488, 490, 522, 523, 537, 548], "57": [26, 30, 32, 38, 39, 41, 171, 173, 238, 249, 255, 257, 269, 270, 272, 276, 278, 283, 288, 290, 293, 301, 303, 309, 313, 315, 317, 319, 439, 444, 448, 451, 453, 457, 460, 462, 490, 495, 522, 523, 534, 537, 548], "58": [30, 32, 39, 41, 122, 128, 171, 173, 181, 238, 247, 255, 257, 269, 272, 278, 283, 288, 293, 297, 303, 305, 309, 315, 317, 319, 439, 444, 451, 462, 490, 495, 522, 523, 537, 548], "59": [30, 34, 38, 39, 171, 173, 179, 247, 257, 259, 269, 270, 272, 283, 288, 290, 293, 303, 305, 309, 313, 315, 317, 319, 439, 444, 448, 451, 453, 457, 460, 462, 490, 522, 523, 534, 537, 548], "6": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 55, 75, 77, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 322, 328, 332, 336, 379, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 495, 499, 522, 523, 534, 537, 546, 548], "60": [30, 32, 34, 38, 39, 41, 128, 171, 173, 179, 181, 238, 247, 249, 255, 259, 269, 270, 272, 278, 283, 288, 290, 293, 303, 305, 309, 311, 315, 317, 322, 439, 444, 446, 448, 451, 453, 460, 462, 492, 493, 522, 523, 534, 537, 548], "61": [30, 34, 39, 171, 179, 181, 238, 243, 249, 255, 257, 259, 269, 270, 272, 276, 280, 283, 288, 290, 293, 303, 305, 309, 311, 315, 317, 319, 439, 446, 451, 457, 490, 495, 522, 523, 537, 548], "62": [30, 38, 39, 171, 173, 179, 181, 238, 243, 245, 247, 249, 255, 259, 270, 272, 280, 283, 290, 293, 299, 303, 305, 307, 309, 311, 315, 317, 439, 444, 446, 448, 451, 453, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 548], "63": [30, 34, 38, 39, 171, 173, 179, 181, 243, 245, 247, 251, 259, 269, 270, 272, 276, 280, 283, 288, 293, 299, 303, 305, 307, 309, 311, 313, 315, 317, 439, 446, 448, 451, 453, 457, 460, 462, 488, 490, 523, 534, 537, 548], "64": [26, 30, 38, 39, 128, 171, 173, 179, 181, 238, 243, 245, 247, 249, 251, 255, 259, 269, 270, 272, 274, 278, 280, 283, 288, 290, 293, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 439, 446, 451, 453, 457, 522, 523, 537, 548], "64485362793663": 260, "65": [30, 34, 39, 126, 128, 171, 173, 179, 238, 243, 247, 251, 255, 259, 269, 270, 272, 278, 280, 283, 288, 290, 293, 297, 299, 301, 303, 305, 307, 313, 315, 317, 319, 439, 446, 448, 451, 453, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 548, 554], "66": [38, 39, 171, 173, 179, 181, 238, 243, 245, 247, 253, 259, 269, 270, 272, 278, 280, 283, 288, 290, 293, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 444, 446, 451, 453, 457, 460, 462, 488, 490, 495, 523, 534, 537, 548], "67": [30, 34, 38, 39, 128, 171, 173, 179, 238, 243, 247, 251, 255, 257, 259, 269, 270, 272, 278, 280, 283, 288, 290, 293, 297, 299, 303, 305, 307, 315, 319, 439, 444, 446, 451, 453, 457, 488, 522, 523, 548], "68": [39, 128, 171, 173, 179, 238, 243, 245, 247, 251, 255, 257, 259, 269, 270, 272, 276, 278, 280, 283, 290, 293, 297, 299, 301, 303, 305, 307, 313, 315, 439, 444, 451, 453, 457, 460, 462, 490, 522, 523, 534, 537], "69": [34, 38, 39, 128, 171, 173, 179, 238, 243, 247, 251, 257, 259, 269, 270, 272, 276, 280, 283, 288, 290, 293, 297, 299, 303, 305, 313, 315, 319, 439, 444, 446, 451, 453, 460, 462, 488, 490, 522, 523, 534, 537, 548], "6x6": [260, 532, 547, 548], "7": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "70": [26, 38, 39, 42, 171, 179, 181, 243, 245, 251, 255, 259, 270, 272, 280, 283, 288, 290, 293, 297, 299, 303, 305, 315, 439, 444, 446, 448, 451, 453, 457, 488, 495, 522, 523, 534, 537], "71": [34, 39, 122, 128, 171, 179, 181, 238, 243, 247, 251, 255, 257, 259, 269, 270, 272, 276, 280, 283, 288, 290, 293, 297, 299, 305, 309, 311, 313, 315, 439, 444, 448, 451, 453, 460, 462, 488, 490, 495, 522, 523], "713": [42, 500, 550], "72": [34, 38, 39, 122, 171, 179, 181, 238, 243, 245, 251, 259, 269, 270, 272, 276, 280, 283, 288, 290, 293, 297, 299, 303, 305, 309, 311, 313, 315, 439, 441, 444, 446, 451, 453, 460, 462, 490, 522, 523, 537], "720": [42, 500, 550], "73": [26, 38, 39, 122, 171, 179, 181, 238, 251, 255, 259, 269, 270, 272, 276, 283, 288, 290, 293, 297, 303, 309, 311, 315, 319, 439, 441, 444, 446, 448, 451, 453, 462, 488, 522, 523, 537], "74": [26, 32, 34, 39, 122, 126, 171, 179, 181, 238, 245, 251, 255, 259, 269, 270, 280, 283, 288, 290, 293, 297, 299, 301, 303, 305, 309, 311, 313, 315, 319, 439, 441, 444, 446, 448, 451, 457, 460, 488, 490, 495, 523, 534, 554], "75": [26, 32, 38, 39, 41, 122, 171, 179, 238, 243, 245, 247, 257, 269, 270, 272, 274, 276, 283, 288, 290, 293, 295, 297, 301, 303, 305, 309, 311, 313, 315, 439, 441, 444, 446, 451, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 554], "76": [26, 32, 38, 39, 41, 122, 171, 179, 243, 247, 251, 255, 257, 259, 269, 270, 283, 288, 290, 293, 297, 301, 303, 311, 315, 319, 439, 441, 444, 448, 451, 457, 460, 462, 488, 522, 523, 534], "77": [26, 39, 41, 122, 171, 179, 238, 245, 247, 249, 255, 257, 259, 269, 280, 283, 288, 290, 293, 297, 301, 303, 305, 309, 311, 313, 439, 441, 444, 446, 451, 457, 488, 490, 495, 522, 523], "78": [26, 32, 38, 39, 122, 171, 179, 238, 247, 249, 257, 259, 269, 272, 276, 280, 290, 293, 297, 301, 303, 305, 311, 313, 441, 444, 446, 451, 457, 460, 462, 488, 490, 495, 522, 523, 534, 548], "79": [26, 30, 34, 38, 39, 41, 122, 128, 171, 179, 238, 247, 249, 251, 255, 272, 276, 280, 283, 288, 290, 293, 297, 299, 303, 313, 315, 439, 441, 444, 446, 448, 451, 460, 462, 488, 522, 523, 534, 537, 548], "8": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 104, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 554], "80": [26, 30, 32, 34, 39, 122, 128, 171, 179, 238, 247, 251, 255, 257, 259, 269, 270, 272, 280, 283, 288, 290, 293, 299, 301, 303, 305, 313, 319, 441, 444, 448, 451, 488, 490, 495, 523, 537, 548], "81": [26, 30, 34, 38, 39, 41, 122, 128, 171, 179, 238, 243, 245, 247, 249, 251, 259, 270, 272, 276, 280, 283, 288, 290, 297, 299, 303, 305, 313, 319, 441, 444, 446, 451, 460, 462, 488, 490, 495, 522, 523, 534, 537, 548], "82": [26, 30, 32, 34, 38, 39, 122, 126, 128, 171, 179, 238, 243, 245, 247, 251, 255, 259, 269, 270, 272, 280, 288, 290, 293, 297, 299, 305, 309, 313, 319, 441, 444, 446, 448, 451, 460, 462, 522, 523, 534, 548], "83": [26, 30, 39, 41, 122, 126, 128, 171, 179, 243, 245, 247, 249, 251, 255, 270, 272, 276, 283, 288, 290, 293, 299, 303, 309, 313, 319, 441, 444, 446, 448, 451, 488, 490, 495, 523, 537, 548], "84": [26, 30, 32, 34, 38, 39, 122, 126, 128, 171, 179, 238, 243, 245, 247, 251, 255, 257, 259, 269, 270, 272, 274, 276, 280, 283, 288, 290, 293, 297, 299, 303, 305, 309, 313, 319, 441, 444, 448, 451, 460, 462, 488, 490, 495, 522, 523, 534, 537, 548], "85": [26, 30, 38, 39, 41, 122, 128, 171, 179, 238, 243, 247, 249, 255, 257, 259, 270, 272, 274, 280, 290, 293, 297, 299, 303, 305, 309, 319, 441, 444, 446, 448, 451, 460, 462, 488, 495, 522, 523, 534, 537, 548], "86": [26, 30, 32, 38, 39, 42, 122, 126, 171, 179, 238, 243, 245, 247, 255, 269, 270, 272, 274, 276, 280, 283, 288, 290, 293, 299, 301, 303, 309, 313, 439, 441, 444, 446, 448, 451, 488, 490, 522, 523, 537, 548], "87": [26, 32, 38, 39, 41, 122, 128, 171, 179, 238, 243, 247, 249, 257, 259, 269, 270, 272, 276, 280, 290, 293, 297, 299, 301, 303, 305, 309, 313, 315, 439, 441, 444, 446, 451, 460, 462, 488, 490, 522, 523, 534, 537, 548, 554], "88": [26, 38, 39, 122, 128, 171, 179, 238, 243, 247, 251, 255, 259, 269, 270, 272, 274, 280, 290, 293, 297, 299, 301, 303, 305, 309, 313, 315, 439, 441, 444, 448, 451, 460, 462, 488, 490, 495, 522, 523, 534, 537, 548], "889486": 550, "89": [26, 30, 32, 34, 38, 39, 41, 42, 122, 171, 179, 243, 247, 249, 251, 255, 259, 269, 270, 272, 274, 276, 280, 290, 293, 299, 301, 305, 313, 315, 439, 441, 444, 446, 448, 451, 488, 490, 495, 522, 523, 537, 548], "9": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548], "90": [26, 34, 38, 39, 122, 126, 128, 171, 179, 238, 243, 247, 249, 251, 259, 269, 270, 272, 280, 290, 293, 297, 303, 305, 309, 313, 315, 344, 439, 441, 444, 446, 451, 460, 462, 488, 522, 523, 534, 537], "900": 260, "91": [26, 34, 38, 39, 41, 122, 126, 128, 171, 179, 238, 243, 245, 247, 251, 255, 259, 270, 272, 274, 280, 290, 293, 297, 299, 301, 303, 305, 309, 313, 315, 439, 441, 444, 446, 448, 451, 460, 462, 488, 490, 495, 522, 523, 534, 537, 548], "92": [26, 34, 38, 41, 122, 126, 171, 238, 243, 245, 247, 249, 251, 255, 270, 272, 280, 283, 303, 305, 309, 313, 315, 439, 441, 444, 446, 448, 451, 495, 522, 523, 537], "93": [26, 34, 38, 39, 126, 128, 171, 179, 238, 243, 245, 247, 251, 259, 270, 272, 276, 280, 283, 290, 293, 297, 305, 309, 313, 315, 441, 444, 446, 451, 460, 462, 488, 490, 522, 523, 534, 537], "94": [26, 34, 38, 39, 41, 122, 126, 128, 171, 238, 243, 245, 251, 255, 257, 270, 272, 276, 280, 283, 293, 297, 303, 305, 309, 313, 315, 444, 448, 451, 460, 488, 495, 522, 523, 534, 537], "95": [32, 34, 38, 41, 126, 171, 238, 243, 245, 255, 257, 270, 272, 280, 283, 290, 293, 297, 301, 303, 309, 315, 439, 441, 444, 446, 448, 451, 488, 490, 495, 522, 523, 537], "950": 260, "96": [26, 32, 34, 38, 128, 171, 238, 243, 245, 251, 257, 270, 274, 276, 280, 283, 293, 297, 301, 303, 305, 309, 313, 315, 444, 446, 451, 460, 462, 495, 522, 523, 534], "9658": [27, 235, 267], "9660": [27, 184, 267, 463, 477, 484, 496, 511, 518, 530], "9670": [29, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 121, 175, 178, 180, 260, 271, 277, 279, 284, 292, 296, 302, 304, 308, 310, 314, 328, 336, 338, 340, 342, 344, 346, 348, 352, 356, 370, 382, 392, 394, 396, 401, 403, 408, 412, 414, 416, 418, 422, 424, 426, 430, 432, 438, 440, 445, 456, 465, 467, 471, 501, 503, 505, 525, 532, 536, 543], "97": [34, 38, 41, 126, 171, 238, 243, 245, 255, 257, 270, 272, 274, 280, 283, 293, 297, 299, 301, 303, 305, 309, 313, 315, 441, 448, 451, 460, 462, 488, 490, 495, 523, 534, 537, 548, 554], "972": 537, "9780262201629": 550, "98": [32, 34, 38, 238, 243, 245, 255, 257, 259, 270, 272, 274, 280, 283, 290, 293, 297, 299, 301, 303, 313, 446, 448, 451, 488, 495, 523, 534, 548], "99": [30, 34, 38, 41, 238, 243, 245, 249, 257, 259, 270, 272, 274, 280, 283, 293, 297, 299, 301, 305, 315, 446, 451, 460, 462, 490, 492, 493, 523, 534, 548], "990": 260, "999": [260, 440, 441], "A": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 71, 102, 120, 121, 234, 235, 236, 237, 243, 260, 282, 316, 360, 403, 458, 473, 483, 492, 493, 507, 517, 519, 554], "AND": [40, 41, 122, 260, 288, 405], "AS": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "And": 346, "As": 3, "But": [1, 297], "For": [0, 3, 4, 5, 102, 121, 122, 255, 257, 260, 356, 553, 554], "If": [0, 5, 30, 43, 65, 107, 122, 260, 271, 297, 403, 418, 424, 426, 438, 441, 448, 465, 467, 471, 501, 532, 537, 553, 554], "In": [4, 6, 29, 42, 73, 79, 100, 500, 537, 550, 554], "It": [1, 4, 43, 45, 47, 49, 51, 53, 55, 65, 71, 77, 92, 100, 102, 104, 107, 114, 236, 260, 308, 338, 448, 485, 491, 492, 493, 501, 519, 538, 554], "Its": [65, 260, 412, 413, 457, 458], "NOT": [288, 405], "No": [65, 272, 465, 467], "Not": [249, 297], "OF": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "OR": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 40, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 405, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "On": 6, "One": 553, "Ones": [257, 301], "That": [65, 98, 553], "The": [2, 3, 4, 5, 6, 18, 19, 29, 31, 33, 34, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 121, 122, 125, 127, 170, 171, 172, 175, 178, 180, 182, 234, 237, 240, 242, 244, 245, 246, 248, 250, 254, 256, 258, 260, 270, 271, 273, 275, 277, 279, 282, 284, 289, 292, 296, 297, 298, 300, 302, 304, 308, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 438, 440, 445, 447, 448, 452, 456, 458, 465, 467, 469, 471, 483, 492, 493, 494, 498, 501, 503, 505, 517, 521, 525, 532, 533, 536, 538, 540, 542, 543, 553, 554], "Then": [5, 16, 21], "There": [1, 6, 448, 537, 554], "These": [2, 13, 17, 302], "To": [2, 3, 4, 276, 304, 553, 554], "Will": [112, 346], "With": 178, "_": [122, 439, 493], "_angular_resolut": [537, 543, 544], "_angular_resolutionresolut": 543, "_linear_resolut": [537, 543, 544], "_linear_resolutionresolut": 543, "_model": 4, "_t": 4, "aa": 492, "ab": [128, 272, 276, 280, 444, 537, 554], "abil": 104, "abl": [4, 22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547], "abort": [465, 467, 471], "about": [12, 121, 122, 128, 257, 260, 537, 554], "abov": [4, 92, 107, 234, 308, 344, 441, 448, 483, 517, 554], "absolut": [5, 308], "abstract": [3, 36, 125, 126, 153, 160, 184, 249, 250, 251, 259, 273, 274, 283, 285, 289, 300, 313, 453], "academ": [0, 1], "accept": [92, 107, 308], "access": [3, 13, 15, 27, 29, 32, 34, 36, 41, 65, 71, 122, 128, 153, 156, 170, 171, 173, 178, 179, 184, 234, 235, 237, 238, 245, 249, 260, 267, 270, 276, 283, 285, 289, 290, 293, 297, 305, 315, 317, 408, 422, 430, 441, 451, 462, 467, 483, 517], "accord": [19, 32, 43, 260, 269, 338, 493, 501, 554], "accordingli": [43, 501], "account": 260, "accumul": [121, 122, 172, 173, 178, 179, 271, 272, 344, 356, 444, 451, 554], "acknowledg": 554, "acquir": 6, "action": [2, 3, 16, 26, 35, 36, 43, 67, 68, 94, 95, 102, 120, 128, 152, 153, 180, 181, 184, 208, 222, 225, 235, 236, 276, 277, 278, 279, 280, 287, 317, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 392, 396, 401, 458, 495, 537, 554], "action_closur": [30, 271, 272, 346], "actioncontrol": [67, 94], "actionsact": 129, "actionsinclud": [136, 137], "activ": [460, 465, 469, 471, 488, 490, 493], "actual": [107, 492, 493], "actuat": 554, "ad": [17, 104, 260, 492, 493, 538], "adapt": [11, 26, 27, 29, 42, 43, 235, 260, 267, 297, 320, 412, 414, 416, 422, 440, 456, 457, 458, 494, 495, 496, 499, 500, 501, 509, 511, 518, 519, 525, 530, 538, 550, 554], "adaptor": [23, 27, 29, 30, 151, 161, 175, 184, 235, 236, 267, 271, 272, 284, 292, 293, 296, 297, 302, 303, 304, 305, 346, 348, 350, 352, 354, 356, 358, 414, 416, 420, 424, 426, 428, 438, 439, 440, 441, 448, 455, 456, 457, 458, 554], "adaptor_bas": 297, "add": [39, 102, 107, 122, 448, 537, 554], "add_execut": 554, "addit": [20, 34, 245, 260, 420, 505, 554], "addition": 65, "addressof": [71, 238, 297, 305], "adequ": 554, "adjac": [122, 344], "adjacent_grid_cells_": 122, "adjust": [43, 501, 554], "adl": [18, 260, 408, 430, 524, 530, 537, 547, 548], "adopt": [1, 2, 3, 5], "advanc": [41, 297, 448], "advantag": 4, "affect": 3, "afford": [3, 15, 491], "after": [2, 4, 43, 65, 71, 104, 179, 236, 238, 304, 418, 492, 493, 501, 554], "again": [32, 243, 492, 493, 495, 538], "against": [79, 81, 243, 308], "agent": [42, 500, 550], "aggreg": [3, 41, 65, 492, 493, 554], "agnost": [492, 493], "agre": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "aid": 519, "aka": [17, 59], "al": 260, "algebra": [179, 260, 458], "algorithm": [3, 4, 6, 27, 30, 31, 32, 35, 36, 43, 59, 61, 63, 69, 96, 99, 104, 112, 114, 116, 118, 153, 184, 189, 198, 210, 212, 224, 227, 235, 242, 243, 248, 249, 260, 267, 271, 272, 277, 278, 279, 280, 292, 293, 297, 302, 303, 304, 305, 320, 326, 344, 346, 348, 350, 352, 354, 356, 358, 360, 398, 407, 414, 418, 424, 426, 428, 439, 441, 447, 448, 457, 458, 459, 461, 476, 477, 487, 488, 494, 499, 501, 509, 511, 519, 536, 537, 554], "algorithm_": 299, "algorithma": 98, "algorithmbeam_model": 146, "algorithminclud": [138, 139, 140], "algorithmon_effective_size_drop": 144, "algorithmrai": 98, "alia": [40, 107, 127, 260, 283, 300, 312, 445, 446, 462, 467], "alias": 315, "align": [84, 88], "alignedbox2d": [27, 85, 120, 206, 208, 220, 222, 235, 258, 259, 260, 267], "alignedbox3d": [27, 89, 120, 206, 208, 220, 222, 235, 240, 241, 243, 258, 259, 260, 267], "alik": 5, "aliv": 554, "all": [4, 5, 6, 20, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 153, 179, 184, 186, 188, 189, 190, 191, 192, 195, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 234, 235, 236, 244, 245, 248, 249, 252, 260, 261, 264, 267, 268, 270, 281, 282, 283, 294, 297, 298, 299, 305, 306, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 441, 442, 448, 449, 456, 457, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 483, 487, 489, 497, 498, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 517, 525, 527, 529, 530, 531, 535, 537, 538, 539, 540, 541, 543, 544, 553, 554], "all_quaternion": 179, "alloc": [3, 27, 65, 107, 109, 174, 235, 257, 260, 267, 447, 448], "allocator_typ": [41, 65, 66, 107, 108, 186, 228, 448], "allocator_typealloc": [41, 448], "allocator_typevoid": [41, 448], "allof": 309, "allow": [14, 25, 27, 92, 122, 158, 178, 184, 235, 260, 267, 271, 314, 315, 407, 458, 492, 493, 495, 503, 538], "almost": 554, "almost_equal_to": [507, 512, 514, 516, 518, 536, 537, 543, 544], "almost_equal_toalmost_equal_to": 537, "almost_equal_tostd": 537, "alon": [536, 537], "along": [13, 98, 299, 495, 538, 554], "alpha": [69, 70, 183, 536, 537], "alpha1": [328, 342, 493], "alpha2": [328, 342, 493], "alpha3": [328, 342, 493], "alpha4": [328, 342, 493], "alpha5": [342, 493], "alpha_": 183, "alpha_fast": [26, 104, 105, 186, 231, 320, 444, 495, 512, 516, 538], "alpha_fastbeluga": 321, "alpha_fastbeluga_ro": 539, "alpha_fastdecai": 104, "alpha_fastdoubl": [26, 495], "alpha_fastexponenti": 495, "alpha_fastus": 26, "alpha_slow": [26, 104, 105, 186, 231, 320, 444, 495, 512, 516, 538], "alpha_slowbeluga": 321, "alpha_slowbeluga_ro": 539, "alpha_slowdecai": 104, "alpha_slowdoubl": [26, 495], "alpha_slowexponenti": 495, "alpha_slowus": 26, "alphabet": [235, 484, 518], "alphahuetorgba": [536, 537], "alphahuetorgbabeluga_ro": 537, "alphath": 69, "alreadi": [6, 34, 122, 245, 249, 260, 291], "also": [5, 16, 17, 19, 21, 43, 55, 77, 122, 260, 304, 328, 342, 352, 465, 467, 471, 492, 493, 501, 553, 554], "altern": [5, 6, 18], "alwai": [29, 41, 260, 403, 424, 435, 438, 456], "always_reset_initial_pos": [492, 493], "amcl": [1, 6, 11, 26, 27, 32, 44, 120, 186, 195, 196, 201, 204, 209, 213, 217, 223, 229, 235, 249, 260, 267, 320, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 499, 502, 507, 509, 511, 512, 514, 515, 518, 519, 522, 523, 525, 530, 534, 537, 538, 554], "amcl_cor": [43, 184, 320, 487, 488], "amcl_nod": [465, 476, 477, 492, 493], "amcl_nodelet": [467, 476, 477], "amcl_pos": 492, "amclamcl": [26, 495], "amclconfig": [461, 462, 467, 468], "amclconfigserv": [462, 467, 468, 478, 481], "amclconfigserverdynamic_reconfigur": 462, "amclconfigservertyp": 462, "amcldefinit": 495, "amclimplement": 26, "amclinlin": 502, "amclnod": [459, 460, 466, 473, 478, 480, 482, 485], "amclnode2d": [460, 484], "amclnodeamclnod": 460, "amclnodeexplicit": 466, "amclnodelet": [461, 462, 468, 473, 478, 480, 481, 482, 485], "amclnodelet2d": [462, 484], "amclnodeletmutableprotect": 468, "amclnodeletprotect": 468, "amclnodeletprotectedstat": 468, "amclnodeprotect": 466, "amclnodeprotectedstat": 466, "amclnodeprotectedvirtu": 466, "amclparam": [26, 43, 44, 120, 186, 218, 220, 224, 226, 229, 231, 260, 321, 494, 495, 501, 502, 507, 512, 516, 525, 539], "amclparamsstruct": [26, 235, 495, 518], "american": 42, "among": [553, 554], "amount": [314, 403], "amp": [12, 26, 27, 30, 32, 34, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 126, 128, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 208, 211, 222, 224, 225, 226, 228, 235, 238, 243, 245, 247, 249, 251, 255, 256, 257, 258, 259, 260, 261, 263, 267, 269, 270, 272, 274, 276, 278, 280, 288, 290, 291, 293, 297, 299, 301, 303, 305, 308, 309, 310, 311, 313, 314, 315, 317, 319, 326, 327, 338, 339, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 439, 441, 444, 445, 446, 447, 448, 451, 453, 457, 460, 462, 465, 466, 467, 468, 469, 470, 471, 472, 488, 490, 495, 501, 502, 503, 505, 506, 522, 523, 524, 525, 532, 534, 536, 537, 543, 544, 545, 546, 547, 548], "amplitud": 249, "an": [2, 3, 4, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 40, 41, 43, 53, 55, 61, 65, 69, 71, 77, 79, 90, 92, 94, 98, 104, 107, 116, 118, 122, 124, 126, 128, 152, 158, 163, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 234, 235, 236, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 304, 305, 307, 308, 309, 311, 313, 315, 317, 319, 336, 342, 346, 348, 350, 363, 368, 390, 392, 396, 408, 422, 424, 430, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 453, 455, 457, 460, 462, 465, 467, 471, 483, 488, 490, 492, 493, 495, 499, 501, 517, 522, 523, 524, 532, 534, 536, 537, 540, 545, 546, 547, 548, 553, 554], "analyz": 41, "andino": [6, 11], "andom_interspers": [297, 414], "angl": [14, 34, 47, 114, 245, 247, 260, 279, 401, 503, 504, 512, 514, 522], "angle_incr": 522, "angle_min": 522, "anglesauto": 522, "anglez": 12, "angular": [26, 114, 122, 315, 320, 344], "angular_clustering_resolut": [112, 113, 114, 115, 315], "angular_clustering_resolutionclust": [112, 114], "angular_hash_resolut": [122, 186, 231, 344], "angular_hash_resolutionbeluga": 345, "angular_hash_resolutionclust": 122, "angular_hash_resolutiondoubl": 122, "angular_resolut": [512, 516, 525, 536, 537, 543], "angular_resolutionangular": 525, "angular_resolutionbeluga_ro": 544, "angular_resolutionconst": 537, "angular_resolutionresolut": 537, "ani": [2, 4, 6, 12, 19, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 43, 71, 98, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 235, 237, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 267, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 304, 305, 307, 309, 311, 313, 315, 317, 319, 320, 344, 403, 418, 420, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 465, 467, 471, 488, 490, 492, 493, 495, 499, 522, 523, 534, 537, 546, 548, 554], "anim": 554, "anoth": [16, 41, 65, 71, 79, 234, 238, 257, 483, 517], "any_of": 554, "any_polici": [26, 260, 261, 265, 288, 495], "any_view": [26, 451], "anyth": 1, "apach": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "apertur": [34, 245], "api": [2, 26, 28, 35, 100, 153, 179, 184, 187, 190, 202, 236, 264, 268, 464, 479, 485, 497, 498, 499, 509, 511, 513, 519, 529, 531, 537, 545, 547], "append": [29, 107], "appli": [3, 43, 175, 236, 245, 260, 348, 352, 356, 403, 448, 451, 492, 493, 501, 553, 554], "applic": [1, 3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 458, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "approach": [6, 255], "appropri": [2, 3, 260], "approxim": [2, 4, 255, 260, 344, 492, 493, 538], "apt": 5, "ar": [1, 2, 4, 5, 6, 13, 15, 17, 18, 19, 27, 29, 34, 41, 43, 51, 55, 57, 65, 73, 75, 77, 79, 81, 90, 96, 98, 102, 107, 121, 122, 179, 234, 236, 245, 260, 270, 293, 302, 340, 352, 424, 435, 438, 439, 448, 456, 463, 483, 492, 493, 496, 501, 517, 537, 550, 553, 554], "area": 73, "arg": [5, 27, 34, 39, 57, 120, 227, 228, 235, 260, 267, 288, 366, 403, 404, 445, 446], "argument": [6, 19, 39, 43, 92, 98, 107, 260, 272, 293, 303, 304, 305, 308, 348, 350, 352, 354, 356, 358, 403, 414, 416, 420], "arithmet": [19, 21, 27, 37, 38, 59, 92, 235, 260, 267], "around": [90, 102, 249, 260, 304, 336, 492, 493, 495, 538, 553], "arra": [41, 65], "arrai": [26, 27, 38, 40, 41, 65, 116, 118, 119, 120, 122, 124, 155, 175, 184, 208, 211, 222, 224, 226, 228, 235, 236, 257, 260, 267, 270, 301, 314, 315, 435, 437, 446, 458, 505, 525, 532, 534, 547, 548], "arrayarrai": 118, "arrow": [63, 234, 483, 493, 517, 537], "arrow_bodi": 537, "arrow_body_bas": 537, "arrow_head": 537, "arrow_head_bas": 537, "arrow_head_left_corn": 537, "arrow_head_right_corn": 537, "arrow_head_tip": 537, "arxiv": 260, "as_common_tuple_indirect_fn": [120, 208, 222, 413, 456, 457], "as_common_tuple_indirect_fninlin": 413, "as_common_tuple_indirect_fnutil": [235, 457], "as_const": 185, "asap": 122, "asdiagon": 257, "assert": [122, 179, 249, 259, 270, 305, 313, 444, 451, 453, 457, 522], "assert_that": 308, "asset": 315, "assign": [4, 22, 23, 26, 27, 39, 59, 65, 79, 107, 108, 122, 161, 184, 186, 196, 235, 236, 257, 267, 346, 448, 495, 525, 536, 537, 554], "assign_clust": 122, "assign_fn": [29, 30, 120, 208, 222, 225, 347], "assign_fnfriend": 347, "assign_fnimplement": [30, 235], "assign_fninlin": 347, "assign_particle_cloud": [525, 527, 528, 536, 537], "assign_particle_cloudbeluga_ro": 537, "assign_rang": [107, 108, 186, 196, 448], "assign_rangeconstexpr": 448, "assignconstexpr": [30, 448], "assigndefinit": 30, "assoaci": [32, 322], "associ": [32, 42, 79, 100, 121, 257, 313, 322], "assum": [6, 34, 245, 260, 304, 305, 338, 408, 418, 426, 441, 492, 493, 536, 540], "assumpt": 554, "atan": 537, "atan2": [34, 128, 245, 276], "atconstexpr": 41, "attach": [492, 493], "attribut": [292, 320, 322, 324, 328, 330, 332, 334, 336, 338, 340, 342, 344, 360, 382, 394, 414, 465, 467, 469, 471, 538, 540, 543], "auto": [26, 30, 32, 34, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 67, 75, 77, 81, 90, 94, 96, 98, 100, 102, 107, 110, 121, 122, 126, 128, 170, 171, 172, 173, 175, 176, 179, 181, 185, 243, 245, 247, 249, 251, 257, 260, 270, 272, 274, 276, 278, 280, 283, 284, 285, 288, 290, 293, 297, 299, 301, 303, 305, 308, 309, 311, 313, 315, 317, 346, 348, 350, 352, 354, 356, 358, 370, 390, 394, 396, 403, 405, 408, 412, 414, 418, 420, 424, 426, 428, 430, 439, 440, 441, 445, 446, 448, 451, 457, 460, 462, 465, 467, 471, 488, 495, 501, 503, 505, 522, 523, 534, 537, 548, 554], "autocovari": 179, "automat": 260, "autonom": [42, 500, 550], "autostart": [465, 469, 471, 490, 493], "autostart_callback": [465, 466, 469, 470, 471, 472, 478, 480, 490], "autostart_callbackvoid": 490, "autostart_delai": 493, "autostart_timer_": [465, 469, 471, 478, 482, 490], "autostart_timer_beluga_amcl": [466, 470, 472], "autostart_timer_rclcpp": 490, "autostart_timer_tim": 490, "auxiliar": [164, 240], "avail": [5, 6, 65, 86, 260, 492, 493], "averag": [104, 178, 179, 260, 360, 492, 493, 495, 538], "average_quat": 179, "average_weight": 444, "avoid": [3, 41, 104, 315, 446, 492, 493, 495, 538, 554], "axi": [12, 13, 45, 51, 84, 88, 112, 114, 116, 118, 128, 251, 260, 315, 495, 538], "a\u017eman": 39, "b": [28, 38, 39, 40, 41, 120, 187, 188, 190, 197, 202, 231, 243, 260, 261, 473, 478, 480, 482, 537, 543, 544], "ba": 495, "back": [41, 65, 66, 188, 197, 260, 448], "back_insert": 448, "backconstexpr": 41, "backward": [128, 276], "bad": [448, 492, 493, 538], "bag": 6, "bar": 554, "bare": 3, "base": [4, 25, 26, 27, 33, 39, 43, 45, 47, 49, 51, 53, 86, 96, 104, 112, 114, 121, 122, 125, 126, 152, 158, 179, 180, 184, 235, 236, 244, 246, 247, 250, 251, 259, 260, 267, 273, 274, 276, 277, 278, 279, 280, 287, 288, 292, 296, 300, 301, 313, 363, 396, 398, 401, 405, 440, 441, 444, 446, 448, 453, 458, 465, 469, 471, 490, 491, 492, 493, 495, 501, 536, 537, 554], "base_footprint": [492, 493], "base_frame_id": [492, 493], "base_pose_in_odom": [495, 501, 502], "base_pose_in_odombas": 501, "baseamclnod": [460, 465, 466, 470, 471, 472, 473, 478, 480, 482, 484, 488, 490], "baseamclnodebaseamclnod": 490, "baseamclnodedefinit": [460, 488, 490], "baseamclnodeexplicit": [466, 470, 472], "baseamclnodeinlineprotectedvirtu": [466, 470, 472], "baseamclnodeprotect": [466, 470, 472], "basedensegrid2": [46, 49, 50, 51, 52, 110, 111, 120, 125, 126, 189, 191, 198, 199, 207, 221, 235, 251, 260, 505, 506, 518], "basedensegrid2dens": [126, 251], "baselaserscan": [2, 48, 120, 209, 223, 235, 246, 247, 260, 503, 504, 518, 519, 522], "baselaserscanlas": 247, "baselineargrid2": [50, 51, 52, 110, 111, 120, 189, 191, 198, 199, 204, 207, 217, 221, 235, 250, 251, 260, 274, 453, 505, 506, 518], "baselineargrid2linear": [251, 274, 453], "baseoccupancygrid2": [2, 52, 120, 189, 193, 195, 198, 201, 208, 222, 235, 258, 259, 260, 273, 274, 505, 506, 518, 519, 534], "baseoccupancygrid2occup": [259, 274], "baseregulargrid": [45, 46, 49, 50, 51, 52, 54, 100, 101, 110, 111, 120, 189, 198, 235, 260, 300, 301, 313, 505, 506, 518], "baseregulargrid2": [126, 260, 261, 265, 300, 301], "baseregulargrid3": [260, 261, 265, 300, 301], "baseregulargridregularli": [126, 301, 313], "bash": [5, 553], "basi": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 458, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "basic": [73, 242, 260, 469], "bay": 4, "bayesian": [1, 4, 42], "beam": [14, 31, 32, 55, 75, 159, 184, 235, 236, 245, 260, 307, 322, 458, 492, 493, 503], "beam_bear": 32, "beam_max_rang": [32, 188, 231, 322], "beam_max_rangebeluga": 323, "beam_max_rangedoubl": 32, "beam_max_rangemaximum": 32, "beam_model": [55, 159, 184, 306, 307, 322], "beam_skip_dist": 493, "beam_skip_error_threshold": 493, "beam_skip_threshold": 493, "beammodelparam": [31, 32, 55, 75, 120, 188, 219, 226, 231, 233, 260, 323], "beammodelparamparamet": [32, 235], "beamsensormodel": [21, 27, 31, 32, 56, 77, 120, 188, 197, 208, 213, 220, 222, 223, 226, 228, 229, 232, 235, 236, 260, 267, 322, 495, 501], "beamsensormodelbeam": 32, "beamsensormodelbeamsensormodel": 32, "bear": [27, 32, 33, 34, 57, 73, 75, 98, 99, 159, 184, 235, 236, 240, 241, 243, 245, 260, 267, 299, 307, 324, 330, 332, 334, 458], "bearing_error": [34, 245], "bearing_error_prob": [34, 245], "bearing_sensor_model": [57, 159, 184, 306, 307, 324], "bearingdirect": 98, "bearingmodelparam": [33, 34, 57, 120, 226, 231, 260, 325], "bearingmodelparamparamet": [34, 235], "bearingsensormodel": [21, 27, 33, 34, 58, 120, 188, 197, 208, 213, 220, 222, 223, 226, 228, 229, 232, 235, 236, 260, 267, 324], "bearingsensormodel2d": [33, 34, 260, 261, 265], "bearingsensormodel3d": [33, 34, 260, 261, 265], "bearingsensormodelbearingsensormodel": 34, "bearingsensormodelgener": 34, "becam": 1, "becaus": [1, 29, 55, 77, 107, 234, 245, 249, 270, 439, 483, 503, 517, 537, 554], "becom": 1, "been": [3, 75, 280, 398, 401, 493], "befor": [5, 71, 122, 238, 308, 445, 448, 492, 493, 495, 537, 538, 554], "begin": [4, 38, 41, 61, 62, 65, 66, 107, 108, 122, 179, 188, 197, 243, 272, 293, 303, 305, 448, 451, 554], "begin_adaptor": 297, "begin_cursor": 305, "beginauto": 38, "beginconstexpr": [41, 448], "behav": [40, 260], "behavior": [55, 65, 71, 107], "being": [4, 19, 34, 65, 243, 260, 336, 440, 441], "bel": [4, 554], "belief": [4, 260], "belong": [121, 122, 260, 261, 527], "below": [236, 260, 277, 493], "beluga": [0, 1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 154, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 261, 262, 263, 264, 265, 266, 267, 268, 281, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 486, 489, 491, 492, 493, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 549], "beluga_3d_embedding_hpp": 12, "beluga_actions_assign_hpp": 30, "beluga_actions_hpp": 23, "beluga_actions_normalize_hpp": 272, "beluga_actions_propagate_hpp": 293, "beluga_actions_reweight_hpp": 303, "beluga_algorithm_amcl_core_hpp": 26, "beluga_algorithm_cluster_based_estimation_hpp": 122, "beluga_algorithm_distance_map_hpp": 171, "beluga_algorithm_effective_sample_size_hpp": 173, "beluga_algorithm_estimation_hpp": 179, "beluga_algorithm_exponential_filter_hpp": 183, "beluga_algorithm_hpp": 25, "beluga_algorithm_raycasting_bresenham_hpp": 38, "beluga_algorithm_raycasting_hpp": 299, "beluga_algorithm_spatial_hash_hpp": 315, "beluga_algorithm_thrun_recovery_probability_estimator_hpp": 444, "beluga_algorithm_unscented_transform_hpp": 451, "beluga_amcl": [5, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 480, 481, 482, 485, 553], "beluga_amcl_amcl_node_hpp": 460, "beluga_amcl_amcl_nodelet_hpp": 462, "beluga_amcl_ndt_amcl_node_hpp": 488, "beluga_amcl_ros2_common_hpp": 490, "beluga_amclamclnod": [465, 466], "beluga_amclamclnodelet": [467, 468], "beluga_amclbaseamclnod": [469, 470], "beluga_amclndtamclnod": [471, 472], "beluga_beluga_hpp": 36, "beluga_containers_circular_array_hpp": 41, "beluga_containers_hpp": 124, "beluga_containers_tuple_vector_hpp": 448, "beluga_demo_nav2_launch": 553, "beluga_demo_w": 553, "beluga_eigen_compatibility_hpp": 174, "beluga_exampl": [5, 6], "beluga_motion_differential_drive_model_hpp": 128, "beluga_motion_hpp": 253, "beluga_motion_omnidirectional_drive_model_hpp": 276, "beluga_motion_stationary_model_hpp": 317, "beluga_policies_every_n_hpp": 181, "beluga_policies_hpp": 287, "beluga_policies_on_effective_size_drop_hpp": 278, "beluga_policies_on_motion_hpp": 280, "beluga_policies_policy_hpp": 288, "beluga_primitives_hpp": 290, "beluga_prologue_includ": [177, 291], "beluga_random_hpp": 295, "beluga_random_multivariate_distribution_traits_hpp": 255, "beluga_random_multivariate_normal_distribution_hpp": 257, "beluga_random_multivariate_uniform_distribution_hpp": 259, "beluga_ro": [2, 5, 459, 460, 461, 462, 465, 466, 467, 468, 487, 488, 490, 501, 502, 503, 504, 505, 506, 507, 511, 512, 514, 515, 516, 519, 524, 526, 527, 528, 532, 538, 539, 540, 541, 542, 543, 544], "beluga_ros_amcl_hpp": 495, "beluga_ros_beluga_ros_hpp": 499, "beluga_ros_laser_scan_hpp": 522, "beluga_ros_messages_hpp": 523, "beluga_ros_occupancy_grid_hpp": 534, "beluga_ros_particle_cloud_hpp": 537, "beluga_ros_tf2_eigen_hpp": 546, "beluga_ros_tf2_sophus_hpp": 548, "beluga_ros_vers": [523, 534, 546, 548], "beluga_rosamcl": [501, 502], "beluga_rosamclparam": [538, 539], "beluga_rosdetailalmost_equal_to": [542, 543, 544], "beluga_roslaserscan": [503, 504], "beluga_rosmsg": 526, "beluga_rosoccupancygrid": [505, 506], "beluga_rosoccupancygridvaluetrait": [540, 541], "beluga_rosth": [495, 522, 523, 534, 537], "beluga_sensor_beam_model_hpp": 32, "beluga_sensor_bearing_sensor_model_hpp": 34, "beluga_sensor_data_dense_grid_hpp": 126, "beluga_sensor_data_landmark_map_hpp": 243, "beluga_sensor_data_laser_scan_hpp": 247, "beluga_sensor_data_linear_grid_hpp": 251, "beluga_sensor_data_ndt_cell_hpp": 269, "beluga_sensor_data_occupancy_grid_hpp": 274, "beluga_sensor_data_regular_grid_hpp": 301, "beluga_sensor_data_sparse_value_grid_hpp": 313, "beluga_sensor_data_value_grid_hpp": 453, "beluga_sensor_hpp": 307, "beluga_sensor_landmark_sensor_model_hpp": 245, "beluga_sensor_likelihood_field_model_hpp": 249, "beluga_sensor_ndt_sensor_model_hpp": 270, "beluga_testing_hpp": 443, "beluga_testing_sophus_matchers_hpp": 309, "beluga_testing_sophus_printers_hpp": 311, "beluga_tutori": 554, "beluga_type_traits_hpp": 450, "beluga_type_traits_particle_traits_hpp": 283, "beluga_type_traits_strongly_typed_numeric_hpp": 319, "beluga_type_traits_tuple_traits_hpp": 446, "beluga_types_landmark_detection_types_hpp": 241, "beluga_utility_forward_like_hpp": 185, "beluga_utility_indexing_iterator_hpp": 238, "beluga_views_elements_hpp": 176, "beluga_views_hpp": 455, "beluga_views_particles_hpp": 285, "beluga_views_random_intersperse_hpp": 297, "beluga_views_sample_hpp": 305, "beluga_views_take_evenly_hpp": 439, "beluga_views_take_while_kld_hpp": 441, "beluga_views_zip_hpp": 457, "belugaactionsdetailassign_fn": [346, 347], "belugaactionsdetailnormalize_base_fn": [348, 349], "belugaactionsdetailnormalize_fn": [350, 351], "belugaactionsdetailpropagate_base_fn": [352, 353], "belugaactionsdetailpropagate_fn": [354, 355], "belugaactionsdetailreweight_base_fn": [356, 357], "belugaactionsdetailreweight_fn": [358, 359], "belugaamcl": [43, 44], "belugaamclparam": [320, 321], "belugabasedensegrid2": [45, 46], "belugabaselaserscan": [47, 48], "belugabaselineargrid2": [49, 50], "belugabaseoccupancygrid2": [51, 52], "belugabaseregulargrid": [53, 54], "belugabeammodelparam": [322, 323], "belugabeamsensormodel": [55, 56], "belugabearingmodelparam": [324, 325], "belugabearingsensormodel": [57, 58], "belugabresenham2i": [59, 60], "belugabresenham2ilin": [61, 62], "belugabresenham2ilineiter": [63, 64], "belugabresenham2ilineiteratorsentinel": [326, 327], "belugacirculararrai": [65, 66], "belugaclusterizer_detailclustercel": [360, 361], "belugacommon_tuple_typ": [362, 363, 364], "belugadecay_tuple_lik": [365, 366, 367], "belugadetailcellhash": [368, 369], "belugadetailmake_from_state_fn": [370, 371], "belugadifferentialdrivemodel": [67, 68], "belugadifferentialdrivemodelparam": [328, 329], "belugaexponentialfilt": [69, 70], "belugahas_common_tuple_typ": [372, 373], "belugahas_single_el": [374, 375], "belugainclud": [129, 130, 131, 132, 133, 134, 135], "belugaindexingiter": [71, 72], "belugais_tuple_lik": 376, "belugalandmarkbearingdetect": [330, 331], "belugalandmarkmap": [73, 74], "belugalandmarkmodelparam": [332, 333], "belugalandmarkpositiondetect": [334, 335], "belugalandmarksensormodel": [75, 76], "belugalikelihoodfieldmodel": [77, 78], "belugalikelihoodfieldmodelparam": [336, 337], "belugamultivariate_distribution_trait": [377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "belugamultivariatenormaldistribut": [79, 80], "belugamultivariatenormaldistributionparam": [81, 82], "belugamultivariateuniformdistribut": [83, 84, 85, 86, 87, 88, 89], "belugandtcel": [338, 339], "belugandtmodelparam": [340, 341], "belugandtsensormodel": [90, 91], "beluganumer": [92, 93], "belugaomnidirectionaldrivemodel": [94, 95], "belugaomnidirectionaldrivemodelparam": [342, 343], "belugaparticle_trait": [388, 389], "belugaparticlecluster": [96, 97], "belugaparticleclusterizerparam": [344, 345], "belugapolici": [403, 404], "belugapoliciesdetailevery_n_fn": [390, 391], "belugapoliciesdetailevery_n_polici": [392, 393], "belugapoliciesdetailon_effective_size_drop_polici": [394, 395], "belugapoliciesdetailon_motion_fn": [396, 397], "belugapoliciesdetailon_motion_polici": [398, 399], "belugapoliciesdetailon_motion_policy_bas": [400, 401, 402], "belugapolicy_bas": [405, 406], "belugaray2d": [98, 99], "belugasparsevaluegrid": [100, 101], "belugaspatial_hash": [112, 113, 114, 115, 116, 117, 118, 119, 407], "belugastate_detailstate_fn": [408, 409], "belugastationarymodel": [102, 103], "belugath": [12, 26, 32, 34, 38, 41, 122, 126, 128, 171, 173, 179, 183, 185, 238, 241, 243, 245, 247, 249, 251, 255, 257, 259, 269, 270, 274, 276, 283, 288, 290, 299, 301, 313, 315, 317, 319, 441, 444, 446, 448, 451, 453], "belugathrunrecoveryprobabilityestim": [104, 105], "belugatuple_index": [410, 411], "belugatuplecontain": [106, 107, 108], "belugatuplevector": 109, "belugavaluegrid2": [110, 111], "belugaviewsdetailas_common_tuple_indirect_fn": [412, 413], "belugaviewsdetailrandom_intersperse_fn": [414, 415], "belugaviewsdetailrandom_intersperse_view": [416, 417], "belugaviewsdetailsample_base_fn": [418, 419], "belugaviewsdetailsample_fn": [420, 421], "belugaviewsdetailsample_view": [422, 423], "belugaviewsdetailtake_evenly_fn": [424, 425], "belugaviewsdetailtake_while_kld_fn": [426, 427], "belugaviewsdetailzip_fn": [428, 429], "belugaweight_detailweight_fn": [430, 431], "benchmark_likelihood_field_model": 249, "berkelei": 315, "bernoulli_distribut": 297, "best": [5, 6, 458], "better": [77, 107, 553], "between": [26, 34, 65, 71, 104, 121, 122, 234, 236, 238, 245, 260, 296, 315, 320, 328, 342, 414, 483, 492, 493, 495, 517, 538, 554], "beyond": 554, "bibliographi": [281, 535], "bin_weight": 537, "binari": 3, "bind": [278, 394], "bind_back": [29, 30, 272, 278, 293, 296, 297, 303, 305, 439, 441], "bit": [79, 81, 314, 315], "bitwis": [40, 41, 260], "black": [234, 483, 517], "blackwel": [42, 500, 550], "blob": [107, 179], "blue": [234, 483, 517, 554], "bodi": [1, 537], "bolic": 42, "bond": [459, 460, 465, 469, 471, 487, 488, 490, 493], "bond_": [465, 469, 471, 478, 482, 490], "bond_beluga_amcl": [466, 470, 472], "bond_nod": 490, "bond_std": 490, "bondcpp": [459, 460, 487, 488, 490], "book": 550, "bool": [17, 26, 30, 38, 40, 41, 45, 49, 51, 63, 65, 71, 79, 81, 107, 110, 122, 126, 171, 181, 185, 238, 257, 260, 274, 278, 280, 283, 288, 290, 297, 305, 320, 326, 392, 394, 398, 401, 403, 404, 445, 446, 448, 460, 462, 465, 467, 471, 488, 495, 505, 534, 537, 538, 540, 543], "boolean": [51, 236, 274, 403, 492, 493], "boost": 368, "bootstrap": [4, 11, 554], "border": [234, 483, 517], "borrow": [55, 57, 75, 77, 90], "both": [6, 18, 27, 32, 33, 34, 57, 61, 65, 75, 92, 179, 235, 236, 244, 245, 249, 260, 267, 269, 332, 338, 403, 456, 491, 492, 536, 537, 553], "bound": [27, 55, 57, 75, 77, 84, 88, 90, 235, 258, 259, 260, 267, 352, 462, 467], "boundari": [73, 74, 234, 240, 243, 260, 483, 517, 554], "boundarieslimit": 73, "box": [3, 84, 85, 88, 89, 234, 259, 483, 517], "boxth": [84, 88], "break": 554, "bresenham": [59, 61, 63, 169, 184, 235, 260, 298, 299, 326], "bresenham2i": [37, 38, 60, 61, 62, 63, 64, 98, 120, 188, 191, 192, 193, 194, 197, 200, 204, 205, 208, 217, 218, 219, 222, 223, 224, 228, 230, 235, 260, 299, 326, 327], "bresenham2ibresenham": [38, 235], "bresenham2ibresenham2i": 38, "bresenham2iinlin": 60, "bresenham2iinlineexplicit": 60, "bridg": 2, "brief": [27, 184, 267, 463, 477, 496, 511, 530], "bright": [493, 537], "bringup_launch": 553, "broadcast": [460, 462, 465, 467, 469, 471, 488, 490], "broader": 4, "browser": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547], "bucket": [441, 492, 493, 495, 538], "buffer": [459, 460, 461, 462, 465, 467, 469, 471, 487, 488, 490], "build": [1, 6, 491, 553, 554], "built": [5, 458, 492, 493, 553], "burgard": [42, 500, 550], "burn": 3, "byu": 260, "c": [2, 28, 41, 120, 122, 151, 175, 184, 187, 189, 190, 198, 202, 228, 231, 236, 260, 261, 362, 439, 446, 455, 458, 478, 480, 482, 549, 554], "cach": [3, 107], "cache1": [121, 122, 438, 439], "calcul": [4, 25, 27, 32, 34, 57, 90, 112, 114, 116, 118, 121, 122, 158, 170, 172, 173, 178, 179, 184, 235, 243, 245, 249, 260, 267, 278, 314, 315, 336, 394, 407, 492, 493, 554], "calculate_covari": [178, 179, 260, 261, 263], "calculate_covariancesophu": 179, "calculate_percentile_threshold": [121, 122], "calculate_percentile_thresholdauto": 122, "calculate_weighted_sample_covari": 179, "call": [17, 26, 29, 43, 152, 180, 181, 184, 236, 287, 288, 392, 403, 426, 448, 532], "callab": 260, "callabl": [16, 21, 43, 67, 69, 94, 98, 102, 182, 235, 260, 304, 314, 352, 356, 407, 414, 416, 426, 440, 441], "callback": [460, 462, 465, 467, 469, 471, 488, 490], "callback_group": [487, 488], "callbackgroup": [465, 469, 471, 490], "callbackreturn": [460, 465, 469, 471, 490], "calmost_equal_to": [496, 530], "calmost_equal_tostd": [496, 530], "cambridg": [42, 500, 550], "camcl": [496, 530], "camclimplement": [27, 267], "camclnode2d": 463, "camclnodelet2d": 463, "camclparamsstruct": [27, 267, 496, 530], "can": [1, 2, 3, 4, 5, 6, 13, 18, 20, 26, 29, 34, 43, 55, 57, 65, 71, 73, 75, 77, 107, 109, 122, 236, 245, 260, 271, 277, 278, 292, 302, 304, 308, 346, 356, 403, 408, 426, 430, 445, 448, 492, 493, 537, 553, 554], "candid": 537, "cannot": [41, 269], "canon": 532, "cap": [122, 344], "capabl": [43, 554], "capac": [107, 108, 189, 198, 448], "capacityconstexpr": 448, "caption": 4, "cardin": 297, "care": [3, 73, 304], "carlo": [1, 2, 11, 26, 27, 43, 235, 260, 267, 320, 458, 494, 495, 496, 499, 501, 509, 511, 518, 525, 530, 538, 554], "cartesian": [32, 47, 247], "cartograph": 6, "cas_common_tuple_indirect_fnutil": [27, 267], "case": [1, 3, 6, 29, 32, 34, 65, 73, 104, 179, 245, 260, 322, 448, 493, 537, 554], "cassert": 270, "cassign_fnimplement": [27, 267], "cast": [32, 98, 99, 189, 198, 270, 299, 301], "castabl": [98, 235, 260, 298], "caststd": 299, "categori": [34, 38, 63, 71, 73, 189, 231, 240, 241, 243, 245, 260, 330, 334], "categorybeluga": [331, 335], "categorycategori": 241, "categorylandmarkcategori": 241, "catkin_make_isol": 5, "caus": 4, "cbaseamclnod": 463, "cbasedensegrid2dens": [27, 267], "cbaselaserscanlas": [27, 267], "cbaselineargrid2linear": [27, 267], "cbaseoccupancygrid2occup": [27, 267], "cbaseregulargridregularli": [27, 267], "cbeammodelparamparamet": [27, 267], "cbeamsensormodelbeam": [27, 267], "cbearingmodelparamparamet": [27, 267], "cbearingsensormodelgener": [27, 267], "cbegin": [32, 34, 41, 65, 66, 189, 198, 245, 249, 270], "cbeginconstexpr": 41, "cbeluga": [235, 518], "cbeluga_amcl": 484, "cbeluga_ro": 518, "cbresenham2ibresenham": [27, 267], "ccellhash": [27, 267], "cciabatta": 235, "ccirculararrayan": [27, 267], "cclustercella": [27, 267], "ccommon_tuple_typ": [27, 267], "ccommon_tuple_typemeta": [27, 267], "cd": [553, 554], "cdecay_tuple_lik": [27, 267], "cdecay_tuple_likemeta": [27, 267], "cdecltyp": 235, "cdetail": 235, "cdifferentialdrivemodelparamparamet": [27, 267], "cdifferentialdrivemodelsampl": [27, 267], "ceil": 441, "cell": [13, 15, 17, 20, 27, 37, 38, 45, 46, 49, 50, 51, 52, 53, 54, 61, 63, 86, 90, 96, 98, 100, 101, 110, 111, 121, 122, 126, 170, 171, 235, 249, 251, 260, 267, 269, 270, 274, 299, 301, 313, 338, 339, 340, 344, 360, 453, 505, 506, 534, 540], "cell_at": 20, "cell_grid": 270, "cell_index": [100, 101, 313], "cell_is_valid": 299, "cell_near": [45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 126, 189, 198, 270, 274, 299, 301, 313, 505, 506], "cell_neareigen": [301, 313], "cell_posit": 299, "celldefinit": 122, "cellhash": [120, 208, 222, 235, 270, 369, 487, 488], "cellhasherdefinit": 270, "cells_data": [90, 91, 270], "cells_data_": 270, "cells_dataset": 270, "cells_dataspars": 90, "cells_matrix": 270, "cellsrang": [51, 53], "cend": [32, 34, 41, 65, 66, 189, 198, 245, 249, 270], "cendconstexpr": 41, "center": [102, 179, 249, 270, 336, 554], "centroid": [49, 53, 98], "certain": [236, 277], "certainti": 554, "cevery_n_fnimplement": [27, 267], "cevery_n_policyimplement": [27, 267], "cexponentialfiltercal": [27, 267], "chain_inherit": 39, "chang": [272, 493, 553, 554], "changelog": 39, "chapter": [55, 67, 75, 77, 104, 328, 336], "character": 260, "charg": [492, 493], "chas_common_tuple_typ": [27, 267], "chas_common_tuple_typemeta": [27, 267], "chas_single_el": [27, 267], "chas_single_elementmeta": [27, 267], "chash": [27, 267], "cheap": 304, "cheapli": 403, "check": [5, 13, 27, 40, 41, 45, 49, 51, 71, 107, 110, 122, 235, 260, 267, 372, 398, 400, 401, 445, 446, 534, 540, 553], "checks_": 38, "choic": 5, "choleski": 451, "chrome": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547], "chunk_bi": 122, "ciabatta": [184, 246, 247, 300, 301], "ciabatta_ciabatta_hpp": 39, "ciabatta_top": [39, 235, 247, 301], "cindexingiteratora": [27, 267], "circl": 179, "circuit": [288, 405], "circular": [26, 27, 40, 41, 65, 124, 155, 179, 184, 235, 236, 260, 267, 435, 437], "circular_arrai": [26, 38, 65, 123, 124, 155, 184, 435, 437], "circulararrai": [27, 38, 40, 41, 66, 120, 186, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 206, 208, 209, 210, 211, 217, 220, 222, 223, 224, 226, 227, 228, 230, 235, 236, 260, 267, 436, 495], "circulararrayan": [26, 41], "circulararraycirculararrai": 41, "circulararrayfeatureflag": [40, 41, 65, 260, 261, 262, 435, 437], "circulararrayfeatureflagscirculararrayfeatureflagsfeatur": 41, "circularli": [79, 257], "cis_tuple_likemeta": [27, 267], "citat": 179, "cite": 257, "citeratorbresenham": [27, 267], "clamp": 444, "clandmarkbearingdetectionlandmark": [27, 267], "clandmarkmapbas": [27, 267], "clandmarkmodelparamparamet": [27, 267], "clandmarkpositiondetectionlandmark": [27, 267], "clandmarksensormodelgener": [27, 267], "claserscanthin": [496, 530], "class": [2, 3, 26, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 121, 122, 125, 126, 127, 128, 170, 171, 172, 173, 178, 179, 180, 182, 183, 185, 234, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 288, 289, 290, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 346, 348, 350, 352, 354, 356, 358, 360, 367, 370, 375, 377, 378, 379, 382, 385, 387, 388, 394, 396, 398, 400, 401, 403, 405, 407, 408, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 438, 439, 440, 441, 444, 445, 446, 447, 448, 452, 453, 456, 457, 459, 460, 461, 462, 483, 487, 488, 490, 494, 495, 506, 517, 521, 522, 523, 524, 525, 532, 533, 534, 536, 537, 542, 545, 546, 547, 548], "classif": 42, "clear": [41, 65, 66, 107, 108, 189, 198, 448, 537], "clearconstexpr": 448, "clearvoid": 41, "client": [462, 467], "clikelihoodfieldmodellikelihood": [27, 267], "clikelihoodfieldmodelparamparamet": [27, 267], "clinebresenham": [27, 267], "close": [1, 34, 55, 179, 554], "closest": 245, "closur": [29, 30, 181, 236, 272, 280, 293, 297, 303, 305, 346, 348, 350, 352, 354, 356, 358, 390, 396, 414, 420, 424, 426, 439, 441, 554], "cloud": [32, 55, 77, 90, 249, 270, 460, 462, 465, 467, 469, 471, 488, 490, 499, 509, 511, 519, 525, 536, 537], "cluster": [25, 27, 96, 121, 122, 158, 184, 235, 260, 261, 265, 267, 289, 290, 344, 360], "cluster_based_estim": [24, 25, 96, 158, 184, 260, 261, 263, 344, 360], "cluster_based_estimateauto": 122, "cluster_id": [122, 189, 231, 360], "cluster_idbeluga": 361, "cluster_idclust": 122, "cluster_idstd": 122, "clustercel": [120, 121, 122, 189, 221, 224, 231, 232, 235, 361], "clustercella": 122, "clusterizer_detail": [120, 121, 122, 189, 221, 224, 231, 232, 235, 360, 361], "clustermap": [121, 122], "clustermapa": 122, "clustermapstd": 122, "clustersclust": 260, "clustertag": [260, 289, 290], "clutter": 55, "cmake": [5, 554], "cmake_from_state_fnfunct": [27, 267], "cmake_minimum_requir": 554, "cmakelist": 554, "cmath": [31, 32, 33, 34, 244, 245, 246, 247, 248, 249, 300, 301, 314, 315, 440, 441, 533, 534, 536, 537, 554], "cmultivariate_distribution_trait": [27, 267], "cmultivariate_distribution_traitsforward": [27, 267], "cmultivariatenormaldistributionmultivari": [27, 267], "cmultivariatenormaldistributionparammultivari": [27, 267], "cmultivariateuniformdistribut": [27, 267], "cmultivariateuniformdistributionprimari": [27, 267], "cndtamclnode2d": 463, "cndtcellrepresent": [27, 267], "cndtmodelparamparamet": [27, 267], "cndtsensormodelndt": [27, 267], "cnodelet": 484, "cnormalize_base_fnimplement": [27, 267], "cnormalize_fnimplement": [27, 267], "cnumeric_limit": [27, 235, 267], "cnumerichelp": [27, 267], "co": [247, 548], "coccupancygridthin": [496, 530], "code": [1, 3, 11, 22, 24, 29, 31, 33, 35, 37, 40, 121, 123, 125, 127, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 175, 178, 180, 182, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 368, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 476, 487, 494, 498, 509, 521, 533, 536, 545, 547, 554], "coeff": [179, 548], "coeffici": [179, 311], "coeffref": [179, 548], "cognit": 3, "coincid": 493, "col": [179, 270, 310, 311, 451], "colcon": [5, 553], "collabor": [0, 45, 47, 49, 51, 53, 61, 100, 109, 110, 350, 354, 358, 372, 373, 374, 375, 376, 398, 403, 411, 416, 420, 422, 434, 437, 465, 467, 469, 471, 503, 505], "collect": [2, 4], "color": [493, 536, 537], "color_rgba": 523, "colorrgba": [523, 536, 537], "colsatcompiletim": [255, 257, 382, 451], "colsth": 310, "column": [255, 257, 310, 451], "colwis": 270, "com": [0, 5, 32, 107, 122, 179, 249, 260, 362, 376, 408, 430, 537, 550, 553], "combin": [40, 41, 249, 260, 336, 458, 487, 488, 537], "come": [2, 7, 8, 9, 10, 551, 552], "command": [6, 553, 554], "comment": [234, 483, 517], "commerci": 0, "common": [4, 27, 122, 178, 179, 235, 260, 267, 269, 270, 271, 272, 282, 292, 293, 302, 303, 304, 305, 362, 363, 372, 373, 388, 441, 445, 446, 448, 451, 465, 469, 471], "common_callback_group_": [465, 469, 471, 478, 482, 490], "common_callback_group_beluga_amcl": [466, 470, 472], "common_callback_group_common": 490, "common_callback_group_rclcpp": 490, "common_subscription_options_": [465, 469, 471, 478, 482, 490], "common_subscription_options_beluga_amcl": [466, 470, 472], "common_subscription_options_common": 490, "common_subscription_options_rclcpp": 490, "common_tupl": [107, 448, 457], "common_tuple_typ": [27, 120, 227, 228, 235, 260, 267, 363, 364, 445, 446], "common_tuple_type_t": [27, 67, 94, 102, 120, 128, 235, 260, 261, 265, 267, 276, 317, 445, 446], "common_tuple_type_tconveni": 446, "common_tuple_type_ttypenam": 446, "common_tuple_typemeta": 446, "common_typ": 362, "common_type_t": [297, 363, 446], "common_types_t": 362, "commun": [492, 493], "comnidirectionaldrivemodelparamparamet": [27, 267], "comnidirectionaldrivemodelsampl": [27, 267], "compar": [4, 79, 81, 171, 260, 308, 445, 448, 543], "compat": [6, 79, 122, 236, 257, 458, 485, 491, 519, 525, 526, 553], "compil": [3, 65, 297, 315], "complet": [4, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 105, 108, 111, 113, 115, 117, 119, 235, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 364, 366, 369, 371, 380, 381, 383, 384, 386, 389, 391, 393, 395, 397, 399, 402, 404, 406, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 436, 466, 468, 470, 472, 484, 502, 504, 506, 518, 539, 541, 544], "complex": [3, 4, 65, 179, 315, 554], "complianc": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "compliant": 43, "compon": [2, 75, 114, 179, 236, 485, 519, 553], "compos": [3, 26, 39, 236, 272, 283, 293, 297, 303, 348, 350, 352, 354, 356, 358, 403, 414, 424, 426, 439, 441, 458, 459, 460, 463, 465, 471, 484, 485, 487, 488, 492, 493, 495, 553], "composit": [30, 346], "comput": [3, 4, 13, 15, 27, 32, 41, 43, 45, 49, 51, 53, 55, 57, 59, 67, 71, 73, 75, 77, 86, 94, 96, 98, 100, 102, 104, 110, 121, 122, 178, 179, 235, 243, 249, 260, 267, 270, 302, 340, 356, 362, 426, 446, 451, 554], "computation": [55, 77, 270], "computationinfo": 451, "compute_free_st": 259, "compute_offset": 305, "con_effective_size_drop_policyimplement": [27, 267], "con_motion_fnimplement": [27, 267], "con_motion_policy_bas": [27, 267], "con_motion_policy_baseprimari": [27, 267], "con_motion_policybas": [27, 267], "concept": [1, 2, 3, 26, 107, 125, 160, 236, 243, 250, 273, 277, 278, 300, 304, 451, 554], "concret": 39, "condens": 493, "condit": [4, 12, 16, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 55, 57, 67, 75, 77, 90, 94, 102, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 236, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 394, 403, 439, 440, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 554], "conditional_t": [90, 270, 340], "confer": [42, 500, 550], "config": [462, 467, 468], "config_": [462, 467, 478, 482], "config_beluga_amcl": [462, 468], "config_callback": [462, 467, 468, 478, 480], "config_callbackvoid": 462, "config_curr": 462, "config_server_": [462, 467, 478, 482], "config_server_beluga_amcl": [462, 468], "config_server_std": 462, "configur": [34, 43, 55, 57, 67, 75, 77, 90, 94, 128, 245, 249, 270, 276, 458, 460, 462, 465, 467, 469, 471, 488, 490, 492, 493, 501, 553, 554], "configured_": [462, 467, 478, 482], "configured_beluga_amcl": 468, "configured_bool": 462, "configured_flag": 462, "confus": 315, "conjunction_v": [283, 290, 408, 430], "connect": [13, 15, 45, 49, 51, 110, 126, 251, 460, 462, 465, 467, 471, 488], "consid": [5, 26, 65, 234, 243, 279, 320, 483, 492, 493, 503, 517], "consist": [4, 17, 26, 122, 178, 179, 236, 260, 438], "const": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 32, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 128, 171, 173, 178, 179, 181, 208, 222, 238, 243, 245, 247, 249, 251, 255, 256, 257, 258, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 288, 290, 293, 297, 299, 301, 303, 305, 308, 309, 310, 311, 313, 314, 315, 317, 319, 326, 327, 338, 339, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 368, 369, 370, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 394, 396, 398, 399, 401, 402, 403, 408, 409, 412, 413, 414, 418, 420, 424, 426, 428, 430, 431, 439, 441, 444, 445, 446, 447, 448, 451, 453, 457, 460, 462, 465, 466, 467, 468, 469, 470, 471, 472, 487, 488, 490, 495, 501, 502, 503, 505, 506, 522, 524, 532, 534, 537, 543, 544, 545, 546, 547, 548, 554], "const_": 283, "const_iter": [41, 65, 66, 189, 228], "const_iteratorconst": 41, "const_iteratorindexingiter": 41, "const_point": [41, 65, 66, 189, 228], "const_pointerconst": 41, "const_refer": [41, 65, 66, 189, 228], "const_referenceconst": 41, "const_reverse_iter": [41, 65, 66, 189, 228], "const_reverse_iteratorconst": 41, "const_reverse_iteratorstd": 41, "constant": [40, 41, 65, 128, 249, 260, 276, 451, 495, 538, 554], "constarrow": 38, "constbeluga": [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 74, 76, 78, 80, 82, 91, 95, 97, 99, 101, 103, 108, 111, 113, 115, 117, 119, 327, 339, 349, 351, 353, 355, 357, 359, 369, 371, 391, 395, 397, 415, 419, 421, 425, 427, 429, 504, 506], "constbeluga_amcl": 472, "constbeluga_ro": [502, 504, 506, 544], "constcalcul": 315, "constcast": 299, "constcheck": [126, 274], "constcompar": [257, 537], "constcomput": [38, 122, 126, 128, 251, 274, 276, 299, 301, 313, 317], "constdefinit": [269, 270], "constderefer": 38, "constequ": 38, "constexpr": [26, 29, 30, 34, 39, 40, 41, 65, 69, 86, 92, 104, 107, 116, 118, 122, 128, 175, 176, 180, 181, 183, 185, 245, 255, 257, 259, 260, 269, 270, 271, 272, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 296, 297, 302, 303, 304, 305, 314, 315, 319, 338, 346, 348, 350, 352, 354, 356, 358, 370, 378, 379, 382, 385, 387, 390, 392, 394, 396, 398, 401, 403, 405, 408, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 438, 439, 440, 441, 444, 445, 446, 448, 451, 456, 457, 490, 534, 537, 540], "constexprnoexcept": [260, 445], "constfind": [34, 243, 245], "constgener": 257, "constget": [126, 251, 274, 313, 453, 488, 522, 534], "consthash": 270, "constinequ": 38, "constoverload": [181, 272, 278, 280, 293, 297, 303, 305, 439, 441, 457], "constptr": [462, 467, 468, 523], "constrain": [73, 75], "constraint": [235, 259], "constraintth": 83, "constretriev": 274, "constreturn": [26, 32, 34, 38, 41, 243, 245, 249, 257, 270, 283, 448, 495], "construct": [19, 26, 27, 31, 32, 33, 34, 38, 41, 43, 55, 57, 59, 61, 63, 65, 67, 69, 71, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 98, 100, 107, 110, 112, 114, 116, 118, 121, 122, 127, 128, 179, 235, 238, 244, 245, 248, 249, 257, 259, 260, 267, 270, 275, 276, 297, 305, 313, 315, 322, 324, 328, 332, 336, 340, 342, 344, 416, 422, 447, 448, 453, 537, 543, 554], "constructor": [19, 34, 38, 39, 41, 43, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 104, 107, 110, 112, 114, 116, 118, 122, 128, 179, 181, 238, 243, 245, 249, 270, 276, 280, 288, 297, 305, 315, 319, 392, 401, 403, 416, 422, 448, 460, 465, 469, 471, 488, 490, 495, 501, 503, 505, 543], "constsampl": 305, "constsentinel": 38, "constsharedptr": [460, 465, 466, 471, 472, 488, 523], "constview": 247, "contain": [2, 3, 6, 13, 15, 26, 27, 29, 35, 36, 43, 45, 46, 49, 50, 51, 52, 65, 67, 71, 94, 96, 100, 102, 104, 106, 107, 109, 110, 111, 116, 118, 121, 126, 153, 156, 184, 189, 198, 234, 235, 236, 237, 238, 260, 267, 299, 313, 320, 394, 426, 435, 437, 454, 458, 483, 494, 495, 496, 501, 505, 506, 517, 518, 525, 530, 538, 553, 554], "containerscontain": 130, "containersinclud": [141, 142], "containsbool": 126, "content": 79, "context": 260, "contigu": [15, 65, 160, 184, 236, 250, 274, 296, 453], "continu": [270, 492, 493, 554], "contribut": 5, "control": [3, 4, 16, 67, 68, 94, 95, 102, 103, 128, 276, 317, 554], "control_act": [26, 43, 44], "control_action_typ": [94, 102], "control_action_window_": [26, 495], "control_actioncontrol": 43, "control_typ": [16, 67, 68, 94, 95, 102, 103, 128, 189, 228, 276, 317], "control_type_2d": 128, "control_type_3d": 128, "control_typecurr": [128, 276, 317], "control_typestd": [128, 276, 317], "controla": [67, 94, 102], "conveni": [40, 41, 92, 107, 260, 300, 308, 312, 445, 448], "converg": [104, 493, 554], "convers": [3, 29, 30, 31, 32, 33, 34, 92, 107, 121, 122, 244, 245, 248, 249, 260, 288, 403, 451, 492, 493, 499, 509, 511, 519, 524, 530, 532, 537, 545, 546, 547, 548, 554], "convert": [16, 29, 30, 32, 236, 243, 245, 255, 260, 304, 315, 378, 379, 382, 385, 387, 490, 524, 532, 537, 545, 546, 547, 548, 554], "convini": [127, 260, 487], "coordin": [13, 15, 17, 20, 45, 47, 49, 51, 53, 86, 100, 101, 110, 112, 114, 247, 249, 251, 274, 301, 313, 315, 492, 493, 537, 543, 554], "coordinates_at": [15, 17, 20, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 189, 198, 249, 251, 274, 299, 301, 505, 506], "coordinates_atauto": 274, "coordinates_ateigen": [251, 301], "coordinates_for": [17, 20, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 189, 198, 259, 274, 301, 505, 506], "coordinates_forauto": [274, 301], "copi": [3, 12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 59, 61, 71, 79, 107, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 304, 305, 307, 309, 311, 313, 315, 317, 319, 412, 439, 441, 443, 444, 446, 447, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 554], "copied_s": 448, "coplanar": 503, "copy_tag": [412, 413, 457], "copyabl": [110, 403], "copyassign": 19, "copyconstruct": 19, "copyright": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "core": [3, 37, 38, 41, 125, 126, 178, 179, 240, 241, 250, 251, 254, 255, 269, 270, 273, 274, 300, 301, 304, 312, 313, 451, 487, 488, 545, 546], "correct": [4, 32, 255, 256, 257, 260, 448, 460, 462, 465, 467, 471, 488, 492, 553], "correl": 257, "correspond": [5, 13, 14, 17, 19, 51, 75, 79, 96, 121, 257, 271, 492, 493, 534, 540], "cos_apertur": [34, 245], "cos_theta": 249, "could": [297, 554], "couldn": 270, "count": [107, 108, 180, 181, 236, 390, 391, 392, 393, 424, 425, 438, 439, 441, 448], "count_": 181, "count_if": [178, 179], "counter": 392, "counterpart": 491, "countnew": 107, "countnumb": 424, "countsiz": 107, "countth": 392, "cov": [269, 270], "covari": [26, 43, 44, 79, 80, 81, 82, 102, 121, 122, 178, 179, 189, 231, 255, 257, 260, 269, 270, 338, 378, 379, 382, 385, 387, 451, 458, 460, 462, 465, 467, 471, 488, 492, 493, 495, 501, 502, 532, 547, 548], "covariance_": 493, "covariance_matrix": 179, "covariance_typ": [79, 80, 189, 228, 235, 255, 256, 257, 260, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "covariance_typeth": [255, 257], "covariance_typetypenam": [255, 257], "covariancebeluga": 339, "covariancecovari": [260, 269], "covariancederiv": [260, 451], "covariancederivedconcret": 260, "covarianceeigen": 269, "covarianceeigentorowmajor": [527, 528, 532, 547, 548], "covarianceeigentorowmajorarrai": 548, "covariancer": [79, 81], "covariancerowmajortoeigen": [527, 528, 532, 547, 548], "covariancerowmajortoeigensophu": 548, "covariances_dataset": 270, "covariancet": [26, 43, 44], "covariancettyp": 43, "cover": 3, "cp": [16, 18, 21], "cparticle_traitscommon": [27, 267], "cparticleclusterizerparamparamet": [27, 267], "cparticleclusterizerparticl": [27, 267], "cpo": [408, 430], "cpolicy_baseimplement": [27, 267], "cpolicyfn": 235, "cpolicyforward": [27, 267], "cpp": [249, 260, 362, 376, 408, 430, 554], "cpprefer": [260, 362, 376, 408, 430], "cpropagate_base_fnimplement": [27, 267], "cpropagate_fnimplement": [27, 267], "crandom_intersperse_fnimplement": [27, 267], "crandom_intersperse_viewimplement": [27, 267], "crang": 235, "cray2dcast": [27, 267], "crbegin": [41, 65, 66, 189, 198], "crbeginconstexpr": 41, "crclcpp_lifecycl": 484, "creat": [18, 19, 27, 92, 121, 122, 179, 181, 235, 243, 260, 267, 280, 282, 283, 290, 305, 318, 319, 336, 346, 370, 390, 396, 492, 493, 495, 538], "create_timer_ro": 490, "crend": [41, 65, 66, 189, 198], "crendconstexpr": 41, "creweight_base_fnimplement": [27, 267], "creweight_fnimplement": [27, 267], "cross": [34, 179, 245], "crtp": 39, "csample_base_fnimplement": [27, 267], "csample_fnimplement": [27, 267], "csample_viewimplement": [27, 267], "csentinelpast": [27, 267], "csparsevaluegridgener": [27, 267], "cspatial_hash": [27, 267], "cspatial_hashcal": [27, 267], "cstate_fncustom": [27, 267], "cstate_typ": 235, "cstationarymodela": [27, 267], "cstd": 235, "cstdint": [37, 38, 40, 41, 237, 238, 240, 241, 242, 243, 250, 251, 270, 273, 274, 314, 315, 452, 453], "ctake_evenly_fnimplement": [27, 267], "ctake_while_kld_fnimplement": [27, 267], "cthrunrecoveryprobabilityestimatorrandom": [27, 267], "ctuple_el": [27, 267], "ctuple_index": [27, 267], "ctuple_indexmeta": [27, 267], "ctuple_s": [27, 267], "ctuplecontain": [27, 267], "ctuplecontainerprimari": [27, 267], "ctuplevectorshorthand": [27, 267], "cube": 249, "cup": 4, "curious": 2, "current": [1, 4, 26, 41, 43, 65, 67, 71, 94, 102, 107, 122, 236, 238, 280, 292, 302, 356, 392, 401, 402, 448, 458, 460, 462, 465, 467, 471, 488, 492, 493, 495, 501, 538, 554], "current_": 181, "current_orient": [128, 276], "current_point_": 38, "current_pose_2d": 128, "current_posit": 554, "currentth": 401, "curri": 39, "cursor": [71, 72, 238, 305], "cursor_": 238, "custom": [18, 26, 43, 260, 289, 408, 430, 495, 501, 532, 554], "cvaluegrid2gener": [27, 267], "cvaluetraitstrait": [496, 530], "cweight_fncustom": [27, 267], "cwiseab": 179, "cwisemax": 243, "cwisemin": 243, "cwisesqrt": 257, "cycl": [3, 260, 554], "cyril": [42, 500, 550], "czip_fnimplement": [27, 267], "d": [0, 1, 6, 19, 28, 32, 42, 120, 187, 190, 191, 199, 202, 228, 231, 261, 478, 480, 482, 500, 512, 550, 554], "d1": [90, 191, 231, 269, 270, 338, 339, 340], "d1_rotations_soln": 315, "d1beluga": 341, "d1doubl": 270, "d1scale": 270, "d2": [90, 191, 231, 269, 270, 338, 339, 340], "d2beluga": 341, "d2doubl": 270, "d2scale": 270, "dark": [234, 483, 517], "dash": [234, 483, 517], "data": [3, 6, 13, 15, 17, 27, 32, 34, 41, 42, 43, 45, 47, 49, 51, 53, 65, 66, 73, 100, 101, 110, 111, 121, 122, 179, 184, 191, 199, 235, 240, 241, 245, 248, 249, 258, 259, 260, 267, 270, 328, 330, 334, 336, 338, 340, 342, 344, 360, 382, 487, 488, 492, 493, 501, 503, 505, 506, 512, 514, 519, 521, 522, 533, 534, 554], "data_": [41, 313, 453], "data_at": [13, 15, 45, 46, 49, 50, 51, 52, 100, 101, 110, 111, 126, 191, 199, 251, 270, 274, 313, 505, 506], "data_atauto": [126, 251, 274], "data_atstd": 313, "data_near": [13, 45, 46, 49, 50, 51, 52, 100, 101, 110, 111, 126, 191, 199, 249, 313, 505, 506], "data_nearauto": 126, "data_nearstd": 313, "dataaggreg": 65, "dataconst": [313, 453, 534], "dataconstexpr": 41, "datagrid": [100, 110], "datainclud": 149, "datalikelihood_field_model": 147, "dataset": 270, "datatyp": [27, 34, 73, 160, 184, 235, 242, 243, 245, 260, 267], "date": [5, 492, 493], "dbuild_test": 5, "debug": [269, 338], "decai": [27, 235, 260, 267, 365, 445, 446, 492, 493, 495, 538], "decay_t": [27, 30, 120, 122, 227, 228, 235, 260, 267, 272, 283, 290, 293, 303, 348, 350, 352, 354, 356, 358, 362, 363, 366, 375, 388, 408, 411, 430, 445, 446], "decay_tuple_lik": [27, 120, 227, 228, 235, 260, 267, 283, 366, 367, 445, 446], "decay_tuple_like_t": [260, 261, 265, 283, 445, 446, 447, 448], "decay_tuple_like_tconveni": [283, 446], "decay_tuple_like_ttypenam": [283, 446], "decay_tuple_likemeta": 446, "decid": [236, 492, 493, 495, 538], "declar": [19, 26, 27, 235, 255, 257, 260, 267, 272, 278, 288, 293, 303, 377, 403], "decltyp": [26, 30, 38, 39, 71, 122, 171, 175, 176, 235, 238, 247, 260, 283, 290, 293, 297, 305, 388, 408, 430, 445, 446, 448, 451, 495, 537], "declval": [71, 238, 283, 290, 297, 305, 388], "decomposit": 451, "decreas": [122, 537], "decrement": [71, 238], "dedu": 59, "deduc": [256, 257, 260], "deduct": [109, 256, 257, 258, 259, 260, 447, 448], "default": [6, 19, 27, 38, 39, 41, 59, 61, 63, 65, 71, 79, 81, 92, 98, 100, 107, 109, 112, 114, 174, 235, 238, 257, 260, 267, 271, 272, 277, 288, 292, 293, 297, 299, 302, 303, 305, 313, 315, 319, 344, 348, 350, 352, 354, 358, 394, 403, 414, 416, 422, 426, 440, 441, 447, 448, 462, 465, 467, 468, 469, 471, 490, 492, 493, 495, 501, 554], "default_config_": [462, 467, 478, 482], "default_config_beluga_amcl": [462, 468], "default_config_default": 462, "default_random_engin": [297, 305, 414, 416, 422], "defaultbeluga": [60, 62, 64, 66, 72, 80, 82, 93, 101, 108, 113, 115, 404, 417, 423], "defaultconstruct": [38, 257, 313], "defaultdefault": [38, 41, 238, 288, 297, 305, 315, 319, 448], "defer": 39, "defin": [2, 4, 12, 14, 17, 18, 20, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 45, 47, 49, 51, 53, 62, 66, 71, 80, 98, 109, 122, 124, 126, 128, 152, 171, 173, 174, 176, 179, 180, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 277, 278, 279, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 350, 354, 358, 408, 430, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 466, 468, 488, 490, 495, 499, 522, 523, 532, 534, 537, 546, 548, 554], "definit": [12, 26, 30, 32, 34, 38, 41, 122, 126, 128, 171, 173, 174, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 288, 290, 293, 297, 299, 301, 303, 305, 309, 313, 315, 317, 319, 439, 441, 444, 446, 448, 451, 453, 457, 460, 462, 488, 490, 495, 522, 523, 534, 537, 546, 548], "degeneraci": [43, 501, 554], "degrad": [55, 260], "degre": [3, 537], "delai": 493, "delet": [39, 297], "delimit": 73, "delta": [128, 179, 257, 276, 280, 554], "delta_bear": 276, "delta_rot_hat": 276, "demo": 553, "demonstr": [553, 554], "denot": [234, 483, 517], "dens": [13, 15, 45, 125, 160, 174, 184, 235, 251, 260], "dense_grid": [45, 160, 184, 250, 251], "densegrid2": [15, 45, 281], "densiti": [19, 344, 537], "dep": 5, "depend": [22, 24, 29, 31, 33, 34, 35, 37, 40, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 487, 488, 494, 498, 521, 533, 536, 545, 547], "depict": [493, 554], "deplet": 554, "deprec": 122, "depth": 6, "derefer": [63, 71, 439, 456], "deriv": [27, 46, 48, 50, 52, 54, 110, 111, 121, 125, 126, 189, 191, 193, 195, 198, 199, 201, 204, 207, 208, 209, 217, 221, 222, 223, 235, 246, 247, 250, 251, 254, 258, 259, 260, 267, 273, 274, 300, 301, 378, 379, 382, 385, 387], "derivedconcret": [45, 47, 49, 51, 53], "descend": 122, "describ": [45, 47, 49, 51, 53, 75, 236, 492, 493], "descript": [22, 24, 27, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 121, 123, 125, 127, 170, 172, 175, 178, 180, 182, 184, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 267, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 477, 487, 494, 496, 498, 501, 503, 505, 511, 521, 524, 525, 526, 530, 532, 533, 536, 538, 540, 542, 543, 545, 547], "design": [180, 277, 279], "desir": 277, "destin": 554, "destroi": 243, "destructor": [43, 55, 57, 61, 65, 67, 69, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 98, 100, 104, 107, 110, 112, 114, 116, 118, 392, 401, 416, 422, 465, 469, 471, 501, 503, 505, 543], "detail": [22, 24, 26, 27, 29, 30, 31, 33, 35, 37, 39, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 120, 121, 123, 125, 127, 170, 172, 175, 178, 179, 180, 181, 182, 184, 192, 200, 208, 210, 211, 218, 222, 224, 225, 226, 231, 235, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 267, 270, 271, 272, 273, 275, 277, 278, 279, 280, 282, 283, 284, 286, 288, 289, 292, 293, 294, 296, 297, 298, 300, 302, 303, 304, 305, 306, 308, 310, 312, 314, 315, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 452, 454, 456, 457, 459, 461, 463, 465, 467, 469, 471, 477, 484, 487, 488, 494, 495, 496, 498, 501, 503, 505, 507, 511, 512, 514, 516, 518, 521, 523, 524, 525, 526, 530, 532, 533, 536, 537, 538, 540, 542, 543, 544, 545, 547], "detect": [27, 33, 34, 57, 58, 73, 75, 76, 128, 235, 236, 240, 241, 243, 244, 245, 260, 267, 276, 279, 280, 328, 330, 334, 342, 394, 398, 401, 554], "detection_bearing_in_robot": 245, "detection_bearing_in_sensor": [34, 73, 74, 191, 231, 241, 243, 330], "detection_bearing_in_sensorbear": 241, "detection_bearing_in_sensorbeluga": 331, "detection_bearing_in_sensorlandmarkbearing3": 241, "detection_bearing_in_sensorth": 73, "detection_categori": [34, 73, 74, 243, 245], "detection_categoryth": 73, "detection_position_in_robot": [191, 231, 241, 243, 245, 334], "detection_position_in_robotbeluga": 335, "detection_position_in_robotdetect": 241, "detection_position_in_robotlandmarkposition3": 241, "detection_position_in_world": [73, 74, 243, 245], "detection_position_in_worldth": 73, "detection_range_in_robot": 245, "detection_weight": [34, 245], "detections2d": 75, "detectionslandmark": 57, "determin": [260, 554], "develop": [5, 6], "deviat": [32, 34, 179, 245, 249, 322, 324, 332, 336, 344, 492, 493, 554], "diagnosic_updater_": [462, 467, 478, 482], "diagnosic_updater_beluga_amcl": 468, "diagnosic_updater_diagnost": 462, "diagnosic_updater_diagnostic_updat": 462, "diagnost": [462, 467, 492], "diagnostic_updat": [461, 462, 467, 468], "diagnosticarrai": 492, "diagnostics_msg": 492, "diagnosticstatuswrapp": [462, 467, 468], "diagram": [45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 465, 467, 469, 471, 503, 505], "dictat": [492, 493], "did": [34, 245, 537], "dieter": [42, 500, 550], "diff": 492, "differ": [19, 38, 41, 63, 65, 71, 90, 92, 107, 122, 179, 238, 308, 315, 448, 451, 490, 537, 553, 554], "difference_typ": [38, 41, 63, 64, 65, 66, 71, 72, 107, 108, 191, 228, 238, 448], "difference_typediffer": 448, "difference_typeiter": 38, "difference_types": 41, "difference_typesign": 238, "difference_typestd": [38, 41, 238, 448], "differenti": [27, 67, 127, 128, 163, 184, 235, 236, 253, 260, 267, 458], "differential_dr": [490, 492, 493], "differential_drive_model": [67, 163, 184, 252, 253, 328, 487, 488], "differentialdrivemodel": [2, 16, 27, 68, 120, 127, 128, 189, 191, 199, 208, 222, 223, 226, 228, 235, 236, 260, 267, 328], "differentialdrivemodel2d": [127, 128, 260, 261, 265, 487, 488, 495, 501], "differentialdrivemodel2ddifferentialdrivemodel": 495, "differentialdrivemodel3d": [127, 128, 260, 261, 265], "differentialdrivemodeldifferentialdrivemodel": 128, "differentialdrivemodelparam": [67, 120, 127, 128, 191, 224, 227, 231, 260, 329], "differentialdrivemodelparamparamet": [128, 235], "differentialdrivemodelsampl": 128, "differentialmotionmodel": [490, 493], "digit": 315, "dim": [174, 270, 493, 537], "dimens": [269, 338, 451], "dimension": [20, 25, 27, 53, 79, 100, 122, 126, 158, 184, 235, 260, 267, 269, 270, 300, 301, 312, 313, 314, 338, 368, 494, 499, 501, 509, 511, 554], "dims_out": 270, "direct": [65, 98, 299], "directional_statist": 179, "directli": [19, 22, 24, 29, 31, 33, 35, 37, 40, 104, 121, 123, 125, 127, 170, 172, 175, 178, 180, 182, 237, 240, 244, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 438, 440, 445, 447, 449, 452, 454, 456, 494, 521, 532, 533, 536, 545, 547], "dirti": 32, "discard": [4, 47], "discret": [4, 19, 27, 33, 75, 159, 184, 235, 236, 244, 245, 260, 267, 307, 492, 493, 505, 534, 554], "discrete_distribut": 305, "discuss": [315, 553], "dispers": 179, "distanc": [25, 26, 41, 65, 71, 98, 122, 128, 158, 170, 171, 184, 238, 243, 249, 260, 276, 279, 299, 320, 328, 336, 342, 401, 440, 448, 492, 493, 554], "distance_funct": [170, 171, 249, 260], "distance_functiongiven": 260, "distance_map": [24, 25, 158, 184, 248, 249], "distance_threshold": [128, 191, 231, 276, 328, 342], "distance_thresholdbeluga": [329, 343], "distance_thresholddist": [128, 276], "distance_thresholddoubl": [128, 276], "distance_to": 297, "distance_vari": [128, 276], "distancefunct": [170, 171, 249, 260], "distancefunctiona": 260, "distancetyp": [171, 260], "distinguish": 554, "distri": 495, "distribut": [3, 4, 11, 12, 16, 19, 23, 25, 26, 27, 30, 32, 34, 36, 38, 39, 41, 43, 44, 73, 79, 81, 82, 83, 84, 86, 88, 122, 124, 126, 128, 153, 166, 171, 173, 174, 176, 177, 179, 181, 183, 184, 185, 211, 226, 235, 236, 238, 241, 243, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 267, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 294, 295, 297, 299, 301, 303, 304, 305, 307, 309, 311, 313, 315, 317, 319, 322, 338, 344, 414, 418, 419, 420, 421, 423, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 458, 460, 462, 488, 490, 492, 493, 495, 499, 501, 502, 522, 523, 525, 534, 536, 537, 538, 546, 548, 554], "distribution_": [257, 259, 297, 305], "distribution_typ": 19, "distributiona": [81, 422], "distributionparam": [128, 276], "distributionth": 422, "distrubut": 260, "div_hashed_valu": 315, "dive": 554, "divers": [2, 4, 43, 492, 493, 495, 501, 538], "divid": [20, 110, 236, 271], "djuric": 42, "do": [65, 299, 492, 493, 554], "do_activ": [460, 465, 466, 469, 470, 471, 472, 478, 480, 488, 490], "do_activatevirtu": 490, "do_activatevoid": [460, 488], "do_autostart_callback": [460, 465, 466, 469, 470, 471, 472, 478, 480, 488, 490], "do_autostart_callbackvirtu": 490, "do_autostart_callbackvoid": [460, 488], "do_beamskip": 493, "do_cleanup": [460, 465, 466, 469, 470, 471, 472, 478, 480, 488, 490], "do_cleanupvirtu": 490, "do_cleanupvoid": [460, 488], "do_configur": [465, 466, 469, 470, 471, 472, 478, 480, 490], "do_configurevirtu": 490, "do_deactiv": [460, 465, 466, 469, 470, 471, 472, 478, 480, 488, 490], "do_deactivatevirtu": 490, "do_deactivatevoid": [460, 488], "do_initial_pose_callback": [460, 465, 466, 469, 470, 471, 472, 478, 480, 488, 490], "do_initial_pose_callbackvirtu": 490, "do_initial_pose_callbackvoid": [460, 488], "do_periodic_timer_callback": [460, 465, 466, 469, 470, 471, 472, 478, 480, 488, 490], "do_periodic_timer_callbackvirtu": 490, "do_periodic_timer_callbackvoid": [460, 488], "do_shutdown": [465, 466, 469, 470, 471, 472, 478, 480, 490], "do_shutdownvirtu": 490, "doc": [315, 368], "document": [5, 23, 25, 29, 30, 32, 34, 36, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 121, 122, 124, 126, 128, 171, 173, 175, 176, 178, 179, 180, 181, 183, 184, 186, 188, 189, 191, 192, 195, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 234, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 261, 267, 271, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 290, 292, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315, 317, 319, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 438, 439, 440, 441, 443, 445, 446, 448, 450, 453, 455, 456, 457, 460, 462, 465, 467, 469, 471, 477, 478, 483, 488, 489, 495, 499, 501, 503, 505, 511, 512, 517, 522, 525, 527, 530, 532, 534, 535, 536, 537, 538, 540, 542, 543, 546, 548], "doe": [2, 4, 19, 41, 65, 107, 234, 260, 304, 403, 483, 493, 517, 553, 554], "doesn": [39, 79, 100, 270, 493], "doi": 550, "don": [6, 29, 122, 255, 283, 299, 448], "dontaligncol": 311, "door": 554, "dot": [4, 34, 243, 245], "dot_product_a": 243, "dot_product_b": 243, "doubl": [13, 17, 20, 26, 32, 34, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 69, 70, 75, 77, 90, 92, 98, 99, 100, 101, 104, 105, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 126, 128, 179, 183, 235, 245, 249, 259, 260, 269, 270, 272, 274, 276, 278, 289, 290, 297, 299, 301, 313, 314, 315, 320, 322, 324, 328, 332, 336, 338, 339, 340, 342, 344, 348, 349, 350, 351, 360, 394, 395, 414, 415, 416, 417, 426, 427, 440, 441, 444, 451, 453, 488, 495, 503, 505, 506, 522, 534, 537, 538, 546, 548, 554], "doublenear": 309, "doubt": 5, "down": [3, 554], "download": 179, "doxygen": [234, 483, 517], "draw": [4, 27, 37, 38, 59, 61, 63, 235, 260, 267, 304, 554], "drawing_values_from_the_distribut": 257, "drift": [492, 493], "drive": [27, 67, 94, 127, 128, 163, 184, 235, 236, 253, 260, 267, 275, 276, 458], "drop": [236, 277, 394], "dt": 554, "due": 55, "durabl": 6, "dure": [4, 29, 104, 465, 467, 471], "dx_": 4, "dxspan_": 38, "dynam": [4, 179, 270, 554], "dynamic_reconfigur": [461, 462, 467], "dyspan_": 38, "e": [3, 16, 28, 65, 71, 73, 92, 107, 116, 118, 120, 122, 179, 187, 190, 192, 200, 202, 238, 241, 260, 261, 308, 309, 330, 334, 478, 482, 512, 554], "each": [4, 13, 19, 55, 107, 116, 118, 121, 122, 170, 171, 175, 178, 179, 186, 188, 189, 191, 192, 195, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 236, 249, 260, 271, 284, 297, 314, 315, 356, 414, 416, 426, 441, 448, 478, 492, 493, 512, 537, 538, 554], "eagerli": [29, 236, 346], "earli": 3, "easili": 4, "ecosystem": 491, "edu": [260, 315], "eec": 315, "eff": [492, 493, 538], "effect": [4, 19, 25, 26, 29, 41, 65, 73, 152, 158, 172, 184, 236, 260, 277, 278, 287, 492, 493, 538, 554], "effective_s": [41, 65, 66, 192, 200], "effective_sample_s": [24, 25, 158, 184, 260, 261, 263, 277, 278], "effective_sample_sizeauto": [173, 278], "effective_sizeconstexpr": 41, "effici": [2, 29, 36, 123, 153, 184, 260], "effort": 6, "eigen": [3, 12, 13, 15, 17, 20, 27, 34, 37, 38, 45, 46, 49, 50, 51, 52, 53, 54, 59, 79, 84, 85, 88, 89, 90, 100, 101, 110, 111, 120, 125, 126, 128, 162, 174, 178, 179, 184, 189, 195, 201, 206, 208, 212, 220, 222, 224, 226, 227, 228, 230, 231, 235, 240, 241, 245, 249, 250, 251, 254, 255, 257, 258, 259, 260, 267, 269, 270, 273, 274, 276, 299, 300, 301, 308, 310, 311, 312, 313, 315, 317, 338, 340, 368, 369, 378, 379, 382, 385, 386, 387, 443, 451, 458, 460, 462, 465, 466, 467, 468, 471, 472, 487, 488, 499, 505, 506, 509, 511, 519, 532, 534, 537, 545, 546, 547, 548], "eigen3": [240, 241], "eigen_compat": [125, 126, 184, 269, 270, 300, 301, 312, 313, 451], "eigen_major_vers": 174, "eigen_world_vers": 174, "eigenbas": [27, 120, 189, 195, 201, 212, 220, 224, 226, 227, 228, 230, 231, 235, 254, 255, 257, 260, 267, 386], "eigensolv": 179, "eigenvalu": [179, 257], "eigenvector": [179, 257], "either": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 67, 107, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 403, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 493, 495, 499, 522, 523, 534, 537, 546, 548], "ekumen": [0, 5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 553], "ekumenlab": 0, "elem": 270, "element": [27, 29, 65, 107, 121, 122, 151, 178, 179, 184, 235, 236, 260, 261, 263, 267, 290, 296, 308, 309, 310, 314, 374, 401, 408, 410, 414, 422, 424, 426, 430, 431, 438, 439, 440, 441, 445, 446, 448, 454, 455, 456, 457, 532], "elementconstexpr": [290, 446], "elementsconstexpr": 176, "elementsdefinit": 176, "elev": 249, "elif": [523, 534, 546, 548], "els": [26, 32, 34, 41, 122, 128, 179, 185, 238, 245, 257, 270, 272, 283, 293, 297, 305, 315, 441, 446, 448, 523, 534, 546, 548], "emb": [12, 128, 260], "embed": [13, 15, 17, 20], "emit": 492, "emphas": 236, "emplace_back": [126, 270, 451, 537], "empti": [4, 26, 41, 65, 66, 107, 108, 122, 171, 192, 200, 243, 259, 424, 438, 448, 459, 460, 461, 462, 465, 466, 467, 468, 487, 488, 492, 493, 495, 537], "emptyconstexpr": [41, 448], "en": [179, 257, 260, 362, 376, 408, 430, 537], "enabl": [30, 41, 65, 235, 255, 260, 305, 314, 315, 346, 403, 465, 467, 469, 471, 492, 493, 495, 524, 530, 537, 538, 547, 548], "enable_borrowed_rang": [177, 291], "enable_if_t": [27, 30, 41, 65, 92, 116, 117, 118, 119, 120, 172, 173, 178, 179, 189, 195, 201, 208, 211, 212, 220, 222, 224, 226, 227, 228, 230, 231, 235, 254, 255, 260, 267, 272, 283, 288, 290, 293, 303, 314, 315, 319, 346, 348, 350, 352, 354, 356, 358, 362, 366, 367, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 403, 404, 408, 411, 426, 430, 441, 445, 446, 447, 448, 525, 536, 537], "enable_safe_rang": 291, "enable_tf_broadcast_": [460, 462, 465, 467, 471, 478, 482, 488], "enable_tf_broadcast_beluga_amcl": [466, 468, 472], "enable_tf_broadcast_bool": [460, 462, 488], "enable_tf_broadcast_wheth": [460, 462, 488], "encourag": 2, "end": [4, 27, 37, 38, 41, 61, 62, 63, 65, 66, 98, 107, 108, 122, 179, 192, 200, 235, 243, 249, 267, 272, 293, 303, 305, 313, 326, 448, 451, 537, 554], "end_cursor": 305, "endauto": 38, "endconstexpr": [41, 448], "endfor": 4, "endif": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "enforc": 2, "engin": [84, 85, 86, 87, 88, 89, 259, 297, 305, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "engine_": [297, 305], "engineth": [84, 86, 88, 414, 416, 422], "enhanc": 104, "enough": 4, "ensur": [5, 122, 439, 537], "entri": [100, 122], "enum": [38, 40, 41, 51, 52, 59, 60, 260, 274, 505, 506], "enumcastoutofrang": 41, "enumer": [28, 40, 59, 170, 171, 190, 260, 264, 268, 273, 274, 438, 439], "enumeratorkrolloveronwrit": 260, "enumeratorkstandard": 59, "environ": [55, 77, 260, 553], "epilogu": 184, "epsilon": [179, 260, 272, 426, 427, 440, 441, 444], "epsilonmaximum": 260, "epsilonse": 426, "equal": [19, 38, 63, 65, 71, 79, 81, 238, 260, 326, 370, 418, 496, 518, 530, 537, 542, 543, 554], "equal_to": [496, 518, 530, 536, 537, 542, 543], "equalitycompar": 19, "equat": [4, 179, 260, 554], "equip": 6, "equival": [65, 260, 362, 456, 493, 496, 518, 519, 530, 536, 537, 542, 543], "eras": 260, "erasur": 3, "erf": 32, "ericniebl": [107, 122], "error": [34, 73, 177, 243, 245, 260, 269, 291, 308, 324, 332, 451, 465, 467, 471, 492, 493, 495, 523, 534, 538, 546, 548], "error_": 38, "ess": [25, 26, 152, 158, 172, 173, 184, 236, 260, 277, 278, 287, 394], "estim": [4, 6, 24, 25, 26, 27, 43, 67, 94, 102, 104, 121, 122, 128, 158, 184, 235, 260, 261, 263, 267, 276, 317, 344, 444, 451, 458, 460, 462, 465, 466, 467, 468, 469, 471, 472, 488, 492, 493, 495, 501, 537, 538], "estimate_clust": [121, 122, 260, 261, 263], "estimate_clustersauto": 122, "estimatea": [465, 467, 471], "estimatecovari": 122, "estimated_pos": 179, "estimatest": 122, "estimatestd": [26, 122, 179, 495], "estimation_typ": [26, 43, 44], "et": 260, "eta_hit": 32, "eta_short": 32, "etc": 73, "eth": 308, "eugen": 59, "euler_angl": 315, "eulerangl": 315, "ev": [462, 467, 468], "eval": [179, 451], "evalu": [29, 43, 122, 236, 403, 501, 554], "even": [1, 3, 6, 75, 448, 553, 554], "evenli": [20, 110, 236, 438, 492, 493], "event": [469, 490], "eventu": 6, "everi": [19, 26, 152, 180, 181, 184, 236, 260, 287, 292, 392], "every_n": [26, 152, 184, 236, 286, 287, 390, 392, 495], "every_n_fn": [26, 27, 120, 180, 181, 208, 222, 235, 267, 391, 495], "every_n_fnimplement": [181, 235], "every_n_fninlin": 391, "every_n_polici": [27, 120, 180, 181, 192, 200, 208, 222, 235, 267, 393], "every_n_policyconstexpr": 181, "every_n_policyimplement": [181, 235], "every_n_policyinlin": 393, "every_n_policyinlineexplicit": 393, "every_nconstexpr": [26, 181, 495], "every_npolici": [26, 181], "evolv": [236, 554], "exact": [86, 448], "exactli": [107, 255, 439], "exampl": [1, 2, 6, 234, 260, 483, 517, 554], "except": [6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 65, 79, 81, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 465, 467, 471, 488, 490, 495, 499, 501, 522, 523, 534, 537, 546, 548], "exclus": [465, 469, 471, 490], "exec": 5, "execut": [26, 27, 43, 44, 235, 267, 271, 272, 292, 293, 302, 303, 348, 350, 352, 354, 356, 358, 458, 460, 462, 465, 467, 471, 487, 488, 492, 493, 495, 501, 502, 554], "execution_polici": [26, 43, 44, 492, 493, 495, 501, 502], "execution_policy_": [26, 495], "execution_policy_vari": [460, 462, 465, 467, 495, 501, 502, 512, 515], "execution_policy_variantbeluga_amcl": [466, 468], "execution_policy_variantexecut": 495, "execution_policy_variantget": [460, 462], "execution_policy_variantstd": 495, "execution_policypolici": 43, "execution_policyvari": 501, "executionpolici": [26, 44, 186, 195, 196, 201, 204, 209, 213, 217, 223, 229, 235, 272, 293, 303, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 487, 488], "executionpolicyan": [348, 352, 356], "executionpolicyexecut": 43, "executionpolicyvari": [471, 487, 488], "executionpolicyvariantbeluga_amcl": 472, "executionpolicyvariantget": 488, "executionpolicyvariantstd": 488, "executionpolicyvariantsupport": 488, "exercis": 3, "exhibit": 65, "exist": [1, 27, 65, 100, 107, 122, 235, 260, 267, 270, 305, 348, 352, 356, 372, 373, 422, 440, 445, 446, 492, 493], "exp": [32, 34, 245, 249, 255, 269, 554], "expect": [2, 32, 73, 179, 322, 448, 492, 493, 537], "expect_that": 308, "expens": [55, 243], "experi": 55, "explain": [234, 483, 517, 553], "explicit": [32, 34, 38, 39, 41, 72, 122, 128, 181, 183, 238, 243, 245, 249, 257, 259, 276, 288, 297, 299, 305, 313, 315, 448, 453, 460, 488, 490, 522, 534, 537], "exploit": [179, 554], "explor": [236, 485, 519], "exponenti": [25, 27, 69, 158, 182, 183, 184, 235, 255, 260, 267, 444, 492, 493, 538], "exponential_filt": [24, 25, 69, 158, 184, 444], "exponentialfilt": [70, 120, 182, 183, 192, 200, 208, 210, 222, 224, 260, 444], "exponentialfiltercal": [183, 235, 444], "exponentialfilterconstexpr": 183, "exponentialfilterinlin": 70, "exponentialfilterinlineexplicit": 70, "express": [12, 18, 19, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 114, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 346, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "extend": [2, 3, 75, 107, 236, 270], "extens": [469, 524, 530, 532, 537, 545, 546, 547, 548], "extent": 13, "extern": [34, 122, 241, 243, 245, 408, 430, 493, 518], "extra": [104, 448, 465, 469, 471, 490], "extract": [382, 418, 524, 547, 548], "extrapol": [65, 260], "extrins": [114, 315, 492, 493], "f": [16, 17, 21, 27, 28, 38, 40, 41, 66, 120, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 209, 210, 211, 217, 220, 222, 223, 224, 226, 227, 228, 230, 235, 260, 261, 267, 436, 512], "fa21": 315, "face": [2, 255], "factor": [4, 69, 179, 236, 271, 272, 348, 349, 350, 351], "factori": 260, "factorth": 348, "fail": [257, 493, 554], "fall": 260, "fals": [26, 38, 41, 65, 79, 81, 171, 260, 274, 315, 320, 392, 394, 401, 439, 457, 460, 462, 465, 467, 471, 488, 492, 493, 495, 538], "false_typ": [30, 235, 283, 290, 305, 446], "famili": 4, "far_end_cel": 299, "far_end_pose_in_local_fram": 299, "farrai": 65, "fast": [448, 492, 493, 495, 538], "fast_averag": 444, "fast_filter_": 444, "favor": 3, "feasibl": 270, "featur": [1, 40, 41, 57, 65, 260, 485, 491, 493, 553, 554], "few": [1, 2, 4, 6, 65, 249, 553], "fewer": 1, "fibonacci": 315, "field": [27, 77, 159, 184, 235, 236, 248, 249, 260, 267, 307, 458, 493, 554], "fifo": 65, "figur": [260, 554], "file": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 465, 467, 469, 471, 476, 501, 503, 505, 509, 538, 540, 542, 543, 553, 554], "filesystem": 270, "fill": [41, 65, 66, 195, 201, 234, 451, 483, 517, 548], "fillvoid": 41, "filter": [4, 11, 25, 26, 27, 42, 43, 69, 75, 104, 121, 122, 158, 178, 182, 183, 184, 235, 236, 242, 243, 246, 247, 260, 267, 273, 274, 320, 438, 439, 440, 444, 460, 462, 465, 467, 471, 488, 495, 500, 501, 503, 519, 522, 537, 538, 550], "filter_funct": 439, "final": [319, 465, 469, 471, 490], "find": [6, 34, 73, 100, 121, 122, 243, 245, 270, 313, 445, 446, 553], "find_closest_bearing_landmark": [34, 73, 74, 195, 201, 243], "find_closest_bearing_landmarkstd": [34, 243], "find_nearest_landmark": [73, 74, 195, 201, 243, 245], "find_nearest_landmarkstd": [243, 245], "find_packag": 554, "finder": [27, 31, 32, 55, 77, 90, 159, 184, 235, 236, 248, 249, 260, 267, 270, 307], "finit": [13, 297], "firefox": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547], "first": [1, 5, 6, 32, 38, 41, 61, 65, 66, 98, 107, 108, 122, 171, 249, 288, 408, 424, 438, 448, 462, 467, 492, 493, 554], "first_": 305, "first_map_onli": [492, 493], "first_rot": [128, 276], "first_rotation_param": 128, "firstiter": 65, "fit": [41, 65, 234, 483, 517], "fit_point": 270, "fix": [38, 63, 65, 114, 537, 554], "flag": [40, 41, 43, 65, 260, 467, 492, 501], "flat": 73, "flatland": 6, "flatten": [12, 67, 128, 260, 344], "flip": 3, "flipped_rot": [128, 276], "float": [260, 269, 338, 492, 493, 522, 536, 537], "floor": [301, 314, 315], "floor_and_fibo_hash": [314, 315], "floor_and_fibo_hashconstexpr": 315, "flow": 3, "fmod": 537, "fn": [16, 21, 30, 210, 224, 235, 288, 293, 296, 297, 346, 347, 352, 353, 354, 355, 403, 404, 405, 406, 414, 415, 417], "fn_": 297, "fn_return_": 297, "fna": [352, 414, 416], "fnfn": 414, "fnthe": 416, "focu": 11, "follow": [4, 5, 6, 16, 18, 19, 21, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 234, 255, 276, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 448, 458, 465, 467, 469, 471, 483, 490, 501, 503, 505, 517, 538, 540, 542, 543, 553, 554], "footprint": [34, 245], "forc": [26, 43, 492, 493, 495, 501], "force_upd": [26, 43, 44, 195, 201, 495, 501, 502, 512, 514], "force_update_": [26, 495], "force_updatevoid": [26, 495], "foremost": 6, "form": [179, 260], "format": 311, "formula": [32, 249, 492, 493], "fortun": 6, "forward": [71, 122, 128, 175, 176, 185, 235, 238, 260, 272, 276, 278, 288, 290, 293, 297, 303, 305, 319, 377, 403, 408, 409, 414, 416, 430, 431, 432, 441, 446, 457, 537], "forward_iter": [38, 63], "forward_iterator_tag": [38, 63], "forward_lik": [184, 260, 261, 263, 289, 290], "forward_likeconstexpr": 185, "forwhich": [234, 483, 517], "found": [1, 18, 73, 260, 408, 430, 445, 446, 492, 493], "fox": [42, 500, 550], "fox01": [492, 493, 550], "fr": 59, "fraction": 260, "fragment": 122, "frame": [14, 17, 34, 47, 51, 52, 55, 57, 73, 75, 77, 90, 98, 114, 193, 195, 240, 241, 243, 245, 247, 259, 260, 274, 324, 330, 334, 338, 492, 493, 501, 503, 505, 506, 522, 523, 525, 534], "frame_id": [492, 493, 523, 525], "frame_idfram": 525, "frameframecoordin": 274, "frameplan": 51, "framework": [1, 553], "free": [17, 18, 51, 59, 86, 98, 274, 534, 540, 554], "free_at": [17, 51, 52, 195, 201, 274, 299, 505, 506], "free_atbool": 274, "free_cel": [17, 51, 52, 195, 201, 259, 274, 505, 506], "free_cellsauto": 274, "free_near": [17, 51, 52, 195, 201, 274, 505, 506], "free_nearbool": 274, "free_states_": 259, "friend": [30, 38, 41, 61, 62, 66, 71, 72, 80, 238, 257, 269, 288, 297, 305, 338, 339, 346, 405], "from": [3, 4, 14, 17, 19, 25, 27, 32, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 121, 122, 128, 158, 170, 175, 178, 179, 184, 234, 235, 236, 238, 243, 245, 249, 254, 255, 257, 260, 267, 272, 276, 282, 283, 293, 296, 297, 303, 304, 305, 308, 314, 315, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 440, 447, 448, 458, 460, 462, 465, 467, 469, 471, 483, 488, 490, 492, 493, 495, 501, 503, 505, 517, 524, 537, 538, 540, 542, 543, 547, 548, 554], "from_vector": [195, 201, 255, 257, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "from_vectorstat": 255, "frommsg": [524, 527, 528, 532, 547, 548], "frommsgvoid": 548, "front": [41, 65, 66, 195, 201, 260], "frontconstexpr": 41, "full": [3, 41, 65, 66, 98, 195, 201, 260, 493], "fullconstexpr": 41, "fulli": [6, 260], "function": [3, 4, 6, 18, 19, 27, 28, 29, 30, 32, 34, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 121, 122, 128, 170, 172, 178, 181, 190, 235, 236, 245, 249, 256, 258, 260, 264, 267, 268, 270, 276, 278, 280, 282, 283, 288, 290, 292, 296, 297, 302, 305, 308, 310, 314, 317, 318, 319, 326, 338, 344, 346, 348, 350, 352, 354, 356, 358, 362, 365, 368, 370, 372, 374, 376, 378, 379, 382, 385, 387, 390, 392, 394, 396, 398, 401, 403, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 440, 445, 446, 447, 448, 451, 464, 465, 467, 469, 471, 479, 487, 488, 497, 501, 503, 505, 513, 519, 524, 525, 529, 530, 531, 532, 536, 537, 540, 543, 545, 547, 548], "functor": [2, 537, 543], "further": [11, 55, 77, 98], "furthermor": [3, 6], "fuse": 344, "futur": [19, 492, 493], "g": [3, 13, 15, 17, 19, 20, 38, 40, 41, 65, 66, 73, 107, 260, 261, 478, 480, 482, 537], "g1": 19, "g2": 19, "gap": 2, "gaussian": [32, 102, 249, 255, 322, 336, 492, 493, 554], "gazebo": 553, "gazebo_model_path": 553, "ga\u0161per": 39, "gen": [128, 276, 297, 317], "gener": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 554], "generatoran": [79, 81], "generatorth": [79, 81], "gentle2009computationalstatist": 257, "geometri": [240, 241, 258, 259], "geometry_msg": [459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 487, 488, 490, 492, 493, 523, 524, 547, 548], "get": [4, 5, 40, 41, 45, 49, 51, 100, 110, 116, 122, 175, 176, 243, 260, 261, 263, 274, 290, 297, 305, 315, 338, 408, 409, 446, 448, 460, 462, 465, 467, 471, 488, 492, 493, 503, 505, 534, 553], "get_default_neighbors_kernel": [270, 340], "get_execution_polici": [460, 462, 465, 466, 467, 468, 471, 472, 478, 480, 488], "get_execution_policyauto": 488, "get_execution_policystat": [460, 462], "get_initial_estim": [460, 462, 465, 466, 467, 468, 471, 472, 478, 480, 488], "get_initial_estimateauto": [460, 462, 488], "get_map_client_": [462, 467, 478, 482], "get_map_client_beluga_amcl": 468, "get_map_client_map": 462, "get_map_client_ro": 462, "get_motion_model": [460, 462, 465, 466, 467, 468, 471, 472, 478, 480, 488], "get_motion_modelauto": [460, 462, 488], "get_random_engin": [293, 297, 305, 414, 415, 416, 417, 422, 423], "get_random_state_gener": 26, "get_sensor_model": [460, 462, 465, 466, 467, 468, 471, 472, 478, 480, 488], "get_sensor_modelauto": [460, 462], "get_sensor_modelbeluga": 488, "getconstexpr": 41, "getmap": [461, 462, 492], "getsimpleextentdim": 270, "getspac": 270, "getyaw": [534, 548], "giorgio": [42, 500, 550], "git": [5, 553], "github": [5, 32, 107, 122, 179, 249, 315, 537, 553], "give": 315, "given": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 34, 40, 41, 43, 45, 49, 51, 53, 65, 67, 69, 71, 73, 79, 94, 96, 98, 100, 102, 110, 112, 114, 116, 118, 121, 122, 128, 172, 173, 178, 179, 183, 235, 236, 238, 243, 245, 251, 257, 260, 267, 271, 274, 276, 278, 282, 283, 296, 299, 301, 302, 304, 305, 313, 315, 317, 352, 356, 362, 370, 426, 438, 441, 446, 456, 460, 462, 465, 467, 471, 488, 495, 501, 525, 534, 540, 554], "global": [14, 17, 460, 462, 465, 467, 492, 493], "global_frame_id": [492, 493], "global_loc": 492, "global_localization_callback": [460, 462, 465, 466, 467, 468, 478, 480], "global_localization_callbackbool": 462, "global_localization_callbackvoid": 460, "global_localization_server_": [460, 462, 465, 467, 478, 482], "global_localization_server_beluga_amcl": [466, 468], "global_localization_server_glob": [460, 462], "global_localization_server_rclcpp": 460, "global_localization_server_ro": 462, "glpuga": [32, 249], "gmock": [308, 309], "go": [22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 484, 486, 487, 488, 494, 495, 498, 499, 518, 520, 521, 522, 533, 534, 536, 537, 545, 546, 547, 548, 554], "goe": 2, "golden": 315, "good": [1, 4, 32, 260, 322], "googl": 550, "googletest": 308, "gov": 179, "govern": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "grai": [234, 483, 517], "graph": [22, 24, 29, 31, 33, 35, 37, 40, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 487, 494, 498, 521, 533, 536, 545, 547], "graphic": [235, 484, 518], "great": 3, "greater": [47, 65, 107, 121, 424, 438, 451], "green": [234, 483, 517, 554], "grid": [13, 15, 17, 20, 27, 32, 42, 45, 49, 51, 53, 55, 56, 77, 78, 86, 87, 90, 98, 99, 100, 110, 125, 126, 160, 184, 235, 249, 250, 251, 258, 259, 260, 267, 270, 273, 274, 299, 300, 301, 312, 313, 344, 452, 453, 458, 460, 462, 465, 467, 471, 488, 492, 493, 496, 500, 501, 505, 506, 518, 530, 533, 534, 540, 550], "grid_": [32, 299, 534], "gridgrid": 98, "gridnew": 77, "gridoccup": [55, 77, 505], "gridth": 86, "grisetti": [42, 500, 550], "ground": 1, "group": [112, 114, 121, 122, 179, 255, 260, 315, 458, 465, 469, 471, 490], "group_bi": [121, 122], "gsb07": [492, 493, 550], "gt": [12, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 50, 52, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 72, 73, 76, 78, 80, 82, 85, 87, 89, 91, 93, 94, 96, 99, 101, 102, 104, 108, 111, 113, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 327, 328, 330, 332, 334, 336, 339, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 366, 369, 371, 380, 381, 383, 384, 386, 389, 390, 392, 394, 396, 399, 402, 404, 405, 406, 408, 409, 412, 413, 414, 415, 417, 418, 420, 421, 423, 424, 426, 428, 430, 431, 433, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 465, 466, 467, 468, 469, 471, 472, 483, 487, 488, 490, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 512, 514, 516, 517, 518, 521, 522, 523, 524, 525, 530, 532, 533, 534, 536, 537, 538, 540, 544, 545, 546, 547, 548], "gtest": [162, 184, 308, 443], "guarante": 122, "guard": [177, 291], "guid": [109, 256, 257, 258, 259, 260, 447, 448, 553], "guidelin": 448, "h": [28, 39, 120, 178, 179, 187, 190, 202, 203, 216, 261, 270, 308, 309, 451, 459, 460, 461, 462, 478, 480, 487, 488, 490, 512, 523, 532, 533, 534, 546, 547, 548], "h5": 270, "h5cpp": [270, 487, 488], "h5f_acc_rdonli": 270, "h5file": 270, "ha": [1, 19, 75, 107, 122, 185, 257, 260, 280, 398, 401], "hack": 32, "half": [277, 492, 493, 538], "halfwai": 344, "handl": [179, 554], "handle_map_with_default_initial_pos": [462, 467, 468, 478, 480], "handle_map_with_default_initial_posevoid": 462, "happen": [26, 320, 492, 493, 495, 537, 538], "hardwar": 6, "has_common_tuple_typ": [27, 120, 235, 260, 267, 373, 445, 446], "has_common_tuple_type_v": [260, 261, 266, 445, 446], "has_common_tuple_type_vconstexpr": 446, "has_common_tuple_type_vconveni": 446, "has_common_tuple_typemeta": 446, "has_member_st": [290, 408], "has_member_state_v": 290, "has_member_variable_st": [290, 408], "has_member_variable_state_v": 290, "has_member_variable_weight": [290, 430], "has_member_variable_weight_v": 290, "has_member_weight": [290, 430], "has_member_weight_v": 290, "has_non_member_st": [290, 408], "has_non_member_state_v": 290, "has_non_member_weight": [290, 430], "has_non_member_weight_v": 290, "has_single_el": [27, 120, 235, 260, 267, 290, 375, 430, 445, 446], "has_single_element_v": [260, 261, 266, 445, 446], "has_single_element_vconstexpr": 446, "has_single_element_vconveni": 446, "has_single_elementmeta": [290, 446], "has_stat": 283, "has_state_v": 283, "has_valu": [122, 270, 274], "has_weight": 283, "has_weight_v": 283, "hash": [25, 27, 43, 92, 96, 112, 114, 116, 118, 120, 122, 158, 184, 208, 222, 235, 260, 267, 270, 314, 315, 318, 319, 368, 407, 426, 432, 433, 441], "hash_combin": 368, "hash_impl": [314, 315], "hash_implconstexpr": 315, "hasher": [43, 112, 114, 116, 118, 315, 426, 427, 441], "hashera": 426, "hasherhash": 426, "hashesrang": 260, "hasn": 493, "have": [3, 4, 6, 13, 18, 19, 65, 71, 75, 107, 122, 179, 234, 243, 255, 260, 370, 403, 418, 448, 483, 517, 553, 554], "hawksbil": 11, "hdf5": 270, "head": [12, 41, 255, 537], "head_index": 41, "header": [177, 291, 308, 492, 493, 523, 525], "heading_rot": [128, 276], "heavili": 3, "height": [13, 45, 49, 51, 73, 110, 111, 126, 203, 216, 245, 251, 453, 505, 506, 512, 514, 534], "height_": 453, "heightstd": [453, 534], "help": [445, 492, 493, 495, 538, 549], "helper": [92, 157, 184, 235, 260, 290, 318, 462, 467], "here": [2, 27, 32, 107, 184, 186, 188, 189, 191, 192, 195, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 260, 261, 267, 281, 336, 463, 477, 478, 489, 496, 511, 512, 527, 530, 535], "hidden": [30, 234, 346, 483, 517], "hierarchi": [28, 464, 497], "high": 4, "higher": [2, 3, 90, 122, 336], "highest": 260, "highli": 554, "histogram": 537, "histori": 6, "hit": [6, 32, 55, 75, 77, 90, 98, 249, 270, 322, 336, 492, 493], "hmmm": 122, "hold": [13, 27, 121, 122, 235, 267, 360], "home": [6, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 465, 467, 469, 471, 501, 503, 505, 538, 540, 542, 543], "homogen": [41, 435], "how": [5, 26, 234, 236, 260, 320, 328, 342, 483, 492, 493, 517, 553, 554], "howev": [4, 65, 554], "hpp": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 184, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 465, 467, 469, 471, 476, 477, 501, 503, 505, 509, 511, 519, 538, 540, 542, 543, 554], "hppaction": 129, "hppassign": 129, "hppauxiliar": [34, 184, 243, 245], "hppbeam_model": 134, "hppbearing_sensor_model": 134, "hppbresenham": 138, "hppcircular_arrai": 130, "hppconcept": [126, 184, 249, 251, 259, 274, 313, 453], "hppcontain": 130, "hppdata": [134, 145, 148], "hppdefin": [184, 287], "hppdifferential_drive_model": 131, "hppdistance_map": 146, "hppeffective_sample_s": 144, "hppevery_n": 132, "hppgener": [499, 511], "hppimplement": [23, 25, 32, 36, 41, 122, 124, 128, 173, 184, 249, 253, 257, 270, 272, 276, 278, 283, 285, 290, 293, 295, 299, 303, 305, 307, 317, 439, 441, 443, 444, 448, 450, 455, 495, 499, 511], "hppinclud": [26, 36, 184, 448, 511], "hppindexing_iter": 141, "hpplandmark": 184, "hpplandmark_detection_typ": [148, 149], "hpplandmark_sensor_model": [134, 148], "hpplikelihood_field_model": [134, 146, 147], "hppmessag": [499, 511, 537], "hppmotion": 131, "hppmultivariate_normal_distribut": 133, "hppmultivariate_uniform_distribut": 133, "hppndt_sensor_model": 147, "hppnormal": 129, "hppoccupancy_grid": 147, "hppomnidirectional_drive_model": [131, 143], "hppon_effective_size_drop": 132, "hppon_mot": 132, "hppparticl": [137, 140], "hppparticle_trait": [136, 139, 150], "hpppolici": 132, "hpppropag": [129, 136, 137], "hpprandom": [133, 134], "hppraycast": 146, "hppreweight": [129, 136, 137], "hppro": 477, "hppsensor": 134, "hppsophus_match": 135, "hppsophus_print": 135, "hppsparse_value_grid": 147, "hppstationary_model": [131, 143], "hpptake_while_kld": 150, "hpptest": 135, "hppthrun_recovery_probability_estim": [139, 140], "hpptuple_trait": 143, "hpptuple_vector": 130, "hpputil": [499, 511], "hppvalue_grid": 147, "hppzip": 142, "hsize_t": 270, "hsl_and_hsv": 537, "hsv_to_rgb_altern": 537, "html": [315, 368], "http": [5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 107, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 362, 368, 376, 408, 430, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 550, 553], "hue": [536, 537], "humbl": [11, 553], "hypot": 32, "i": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 202, 204, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 368, 369, 371, 372, 373, 374, 375, 376, 380, 381, 383, 384, 386, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 501, 502, 503, 504, 505, 506, 509, 511, 512, 517, 518, 519, 520, 521, 522, 523, 527, 530, 532, 533, 534, 535, 536, 537, 538, 539, 541, 544, 545, 546, 547, 548, 549, 553, 554], "id": [96, 122, 243, 260, 314, 315, 360, 448, 492, 493, 523, 525, 537, 550], "idea": 304, "ident": 19, "identif": 245, "identifi": [38, 53, 174, 439, 548], "idiom": [2, 3], "idsindex": 314, "ie": [59, 100, 110, 160, 184, 250, 274, 313, 453, 492, 493, 505, 532, 534, 537, 547, 548, 554], "ieee": [42, 500, 550], "ifdef": 291, "ifndef": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "ignor": [102, 245, 492, 493], "iii": 260, "ill": 260, "imag": 57, "implement": [1, 2, 3, 4, 18, 22, 26, 27, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 61, 65, 69, 79, 96, 98, 100, 104, 107, 121, 122, 123, 125, 126, 127, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 170, 172, 175, 178, 179, 180, 182, 183, 184, 235, 236, 237, 244, 246, 248, 249, 250, 251, 254, 256, 258, 259, 260, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 286, 289, 292, 293, 296, 297, 298, 300, 302, 303, 304, 308, 310, 312, 313, 314, 316, 318, 320, 346, 348, 350, 352, 354, 356, 358, 376, 390, 392, 394, 396, 398, 405, 414, 416, 418, 420, 422, 424, 426, 428, 438, 439, 440, 441, 444, 445, 447, 448, 451, 452, 453, 454, 456, 457, 458, 492, 493, 494, 495, 496, 499, 501, 509, 511, 518, 519, 521, 525, 530, 533, 538, 554], "impli": [12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "implicit": [73, 92, 243, 257], "import": [4, 55, 57, 75, 77, 90, 249, 260, 292, 302, 356, 492, 493], "improv": [42, 500, 550], "imput": 42, "ina": 532, "inact": [460, 465, 469, 471, 488, 490], "inc": [12, 23, 25, 26, 30, 32, 34, 36, 38, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "includ": [4, 13, 15, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 184, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 465, 466, 467, 468, 469, 470, 471, 472, 477, 501, 502, 503, 504, 505, 506, 511, 538, 539, 540, 541, 542, 543, 544, 553, 554], "includebeluga": [12, 22, 23, 24, 25, 35, 36, 123, 124, 129, 130, 131, 132, 133, 134, 135, 153, 174, 252, 253, 286, 287, 289, 290, 294, 295, 306, 307, 442, 443, 449, 450, 454, 455], "includebeluga_amcl": [459, 460, 461, 462, 476, 487, 488, 490], "includebeluga_ro": [494, 495, 498, 499, 509, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "includebelugaact": [29, 30, 136, 137, 161, 271, 272, 292, 293, 302, 303], "includebelugaalgorithm": [26, 121, 122, 138, 139, 140, 158, 170, 171, 172, 173, 178, 179, 182, 183, 298, 299, 314, 315, 444, 451], "includebelugaalgorithmraycast": [37, 38, 169], "includebelugacontain": [40, 41, 141, 142, 155, 447, 448], "includebelugadetail": [165, 177, 291], "includebelugamot": [127, 128, 143, 163, 275, 276, 316, 317], "includebelugapolici": [144, 152, 180, 181, 277, 278, 279, 280, 288], "includebelugarandom": [145, 166, 254, 255, 256, 257, 258, 259], "includebelugasensor": [31, 32, 33, 34, 146, 147, 148, 159, 244, 245, 248, 249, 270], "includebelugasensordata": [125, 126, 149, 160, 242, 243, 246, 247, 250, 251, 269, 273, 274, 300, 301, 312, 313, 452, 453], "includebelugatest": [162, 308, 309, 310, 311], "includebelugatyp": [164, 240, 241], "includebelugatype_trait": [157, 282, 283, 318, 319, 445, 446], "includebelugautil": [156, 185, 237, 238], "includebelugaview": [150, 151, 175, 176, 284, 285, 296, 297, 304, 305, 438, 439, 440, 441, 456, 457], "includeciabatta": [39, 168], "inclus": 104, "incorpor": 4, "incorrect": [104, 178, 255, 553], "increment": [71, 238, 392], "independ": [75, 257, 304, 554], "index": [13, 15, 17, 27, 28, 41, 45, 49, 50, 51, 52, 65, 66, 72, 100, 110, 111, 116, 118, 156, 171, 179, 184, 191, 204, 208, 217, 222, 223, 224, 225, 228, 230, 235, 237, 238, 249, 251, 260, 267, 270, 274, 410, 439, 445, 446, 464, 497, 505, 506], "index_at": [13, 45, 49, 50, 51, 52, 110, 111, 126, 204, 217, 251, 274, 505, 506], "index_atstd": 251, "index_sequ": [27, 120, 227, 228, 235, 260, 267, 314, 315, 364, 445, 446, 448], "index_sequenceunus": 314, "indexable_": 238, "indexablecontain": 71, "indexcontain": 71, "indexgrid": [49, 51], "indexing_iter": [40, 41, 71, 156, 184], "indexingiter": [41, 65, 72, 120, 191, 204, 208, 217, 222, 223, 224, 225, 228, 230, 235, 237, 238, 260], "indexingiteratora": [41, 238], "indexingiteratorindexingiter": 238, "indexpair": 171, "indic": [15, 17, 49, 51, 65, 116, 118, 178, 260, 274, 304, 492, 493], "indirect": 29, "indirectli": [22, 24, 29, 31, 33, 35, 37, 40, 121, 123, 125, 127, 170, 172, 175, 178, 180, 182, 237, 240, 244, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 438, 440, 445, 447, 449, 452, 454, 456, 494, 521, 533, 536, 545, 547], "indistinguish": 19, "individu": [55, 418], "industri": 1, "inequ": [38, 63, 326], "infer": 1, "infin": 179, "infinit": [19, 179, 255, 297, 304, 305], "inflat": [122, 492, 493], "inflect": 344, "info": [257, 451, 534], "inform": [4, 26, 34, 42, 43, 245, 257, 260, 315, 356, 382, 495, 500, 501, 537, 550], "inher": 55, "inherit": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 100, 101, 103, 105, 106, 108, 109, 110, 111, 113, 115, 117, 119, 234, 235, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 366, 369, 371, 372, 373, 374, 375, 376, 380, 381, 383, 384, 386, 389, 391, 393, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 409, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 429, 431, 433, 434, 436, 437, 465, 466, 467, 468, 469, 470, 471, 472, 483, 484, 502, 503, 504, 505, 506, 517, 518, 539, 541, 544], "init": [107, 108, 448], "initi": [4, 26, 43, 44, 65, 96, 107, 122, 175, 204, 217, 340, 382, 448, 460, 462, 465, 467, 469, 471, 488, 490, 495, 501, 502, 512, 514, 553], "initial_cov_": 492, "initial_pos": [492, 493], "initial_pose_": 492, "initial_pose_callback": [462, 465, 466, 467, 468, 469, 470, 471, 472, 478, 480, 490], "initial_pose_callbackvoid": [462, 490], "initial_pose_sub_": [462, 465, 467, 469, 471, 478, 482, 490], "initial_pose_sub_beluga_amcl": [466, 468, 470, 472], "initial_pose_sub_pos": [462, 490], "initial_pose_sub_rclcpp": 490, "initial_pose_sub_ro": 462, "initial_pose_top": [492, 493], "initial_posit": 554, "initial_position_distribut": 554, "initial_position_sigma": 554, "initialize_from_estim": [460, 462, 465, 466, 467, 468, 471, 472, 478, 480, 488], "initialize_from_estimatebool": [460, 462, 488], "initialize_from_map": [460, 462, 465, 466, 467, 468, 478, 480, 495, 501, 502, 512, 514], "initialize_from_mapbool": [460, 462], "initialize_from_mapvoid": 495, "initializer_list": [107, 108, 448], "initializevoid": [26, 495], "initialpos": [492, 493], "inject": [53, 104], "inlin": [12, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 98, 99, 101, 102, 108, 111, 112, 113, 114, 115, 117, 119, 176, 181, 260, 270, 272, 278, 280, 283, 285, 288, 290, 293, 297, 303, 305, 308, 309, 338, 339, 369, 371, 399, 402, 404, 417, 423, 432, 433, 439, 441, 446, 457, 501, 523, 525, 532, 536, 537, 544, 546, 548], "inlineconstexpr": [29, 65, 104, 107, 116, 118, 175, 180, 260, 271, 277, 279, 284, 292, 296, 302, 304, 348, 352, 356, 370, 392, 394, 396, 401, 403, 412, 414, 416, 422, 424, 426, 438, 440, 456], "inlineconstexprnoexcept": [65, 69, 92, 104, 408, 430], "inlineconstexprprotect": 418, "inlineexplicit": [55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 94, 99, 100, 101, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 404, 503, 505, 543, 544], "inlineexplicitconstexpr": [86, 107, 392], "inlineexplicitconstexprnoexcept": 69, "inlineexplicitnoexcept": 98, "inlinenoexcept": [65, 71, 79], "inlinestat": [380, 381, 383, 384, 386], "input": [4, 29, 30, 69, 70, 96, 102, 121, 183, 260, 284, 304, 346, 348, 352, 356, 418, 426, 439, 440, 445, 446, 448, 451], "input_iter": [260, 447, 448], "input_rang": [305, 441, 448], "inputnext": 69, "insert": [26, 121, 122, 236, 296, 297, 320, 414, 416, 441, 448, 537], "insert_iter": [447, 448], "insid": [270, 340], "instal": [6, 553, 554], "instanc": [13, 14, 15, 16, 17, 18, 20, 21, 26, 27, 31, 32, 33, 34, 43, 55, 57, 65, 67, 75, 77, 79, 81, 90, 94, 100, 121, 122, 127, 128, 175, 234, 235, 244, 245, 248, 249, 257, 260, 267, 270, 275, 276, 322, 324, 328, 332, 336, 338, 340, 342, 344, 352, 356, 414, 426, 432, 460, 462, 465, 467, 471, 483, 488, 517, 532], "instanti": [45, 47, 49, 51, 53, 234, 460, 462, 465, 467, 471, 483, 488, 517], "instead": [5, 22, 24, 29, 31, 32, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 79, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 243, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 491, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547, 554], "int": [4, 13, 17, 20, 30, 38, 45, 46, 49, 50, 51, 52, 53, 54, 63, 64, 71, 72, 100, 101, 110, 111, 126, 172, 173, 174, 234, 238, 251, 255, 260, 269, 270, 272, 274, 290, 293, 301, 303, 310, 311, 313, 338, 340, 346, 348, 350, 352, 354, 356, 358, 368, 369, 382, 408, 426, 430, 441, 451, 483, 505, 506, 517, 522, 554], "int64_t": 270, "int8_t": [40, 41, 260, 534, 540, 541], "integ": [15, 20, 27, 37, 38, 59, 62, 63, 64, 65, 188, 191, 192, 197, 200, 204, 205, 208, 217, 219, 222, 223, 224, 228, 230, 235, 260, 267, 270, 314, 315, 326, 327, 368, 492, 493, 554], "integerinteg": 61, "integr": [2, 11, 71, 438, 459, 461, 476, 477, 487, 519, 549, 553, 554], "integral_const": [41, 235, 315, 446], "intellig": [42, 500, 550], "intend": [1, 5], "intens": 77, "interchang": [2, 122], "interest": 260, "interfac": [3, 27, 36, 39, 107, 153, 160, 184, 235, 236, 246, 260, 267, 306, 447, 463, 491, 496, 499, 509, 511, 519, 536], "intern": [19, 26, 42, 79, 104, 107, 179, 257, 392, 444, 500, 550], "internalcontain": [27, 107, 108, 120, 186, 188, 189, 191, 192, 196, 197, 198, 200, 209, 210, 211, 212, 223, 224, 226, 227, 228, 230, 235, 260, 267, 447, 448], "internalcontainercontain": 107, "interpret": [234, 260, 483, 496, 505, 517, 518, 530, 533, 534, 540], "interspers": 297, "interv": [26, 65, 320, 458, 492, 493, 537], "inth": 532, "intrins": [315, 322], "inv_resolut": 301, "invalid": [43, 79, 81, 257, 501, 523, 534, 546, 548], "invalid_argu": 270, "invers": [128, 179, 243, 245, 249, 269, 276, 280, 299], "inverse_mean": 179, "invert": [39, 537], "investig": [32, 249], "invis": [234, 483, 517], "invoc": [19, 121], "invok": [30, 65, 79, 122, 346, 426, 441], "invoke_result_t": [26, 171], "involv": 29, "io": 270, "ioformat": 311, "iostream": [310, 311], "iota": [178, 179, 521, 522], "iresult": 314, "iron": 11, "irwini": 11, "is_adding_const": 185, "is_arithmetic_v": [27, 92, 117, 119, 120, 178, 179, 208, 211, 222, 224, 226, 228, 235, 260, 267, 314, 315, 319], "is_base_of_v": [27, 120, 189, 195, 201, 212, 220, 224, 226, 227, 228, 230, 231, 235, 254, 255, 257, 260, 267, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "is_complet": [235, 446], "is_const_v": 185, "is_directori": 270, "is_execution_policy_v": [272, 293, 303, 348, 350, 352, 354, 356, 358], "is_floating_point_v": [247, 269, 451], "is_fre": [17, 274, 512, 514, 534, 540, 541], "is_freestat": 534, "is_invocable_r_v": [288, 403, 404, 441], "is_invocable_v": [26, 293, 297], "is_lvalue_reference_v": [185, 305], "is_nothrow_swappable_v": [41, 65, 66], "is_obstacl": 171, "is_occupi": [17, 274, 512, 514, 534, 540, 541], "is_occupiedstat": 534, "is_particl": 283, "is_particle_range_v": [172, 173, 260, 272, 283, 293, 303, 305, 441, 444], "is_particle_v": 283, "is_random_distribut": 305, "is_random_distribution_v": 305, "is_range_closur": 30, "is_range_closure_v": [30, 346], "is_same_v": [26, 30, 34, 41, 65, 122, 128, 178, 179, 245, 260, 270, 305, 313, 315, 446, 451, 525, 536, 537], "is_tuple_lik": [120, 235, 260, 290, 408, 430, 445, 446], "is_tuple_like_v": [27, 120, 227, 228, 235, 260, 261, 266, 267, 283, 366, 367, 375, 411, 445, 446], "is_tuple_like_vconstexpr": 446, "is_tuple_like_vconveni": 446, "is_tuple_likemeta": [290, 446], "is_unknown": [512, 514, 534, 540, 541], "is_unknownstat": 534, "is_valid_neighbor": 122, "isapprox": 257, "isbn": 550, "isnan": 247, "issu": [6, 32, 122, 249, 255], "it_": 305, "iter": [26, 27, 37, 38, 40, 41, 43, 61, 62, 64, 65, 66, 71, 72, 107, 120, 156, 178, 179, 184, 191, 204, 208, 217, 222, 223, 224, 228, 230, 235, 237, 238, 260, 267, 297, 304, 320, 326, 327, 414, 416, 439, 447, 448, 456, 495, 501], "iter_mov": [412, 413, 457], "iter_reference_t": [412, 413, 457], "iter_rvalue_reference_t": [412, 413, 457], "iter_value_t": [260, 412, 413, 447, 448, 457], "iter_zip_with": 457, "iterator_categori": [38, 63, 64, 71, 72, 217, 228, 238], "iterator_categorycategori": 238, "iterator_categoryiter": 38, "iterator_categorystd": [38, 238], "iterator_t": [297, 305], "iterator_trait": [41, 65], "iteratorbresenham": [38, 235], "iteratorindexingiter": 41, "iteratorinlin": 64, "iteratorinlineexplicit": 64, "iteratoriter": [38, 41], "ith": [40, 41, 260], "itr": 313, "its": [3, 26, 27, 34, 41, 65, 71, 73, 122, 178, 179, 235, 238, 243, 260, 267, 365, 403, 412, 413, 446, 457, 460, 462, 465, 467, 471, 488, 491, 553, 554], "itself": [2, 3, 30, 171, 460, 465, 469, 471, 488, 490, 493, 525], "j": 260, "jalisco": 11, "jazzi": 11, "jmangelson": 260, "jointli": 260, "journal": 42, "jtc1": 315, "jtsmeaaaqbaj": 550, "jump": [492, 493], "just": [6, 346, 553], "k": [28, 187, 190, 218, 228, 231, 261, 441, 451, 512, 554], "kaappa": 451, "kalman": 4, "kappa": [260, 451], "kappaparamet": 260, "karrowbodylength": 537, "karrowheadlength": 537, "karrowheadwidth": 537, "karrowlength": 537, "kb": 537, "kbit": 315, "kdefaultangularresolut": 537, "kdefaultkldz": [260, 426, 427, 440, 441], "kdefaultkldzconstexpr": 441, "kdefaultkldzdefault": 441, "kdefaultlinearresolut": 537, "kdefaultneighborkernel2d": 270, "kdefaultneighborkernel3d": 270, "kdefaultprob": [218, 231, 297, 414, 415], "kdefaultprobabilitybeluga": 415, "kdefaultprobabilitydefault": 297, "kdefaultprobabilitystat": 297, "kdefaultthreshold": [218, 231, 278, 394, 395], "kdefaultthresholdbeluga": 395, "kdefaultthresholddefault": 278, "kdefaultthresholdstat": 278, "kdifferentialmodelnam": 490, "keep": [3, 6, 260, 493, 553, 554], "kei": [2, 6, 100, 121, 122, 313, 554], "kept": [65, 107], "kernel": [90, 270, 340, 554], "kextrapolateonread": [40, 41, 260], "key_typ": [100, 101, 122, 218, 228, 270, 313], "key_typekei": 313, "key_typetypenam": 313, "keywithprior": 122, "keyword": 39, "kfib": 315, "kflippingrot": 128, "kfreevalu": [512, 516, 534, 540], "kfreevaluebeluga_ro": 541, "kfreevaluefre": 534, "kfreevaluestat": 534, "kg": 537, "kglobal": [51, 259, 274], "kind": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "kindex": 446, "kinemat": 554, "klayoutrevers": [40, 41, 65, 260], "kld": [26, 42, 236, 260, 320, 440, 441, 458, 492, 493, 495, 500, 538, 550], "kld_condit": [260, 261, 263, 426, 440, 441], "kld_conditionauto": 441, "kld_epsilon": [26, 218, 231, 320, 495, 512, 516, 538], "kld_epsilonbeluga": 321, "kld_epsilonbeluga_ro": 539, "kld_epsilondoubl": [26, 495], "kld_epsilonmaximum": 495, "kld_epsilonus": 26, "kld_z": [26, 218, 231, 320, 495, 512, 516, 538], "kld_zbeluga": 321, "kld_zbeluga_ro": 539, "kld_zdoubl": [26, 495], "kld_zupper": 495, "kld_zuse": 26, "klocal": [51, 274], "kmatch": 446, "kminpointspercel": 270, "kminvari": 270, "kmodifi": [38, 59, 60, 194, 218], "kmodifieddefinit": 38, "knav2differentialmodelnam": 490, "knav2omnidirectionalmodelnam": 490, "knin": 451, "knone": [40, 41, 65, 260], "knout": 451, "know": [297, 448, 554], "known": [2, 57, 75, 328, 342, 458, 460, 462, 465, 467, 471, 488, 492, 493, 554], "knumdim": 270, "koccupiedvalu": [512, 516, 534, 540], "koccupiedvaluebeluga_ro": 541, "koccupiedvalueoccupi": 534, "koccupiedvaluestat": 534, "komnidirectionalmodelnam": 490, "kr": 537, "krolloveronwrit": [40, 41, 260], "ksinglelin": 311, "kstandard": [38, 59, 60, 194, 218], "kstandardstandard": 38, "kstationarymodelnam": 490, "ktupleindexambigu": 446, "ktupleindexnotfound": 446, "kullback": [260, 440], "kunknownvalu": [512, 516, 534, 540], "kunknownvaluebeluga_ro": 541, "kunknownvaluestat": 534, "kunknownvalueunknown": 534, "l": [14, 28, 120, 187, 190, 202, 205, 219, 228, 231, 243, 261, 451, 478, 480, 482, 507, 512], "l133": 179, "l2": [90, 338], "l262": 107, "l_matrix": 451, "label": [234, 483, 517], "lack": 55, "lambda": [2, 122], "lambda_short": [32, 219, 231, 322, 493], "lambda_shortbeluga": 323, "lambda_shortdoubl": 32, "lambda_shortintrins": 32, "landmark": [27, 33, 34, 57, 73, 74, 75, 159, 160, 164, 184, 235, 236, 240, 241, 242, 243, 244, 245, 260, 267, 307, 330, 334, 458], "landmark_a_bearing_in_sensor": 243, "landmark_a_position_in_world": 243, "landmark_b_bearing_in_sensor": 243, "landmark_b_distance_in_world_squar": 243, "landmark_b_position_in_world": 243, "landmark_b_squared_in_world_squar": 243, "landmark_bearing_in_robot": 245, "landmark_bearing_in_sensor": 34, "landmark_detection_typ": [33, 34, 164, 184, 242, 243, 244, 245, 330, 334], "landmark_in_robot_posit": 245, "landmark_map": [34, 57, 58, 73, 75, 76, 148, 160, 184, 245, 554], "landmark_map_": [34, 245], "landmark_mapmap": [57, 75], "landmark_posit": 554, "landmark_position_in_sensor": 243, "landmark_position_in_world": 245, "landmark_range_in_robot": 245, "landmark_sensor_model": [75, 159, 184, 306, 307, 332], "landmarkbearing3": [34, 73, 74, 240, 241, 243, 260, 261, 265, 330], "landmarkbearing3bear": [241, 243], "landmarkbearing3eigen": [241, 243], "landmarkbearingdetect": [34, 57, 120, 189, 191, 231, 240, 241, 260, 331], "landmarkbearingdetectionlandmark": [235, 241], "landmarkcategori": [34, 73, 74, 240, 241, 243, 245, 260, 261, 265, 330, 334], "landmarkcategorytyp": [241, 243], "landmarkcategoryuint32_t": [241, 243], "landmarkmap": [33, 34, 58, 74, 76, 120, 188, 195, 197, 201, 205, 206, 208, 213, 219, 220, 222, 223, 226, 228, 229, 232, 235, 242, 243, 244, 245, 260], "landmarkmapbas": [34, 235, 243, 245], "landmarkmapboundari": [73, 74, 240, 241, 243, 260, 261, 265], "landmarkmapboundariesboundari": [241, 243], "landmarkmapboundarieseigen": [241, 243], "landmarkmapclass": [57, 75], "landmarkmapinlin": 74, "landmarkmapinlineexplicit": 74, "landmarkmaplandmarkmap": 243, "landmarkmodelparam": [75, 120, 226, 231, 244, 245, 260, 333], "landmarkmodelparamparamet": [235, 245], "landmarkposition3": [73, 74, 240, 241, 243, 245, 260, 261, 265, 334], "landmarkposition3eigen": [241, 243], "landmarkposition3posit": [241, 243], "landmarkpositiondetect": [73, 75, 120, 189, 191, 231, 240, 241, 243, 245, 260, 335], "landmarkpositiondetectionlandmark": [235, 241], "landmarks_": 243, "landmarks_set_position_data": [73, 74, 219, 228, 243], "landmarks_set_position_datastd": 243, "landmarks_set_position_datavector": 243, "landmarksensormodel": [21, 27, 76, 120, 205, 208, 213, 219, 220, 222, 223, 226, 228, 229, 232, 235, 236, 244, 245, 260, 267, 332], "landmarksensormodel2d": [244, 245, 260, 261, 265], "landmarksensormodel3d": [244, 245, 260, 261, 265], "landmarksensormodelgener": 245, "landmarksensormodellandmarksensormodel": 245, "landmarkslist": 73, "lang": 41, "languag": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "laps": [492, 493], "larg": [1, 4, 243, 260, 448, 493], "larger": 3, "laser": [47, 160, 184, 235, 246, 249, 260, 336, 460, 462, 465, 467, 471, 488, 492, 493, 503, 522], "laser_callback": [460, 462, 465, 466, 467, 468, 471, 472, 478, 480, 488], "laser_callbackvoid": [460, 462, 488], "laser_lambda_short": 492, "laser_likelihood_max_dist": [492, 493], "laser_max_rang": [492, 493], "laser_min_rang": [492, 493], "laser_model_typ": [492, 493], "laser_scan": [47, 160, 184, 459, 460, 462, 467, 468, 487, 488, 494, 495, 498, 499, 501, 502, 503, 509, 511, 523], "laser_scan_connection_": [460, 462, 465, 467, 471, 478, 482, 488], "laser_scan_connection_beluga_amcl": [466, 468, 472], "laser_scan_connection_connect": [460, 462, 488], "laser_scan_connection_message_filt": [460, 462, 488], "laser_scan_filter_": [460, 462, 465, 467, 471, 478, 482, 488], "laser_scan_filter_beluga_amcl": [466, 468, 472], "laser_scan_filter_std": [460, 462, 488], "laser_scan_filter_transform": [460, 462, 488], "laser_scan_sub_": [460, 462, 465, 467, 471, 478, 482, 488], "laser_scan_sub_beluga_amcl": [466, 468, 472], "laser_scan_sub_las": [460, 462, 488], "laser_scan_sub_message_filt": 462, "laser_scan_sub_std": [460, 488], "laser_scanlas": 501, "laser_sigma_hit": 492, "laser_z_hit": 492, "laser_z_max": 492, "laser_z_rand": 492, "laser_z_short": 492, "laserscan": [2, 47, 281, 460, 461, 462, 465, 466, 467, 468, 471, 472, 488, 492, 493, 495, 496, 499, 501, 502, 504, 507, 509, 511, 512, 514, 515, 518, 519, 521, 522, 523, 525, 530], "laserscanconstsharedptr": [503, 504, 522, 523], "laserscaninlin": 504, "laserscaninlineexplicit": 504, "laserscanlaserscan": 522, "laserscanthin": [495, 518, 522, 523], "last": [6, 41, 65, 66, 107, 108, 260, 328, 342, 424, 438, 448, 465, 467, 471, 492, 493, 495, 538, 554], "last_in": 448, "last_known_estimate_": [460, 462, 465, 467, 471, 478, 482, 488], "last_known_estimate_beluga_amcl": [466, 468, 472], "last_known_estimate_last": [460, 462, 488], "last_known_estimate_std": [460, 462, 488], "last_known_map_": [462, 467, 478, 482], "last_known_map_beluga_amcl": 468, "last_known_map_last": 462, "last_known_map_nav_msg": 462, "last_known_odom_transform_in_map_": [460, 462, 465, 467, 471, 478, 482, 488], "last_known_odom_transform_in_map_beluga_amcl": [466, 468, 472], "last_known_odom_transform_in_map_last": [460, 462, 488], "last_known_odom_transform_in_map_std": [460, 462, 488], "last_out": 448, "lastsentinel": 65, "latch": 493, "latest": 5, "latest_pose_": 280, "launch": [6, 553], "law": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "layer": [104, 525, 526, 530], "layout": [3, 15, 41, 65, 260], "lazili": [175, 236, 284, 403], "lead": 297, "least": [5, 175, 314, 493, 537], "left": [288, 292, 405, 406], "left_hash": 315, "legend": [45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 465, 467, 469, 471, 503, 505], "leibler": [260, 440], "length": [3, 20], "length_error": 41, "length_errorif": 65, "less": [29, 77, 107, 122, 260, 492, 493, 538], "let": [32, 554], "level": [27, 184, 235, 267, 462, 463, 467, 468, 477, 484, 496, 511, 518, 530], "leverag": [2, 491], "lflag": [40, 41, 260], "li": 42, "lib": [368, 554], "librari": [2, 3, 34, 36, 100, 122, 153, 184, 236, 241, 243, 245, 283, 285, 289, 308, 368, 458, 485, 519, 549, 554], "licens": [1, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "lidar": [6, 32, 55, 75, 77, 90, 249, 270, 492, 493, 503, 519], "lie": [179, 255, 260, 270, 340, 458, 493], "lifecycl": [459, 460, 463, 465, 469, 471, 484, 485, 487, 488, 490, 493], "lifecycle_nod": [459, 460, 487, 488, 490], "lifecyclenod": [460, 465, 469, 471, 484, 488, 490], "lifecyclenodeinterfac": 460, "lifecyclepublish": [465, 469, 471, 490], "lifetim": [55, 57, 75, 77, 90, 537], "lifo": 65, "like": [3, 6, 27, 37, 40, 41, 67, 71, 94, 102, 107, 128, 157, 169, 184, 235, 236, 260, 267, 276, 283, 290, 297, 299, 317, 362, 365, 373, 374, 376, 408, 430, 445, 446, 447, 450, 493, 537, 554], "likelihood": [2, 32, 77, 90, 159, 184, 235, 236, 248, 249, 260, 270, 302, 307, 338, 340, 458, 493, 554], "likelihood_at": [90, 91, 205, 219, 269, 270, 338, 339], "likelihood_atdoubl": [269, 270], "likelihood_data": 249, "likelihood_field": [77, 78, 205, 219, 249, 492, 493], "likelihood_field_": 249, "likelihood_field_model": [77, 134, 159, 184, 306, 307, 336], "likelihood_fieldconst": 249, "likelihoodfieldmodel": [2, 21, 27, 78, 120, 205, 208, 213, 219, 220, 222, 223, 226, 228, 229, 232, 235, 236, 248, 249, 260, 267, 336, 495, 501], "likelihoodfieldmodellikelihood": 249, "likelihoodfieldmodellikelihoodfieldmodel": 249, "likelihoodfieldmodelparam": [77, 120, 220, 226, 231, 233, 248, 249, 260, 337], "likelihoodfieldmodelparamparamet": [235, 249], "limit": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 71, 83, 86, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 314, 315, 317, 318, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 493, 495, 499, 522, 523, 534, 537, 538, 546, 548], "limited_rang": 448, "line": [27, 37, 38, 59, 62, 63, 64, 120, 188, 191, 192, 197, 200, 204, 205, 208, 217, 219, 222, 223, 224, 228, 230, 235, 260, 267, 326, 327, 537], "line_list": 537, "linear": [15, 17, 27, 49, 110, 122, 160, 179, 184, 235, 250, 260, 267, 274, 344, 452, 453, 458], "linear_clustering_resolut": [112, 113, 114, 115, 315], "linear_clustering_resolutionclust": [112, 114], "linear_grid": [49, 160, 184, 273, 274, 452, 453], "linear_hash_resolut": [122, 219, 231, 344], "linear_hash_resolutionbeluga": 345, "linear_hash_resolutionclust": 122, "linear_hash_resolutiondoubl": 122, "linear_resolut": [512, 516, 525, 536, 537, 543], "linear_resolutionbeluga_ro": 544, "linear_resolutionconst": 537, "linear_resolutionlinear": 525, "linear_resolutionresolut": 537, "lineargrid2": [17, 49, 281], "linearli": 537, "linebresenham": 38, "linelin": 38, "link": [186, 188, 189, 191, 192, 195, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 261, 308, 478, 512, 527], "linux": 11, "list": [5, 28, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 186, 188, 189, 191, 192, 195, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 235, 261, 268, 281, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 363, 367, 368, 370, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 401, 403, 405, 408, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 435, 464, 465, 467, 469, 471, 478, 484, 489, 497, 501, 503, 505, 512, 518, 527, 531, 535, 537, 538, 540, 543], "listen": [462, 465, 467, 469, 471, 490], "literatur": [270, 340], "littl": 1, "ll": 245, "llt": 451, "llvm": [177, 291], "load": [3, 493, 553], "load_from_hdf5": 270, "local": [1, 3, 5, 6, 11, 14, 17, 26, 27, 32, 43, 107, 122, 235, 249, 260, 267, 320, 458, 492, 493, 494, 495, 496, 499, 501, 503, 509, 511, 518, 525, 530, 538, 553, 554], "local_setup": 553, "localization_launch": 6, "localization_map": 6, "localization_params_fil": 6, "locat": [73, 243], "log": [12, 34, 128, 179, 245, 255, 276, 280, 315, 465, 467, 471, 537, 548], "logarithm": 179, "logic": [3, 288, 405], "long": [1, 19, 104], "longer": 3, "longitudin": 342, "longstand": 491, "look": [27, 107, 235, 236, 260, 267, 447], "lookup": 260, "loss": [3, 492, 493, 495, 538], "lot": 448, "low": [4, 448, 554], "lower": [47, 122, 492, 493, 538], "lsquo": 43, "lt": [12, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 50, 52, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 72, 73, 76, 78, 80, 82, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 99, 101, 102, 104, 108, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 327, 328, 330, 332, 334, 336, 339, 341, 342, 344, 346, 348, 350, 352, 354, 356, 358, 361, 364, 366, 369, 371, 380, 381, 383, 384, 386, 389, 390, 392, 394, 396, 399, 402, 404, 405, 406, 408, 409, 412, 413, 414, 415, 417, 418, 420, 421, 423, 424, 426, 428, 430, 431, 433, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 465, 466, 467, 468, 469, 471, 472, 483, 487, 488, 490, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 512, 514, 516, 517, 518, 521, 522, 523, 524, 525, 530, 532, 533, 534, 536, 537, 538, 540, 544, 545, 546, 547, 548], "lvalu": [19, 29, 40, 41, 61, 260], "m": [21, 28, 41, 42, 65, 66, 100, 120, 187, 190, 202, 206, 220, 228, 231, 261, 478, 480, 482, 512, 554], "m0": 439, "m1": 439, "m_pi": 32, "m_usedclass": [234, 483, 517], "ma": [42, 500, 550], "macro": [39, 308], "made": 5, "magazin": 42, "mai": [5, 6, 12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 65, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 553, 554], "main": [12, 19, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 121, 122, 125, 126, 127, 128, 170, 171, 172, 173, 175, 178, 179, 180, 182, 183, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 267, 269, 270, 271, 273, 274, 275, 276, 277, 279, 282, 283, 284, 288, 289, 290, 292, 296, 298, 299, 300, 301, 302, 304, 308, 312, 313, 314, 315, 316, 317, 318, 319, 438, 440, 441, 444, 445, 446, 447, 448, 451, 452, 453, 456, 494, 495, 496, 498, 521, 522, 523, 525, 530, 533, 534, 536, 537, 554], "maintain": [43, 501], "major": [493, 505, 532, 534, 547, 548], "make": [3, 29, 32, 65, 249, 255, 260, 304, 308, 344, 370, 536, 537, 554], "make_action_closur": [30, 272, 293, 303], "make_cluster_map": 122, "make_from_pair": 122, "make_from_st": [26, 260, 261, 266, 282, 283, 305, 495, 554], "make_from_state_fn": [120, 208, 222, 235, 260, 282, 283, 305, 371], "make_from_state_fnfunct": 283, "make_from_statea": [283, 305], "make_from_stateconstexpr": [283, 305], "make_index_sequ": [315, 362, 446, 448], "make_likelihood_field": 249, "make_opt": [251, 299], "make_origin_transform": 534, "make_pair": [122, 451, 495], "make_particle_filt": [460, 462, 465, 466, 467, 468, 471, 472, 478, 480, 488], "make_particle_filterauto": [460, 462, 488], "make_polici": [181, 260, 261, 266, 278, 280, 288], "make_policy_fn": [181, 260, 278, 280, 288], "make_policyconstexpr": [181, 278, 280, 288], "make_policymak": [181, 278, 280, 288], "make_priority_queu": [121, 122], "make_priority_queueauto": 122, "make_signed_t": [71, 238, 315], "make_subrang": 448, "make_transform": 257, "make_tupl": 315, "make_unsigned_t": 315, "make_view_closur": [297, 305, 439, 441], "manag": [5, 57, 75, 465, 469, 471, 490, 492, 493], "mangelson": 260, "mangelson2020tro": 260, "mani": [1, 2, 3, 26, 73, 320, 492, 493, 554], "manifold": 260, "manual": [26, 43, 495, 501], "map": [6, 26, 27, 32, 34, 42, 43, 44, 55, 56, 57, 58, 65, 73, 75, 76, 77, 90, 100, 121, 122, 160, 170, 171, 179, 184, 235, 240, 241, 242, 243, 245, 249, 255, 260, 267, 270, 336, 340, 460, 462, 465, 467, 468, 471, 487, 488, 492, 493, 495, 500, 501, 502, 536, 537, 550, 553], "map_boundaries_": 243, "map_callback": [460, 462, 465, 466, 467, 468, 478, 480], "map_callbackvoid": [460, 462], "map_distribution_": 495, "map_limit": [73, 74, 206, 220, 243], "map_limitslandmarkmapboundari": 243, "map_servic": 492, "map_siz": 554, "map_sub_": [460, 462, 465, 467, 478, 482], "map_sub_beluga_amcl": [466, 468], "map_sub_occup": [460, 462], "map_sub_rclcpp": 460, "map_sub_ro": 462, "map_timer_": [462, 467, 478, 482], "map_timer_beluga_amcl": 468, "map_timer_callback": [462, 467, 468, 478, 480], "map_timer_callbackvoid": 462, "map_timer_ro": 462, "map_timer_tim": 462, "map_top": [492, 493], "map_typ": [26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 100, 101, 220, 228, 245, 249, 270, 313], "map_typemap": [32, 249, 270], "map_typemaptyp": 313, "map_typeoccupancygrid": [32, 249], "map_typesparsegridt": 270, "map_typeunderli": 313, "map_yaml_path": 6, "mapnew": 55, "mapoccup": 501, "mapped_typ": [90, 100, 101, 220, 228, 270, 313], "mapped_typetypenam": 313, "mapped_typevalu": 313, "mapth": 121, "maptyp": [101, 191, 199, 210, 211, 218, 220, 224, 226, 228, 235, 260, 312, 313], "maptypeassoci": 100, "margin": 4, "marker": [465, 469, 471, 490, 523, 525, 536, 537], "marker_arrai": [459, 460, 523], "markerarrai": [465, 469, 471, 490, 493, 523, 525, 536, 537], "mask": [40, 41, 260], "mass": 554, "match": [3, 4, 34, 55, 65, 67, 86, 94, 102, 116, 118, 128, 178, 245, 260, 276, 317, 445, 446, 493, 525, 554], "matcher": [162, 184, 308, 309, 443], "mathemat": [260, 451], "mathrm": [4, 554], "matric": [310, 458], "matrix": [79, 82, 174, 179, 206, 208, 220, 222, 226, 228, 230, 235, 255, 256, 257, 260, 269, 270, 310, 311, 315, 338, 378, 379, 382, 385, 387, 451, 487, 488, 532, 537, 545, 546, 547, 548], "matrix2": [178, 179, 260], "matrix2xd": 269, "matrix3": [178, 179, 260, 532, 547, 548], "matrix3d": [460, 462, 465, 466, 467, 468, 471, 472, 488, 495, 501, 502], "matrix3xd": 269, "matrix6": [26, 122, 178, 179, 260, 495], "matrix_s": [220, 231, 255, 382], "matrix_sizebeluga": 386, "matrix_typ": [81, 82, 220, 228, 257], "matrix_typematrix": 257, "matrix_typeth": 257, "matrixbas": [260, 451], "matrixl": 451, "max": [32, 243, 259, 270, 305, 308, 322, 426, 427, 441, 451, 492, 493, 503, 504, 522, 537], "max_beam": [492, 493, 503, 504, 522], "max_beams_": 522, "max_beamsmaximum": 503, "max_bin_weight": 537, "max_eigenvalue_index": 179, "max_eigenvector": 179, "max_el": [121, 122, 302, 303], "max_laser_dist": [220, 231, 249, 336], "max_laser_distancebeluga": 337, "max_laser_distancedoubl": 249, "max_laser_distancemaximum": 249, "max_obstacle_dist": [220, 231, 249, 336], "max_obstacle_distancebeluga": 337, "max_obstacle_distancedoubl": 249, "max_obstacle_distancemaximum": 249, "max_particl": [26, 220, 231, 320, 492, 493, 495, 512, 516, 538], "max_particlesbeluga": 321, "max_particlesbeluga_ro": 539, "max_particlesmaximum": [26, 495], "max_particlesstd": [26, 495], "max_prior": 122, "max_rang": [14, 47, 98, 99, 247, 299, 503, 504, 512, 514, 522], "max_range_": [299, 522], "max_rangeauto": 522, "max_rangemaximum": [98, 503], "max_siz": [41, 65, 66, 206, 220], "max_sizeconstexpr": 41, "max_weight": 122, "maxcoeff": 179, "maxim": 243, "maxima": 260, "maximum": [14, 41, 65, 260, 320, 322, 336, 492, 493, 503, 522, 538], "maxmaximum": 426, "mayb": 122, "maybe_ndt": 270, "maybe_unus": [102, 103, 314, 315, 317, 465, 466, 469, 470, 471, 472, 490], "mcl": [1, 11, 458, 519, 554], "mean": [13, 15, 17, 26, 79, 80, 81, 82, 121, 122, 178, 179, 220, 231, 234, 257, 260, 269, 270, 338, 344, 451, 458, 483, 492, 493, 517, 554], "mean_": 257, "mean_pose_vector": 179, "mean_transl": 179, "meana": 81, "meanan": 79, "meanbeluga": 339, "meanderiv": [260, 451], "meanderivedconcret": 260, "meaneigen": 269, "meanin": 107, "meanmean": [260, 269], "means_dataset": 270, "means_matrix": 270, "meanth": 260, "measur": [4, 21, 26, 32, 43, 44, 55, 57, 75, 77, 90, 91, 98, 236, 269, 270, 302, 338, 339, 340, 492, 493, 495, 503, 522, 554], "measurement_cel": 270, "measurement_typ": [21, 26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 220, 228, 245, 249, 270], "measurement_typemeasur": [32, 34, 245, 249, 270], "measurement_typestd": [32, 34, 245, 249, 270], "measurementmeasur": 43, "mechan": [26, 260, 320], "meet": [79, 81], "member": [18, 19, 27, 28, 36, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 153, 184, 235, 260, 267, 268, 283, 285, 289, 297, 305, 308, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 363, 365, 367, 368, 370, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 401, 403, 405, 408, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 435, 446, 448, 464, 465, 467, 469, 471, 492, 493, 497, 501, 503, 505, 531, 538, 540, 543], "memori": [13, 15, 65, 122, 260, 459, 460, 461, 462, 533, 534, 536, 537], "merit": 260, "messag": [462, 465, 466, 467, 468, 469, 470, 471, 472, 490, 492, 493, 495, 496, 503, 505, 509, 511, 518, 519, 521, 522, 524, 525, 526, 530, 532, 533, 534, 536, 537, 545, 546, 547, 548], "message_filt": [459, 460, 461, 462, 465, 467, 471, 487, 488], "messagea": 525, "messagefilt": [460, 462, 465, 467, 471, 488], "messagemark": 525, "messagemessag": 525, "messageparticl": 525, "meta": [178, 179, 235, 260, 362, 365, 372, 374, 376, 410, 445], "metaprogram": 3, "meter": [14, 26, 98, 100, 112, 114, 313, 320, 492, 493, 503, 505, 525, 534, 537, 543, 554], "method": [1, 4, 42, 43, 61, 77, 107, 255, 257, 260, 408, 430, 445, 446, 462, 467, 501], "metric": [26, 152, 184, 277, 278, 287], "might": [32, 122], "migrat": [4, 491], "min": [41, 122, 128, 243, 249, 259, 260, 276, 299, 305, 320, 426, 427, 440, 441, 503, 504, 522, 537, 554], "min_angl": [280, 396, 397, 401, 402], "min_angle_": 280, "min_angleth": 401, "min_dist": [280, 396, 397, 401, 402, 554], "min_distance_": 280, "min_distanceth": 401, "min_el": [243, 554], "min_likelihood": 90, "min_particl": [26, 220, 231, 320, 492, 493, 495, 512, 516, 538], "min_particle_weight": 554, "min_particlesbeluga": 321, "min_particlesbeluga_ro": 539, "min_particlesminimum": [26, 495], "min_particlesstd": [26, 495], "min_rang": [14, 47, 247, 503, 504, 512, 514, 522], "min_range_": 522, "min_rangeauto": 522, "min_rangeminimum": 503, "min_scale_factor": 537, "minim": [3, 34, 73, 243, 553], "minimization_funct": 243, "minimum": [3, 14, 260, 320, 401, 440, 492, 493, 503, 522, 538, 554], "minimum_likelihood": [220, 231, 270, 340], "minimum_likelihoodbeluga": 341, "minimum_likelihooddoubl": 270, "minimum_likelihoodlikelihood": 270, "minminimum": [260, 426], "miodrag": 42, "misc": 457, "mismatch": 4, "miss": [32, 42, 322], "mit": [42, 500, 550], "mix": 3, "mixin": 39, "mixin_bas": 39, "mixin_impl": 39, "mixtur": [492, 493], "mkdir": [5, 553, 554], "mm": 537, "mobil": [491, 492, 493], "modal": 4, "model": [2, 4, 11, 16, 17, 21, 27, 31, 32, 33, 34, 36, 43, 55, 57, 65, 67, 75, 77, 90, 94, 102, 127, 128, 153, 159, 163, 164, 184, 235, 236, 240, 243, 244, 245, 248, 249, 252, 253, 260, 267, 270, 275, 276, 302, 303, 304, 306, 307, 316, 317, 356, 357, 358, 359, 458, 460, 462, 465, 467, 471, 487, 488, 495, 501], "modela": 356, "modern": [2, 41, 446], "modifi": [59, 71, 238], "modified_": 38, "modul": 458, "modular": 458, "monocular": 57, "mont": [1, 2, 11, 26, 27, 43, 235, 260, 267, 320, 458, 494, 495, 496, 499, 501, 509, 511, 518, 525, 530, 538, 554], "more": [22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 121, 123, 125, 127, 170, 172, 175, 178, 179, 180, 182, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 257, 258, 260, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 471, 487, 494, 498, 501, 503, 505, 521, 524, 525, 526, 532, 533, 536, 538, 540, 542, 543, 545, 547], "most": [1, 3, 34, 65, 122, 465, 469, 471, 490, 493, 537], "mostderiv": 39, "mostli": [269, 338], "motion": [4, 11, 16, 26, 27, 35, 36, 43, 67, 75, 94, 102, 152, 153, 184, 235, 236, 260, 267, 279, 280, 287, 328, 342, 396, 398, 400, 401, 458, 460, 462, 465, 467, 471, 487, 488, 495, 501, 554], "motion_distribut": 554, "motion_model": [26, 43, 44, 495, 501, 502, 554], "motion_model_": [26, 495], "motion_model_sigma": 554, "motion_model_vari": [460, 462, 465, 467, 495, 501, 502, 512, 515], "motion_model_variantbeluga_amcl": [466, 468], "motion_model_variantget": [460, 462], "motion_model_variantmot": 495, "motion_model_variantstd": 495, "motion_modelmot": 43, "motion_modelvari": 501, "motioninclud": 143, "motionmodel": [2, 26, 44, 67, 94, 102, 186, 195, 196, 201, 204, 209, 213, 217, 223, 229, 235, 281, 487, 488], "motionmodelclass": 43, "motionmodelvari": [471, 487, 488], "motionmodelvariantbeluga_amcl": 472, "motionmodelvariantget": 488, "motionmodelvariantstd": 488, "motionmodelvariantsupport": 488, "motionmot": 131, "movabl": 21, "move": [26, 29, 30, 32, 34, 38, 41, 59, 65, 79, 122, 173, 185, 238, 243, 245, 249, 257, 270, 272, 280, 283, 288, 293, 297, 299, 303, 304, 305, 313, 412, 441, 448, 453, 457, 495, 522, 534, 554], "move_tag": [412, 413, 457], "movement": [495, 538, 554], "msg": [459, 460, 465, 466, 469, 470, 471, 472, 487, 488, 490, 493, 503, 504, 505, 506, 522, 523, 524, 525, 532, 534, 536, 537, 545, 546, 547, 548], "msgthe": 532, "mt19937": 305, "mth": [236, 448, 456, 457], "much": [3, 328, 342, 448], "multi": 79, "multimod": 4, "multinomi": [236, 304, 458, 554], "multipl": [4, 243, 299, 302, 392, 448, 537], "multipli": [34, 179, 245, 356, 451, 554], "multivari": [27, 79, 81, 83, 84, 86, 88, 166, 184, 235, 236, 254, 256, 257, 258, 259, 260, 267, 295, 458], "multivariate_distribution_trait": [27, 79, 120, 166, 184, 189, 195, 201, 212, 220, 224, 226, 227, 228, 230, 231, 235, 256, 257, 260, 267, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "multivariate_distribution_traitsforward": [255, 257], "multivariate_normal_distribut": [26, 79, 81, 166, 184, 294, 295], "multivariate_uniform_distribut": [83, 84, 86, 88, 134, 166, 184, 294, 295], "multivariatenormaldistribut": [2, 19, 26, 80, 120, 189, 206, 208, 209, 210, 220, 222, 223, 224, 226, 228, 230, 235, 236, 256, 257, 260, 261, 263, 495], "multivariatenormaldistributionmultivari": [26, 257], "multivariatenormaldistributionmultivariatenormaldistribut": 257, "multivariatenormaldistributionparam": [79, 82, 120, 206, 208, 220, 222, 226, 228, 230, 235, 256, 257, 260], "multivariatenormaldistributionparammultivari": 257, "multivariatenormaldistributionparammultivariatenormaldistributionparam": 257, "multivariateuniformdistribut": [84, 85, 86, 87, 88, 89, 120, 206, 208, 220, 222, 235, 236, 258, 259, 260, 261, 263, 495], "multivariateuniformdistributionconstexpr": 259, "multivariateuniformdistributionmultivariateuniformdistribut": 259, "multivariateuniformdistributionprimari": 259, "mundan": 1, "must": [3, 5, 6, 19, 43, 45, 47, 49, 51, 53, 55, 61, 65, 71, 77, 79, 81, 100, 110, 260, 304, 408, 430, 492, 493, 532, 554], "mutabl": [18, 288, 305, 441, 462], "mutat": [3, 61], "mutex": [461, 462, 467], "mutex_": [462, 467, 478, 482], "mutex_beluga_amcl": 468, "mutex_mutex": 462, "mutex_std": 462, "mutual": [465, 469, 471, 490], "n": [4, 20, 25, 26, 27, 28, 32, 38, 40, 41, 53, 66, 100, 118, 119, 120, 122, 126, 152, 158, 175, 176, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 217, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 235, 236, 243, 260, 261, 267, 269, 270, 287, 300, 301, 312, 313, 314, 315, 338, 369, 392, 436, 448, 451, 456, 457, 473, 478, 480, 482, 537, 554], "n_": [492, 493, 538], "naction": [27, 267], "nahuel": 495, "name": [13, 14, 15, 16, 17, 18, 19, 20, 21, 38, 43, 45, 47, 49, 51, 53, 55, 57, 67, 75, 77, 79, 90, 94, 102, 157, 173, 174, 184, 236, 272, 281, 282, 293, 303, 305, 352, 439, 441, 444, 450, 460, 462, 465, 467, 471, 488, 492, 493, 525, 548], "namebeluga": [52, 60, 506], "namespac": [12, 18, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 121, 122, 125, 126, 127, 128, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 408, 430, 438, 439, 440, 441, 444, 445, 446, 447, 448, 451, 452, 453, 456, 457, 460, 462, 488, 490, 494, 495, 496, 498, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "nan": 47, "nasa": 179, "native_doubl": 270, "native_int": 270, "natur": [2, 3, 42, 500, 550], "nav": 493, "nav2": [276, 485, 492, 493, 519], "nav2_amcl": [490, 491, 493, 553], "nav2_bringup": 553, "nav_msg": [459, 460, 461, 462, 465, 466, 467, 468, 492, 493, 495, 496, 499, 505, 509, 511, 518, 519, 523, 525, 530, 533, 534], "navig": [492, 493, 553], "nbeluga": 530, "nbeluga_amcl": 463, "nbeluga_rosth": [496, 530], "nbelugath": [27, 267], "nbsp": [29, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 121, 175, 178, 180, 260, 271, 277, 279, 284, 292, 296, 302, 304, 308, 310, 314, 328, 336, 338, 340, 342, 344, 346, 348, 352, 356, 370, 382, 392, 394, 396, 401, 403, 408, 412, 414, 416, 418, 422, 424, 426, 430, 432, 438, 440, 445, 456, 465, 467, 471, 501, 503, 505, 525, 532, 536, 543], "nclusterizer_detail": [27, 267], "ncovari": 269, "ndash": [42, 500], "ndetail": [27, 267, 496, 530], "ndim": [20, 45, 46, 49, 50, 51, 52, 54, 101, 110, 111, 189, 191, 198, 199, 205, 210, 211, 218, 219, 220, 221, 222, 224, 225, 226, 228, 231, 235, 269, 270, 300, 301, 312, 313, 339, 341, 505, 506, 518], "ndim1": 20, "ndimdimens": [53, 100], "ndt": [27, 90, 235, 260, 267, 269, 270, 338, 463, 471, 476, 477, 484, 487, 488], "ndt_amcl_nod": [471, 476, 477], "ndt_cell": [184, 270, 338, 339, 487, 488], "ndt_cell_typ": [90, 91, 221, 228, 270], "ndt_cell_typendt": 270, "ndt_cell_typetypenam": 270, "ndt_sensor_model": [90, 134, 184, 306, 307, 340, 368, 487, 488], "ndtamcl": [487, 488], "ndtamclnod": [472, 473, 478, 480, 482, 487, 488], "ndtamclnode2d": [484, 488], "ndtamclnodeexplicit": 472, "ndtamclnodendtamclnod": 488, "ndtamclnodeprotect": 472, "ndtamclnodeprotectedvirtu": 472, "ndtamclvari": [471, 472, 487, 488], "ndtamclvariantal": 488, "ndtamclvariantstd": 488, "ndtcell": [120, 189, 205, 219, 220, 221, 222, 225, 226, 228, 231, 235, 260, 269, 270, 339], "ndtcell2d": [260, 261, 265, 269, 270, 487, 488], "ndtcell2f": [260, 261, 265, 269], "ndtcell3d": [260, 261, 265, 269, 270], "ndtcell3f": [260, 261, 265, 269], "ndtcellrepresent": [269, 270], "ndtmaprepresent": [471, 487, 488], "ndtmaprepresentationt": 270, "ndtmodelparam": [90, 120, 191, 220, 221, 231, 235, 260, 270, 341], "ndtmodelparam2d": [260, 261, 265, 270], "ndtmodelparam3d": [260, 261, 265, 270], "ndtmodelparamparamet": 270, "ndtsensormodel": [27, 91, 120, 205, 207, 208, 219, 220, 221, 222, 223, 226, 228, 232, 235, 260, 267, 270, 340, 471, 487, 488], "ndtsensormodelndt": 270, "ndtsensormodelndtsensormodel": 270, "nearbi": 554, "nearest": [17, 45, 49, 51, 53, 73, 100, 110, 126, 170, 171, 243, 245, 249, 260, 274, 301, 313, 554], "nearest_obstacle_distance_map": [170, 171, 249, 260, 261, 263], "nearest_obstacle_distance_mapauto": [171, 249], "nearest_obstacle_index": 171, "necessari": [3, 5, 6, 43, 270, 492, 493, 501, 538, 553], "necessarili": 65, "need": [0, 2, 3, 19, 30, 55, 107, 109, 180, 243, 260, 279, 297, 305, 412, 439, 458, 490, 492, 493, 532, 553, 554], "neg": 257, "negat": [290, 408, 430], "neigen": 267, "neighbor": [45, 49, 90, 96, 97, 122, 207, 221, 260, 340], "neighbor_hash": 122, "neighbor_pos": 122, "neighborhood": [13, 15, 45, 49, 51, 110, 126, 249, 251], "neighborhood4": [13, 15, 45, 46, 49, 50, 51, 52, 110, 111, 126, 207, 221, 249, 251, 505, 506], "neighborhood4auto": [126, 251], "neighbors_funct": [122, 170, 171, 249, 260], "neighbors_functiongiven": 260, "neighbors_kernel": [221, 231, 270, 340], "neighbors_kernelbeluga": 341, "neighbors_kernelneighbor": 270, "neighbors_kernelstd": 270, "neighborsauto": 122, "neighborsfunct": [122, 170, 171, 249, 260], "neighborsfunctiona": 260, "neighborst": 260, "nelement": 175, "neural": [42, 500, 550], "never": 1, "new": [4, 19, 32, 34, 39, 55, 57, 75, 77, 81, 92, 107, 122, 179, 236, 245, 249, 257, 260, 283, 346, 356, 370, 418, 448, 456, 457, 458, 554], "new_cap": [107, 108, 448], "new_capnew": 107, "newer": 260, "next": [26, 43, 79, 257, 297, 305, 495, 501, 554], "next_cluster_id": 122, "ninjemi": 11, "nio": 267, "nip": [42, 500, 550], "nmaximum": 65, "nmsgcompat": 530, "nnumber": 314, "node": [32, 459, 460, 463, 465, 469, 471, 484, 485, 487, 488, 490, 492, 553], "node_interfac": 460, "node_nam": [465, 466, 469, 470, 471, 472, 490], "node_namespac": [465, 466, 469, 470, 471, 472, 490], "node_opt": [465, 466, 469, 470, 471, 472, 490], "nodelet": [461, 462, 463, 467, 484, 485], "nodeopt": [460, 465, 466, 469, 470, 471, 472, 488, 490], "nodiscard": [26, 32, 34, 38, 39, 41, 122, 126, 128, 183, 185, 238, 243, 245, 247, 249, 251, 255, 257, 259, 269, 270, 274, 276, 297, 299, 301, 305, 313, 317, 448, 453, 495, 522, 534], "noetic": 11, "noexcept": [38, 40, 41, 59, 60, 65, 66, 69, 71, 79, 92, 93, 98, 104, 107, 183, 185, 238, 257, 260, 290, 297, 299, 305, 319, 408, 409, 412, 413, 430, 431, 444, 445, 446, 448, 457, 495], "noexceptbeluga": [60, 66, 70, 72, 80, 93, 99, 105, 108, 409, 431], "noexceptcheck": 238, "noexceptclear": [41, 448], "noexceptcomput": 238, "noexceptconstruct": [183, 299], "noexceptconstructor": 444, "noexceptderefer": 238, "noexceptforward": 238, "noexceptget": 41, "noexcepthelp": 446, "noexceptmov": 257, "noexceptpop": 41, "noexceptpost": 238, "noexceptpr": 238, "noexceptreset": [26, 183, 444], "noexceptreturn": [41, 185, 290, 446, 448], "noexceptrewind": 238, "noexceptupd": 183, "nois": [32, 102, 128, 249, 276, 322, 328, 336, 342, 344, 492, 493, 554], "noiseless": 260, "noisi": [32, 322, 554], "nolint": [38, 41, 174, 177, 185, 257, 291, 311, 319, 439, 446, 457, 548], "nomin": 65, "nomotion_update_callback": [460, 462, 465, 466, 467, 468, 478, 480], "nomotion_update_callbackbool": 462, "nomotion_update_callbackvoid": 460, "nomotion_update_server_": [460, 462, 465, 467, 478, 482], "nomotion_update_server_beluga_amcl": [466, 468], "nomotion_update_server_no": [460, 462], "nomotion_update_server_rclcpp": 460, "nomotion_update_server_ro": 462, "non": [0, 1, 26, 27, 40, 41, 51, 65, 77, 98, 178, 179, 235, 260, 267, 269, 288, 304, 405, 408, 430], "none": [65, 271], "nonlinear": 260, "nonneg": [492, 493], "nor": 554, "norm": [34, 128, 179, 245, 276, 299], "normal": [4, 22, 23, 26, 27, 32, 34, 79, 81, 161, 166, 178, 179, 184, 235, 236, 243, 245, 255, 256, 257, 260, 267, 269, 295, 338, 344, 348, 350, 440, 441, 458, 492, 493, 495, 538, 554], "normal_distribut": [2, 81, 82, 128, 236, 257, 276, 317, 554], "normalize_and_cap_weight": 122, "normalize_and_squar": 173, "normalize_base_fn": [120, 208, 222, 271, 272, 349, 350, 351], "normalize_base_fnimplement": [235, 272], "normalize_base_fninlin": [349, 351], "normalize_fn": [120, 208, 222, 271, 272, 351], "normalize_fnimplement": [235, 272], "normalize_fninlin": 351, "normalizeconstexpr": 272, "normalized_weight": [173, 178, 179, 260], "normalized_weights_view": 179, "normalized_weightsrang": [178, 260], "normalizedefinit": 272, "note": [18, 51, 53, 65, 73, 260, 270, 503, 554], "notethi": [55, 57, 75, 77], "noth": 107, "notic": [34, 122, 179, 245], "now": [5, 315, 554], "nowher": [71, 238], "npolici": [27, 267], "nsophu": 267, "nsophussophu": 530, "nstate_detail": [27, 267], "nstd": [27, 267], "ntest": 267, "ntf2tf2": 530, "nth": 236, "nth_element": 122, "ntr": 179, "nullari": 297, "nullopt": [26, 43, 45, 49, 73, 100, 126, 243, 251, 260, 299, 313, 451, 471, 488, 495, 501], "nullptr": [238, 270, 471, 488, 522], "num_dim": [90, 221, 231, 269, 270, 338], "num_dimbeluga": 339, "num_dimnumb": 269, "num_dimstat": 269, "num_particl": [122, 221, 231, 360], "num_particlesbeluga": 361, "num_particlesnumb": 122, "num_particlesstd": 122, "num_quaternion": 179, "number": [4, 11, 26, 84, 86, 88, 100, 110, 121, 122, 179, 234, 236, 243, 260, 277, 310, 313, 315, 320, 338, 352, 360, 414, 416, 418, 422, 440, 453, 483, 492, 493, 495, 503, 517, 537, 538, 554], "number_of_cycl": 554, "number_of_non_zero_weight": 179, "number_of_particl": 554, "numer": [27, 93, 120, 121, 122, 157, 172, 173, 178, 179, 184, 207, 208, 221, 222, 235, 260, 267, 271, 272, 289, 290, 318, 319, 433, 444, 451, 458, 488, 554], "numeric_limit": [27, 92, 120, 179, 235, 267, 272, 315, 318, 319, 434, 441, 444, 503, 504, 522], "numericconstexpr": 319, "numerichelp": [122, 290, 319], "nview": [27, 267], "nweight_detail": [27, 267], "o": [5, 28, 32, 65, 120, 187, 190, 202, 208, 222, 243, 249, 260, 261, 269, 310, 311, 338, 339, 448, 478, 480, 499, 507, 509, 511, 512, 519, 536, 553], "object": [18, 19, 23, 27, 29, 30, 32, 34, 79, 81, 92, 122, 128, 151, 161, 173, 175, 179, 180, 181, 184, 235, 236, 243, 245, 249, 257, 260, 267, 270, 271, 272, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 296, 297, 302, 303, 304, 305, 315, 317, 346, 348, 350, 352, 354, 356, 358, 370, 390, 394, 396, 403, 405, 408, 412, 414, 416, 420, 422, 424, 426, 428, 430, 438, 439, 440, 441, 445, 446, 448, 451, 455, 456, 457], "observ": 1, "obstacl": [17, 25, 32, 51, 158, 170, 171, 184, 249, 260, 274, 322, 336, 492, 493], "obstacle_data": [17, 51, 52, 208, 222, 249, 274, 505, 506], "obstacle_dataauto": 274, "obstacle_map": [170, 171, 249, 260], "obstacle_mapa": 260, "obtain": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 236, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 284, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 554], "occup": [17, 27, 32, 51, 55, 77, 86, 98, 160, 184, 235, 249, 258, 259, 260, 267, 273, 458, 460, 462, 465, 467, 471, 488, 492, 493, 496, 505, 518, 530, 533, 534, 540], "occupancy_grid": [51, 134, 145, 160, 184, 248, 249, 258, 259, 459, 460, 494, 495, 498, 499, 505, 509, 511, 523, 540], "occupancygrid": [2, 27, 31, 32, 56, 78, 87, 99, 120, 188, 189, 197, 198, 205, 206, 208, 210, 212, 213, 219, 220, 222, 223, 224, 226, 227, 228, 229, 232, 235, 248, 249, 258, 259, 260, 267, 298, 299, 460, 461, 462, 465, 466, 467, 468, 492, 493, 495, 496, 499, 501, 502, 506, 507, 509, 511, 512, 514, 516, 518, 519, 523, 525, 530, 533, 534, 540, 541], "occupancygrid2d": [2, 51, 55, 77, 281], "occupancygrida": [86, 98], "occupancygridconstsharedptr": [505, 506, 523, 534], "occupancygridinlin": 506, "occupancygridinlineexplicit": 506, "occupancygridinlinestat": 506, "occupancygridoccupancygrid": 534, "occupancygridthin": [495, 518, 523, 534], "occupancygridtyp": [55, 77], "occupi": [17, 534, 540], "occur": [465, 467, 471], "odom": [460, 462, 465, 467, 471, 488, 492, 493], "odom_alpha1": 492, "odom_alpha2": 492, "odom_alpha3": 492, "odom_alpha4": 492, "odom_alpha5": 492, "odom_frame_id": [492, 493], "odometri": [6, 27, 67, 94, 102, 127, 128, 163, 184, 235, 236, 253, 260, 267, 275, 276, 317, 328, 342, 492, 493, 501], "off": [5, 104], "offici": 5, "offset": [71, 72, 238, 249, 270], "often": 3, "old": [122, 270], "older": [260, 492], "oldest": 65, "omit": 6, "omni": 492, "omni_motion_model": 276, "omnidirect": [27, 94, 163, 184, 235, 236, 253, 260, 267, 275, 276, 458], "omnidirectional_dr": [490, 492, 493], "omnidirectional_drive_model": [94, 163, 184, 252, 253, 342, 487, 488], "omnidirectionaldrivemodel": [16, 27, 95, 120, 189, 208, 222, 223, 226, 228, 235, 236, 260, 267, 275, 276, 342, 487, 488, 495, 501], "omnidirectionaldrivemodelinlin": 95, "omnidirectionaldrivemodelinlineexplicit": 95, "omnidirectionaldrivemodelomnidirectionaldrivemodel": 276, "omnidirectionaldrivemodelparam": [94, 120, 191, 224, 226, 227, 231, 260, 275, 276, 343], "omnidirectionaldrivemodelparamparamet": [235, 276], "omnidirectionaldrivemodelsampl": [235, 276], "omnimotionmodel": [490, 493], "on_activ": [465, 466, 469, 470, 471, 472, 478, 480, 490], "on_activatecallbackreturn": 490, "on_cleanup": [465, 466, 469, 470, 471, 472, 478, 480, 490], "on_cleanupcallbackreturn": 490, "on_configur": [465, 466, 469, 470, 471, 472, 478, 480, 490], "on_configurecallbackreturn": 490, "on_deactiv": [465, 466, 469, 470, 471, 472, 478, 480, 490], "on_deactivatecallbackreturn": 490, "on_effective_size_drop": [26, 152, 184, 236, 286, 287, 394, 495], "on_effective_size_drop_polici": [26, 27, 120, 208, 218, 222, 231, 235, 267, 277, 278, 395], "on_effective_size_drop_policyimplement": [235, 278], "on_effective_size_drop_policyinlin": 395, "on_effective_size_drop_policystat": 395, "on_effective_size_dropconstexpr": [26, 278], "on_effective_size_droppolici": [26, 278], "on_mot": [26, 152, 184, 236, 286, 287, 396, 398, 400, 401, 495], "on_motion_fn": [26, 27, 120, 208, 222, 235, 267, 279, 280, 397, 495], "on_motion_fnimplement": [235, 280], "on_motion_fninlin": 397, "on_motion_polici": [27, 120, 208, 222, 235, 267, 279, 280, 399], "on_motion_policy_bas": [27, 120, 208, 222, 235, 267, 279, 280, 401, 402], "on_motion_policy_baseconstexpr": 280, "on_motion_policy_baseprimari": 280, "on_motion_policybas": 280, "on_motionconstexpr": [26, 280, 495], "on_motionpolici": [26, 280], "on_shutdown": [465, 466, 469, 470, 471, 472, 478, 480, 490], "on_shutdowncallbackreturn": 490, "onc": [6, 29, 439, 495], "one": [6, 27, 37, 38, 61, 63, 79, 86, 107, 122, 179, 235, 260, 267, 305, 403, 420, 492, 493, 537, 554], "oner": 3, "ones": 458, "oninit": [462, 467, 468, 478, 480], "oninitvoid": 462, "onli": [5, 12, 38, 57, 63, 65, 71, 92, 102, 107, 122, 128, 243, 260, 270, 304, 308, 314, 492, 493, 537, 538, 553], "op": [65, 346, 465, 469, 471, 490], "opac": 537, "open": [6, 11, 315, 458, 553], "opendataset": 270, "oper": [2, 30, 32, 34, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 122, 128, 178, 179, 181, 183, 208, 222, 225, 236, 238, 245, 249, 257, 259, 260, 261, 263, 269, 270, 272, 276, 278, 280, 283, 288, 290, 293, 297, 303, 305, 310, 311, 315, 317, 319, 326, 327, 338, 339, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 368, 369, 370, 371, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 412, 413, 414, 415, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 439, 441, 444, 457, 496, 503, 512, 514, 518, 530, 537, 542, 543, 544, 554], "opera": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547], "opt": [5, 29, 553], "opt_landmark_bearing_in_sensor": 34, "opt_landmark_position_in_world": 245, "optim": [3, 27, 37, 38, 59, 235, 243, 260, 267, 448], "optin": 41, "option": [13, 15, 26, 34, 43, 44, 65, 73, 98, 100, 121, 122, 125, 126, 243, 245, 250, 251, 260, 275, 276, 280, 296, 297, 298, 299, 312, 313, 360, 451, 459, 460, 462, 465, 466, 467, 468, 469, 471, 472, 487, 488, 490, 494, 495, 501, 502], "order": [2, 29, 39, 114, 121, 122, 179, 260, 272, 293, 303, 315, 348, 350, 352, 354, 356, 358], "org": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 368, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "organ": 236, "orient": [179, 534, 537, 548], "origin": [14, 17, 51, 98, 249, 274, 283, 299, 495, 503, 504, 505, 506, 512, 514, 522, 534], "origin_": [522, 534], "originconst": [522, 534], "originlas": 503, "osan": 310, "ostream": [269, 310, 311, 338, 339], "other": [2, 4, 19, 38, 41, 43, 63, 64, 65, 66, 71, 72, 79, 80, 81, 82, 122, 234, 236, 238, 257, 272, 292, 293, 297, 303, 326, 327, 348, 350, 352, 354, 356, 358, 403, 414, 424, 426, 439, 441, 445, 456, 483, 492, 493, 517, 537, 553, 554], "otheranoth": 79, "otherdistribut": 79, "otherparamet": 81, "otherwis": [41, 45, 49, 65, 79, 81, 107, 392, 394, 401, 465, 467, 471, 554], "our": [6, 554], "out": [1, 3, 6, 41, 43, 525, 532, 546, 547, 548], "out_cov": 451, "out_mean": 451, "out_of_rang": [41, 100], "out_of_rangeif": 65, "outa": 532, "output": [27, 69, 183, 235, 260, 267, 310, 412, 444, 451, 456, 457, 554], "output_": 183, "outth": 532, "over": [3, 4, 20, 104, 107, 236, 243, 260, 438, 492, 493, 499, 509, 511, 519, 536, 554], "overal": [122, 260], "overhead": 3, "overload": [18, 30, 38, 40, 41, 59, 63, 92, 107, 181, 236, 260, 269, 272, 288, 290, 293, 303, 308, 326, 338, 346, 348, 350, 352, 354, 356, 358, 390, 392, 394, 396, 403, 408, 412, 414, 420, 424, 426, 428, 430, 448, 457, 499, 509, 511, 519, 524, 530, 532, 537, 545, 546, 547, 548], "overrid": [460, 462, 465, 466, 467, 468, 469, 471, 488, 490], "overridebeluga_amcl": [466, 468, 470, 472], "overridecallback": [460, 462, 488, 490], "overridedestructor": 490, "overwrit": [65, 260], "overwritten": 260, "ow": 3, "own": [17, 554], "p": [4, 5, 13, 17, 18, 19, 20, 28, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 120, 126, 187, 190, 202, 209, 223, 228, 260, 274, 301, 313, 440, 441, 478, 480, 482, 492, 493, 495, 505, 506, 512, 538, 553, 554], "p0": [38, 59, 60, 61, 62], "p0_": 38, "p0line": 61, "p0start": 59, "p1": [38, 59, 60, 61, 62, 122], "p1_": 38, "p1end": 59, "p1line": 61, "p2": 122, "p2593r1": 315, "packag": [5, 491], "page": [27, 42, 234, 235, 260, 267, 282, 283, 315, 388, 483, 500, 517, 553, 554], "pair": [26, 32, 41, 43, 55, 65, 71, 77, 100, 122, 178, 179, 249, 260, 313, 439, 456, 460, 462, 465, 466, 467, 468, 471, 472, 488, 495, 501, 502], "paper": 315, "par": [492, 493], "parallel": [458, 492, 493], "parallel_polici": [26, 487, 488, 495, 501], "param": [19, 26, 32, 34, 43, 44, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 79, 80, 90, 91, 94, 95, 128, 209, 223, 245, 249, 251, 257, 270, 276, 495, 501, 502], "param_typ": [19, 32, 34, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 79, 80, 90, 91, 94, 95, 128, 223, 228, 245, 249, 257, 270, 276], "param_typebearingmodelparam": 34, "param_typedifferentialdrivemodelparam": 128, "param_typelandmarkmodelparam": 245, "param_typelikelihoodfieldmodelparam": 249, "param_typemultivariatenormaldistributionparam": 257, "param_typendtmodelparam": 270, "param_typeomnidirectionaldrivemodelparam": 276, "param_typeparamet": [34, 128, 245, 249, 270, 276], "param_typeth": 257, "paramconst": 257, "paramet": [6, 19, 26, 27, 31, 32, 33, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 97, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 121, 122, 127, 175, 178, 234, 235, 244, 248, 256, 257, 260, 267, 269, 270, 275, 276, 304, 308, 310, 314, 320, 322, 324, 328, 332, 336, 340, 342, 344, 348, 352, 356, 370, 392, 394, 398, 400, 401, 414, 416, 422, 424, 426, 432, 434, 460, 462, 465, 467, 471, 483, 488, 494, 495, 496, 501, 503, 505, 517, 518, 525, 530, 532, 538, 543, 553], "parameter": 304, "parameters_": 122, "parametersparamet": 260, "parametr": [19, 260, 460, 462, 465, 467, 471, 488], "params_": [26, 32, 34, 90, 128, 245, 249, 257, 270, 276, 495], "params_path": 6, "paramsdistribut": 79, "paramsnew": 79, "paramsparamet": [43, 55, 57, 67, 75, 77, 90, 94, 501], "paramsth": 79, "paramvoid": 257, "parent": 171, "part": [4, 26, 179, 260, 320], "partial": [3, 487], "particl": [4, 11, 16, 21, 25, 26, 27, 32, 34, 42, 43, 44, 55, 57, 67, 75, 77, 90, 94, 96, 102, 104, 121, 122, 128, 151, 157, 158, 172, 173, 178, 179, 184, 208, 209, 222, 223, 235, 236, 245, 249, 260, 267, 270, 271, 272, 276, 277, 281, 282, 283, 289, 290, 292, 293, 302, 303, 304, 305, 314, 315, 317, 320, 352, 356, 360, 371, 388, 394, 407, 408, 418, 426, 430, 440, 441, 444, 450, 451, 454, 455, 458, 460, 462, 465, 467, 469, 471, 487, 488, 490, 495, 499, 500, 501, 502, 509, 511, 512, 514, 519, 525, 536, 537, 538, 550], "particle_cloud": [6, 493, 498, 499, 509, 511, 519, 542, 543], "particle_cloud_pub_": [462, 465, 467, 469, 471, 478, 482, 490], "particle_cloud_pub_beluga_amcl": [466, 468, 470, 472], "particle_cloud_pub_particl": [462, 490], "particle_cloud_pub_rclcpp_lifecycl": 490, "particle_cloud_pub_ro": 462, "particle_cloud_timer_": [462, 467, 478, 482], "particle_cloud_timer_beluga_amcl": 468, "particle_cloud_timer_callback": [462, 467, 468, 478, 480], "particle_cloud_timer_callbackvoid": 462, "particle_cloud_timer_ro": 462, "particle_cloud_timer_tim": 462, "particle_filter_": [460, 462, 465, 467, 471, 478, 482, 488], "particle_filter_beluga_amcl": [466, 468, 472], "particle_filter_particl": [460, 462, 488], "particle_filter_std": [460, 462, 488], "particle_mark": 493, "particle_markers_pub_": [465, 469, 471, 478, 482, 490], "particle_markers_pub_beluga_amcl": [466, 470, 472], "particle_markers_pub_particl": 490, "particle_markers_pub_rclcpp_lifecycl": 490, "particle_trait": [120, 157, 172, 173, 184, 226, 228, 232, 235, 260, 271, 272, 292, 293, 302, 303, 304, 305, 370, 389, 440, 441, 444, 449, 450, 537], "particle_traitscommon": 283, "particle_typ": [26, 235, 495, 501, 502, 512, 515], "particle_typestd": 495, "particle_typeweight": 495, "particlecloud": 492, "particlecluster": [27, 97, 120, 121, 122, 207, 208, 209, 221, 222, 223, 235, 260, 267, 344], "particleclusterizerinlin": 97, "particleclusterizerinlineexplicit": 97, "particleclusterizerparam": [96, 97, 120, 121, 122, 186, 219, 231, 232, 260, 345], "particleclusterizerparamparamet": [122, 235], "particleclusterizerparticl": [122, 235], "particleclusterizerparticlecluster": 122, "particlefilt": [16, 21], "particles_": [26, 235, 495], "particlesa": 525, "particlesconst": [26, 495], "particlesdistribut": 525, "particlespos": 525, "particleth": 260, "particletyp": [26, 44, 186, 195, 196, 201, 204, 209, 213, 217, 223, 229, 235], "particletypeful": 43, "particular": [100, 260, 493], "particularli": [328, 336], "pass": [260, 403, 412], "past": [37, 38, 41, 61, 63, 65, 71, 326], "path": [5, 270, 491, 554], "path_to_hdf5_fil": 270, "pattern": [2, 92], "pdf": [179, 260, 315], "peak": [122, 344], "per": [112, 114, 315, 460, 462, 465, 467, 471, 488, 537, 554], "per_cluster_estim": 122, "percentag": [121, 278, 394, 493], "percentil": [121, 122, 344], "percentileth": 121, "percept": [249, 336], "perfect_odometri": 6, "perform": [4, 6, 11, 43, 55, 77, 98, 107, 180, 249, 260, 276, 279, 501, 554], "period": [180, 460, 462, 465, 467, 469, 471, 488, 490, 493], "periodic_timer_callback": [465, 466, 469, 470, 471, 472, 478, 480, 490], "periodic_timer_callbackvoid": 490, "permiss": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "petar": 42, "pf_err": [492, 493], "pf_z": [492, 493], "phantom": 92, "phantomtyp": [27, 93, 120, 207, 208, 221, 222, 235, 267, 318, 319, 433], "phantomtypeempti": 92, "phantomtypephantom": [432, 434], "physic": 55, "pi": [11, 13, 17, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 126, 128, 249, 251, 274, 276, 301, 492, 493, 495, 505, 506, 538], "pictur": 6, "pigrid": [45, 49, 51, 53], "pipelin": [439, 487], "pitch": [114, 315], "pitch_clustering_resolut": [114, 115, 315], "pitch_clustering_resolutionclust": 114, "pkg": [5, 6], "place": [3, 71, 128, 238, 276, 328, 342, 344, 553], "plai": 6, "plainmatrix": [255, 382], "plane": [34, 45, 49, 51, 53, 100, 110, 245, 251, 274, 301, 313, 503], "platform": [11, 270, 492, 493], "pleas": 0, "plenti": [2, 6], "plot": 554, "plu": [32, 173, 179, 249, 270, 451], "plugin": 493, "point": [18, 26, 27, 32, 34, 38, 41, 47, 55, 56, 59, 61, 65, 71, 75, 77, 78, 90, 91, 122, 128, 173, 179, 234, 235, 238, 245, 247, 249, 260, 267, 269, 270, 276, 283, 285, 289, 290, 293, 315, 317, 320, 338, 408, 430, 441, 451, 469, 483, 490, 517, 523, 532, 537, 545, 546, 548, 554], "pointer": [38, 41, 63, 64, 65, 66, 71, 72, 223, 228, 238], "pointerdecltyp": 238, "pointerpoint": 38, "pointervalu": [41, 238], "pointervalue_typ": 41, "pointervector2": 38, "points2d": [55, 77], "points_in_cartesian_coordin": [47, 48, 209, 223, 247, 495, 503, 504], "points_in_cartesian_coordinatesauto": 247, "points_in_cel": 270, "points_in_polar_coordin": [47, 48, 209, 223, 247, 503, 504], "points_in_polar_coordinatesauto": 247, "points_view": 270, "pointslidar": 90, "polar": [47, 247], "polici": [2, 11, 26, 27, 35, 36, 43, 120, 153, 184, 192, 200, 208, 209, 218, 222, 223, 231, 235, 236, 260, 267, 271, 272, 292, 293, 302, 303, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 458, 460, 462, 465, 467, 471, 487, 488, 492, 493, 495, 501], "policiesinclud": 144, "policiespolici": 132, "policy_bas": [120, 222, 225, 260, 288, 406], "policy_basefriend": 406, "policy_baseimplement": [235, 288], "policyconstexpr": 288, "policyfn": [208, 209, 222, 223, 235, 288, 404], "policyforward": [26, 272, 278, 288, 293, 303], "policypolici": 288, "policyth": [348, 352, 356], "polymorph": 3, "pop": [65, 122, 171], "pop_back": [41, 65, 66, 209, 223], "pop_backstd": 41, "pop_front": [41, 65, 66, 209, 223], "pop_frontstd": 41, "popul": [304, 492, 493, 495, 538], "popular": [1, 6], "port": 493, "portion": 20, "pose": [6, 26, 34, 43, 44, 67, 73, 84, 86, 88, 94, 96, 97, 102, 122, 128, 178, 179, 208, 222, 235, 241, 243, 245, 259, 260, 276, 279, 280, 317, 324, 334, 399, 401, 458, 460, 462, 465, 467, 469, 471, 488, 490, 495, 501, 502, 523, 524, 525, 532, 534, 536, 537, 538, 547, 548, 553, 554], "pose_arrai": [459, 460, 487, 488, 523], "pose_pub_": [462, 465, 467, 469, 471, 478, 482, 490], "pose_pub_beluga_amcl": [466, 468, 470, 472], "pose_pub_estim": [462, 490], "pose_pub_rclcpp_lifecycl": 490, "pose_pub_ro": 462, "pose_stamp": 490, "pose_to_weighted_eigen_vector": 179, "pose_with_covariance_stamp": [459, 460, 487, 488], "posearrai": [465, 469, 471, 490, 492, 493, 523, 525, 536, 537], "poses3d": 260, "poses_view": 179, "posesa": 260, "posespos": 260, "poseth": [96, 260, 398, 400], "posewithcovariancestamp": [460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 488, 490, 492, 493], "posit": [65, 71, 75, 238, 240, 243, 245, 260, 274, 315, 458, 534, 548, 553, 554], "possibl": [2, 4, 16, 17, 21, 426, 441], "possibli": [13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 100, 236, 260, 290, 403, 445, 446], "post": [38, 63, 71, 492, 493], "posterior": [4, 260, 352, 554], "potenti": 71, "pow": 554, "power": [2, 6], "pplane": [45, 51, 53], "practic": 297, "practition": 1, "pre": [71, 77, 338], "prealloc": 122, "precalcul": 34, "precis": 537, "precomput": [86, 451], "predic": [2, 122, 236, 403], "predict": 4, "predtyp": 270, "prefigur": 4, "prefix": [6, 38, 63], "presenc": [40, 41, 260], "present": [100, 270, 313, 340], "preserv": 2, "press": [42, 500, 550], "prev": [280, 297, 401, 402], "prev_error_": 38, "prevent": [32, 43, 501, 554], "previou": [4, 67, 94, 102, 128, 276, 317, 401], "previous": 260, "previous_orient": [128, 276], "previous_pos": [128, 276], "previous_pose_pose_2d": 128, "prevth": 401, "primari": [83, 106, 235, 260, 400], "primarili": 11, "primit": [26, 32, 34, 35, 36, 122, 128, 153, 170, 171, 173, 178, 179, 184, 245, 249, 270, 276, 282, 283, 284, 285, 293, 315, 317, 319, 408, 430, 441, 451, 487, 488, 536, 537], "print": 310, "printer": [162, 184, 310, 443], "prior": [4, 352, 439, 554], "prioriti": [121, 122], "priority_queu": [122, 171], "privat": [26, 32, 34, 38, 41, 122, 128, 181, 183, 234, 238, 243, 245, 249, 257, 259, 270, 276, 280, 297, 299, 305, 313, 315, 319, 444, 448, 453, 483, 495, 517, 522, 534], "privatebas": [234, 483, 517], "prob": 537, "probabilist": [6, 42, 55, 67, 75, 77, 104, 236, 245, 322, 328, 332, 336, 500, 550], "probabilityth": [414, 416], "probabl": [2, 4, 17, 19, 26, 27, 34, 104, 235, 236, 245, 249, 260, 267, 296, 297, 336, 414, 415, 416, 417, 418, 444, 492, 493, 495, 537, 538, 554], "problem": [42, 270, 554], "proceed": [5, 42, 500, 550], "process": [4, 42, 43, 122, 465, 467, 469, 471, 490, 492, 493, 500, 550], "prod_i": 554, "produc": [29, 43, 236], "product": 243, "profession": 0, "program": [2, 3, 260], "proj": [121, 122, 441], "project": [5, 34, 59, 121, 122, 243, 245, 255, 491, 554], "project_nam": 554, "projth": 121, "prologu": [177, 184], "proof": [1, 243], "propag": [2, 4, 16, 22, 23, 26, 27, 161, 184, 235, 236, 267, 283, 352, 354, 495, 554], "propagate_base_fn": [120, 208, 222, 292, 293, 353, 354, 355], "propagate_base_fnimplement": [235, 293], "propagate_base_fninlin": [353, 355], "propagate_fn": [120, 208, 222, 292, 293, 355], "propagate_fnimplement": [235, 293], "propagate_fninlin": 355, "propagateconstexpr": 293, "propagatedefinit": 293, "properti": [185, 260, 309, 554], "proport": [260, 537], "propos": [4, 6, 554], "propriocept": 554, "protect": [234, 305, 418, 420, 460, 462, 465, 467, 469, 471, 483, 488, 490, 517], "protectedbas": [234, 483, 517], "protocol": 376, "prototyp": 260, "provid": [3, 18, 39, 43, 71, 77, 79, 81, 86, 92, 107, 249, 259, 260, 308, 401, 448, 458, 469, 485, 490, 491, 492, 493, 501, 519, 537, 553], "provis": 6, "proxi": 537, "ptrdiff_t": [38, 41, 63, 65, 107, 122, 179, 448], "pub": 260, "public": [26, 32, 34, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 118, 122, 126, 128, 181, 183, 234, 238, 243, 245, 247, 249, 251, 257, 259, 270, 272, 274, 276, 280, 283, 288, 293, 297, 299, 301, 303, 305, 313, 315, 317, 319, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 363, 367, 368, 370, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 401, 403, 408, 412, 414, 416, 420, 422, 424, 426, 428, 430, 432, 435, 444, 448, 453, 460, 462, 465, 469, 471, 483, 488, 490, 495, 501, 503, 505, 517, 522, 534, 538, 540, 543, 553], "publicbas": [234, 483, 517], "publish": [6, 462, 465, 467, 469, 471, 490, 537], "pull": 537, "punish": 448, "pure": 6, "purpl": [234, 483, 493, 517, 537], "purpos": [1, 269, 338], "push": [40, 41, 65, 122, 171, 260], "push_back": [41, 65, 66, 107, 108, 209, 223, 251, 260, 270, 448, 537], "push_back_impl": 448, "push_backconstexpr": 448, "push_backstd": 41, "push_front": [41, 65, 66, 209, 223, 260], "push_frontstd": 41, "put": [2, 554], "py": [6, 553], "pz": 32, "q": [4, 554], "qo": [6, 493], "qqt": 179, "qualiti": [1, 11], "quantil": [260, 440, 441, 492, 493, 495, 538], "quat": 179, "quater": 179, "quaternion": [178, 179, 548], "quaternion_view": 179, "quaternionrang": [178, 179], "quaternionrangea": 178, "quaternionsrang": 178, "queri": 245, "queue": [121, 122, 170, 171], "quickmcl": [32, 249], "quit": [6, 448], "quot": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 459, 460, 462, 465, 466, 469, 470, 471, 472, 487, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "r": [0, 5, 17, 20, 28, 107, 108, 120, 187, 190, 202, 210, 224, 228, 231, 261, 283, 308, 309, 448, 512, 537], "r1": 299, "radian": [14, 26, 112, 114, 320, 401, 525, 537, 543], "rai": [27, 32, 55, 77, 98, 235, 249, 260, 267, 298, 299, 336], "rainbow": 537, "raison": 1, "ramiro": [32, 270], "random": [3, 13, 15, 19, 26, 27, 31, 32, 33, 34, 35, 36, 41, 43, 71, 79, 81, 83, 84, 86, 88, 104, 127, 128, 153, 156, 184, 235, 237, 238, 244, 245, 248, 249, 260, 267, 275, 276, 292, 293, 296, 297, 304, 305, 316, 317, 320, 322, 336, 352, 377, 378, 379, 382, 385, 387, 414, 416, 418, 420, 422, 487, 488, 492, 493, 538, 554], "random_access_iterator_tag": [71, 238], "random_access_rang": [304, 305], "random_engin": 554, "random_interspers": [26, 27, 151, 184, 235, 236, 267, 414, 416, 454, 455, 495], "random_intersperse_fn": [120, 208, 218, 222, 231, 296, 297, 415], "random_intersperse_fnimplement": [235, 297], "random_intersperse_fninlin": 415, "random_intersperse_fnstat": 415, "random_intersperse_view": [120, 210, 224, 235, 296, 297, 417], "random_intersperse_viewconstexpr": 297, "random_intersperse_viewimplement": 297, "random_intersperse_viewrandom_intersperse_view": 297, "random_intersperseconstexpr": 297, "random_interspersedefinit": 297, "random_probability_estimator_": [26, 495], "random_st": [26, 495], "random_state_gener": [26, 43, 44], "random_state_generator_": 26, "random_state_generator_typ": 26, "random_state_generatora": 43, "random_state_prob": [26, 495], "randominclud": 145, "randomli": [304, 440], "randomnumberdistribut": [19, 422], "randomrandom": 133, "randomstatedistribut": [79, 281], "randomstategener": [26, 44, 186, 195, 196, 201, 204, 209, 213, 217, 223, 229, 235, 487, 488], "randomstategeneratora": 43, "randomstategeneratorstd": 488, "randomstategeneratortyp": 488, "rang": [3, 13, 14, 15, 17, 20, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 59, 61, 63, 65, 75, 77, 83, 86, 90, 96, 98, 100, 101, 104, 105, 107, 108, 110, 111, 121, 122, 151, 153, 159, 161, 170, 171, 172, 173, 175, 176, 178, 179, 184, 210, 211, 224, 226, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 259, 260, 267, 269, 270, 271, 272, 273, 274, 277, 278, 282, 283, 284, 285, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 322, 326, 332, 336, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 394, 395, 408, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 438, 439, 440, 441, 444, 447, 448, 451, 455, 456, 457, 458, 492, 493, 494, 495, 503, 504, 505, 506, 512, 514, 521, 522, 525, 536, 537, 554], "range_": 305, "range_access": [297, 305], "range_difference_t": 305, "range_error": 245, "range_error_prob": 245, "range_map": 554, "range_max": 522, "range_measur": 554, "range_min": 522, "range_v3_major": [122, 177, 291], "range_v3_minor": [122, 177, 291], "range_value_t": [122, 178, 179, 247, 260, 283, 293, 297, 305, 441, 525, 536, 537], "rangea": [104, 260, 414, 416, 422, 424], "rangean": [348, 352, 356, 426], "ranger": 11, "rangerang": 260, "ranges_value_t": 412, "rangesauto": 522, "rangesourc": [424, 426], "rangesv3": 3, "rangeth": [121, 260, 394, 414, 416, 422], "rao": [42, 500, 550], "rarr": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "raspberri": 11, "rate": [104, 492, 493, 495, 538], "rather": [65, 260, 418], "ratio": [104, 315, 537], "raw_difference_typ": 238, "ray2d": [32, 99, 120, 189, 198, 210, 212, 224, 227, 235, 260, 298, 299], "ray2dcast": [32, 299], "ray2dray2d": 299, "raycast": [24, 25, 31, 32, 59, 61, 63, 98, 158, 184, 326], "raycastingraycast": 138, "raytrac": [37, 55, 169, 184, 299], "rbegin": [41, 65, 66, 210, 224], "rbeginconstexpr": 41, "rclcpp": [460, 465, 466, 469, 470, 471, 472, 487, 488, 490, 523], "rclcpp_lifecycl": [459, 460, 465, 466, 469, 470, 471, 472, 487, 488, 490], "re": [1, 32, 39, 77, 179, 272, 293, 303, 348, 350, 352, 354, 356, 358, 460, 462, 465, 466, 467, 469, 471, 488, 490, 492, 493], "reach": [41, 65, 260, 448, 554], "react": 260, "read": [4, 32, 55, 65, 270, 297, 305, 322, 492, 493, 554], "readabl": [3, 38, 41, 174, 439, 548], "readi": 519, "real": [79, 100, 179, 313], "reason": 260, "recommend": [6, 104, 554], "recov": [34, 104, 492, 493, 495, 538], "recoveri": [26, 320], "recovery_alpha_fast": [492, 493], "recovery_alpha_slow": [492, 493], "recur": 2, "recurs": 4, "red": [234, 483, 493, 517, 537, 554], "ref": [297, 305, 495], "refer": [11, 15, 18, 26, 28, 34, 38, 41, 64, 66, 72, 185, 187, 190, 202, 224, 228, 236, 238, 241, 243, 245, 249, 264, 268, 290, 297, 305, 446, 457, 464, 479, 485, 495, 497, 513, 519, 529, 531, 534, 553], "reference_typ": [107, 108, 224, 228, 448], "reference_typerang": 448, "reference_typerefer": 448, "reference_wrapp": [297, 305, 414, 415, 420, 421], "referencedecltyp": 238, "referencefin": 92, "referencerefer": 38, "referencevalu": [41, 238], "referencevalue_typ": 41, "referencevector2": 38, "regardless": 98, "region": [4, 27, 73, 84, 88, 235, 258, 259, 260, 267], "regular": [2, 13, 17, 20, 27, 53, 100, 126, 160, 184, 235, 260, 267, 270, 300, 312, 313], "regular_grid": [53, 125, 126, 160, 184, 312, 313], "regulargrid": [13, 53, 281], "regularli": [3, 53, 235, 260, 300], "reinitialize_global_loc": 493, "reinterpret_cast": 270, "reintroduc": 122, "rel": [1, 57, 243, 328, 342, 492, 493, 554], "relat": [0, 6, 28, 151, 173, 184, 190, 234, 272, 284, 293, 303, 305, 346, 444, 455, 458, 469, 483, 517], "relationfil": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "releas": 5, "relev": 65, "reli": [2, 3, 57, 77, 260], "reliabl": [6, 493], "reloc": [460, 462, 465, 467], "remain": 448, "remap": 493, "rememb": 5, "remov": [39, 448, 495, 554], "remove_cv_t": [71, 238], "remove_if": 554, "remove_reference_t": [71, 185, 238], "rend": [41, 65, 66, 210, 224], "rendconstexpr": 41, "renorm": 179, "rep": 11, "repeat": [19, 65, 462, 467], "repeat_n": [178, 179], "replac": [4, 107, 151, 184, 304, 448, 455, 554], "replic": 537, "report": 503, "repositori": 553, "repres": [4, 16, 17, 21, 43, 55, 73, 77, 79, 81, 90, 100, 116, 118, 122, 234, 240, 241, 243, 260, 315, 418, 465, 467, 471, 483, 493, 517, 537, 554], "represent": [32, 55, 57, 75, 77, 90, 179, 235, 249, 255, 260, 270, 338, 378, 379, 382, 385, 387, 487], "representative_st": [122, 224, 231, 360], "representative_statebeluga": 361, "representative_statest": 122, "reproduc": 3, "req": [460, 465, 466], "request": [460, 462, 465, 466, 467, 468, 492, 493], "request_head": [460, 465, 466], "request_nomotion_upd": [492, 493], "requir": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 63, 65, 67, 75, 77, 79, 81, 90, 94, 102, 122, 124, 126, 128, 157, 171, 173, 174, 176, 177, 179, 181, 183, 184, 185, 235, 236, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 267, 269, 270, 272, 274, 276, 278, 280, 281, 282, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 304, 305, 307, 309, 311, 313, 315, 317, 319, 326, 352, 388, 414, 416, 422, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 493, 495, 499, 501, 522, 523, 525, 534, 537, 538, 546, 548], "resampl": [4, 11, 26, 42, 43, 104, 236, 260, 304, 320, 394, 418, 458, 492, 493, 495, 501, 537, 538], "resample_interv": [26, 224, 231, 320, 492, 493, 495, 512, 516, 538], "resample_intervalbeluga": 321, "resample_intervalbeluga_ro": 539, "resample_intervalfilt": 26, "resample_intervalnumb": 495, "resample_intervalstd": [26, 495], "resample_policy_": [26, 495], "research": [0, 1], "reserv": [107, 108, 122, 210, 224, 270, 448, 451, 537], "reserveconstexpr": 448, "reset": [19, 26, 69, 70, 79, 80, 104, 105, 183, 210, 224, 257, 297, 444, 492, 493, 495], "resetconstexpr": [26, 183, 444, 495], "resetvoid": 257, "resiz": [107, 108, 210, 224, 448, 451], "resizeconstexpr": 448, "resolut": [20, 45, 49, 51, 53, 100, 101, 110, 111, 112, 114, 116, 117, 118, 119, 210, 224, 249, 270, 301, 313, 314, 315, 344, 453, 492, 493, 495, 496, 505, 506, 512, 514, 518, 524, 525, 530, 532, 534, 536, 537, 538, 543, 545, 546, 547, 548], "resolution_": [313, 315, 453], "resolution_dataset": 270, "resolution_in_each_axis_t": [116, 117, 118, 119, 224, 228, 315], "resolution_in_each_axis_tstd": 315, "resolution_in_each_axis_ttyp": 315, "resolutiondefinit": 122, "resolutiondoubl": [313, 453, 534], "resolutiongrid": [100, 110], "resolutionstd": [116, 118], "resolutionth": 314, "respect": [2, 4, 65, 114, 554], "respons": [460, 462, 465, 466, 467, 468], "rest": [1, 5, 39, 493, 554], "restor": 492, "restore_default": 492, "result": [3, 4, 19, 29, 30, 39, 79, 83, 92, 126, 178, 179, 234, 251, 255, 256, 257, 260, 297, 314, 346, 378, 379, 382, 385, 387, 403, 441, 451, 483, 492, 493, 495, 517, 554], "result_typ": [19, 79, 80, 224, 228, 255, 256, 257, 260, 297, 305, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "result_typesophu": 255, "result_typeth": [255, 257], "result_typetypenam": [255, 257], "ret": 270, "retri": 493, "retriev": [13, 51], "return": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 30, 32, 34, 38, 39, 41, 43, 55, 57, 61, 65, 73, 75, 77, 79, 90, 98, 100, 107, 122, 126, 128, 170, 171, 173, 175, 176, 178, 179, 181, 183, 185, 235, 236, 238, 243, 245, 247, 249, 251, 255, 257, 259, 260, 267, 269, 270, 272, 274, 276, 278, 280, 282, 283, 288, 290, 293, 297, 299, 301, 303, 305, 309, 311, 313, 314, 315, 317, 319, 348, 350, 352, 354, 356, 358, 367, 370, 374, 376, 392, 398, 401, 410, 412, 414, 416, 424, 426, 438, 439, 440, 441, 444, 445, 446, 448, 451, 453, 456, 457, 465, 467, 471, 495, 501, 522, 523, 534, 537, 546, 548, 554], "returnsa": [55, 57, 67, 75, 77, 84, 86, 88, 90, 94, 96, 102, 121, 260, 532], "returnsan": [43, 501], "returnscel": [45, 49], "returnsdist": 98, "returnsful": 98, "returnsgrid": 53, "returnsplan": [49, 51, 53], "returnsrang": [45, 49, 51, 53], "returnssize_t": 432, "returnssubtend": 59, "returnsth": [73, 79, 81, 104, 112, 114, 116, 118, 121, 178, 260, 314, 370, 532], "returnstru": [79, 81, 392, 394, 401, 465, 467, 471], "reus": [1, 2], "reusabl": [2, 3, 458, 485], "revers": [41, 65, 260], "reverse_iter": [41, 65, 66, 224, 228], "reverse_iteratorrevers": 41, "reverse_iteratorstd": 41, "reversed_": 38, "revisit": 270, "reweight": [21, 22, 23, 26, 27, 161, 184, 235, 236, 267, 356, 358, 495, 554], "reweight_base_fn": [120, 208, 222, 302, 303, 357, 358, 359], "reweight_base_fnimplement": [235, 303], "reweight_base_fninlin": [357, 359], "reweight_fn": [120, 208, 222, 302, 303, 359], "reweight_fnimplement": [235, 303], "reweight_fninlin": 359, "reweightconstexpr": 303, "reweightdefinit": 303, "rewind": 71, "rflag": [40, 41, 260], "rgba": [536, 537], "rh": 269, "right": [288, 405, 406], "right_hash": 315, "rigidli": [492, 493], "rmw_request_id_t": [460, 465, 466], "ro": [1, 6, 11, 32, 459, 460, 461, 462, 463, 465, 467, 468, 471, 476, 484, 485, 487, 488, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553], "robot": [1, 11, 34, 42, 55, 67, 75, 77, 104, 241, 245, 260, 322, 324, 328, 332, 334, 336, 458, 491, 492, 493, 500, 550, 553, 554], "robot_model_typ": [492, 493], "robot_pose_in_world": [34, 245], "robust": [104, 344], "roll": [40, 114, 260, 315], "roll_clustering_resolut": [114, 115, 315], "roll_clustering_resolutionclust": 114, "rollingwindow": [26, 40, 41, 260, 261, 265, 495], "rollov": 65, "ros2": [5, 6, 537, 553], "ros2_common": [459, 460, 469, 477, 487, 488], "ros_distro": 5, "rosdep": 5, "roslaunch": 6, "rospack": 6, "rosrun": 6, "rotat": [12, 86, 112, 114, 128, 179, 255, 260, 276, 314, 315, 328, 342, 401, 492, 493, 534, 537, 538, 543, 548], "rotation_noise_from_rot": [128, 224, 231, 276, 328, 342], "rotation_noise_from_rotationbeluga": [329, 343], "rotation_noise_from_rotationdoubl": [128, 276], "rotation_noise_from_rotationrot": [128, 276], "rotation_noise_from_transl": [128, 224, 231, 276, 328, 342], "rotation_noise_from_translationbeluga": [329, 343], "rotation_noise_from_translationdoubl": [128, 276], "rotation_noise_from_translationrot": [128, 276], "rotation_param": 276, "rotation_vari": [128, 276], "rotz": [12, 34, 245], "rough": 122, "roughli": [235, 484, 518], "routin": 249, "row": [255, 257, 310, 311, 505, 532, 534, 547, 548], "rowsatcompiletim": [255, 257, 270, 382, 451], "rowsth": 310, "rowwis": 270, "rpy": 114, "rsquo": 43, "rtabmap": 6, "rule": 4, "run": 11, "runner": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 465, 467, 469, 471, 501, 503, 505, 538, 540, 542, 543], "runtim": [3, 249, 495, 501, 554], "runtime_error": 257, "runtime_errorif": [43, 79, 81, 501], "rvalu": [29, 40, 61, 260, 293], "rviz": [6, 537], "rviz2": [6, 553], "safari": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547], "safeti": 92, "sake": [451, 554], "same": [18, 47, 65, 71, 79, 98, 100, 179, 243, 260, 270, 276, 314, 315, 338, 403, 492, 493, 553], "same_category_landmarks_view": 243, "sampl": [2, 3, 4, 16, 25, 26, 27, 34, 42, 67, 83, 86, 94, 102, 104, 122, 127, 128, 151, 152, 158, 172, 179, 184, 235, 236, 260, 267, 270, 275, 276, 277, 278, 287, 292, 317, 320, 352, 418, 420, 422, 426, 440, 454, 455, 492, 493, 495, 500, 525, 536, 537, 550, 554], "sample_base_fn": [120, 211, 226, 304, 305, 419, 420], "sample_base_fnimplement": [235, 305], "sample_base_fninlineprotect": [419, 421], "sample_count": 179, "sample_fn": [120, 208, 222, 304, 305, 421], "sample_fnimplement": [235, 305], "sample_fninlin": 421, "sample_from_distribut": [211, 226, 305, 418, 419, 420, 421], "sample_from_distributionconstexpr": 305, "sample_from_rang": [211, 226, 305, 418, 419, 420, 421], "sample_from_rangeconstexpr": 305, "sample_mean_and_covari": 179, "sample_view": [120, 211, 226, 235, 304, 305, 423], "sample_viewconstexpr": 305, "sample_viewimplement": 305, "sample_viewsample_view": 305, "sampleconstexpr": 305, "sampledefinit": 305, "sampleuniform": 259, "sampling_fn_2d": 128, "sampling_fn_3d": 128, "satisfi": [13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 45, 47, 49, 51, 53, 55, 57, 67, 75, 77, 90, 94, 102, 107, 236, 260, 352, 403, 414, 416, 422, 440, 441, 525], "satur": 536, "save": [122, 249, 462, 467], "save_pose_r": 492, "save_pose_timer_": [462, 467, 478, 482], "save_pose_timer_beluga_amcl": 468, "save_pose_timer_callback": [462, 467, 468, 478, 480], "save_pose_timer_callbackvoid": 462, "save_pose_timer_ro": 462, "save_pose_timer_tim": 462, "sc22": 315, "scalar": [14, 26, 27, 38, 61, 63, 79, 81, 120, 122, 174, 178, 179, 189, 205, 208, 219, 220, 221, 222, 225, 226, 228, 231, 235, 247, 255, 257, 260, 267, 269, 270, 279, 280, 308, 309, 310, 311, 314, 326, 339, 378, 379, 382, 385, 387, 396, 397, 402, 451, 495, 496, 503, 504, 507, 512, 514, 515, 516, 518, 522, 524, 525, 530, 532, 536, 537, 544, 545, 546, 547, 548, 554], "scalar_typ": [79, 80, 81, 82, 90, 226, 228, 255, 257, 269, 270, 338, 339, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "scalar_typeflo": 269, "scalar_typescalar": 269, "scalar_typeth": [255, 257], "scalar_typetypenam": [255, 257], "scalara": 260, "scalardoubl": 522, "scalarrang": 522, "scalarsa": 260, "scalarsrang": 260, "scalarth": [178, 260, 308, 310, 401], "scale": [90, 270, 338, 340, 493, 537], "scale_factor": 537, "scaled_l_matrix": 451, "scan": [27, 47, 160, 184, 235, 246, 247, 260, 267, 460, 462, 465, 467, 471, 488, 492, 493, 501, 503, 504, 522, 554], "scan_": 522, "scan_frame_id": [492, 493], "scan_top": [492, 493], "scanlas": 503, "scatter": [1, 73], "scenario": [180, 277, 279], "scheme": 554, "se": [84, 88, 166, 184, 258, 259, 295, 458, 495, 496, 501, 518, 530, 536, 543], "se2": [12, 27, 31, 32, 33, 34, 90, 120, 121, 122, 127, 128, 178, 179, 208, 222, 235, 244, 245, 248, 249, 254, 255, 258, 259, 260, 267, 269, 270, 275, 276, 279, 280, 298, 299, 308, 309, 310, 311, 314, 315, 316, 317, 338, 339, 387, 396, 402, 461, 462, 487, 488, 496, 507, 512, 514, 516, 518, 524, 525, 530, 532, 533, 534, 536, 537, 544, 547, 548], "se2bas": [27, 120, 189, 195, 201, 212, 224, 226, 227, 228, 230, 235, 254, 255, 260, 267, 384], "se2d": [12, 17, 27, 32, 33, 34, 55, 67, 77, 84, 85, 87, 94, 96, 97, 98, 99, 102, 113, 120, 122, 127, 128, 206, 208, 211, 220, 222, 226, 235, 244, 245, 249, 258, 259, 260, 267, 276, 299, 314, 315, 317, 460, 462, 465, 466, 467, 468, 471, 472, 488, 495, 501, 502, 505, 534], "se2near": [308, 309], "se2nearauto": 309, "se3": [12, 26, 33, 34, 90, 122, 127, 128, 178, 179, 242, 243, 254, 255, 258, 259, 260, 269, 270, 314, 315, 338, 339, 379, 495, 521, 522, 524, 525, 532, 536, 537, 547, 548], "se3bas": [27, 120, 189, 195, 201, 212, 224, 226, 227, 228, 230, 235, 254, 255, 260, 267, 381], "se3d": [12, 14, 27, 33, 34, 67, 73, 88, 89, 115, 120, 127, 128, 206, 208, 211, 220, 222, 226, 235, 243, 244, 245, 258, 259, 260, 267, 314, 315, 324, 503, 504, 522], "search": 243, "sec": 537, "second": [32, 107, 122, 171, 249, 288, 313, 403, 492, 493, 554], "second_rot": [128, 276], "second_rotation_param": 128, "section": [260, 332, 554], "see": [11, 12, 16, 19, 21, 23, 25, 26, 27, 30, 32, 34, 36, 38, 39, 41, 55, 57, 59, 67, 75, 77, 90, 94, 98, 104, 107, 122, 124, 126, 128, 157, 171, 173, 174, 176, 177, 179, 181, 183, 184, 185, 235, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 267, 269, 270, 272, 274, 276, 278, 280, 282, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 322, 328, 332, 336, 362, 368, 376, 388, 408, 430, 439, 440, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 553], "seed": 270, "seem": [260, 270], "seen": [1, 537], "select": [26, 260, 320, 446, 458, 492, 493, 495, 501, 538], "selective_resampl": [26, 226, 231, 320, 492, 493, 495, 512, 516, 538], "selective_resamplingbeluga": 321, "selective_resamplingbeluga_ro": 539, "selective_resamplingbool": [26, 495], "selective_resamplingwheth": [26, 495], "self": [39, 126, 247, 251, 274, 301, 313, 554], "self_typ": 39, "selfadjointeigensolv": 257, "semant": 19, "semiregular_box_t": 297, "sens": 554, "sensibl": 260, "sensor": [4, 11, 14, 21, 26, 27, 35, 36, 43, 45, 47, 49, 51, 53, 55, 57, 73, 75, 77, 90, 100, 110, 153, 184, 235, 236, 240, 241, 258, 259, 260, 267, 302, 322, 324, 330, 332, 336, 338, 340, 356, 368, 458, 460, 462, 465, 467, 471, 487, 488, 493, 495, 501, 521, 522, 533, 534, 554], "sensor_model": [26, 43, 44, 495, 501, 502, 554], "sensor_model_": [26, 495], "sensor_model_sigma": 554, "sensor_model_vari": [460, 462, 465, 467, 495, 501, 502, 512, 515], "sensor_model_variantbeluga_amcl": [466, 468], "sensor_model_variantget": [460, 462], "sensor_model_variantsensor": 495, "sensor_model_variantstd": 495, "sensor_modelsensor": 43, "sensor_modelvari": 501, "sensor_msg": [459, 460, 461, 462, 465, 466, 467, 468, 471, 472, 487, 488, 492, 493, 495, 496, 499, 503, 509, 511, 518, 519, 521, 522, 523, 525, 530], "sensor_pose_in_robot": [34, 226, 231, 324], "sensor_pose_in_robotbeluga": 325, "sensor_pose_in_robotpos": 34, "sensor_pose_in_robotsophu": 34, "sensor_pose_in_world": [34, 73, 74, 243], "sensor_pose_in_worldth": 73, "sensor_rang": 554, "sensorinclud": [146, 147, 148], "sensormodel": [2, 26, 44, 55, 57, 75, 77, 90, 186, 195, 196, 201, 204, 209, 213, 217, 223, 229, 235, 281], "sensormodelclass": 43, "sensormultivariate_uniform_distribut": 145, "sensorsensor": 134, "sentinel": [27, 37, 38, 41, 61, 63, 64, 65, 66, 120, 208, 222, 235, 267, 327], "sentinel_for": [38, 326], "sentinelinlin": 327, "sentinelpast": [38, 235], "separ": [6, 311], "seq": [26, 43, 44, 272, 293, 303, 492, 493, 495, 501, 502, 554], "sequenc": [4, 19, 79, 493], "sequenced_polici": [26, 43, 487, 488, 495, 501], "sequences_": 448, "sequenti": [42, 458, 492, 493], "seri": [42, 500, 550], "server": [460, 461, 462, 465, 467, 492, 493], "servic": [0, 460, 462, 465, 467], "servicecli": [462, 467], "serviceserv": [462, 467], "set": [4, 6, 19, 26, 27, 43, 55, 79, 81, 90, 104, 121, 122, 235, 236, 256, 257, 260, 267, 276, 440, 458, 460, 462, 465, 467, 471, 488, 492, 493, 495, 501, 537, 553, 554], "set_initial_pos": [492, 493], "set_map": 492, "set_map_callback": [462, 467, 468, 478, 480], "set_map_callbackbool": 462, "set_map_server_": [462, 467, 478, 482], "set_map_server_beluga_amcl": 468, "set_map_server_map": 462, "set_map_server_ro": 462, "setmap": [461, 462, 467, 468, 492], "setpoint": 554, "setup": [5, 553], "sever": [5, 448, 553], "shape": 2, "share": 6, "shared_ptr": [460, 465, 466], "sharedptr": [460, 465, 466, 469, 470, 471, 472, 488, 490], "shift": 314, "short": [32, 104, 288, 322, 405, 492, 493], "shorthand": [109, 235, 260, 447], "should": [18, 100, 243, 255, 257, 269, 392, 394, 401, 403, 440, 451, 492, 493, 553, 554], "should_interspers": 297, "show": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547, 554], "shown": [4, 234, 483, 517, 554], "shutdown": [492, 493], "side": [3, 20], "sigma": 260, "sigma_bear": [34, 226, 231, 245, 324, 332], "sigma_bearingbeluga": [325, 333], "sigma_bearingdoubl": [34, 245], "sigma_bearingstandard": [34, 245], "sigma_hit": [32, 226, 231, 249, 322, 336, 493], "sigma_hitbeluga": [323, 337], "sigma_hitdoubl": [32, 249], "sigma_hitstandard": [32, 249], "sigma_point": 451, "sigma_rang": [226, 231, 245, 332], "sigma_rangebeluga": 333, "sigma_rangedoubl": 245, "sigma_rangestandard": 245, "sign": 71, "signal": 42, "signatur": [465, 469, 471, 490], "signed_typ": 315, "signed_valu": 315, "signific": 314, "similar": [19, 185, 255, 260], "simpl": [3, 491, 553], "simplest": 6, "simpli": 1, "simplic": 554, "simplifi": [2, 276, 554], "simul": [553, 554], "sin": [247, 548], "sin_apertur": [34, 245], "sin_theta": 249, "sinc": [4, 41, 260, 418, 435, 553], "singl": [27, 40, 41, 121, 122, 235, 260, 267, 290, 360, 374, 445, 446, 492, 493, 537], "site": 315, "size": [20, 25, 26, 41, 65, 66, 71, 100, 101, 107, 108, 110, 111, 122, 152, 158, 171, 172, 178, 179, 184, 211, 226, 236, 251, 259, 260, 270, 277, 278, 287, 304, 305, 313, 382, 422, 424, 438, 439, 441, 444, 448, 453, 505, 506, 512, 514, 522, 525, 534, 536, 537, 554], "size_": 41, "size_t": [13, 15, 17, 26, 38, 40, 41, 49, 50, 51, 52, 65, 100, 107, 110, 111, 112, 114, 116, 118, 121, 122, 171, 175, 176, 179, 181, 249, 251, 259, 260, 270, 274, 289, 290, 313, 314, 315, 319, 320, 360, 363, 368, 390, 391, 392, 393, 424, 425, 426, 427, 432, 435, 437, 439, 440, 441, 444, 445, 446, 448, 453, 495, 503, 504, 505, 506, 522, 525, 532, 534, 536, 537, 538, 547, 548, 554], "size_typ": [41, 65, 66, 71, 107, 108, 226, 228, 238, 448], "size_types": [41, 448], "size_typestd": [41, 448], "sizeconstexpr": [41, 448], "sized_rang": [278, 304, 305, 444, 448, 537], "sizeof": [116, 314, 315, 446, 448], "sizesampl": 525, "sizestd": [313, 453, 534], "skip": 493, "slam": 6, "slow": [492, 493, 495, 538], "slow_averag": 444, "slow_filter_": 444, "slower": [249, 299], "small": [73, 255, 493], "smooth": [55, 69, 77], "so": [1, 17, 18, 34, 39, 109, 245, 260, 304, 315, 403, 408, 430, 445, 448, 537, 554], "so2": [12, 31, 32, 34, 86, 127, 128, 179, 244, 245, 248, 249, 255, 269, 270, 275, 276, 280, 298, 299, 308, 309, 310, 311, 315, 316, 317, 378, 533, 534, 537, 548], "so2bas": [27, 120, 189, 195, 201, 212, 224, 226, 227, 228, 230, 235, 254, 255, 260, 267, 383], "so2d": [32, 98, 99, 122, 128, 259, 276, 299, 317, 534], "so2near": [308, 309], "so2nearauto": 309, "so3": [178, 179, 254, 255, 269, 315, 385, 548], "so3bas": [27, 120, 189, 195, 201, 212, 224, 226, 227, 228, 230, 235, 254, 255, 260, 267, 380], "so3d": [12, 34, 245, 259], "softwar": [2, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "solut": [6, 458], "solv": 554, "solver": [257, 458], "some": [3, 13, 16, 21, 73, 102, 260, 293, 469, 554], "someth": 537, "soon": [7, 8, 9, 10, 551, 552], "sophu": [3, 12, 14, 17, 26, 27, 31, 32, 33, 34, 55, 67, 73, 77, 84, 85, 86, 87, 88, 89, 90, 94, 96, 97, 98, 99, 102, 112, 113, 114, 115, 120, 121, 122, 127, 128, 162, 178, 179, 184, 189, 195, 201, 206, 208, 211, 212, 220, 222, 224, 226, 227, 228, 230, 235, 242, 243, 244, 245, 246, 247, 248, 249, 254, 255, 258, 259, 260, 267, 269, 270, 275, 276, 279, 280, 298, 299, 308, 309, 310, 311, 314, 315, 316, 317, 324, 338, 339, 378, 379, 380, 381, 383, 384, 385, 387, 401, 402, 443, 458, 460, 461, 462, 465, 466, 467, 468, 471, 472, 487, 488, 495, 496, 499, 501, 502, 503, 504, 505, 507, 509, 511, 512, 514, 516, 518, 519, 521, 522, 525, 527, 528, 530, 532, 533, 534, 536, 537, 538, 543, 544, 547, 548], "sophus_match": [162, 184, 442, 443], "sophus_print": [162, 184, 442, 443], "sophussophu": [537, 548], "sort": [2, 121, 122, 235, 484, 518], "sourc": [6, 11, 22, 24, 29, 31, 33, 35, 37, 40, 98, 121, 123, 125, 127, 170, 172, 175, 178, 180, 182, 236, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 414, 438, 440, 442, 445, 447, 449, 452, 454, 456, 458, 459, 461, 487, 494, 498, 521, 533, 536, 545, 547, 553, 554], "source_cell_": 299, "source_pos": [98, 99, 299], "source_pose_in_local_frame_": 299, "source_posepos": 98, "source_posit": 299, "space": [12, 13, 14, 15, 17, 20, 27, 53, 59, 61, 73, 84, 86, 88, 126, 128, 166, 184, 235, 236, 258, 259, 260, 267, 279, 280, 295, 300, 301, 313, 396, 401, 438, 458, 492, 493, 554], "spare": 3, "spars": [27, 90, 100, 121, 122, 160, 184, 235, 260, 267, 270, 312, 313], "sparse_value_grid": [100, 134, 160, 184, 270, 487, 488], "sparsegridt": [91, 205, 207, 208, 219, 220, 221, 222, 223, 226, 228, 232, 235, 270], "sparsegridttyp": 90, "sparsevaluegrid": [90, 101, 120, 191, 199, 210, 211, 218, 220, 224, 226, 228, 235, 260, 270, 312, 313, 488], "sparsevaluegrid2": [260, 261, 265, 312, 313, 487, 488], "sparsevaluegrid3": [260, 261, 265, 312, 313], "sparsevaluegridgener": [270, 313], "sparsevaluegridsparsevaluegrid": 313, "spatial": [4, 25, 43, 96, 112, 114, 116, 118, 122, 158, 184, 243, 260, 314, 315, 426, 492, 493, 538, 554], "spatial_hash": [24, 25, 26, 43, 44, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 158, 184, 208, 211, 222, 224, 226, 228, 235, 260, 495, 536, 537], "spatial_hash_function_": 122, "spatial_hashcal": 315, "spatial_hasher_": [26, 495], "spatial_hasher_typ": [26, 43, 44], "spatial_hashera": 43, "spatial_hashspatial_hash": 315, "spatial_resolution_": [492, 493], "spatial_resolution_i": [495, 512, 516, 538], "spatial_resolution_theta": [495, 512, 516, 538], "spatial_resolution_thetabeluga_ro": 539, "spatial_resolution_thetadoubl": 495, "spatial_resolution_thetaspati": 495, "spatial_resolution_x": [495, 512, 516, 538], "spatial_resolution_xbeluga_ro": 539, "spatial_resolution_xdoubl": 495, "spatial_resolution_xspati": 495, "spatial_resolution_ybeluga_ro": 539, "spatial_resolution_ydoubl": 495, "spatial_resolution_yspati": 495, "spawn": 553, "speak": 92, "special": [3, 27, 40, 84, 86, 88, 90, 92, 112, 114, 116, 118, 235, 254, 258, 259, 260, 267, 279, 314, 318, 362, 363, 367, 373, 375, 378, 379, 382, 385, 387, 401, 411, 432, 434, 435, 437, 445, 487, 496, 518, 530, 532, 536, 537, 543], "specif": [2, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 98, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 236, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "specifi": [18, 19, 107, 121, 122, 180, 234, 236, 260, 271, 278, 279, 336, 392, 394, 401, 448, 483, 492, 517, 554], "speed": [6, 451], "spiral": 104, "spread": 315, "sqrt": [32, 128, 249, 276, 441, 451], "squar": 451, "squared_dist": 249, "squared_max_dist": 249, "squared_weight_sum": 179, "squarednorm": [243, 249], "src": [5, 178, 179, 451, 487, 488, 553, 554], "srv": [459, 460, 465, 466, 487, 488, 493], "ss": [16, 270], "stachniss": [42, 500, 550], "stack": 3, "staff": 0, "stamp": [523, 525], "stamp_messag": [523, 525, 527, 528], "stamp_messagemessag": 523, "stand": 1, "standalon": [492, 493], "standard": [2, 3, 19, 34, 38, 59, 81, 100, 122, 179, 236, 241, 243, 245, 260, 322, 324, 332, 336, 344, 440, 441, 492, 493, 495, 534, 538, 540, 554], "start": [1, 61, 98, 260, 448, 553], "state": [4, 16, 18, 19, 21, 25, 26, 27, 32, 33, 34, 43, 55, 57, 67, 75, 77, 79, 86, 90, 94, 96, 97, 98, 102, 104, 112, 113, 114, 115, 121, 122, 128, 158, 178, 184, 189, 208, 221, 222, 224, 231, 232, 235, 236, 244, 245, 249, 257, 260, 261, 266, 267, 270, 276, 282, 283, 284, 285, 289, 290, 292, 293, 302, 303, 305, 314, 315, 317, 352, 356, 361, 371, 388, 403, 407, 408, 409, 426, 441, 444, 460, 465, 466, 469, 470, 471, 472, 487, 488, 490, 493, 495, 501, 525, 536, 537, 554], "state_detail": [32, 34, 120, 122, 128, 208, 222, 235, 245, 249, 260, 270, 276, 283, 285, 289, 290, 293, 315, 317, 408, 409, 441, 537], "state_fn": [32, 34, 120, 122, 128, 208, 222, 245, 249, 260, 270, 276, 283, 285, 289, 290, 293, 315, 317, 409, 441, 537], "state_fncustom": [235, 290], "state_fninlin": 409, "state_t": [260, 261, 265, 282, 283, 370, 441, 525, 536, 537], "state_ttyp": [283, 441], "state_ttypenam": [283, 441, 537], "state_typ": [16, 21, 26, 32, 34, 43, 44, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 90, 91, 94, 95, 102, 103, 128, 226, 228, 235, 245, 249, 260, 270, 276, 282, 283, 317, 388, 389, 441, 487, 488, 537], "state_type2d": [128, 276, 317], "state_typesophu": [32, 249, 276, 317], "state_typest": [32, 34, 245, 249, 270], "state_typestatetyp": [34, 128, 245], "state_typestd": [270, 283], "state_typeth": 283, "stateconstexpr": [32, 34, 122, 128, 245, 249, 270, 276, 283, 285, 290, 293, 315, 317, 441, 537], "statecustom": [32, 34, 122, 128, 245, 249, 270, 276, 283, 285, 290, 293, 315, 317, 441], "statehistogram": 537, "statesamplingfunct": [16, 67, 94, 102, 293, 352, 353, 354, 355], "statesamplingfunctiona": 352, "statesconstexpr": [122, 285, 305, 537], "statesdefinit": [122, 285, 305], "statesrang": [96, 260], "stateth": [112, 114], "statetyp": [33, 34, 58, 68, 76, 127, 128, 188, 189, 191, 197, 199, 205, 208, 213, 219, 220, 222, 223, 226, 228, 229, 232, 235, 244, 245], "statetypetyp": [57, 67, 75], "stateweightingfunct": [21, 55, 57, 75, 77, 90], "static": [55, 77, 122, 128, 249, 255, 257, 259, 269, 270, 276, 278, 297, 311, 317, 338, 339, 378, 379, 382, 385, 386, 387, 394, 414, 446, 457, 460, 462, 465, 467, 505, 534, 540], "static_assert": [26, 41, 122, 128, 247, 255, 257, 269, 270, 278, 283, 293, 297, 303, 305, 313, 315, 441, 444, 448, 451, 537], "static_cast": [38, 39, 41, 122, 126, 179, 238, 251, 270, 278, 305, 315, 441, 444, 446, 448, 451, 522, 537, 546, 548, 554], "static_map": 492, "staticconstexpr": 382, "stationari": [27, 102, 163, 184, 235, 253, 260, 267, 316, 317, 490, 492, 493], "stationary_model": [102, 163, 184, 252, 253, 487, 488], "stationarymodel": [16, 103, 120, 189, 208, 222, 226, 228, 260, 316, 317, 487, 488, 495, 501], "stationarymodela": [235, 317], "stationarymodelinlin": 103, "statisfi": [236, 440], "statist": [42, 458], "statu": [462, 467, 468], "std": [2, 13, 15, 17, 26, 27, 30, 32, 34, 38, 40, 41, 43, 44, 45, 49, 50, 51, 52, 55, 57, 59, 63, 65, 66, 67, 71, 73, 75, 77, 79, 81, 82, 90, 92, 94, 98, 100, 102, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 126, 128, 151, 171, 172, 173, 174, 175, 176, 178, 179, 181, 184, 185, 186, 188, 189, 191, 192, 195, 196, 197, 198, 200, 201, 208, 209, 210, 211, 212, 220, 222, 223, 224, 226, 227, 228, 230, 231, 235, 236, 238, 243, 245, 247, 249, 251, 254, 255, 257, 259, 260, 267, 269, 270, 272, 274, 276, 278, 280, 283, 288, 289, 290, 293, 297, 299, 303, 304, 305, 310, 311, 313, 314, 315, 317, 318, 319, 320, 338, 339, 340, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 364, 366, 367, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 403, 404, 408, 409, 411, 412, 413, 414, 415, 420, 421, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 448, 451, 453, 455, 457, 458, 460, 462, 465, 466, 467, 468, 469, 470, 471, 472, 487, 488, 490, 495, 496, 501, 502, 503, 504, 505, 506, 518, 522, 523, 525, 530, 532, 534, 536, 537, 538, 540, 541, 542, 543, 547, 548, 554], "std_msg": 523, "std_srv": [459, 460, 461, 462, 465, 466, 467, 468, 487, 488, 492, 493], "std_warn_level_": 492, "stdexcept": [40, 41, 270], "stdhash": [432, 433], "stdnumeric_limit": 434, "stdtuple_el": [435, 436], "stdtuple_s": 437, "step": [4, 43, 104, 465, 469, 471, 490, 492, 493, 501, 538], "step_": 38, "step_to": 38, "still": 537, "stl": [236, 293], "storag": [65, 107, 160, 184, 250, 274, 453], "store": [100, 179, 249, 313, 492, 554], "storeag": [505, 534], "str": 270, "strafe": [276, 342, 492, 493], "strafe_noise_from_transl": [226, 231, 276, 342], "strafe_noise_from_translationbeluga": 343, "strafe_noise_from_translationdoubl": 276, "strafe_noise_from_translationtransl": 276, "strafe_param": 276, "strasdat": 179, "strategi": 42, "stream": [40, 41, 260, 310], "streamlin": 6, "streamprecis": 311, "strictli": [3, 71, 92, 238], "string": [465, 466, 469, 470, 471, 472, 490, 492, 493], "string_view": [460, 462, 465, 466, 467, 468, 490, 523, 525], "stringstream": 270, "strive": 3, "strong": [11, 260], "strongli": [26, 27, 92, 122, 157, 184, 235, 260, 267, 289, 290, 318, 319], "strongly_typed_numer": [92, 122, 157, 184, 289, 290, 432, 434], "struct": [26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 63, 92, 121, 122, 127, 128, 171, 180, 181, 234, 235, 240, 241, 244, 245, 248, 249, 254, 255, 260, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 282, 283, 288, 289, 290, 292, 293, 296, 297, 302, 303, 304, 305, 314, 315, 318, 319, 438, 439, 440, 441, 445, 446, 456, 457, 463, 483, 488, 494, 495, 496, 505, 517, 525, 533, 534, 536, 537, 554], "structur": [3, 15, 34, 65, 243, 245, 458, 519, 554], "subclass": 519, "subrang": 122, "subscrib": [6, 459, 460, 461, 462, 465, 467, 469, 471, 487, 488], "subscript": [71, 460, 465, 469, 471, 488, 490], "subscription_opt": [487, 488], "subscriptionopt": [465, 469, 471, 490], "subsequ": 5, "subset": 100, "substanti": 1, "substitut": 276, "success": [257, 451, 465, 467, 471], "sudo": 5, "suffici": 315, "suit": 458, "suitabl": [6, 525, 536, 554], "sum": [271, 348, 492, 493, 538], "super": [234, 483, 517], "supercov": 59, "support": [1, 3, 5, 13, 39, 57, 67, 71, 75, 122, 128, 236, 255, 270, 283, 293, 297, 304, 352, 458, 487, 488, 492, 493, 495, 501, 553], "sure": [29, 308, 554], "surfac": 73, "surject": 53, "surpass": 401, "surpris": 3, "svg": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547], "swap": [38, 40, 41, 65, 66, 211, 226, 260, 261, 263, 553], "swapconstexpr": [38, 41], "swapvoid": 41, "symlink": 553, "symmetr": [79, 81, 128, 179, 257, 276], "symmetri": [38, 326], "synchron": [460, 462, 465, 467, 471, 488], "synthet": [6, 42, 500, 550], "system": [4, 5, 20, 42, 236, 249, 493, 500, 549, 550, 553], "t": [2, 4, 5, 6, 16, 17, 19, 21, 27, 28, 29, 30, 38, 39, 40, 41, 43, 66, 80, 93, 100, 111, 119, 120, 122, 174, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 254, 255, 256, 257, 259, 260, 261, 267, 270, 282, 283, 290, 299, 305, 308, 309, 310, 311, 314, 315, 318, 319, 363, 364, 380, 381, 383, 384, 386, 389, 408, 409, 420, 421, 430, 431, 433, 436, 441, 445, 446, 447, 448, 452, 453, 478, 482, 483, 493, 517, 518, 537, 554], "t1": 299, "t2": 299, "tabl": [322, 328, 336, 493], "tag": [38, 63], "tail": [39, 242, 243, 255], "tail_index_": 41, "take": [19, 71, 98, 236, 260, 297, 304, 305, 403, 408, 414, 416, 420, 424, 426, 430, 438, 440, 441, 447, 448, 554], "take_evenli": [27, 151, 184, 235, 236, 267, 424, 454, 455, 521, 522], "take_evenly_fn": [120, 208, 222, 425, 438, 439], "take_evenly_fnimplement": [235, 439], "take_evenly_fninlin": 425, "take_evenlyconstexpr": 439, "take_evenlydefinit": 439, "take_exactli": [26, 494, 495, 536, 537, 554], "take_whil": [37, 38, 298, 299, 440, 441], "take_while_kld": [26, 27, 151, 184, 235, 236, 267, 426, 454, 455, 495], "take_while_kld_fn": [120, 208, 222, 427, 440, 441], "take_while_kld_fnimplement": [235, 441], "take_while_kld_fninlin": 427, "take_while_kldconstexpr": 441, "take_while_klddefinit": 441, "taken": [260, 304], "tan": 537, "tangent": 260, "tani": 110, "target": [4, 5, 11, 71, 238, 260, 553, 554], "target_link_librari": 554, "target_s": 441, "tbf05": [492, 493, 550, 554], "tbuilt": 92, "technic": [346, 554], "techniqu": [3, 42, 500, 550, 554], "telement": 65, "teleop_twist_keyboard": 6, "teleoper": 6, "templ": [234, 483, 517], "templat": [2, 26, 27, 30, 32, 33, 34, 38, 39, 40, 41, 59, 63, 84, 88, 94, 96, 102, 104, 121, 122, 126, 128, 170, 171, 172, 173, 174, 175, 176, 178, 179, 185, 234, 235, 238, 244, 245, 247, 249, 251, 255, 256, 257, 258, 259, 260, 267, 269, 270, 272, 274, 276, 278, 280, 282, 283, 288, 290, 293, 297, 299, 300, 301, 303, 305, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 326, 346, 348, 350, 352, 354, 356, 358, 394, 396, 405, 408, 412, 414, 418, 420, 424, 426, 428, 430, 439, 441, 444, 445, 446, 447, 448, 451, 453, 457, 458, 483, 487, 488, 495, 501, 517, 523, 524, 525, 532, 536, 537, 545, 546, 547, 548], "term": [1, 104, 255], "termin": [6, 553], "test": [5, 153, 184], "testingtest": 135, "textual": [239, 486, 520], "tf": [12, 128, 260, 269, 338, 339, 465, 467, 471], "tf2": [490, 519, 527, 528, 533, 534, 537, 545, 546, 547, 548], "tf2_eigen": [498, 499, 509, 511, 519, 536, 537, 548], "tf2_geometry_msg": [534, 546, 548], "tf2_ro": [459, 460, 461, 462, 465, 467, 469, 471, 487, 488, 490], "tf2_sophu": [490, 498, 499, 509, 511, 519, 536, 537], "tf2tf2": [546, 548], "tf_broadcast": [492, 493], "tf_broadcaster_": [462, 465, 467, 469, 471, 478, 482, 490], "tf_broadcaster_beluga_amcl": [466, 468, 470, 472], "tf_broadcaster_std": [462, 490], "tf_broadcaster_transform": [462, 490], "tf_buffer_": [462, 465, 467, 469, 471, 478, 482, 490], "tf_buffer_beluga_amcl": [466, 468, 470, 472], "tf_buffer_std": [462, 490], "tf_buffer_transform": [462, 490], "tf_listener_": [462, 465, 467, 469, 471, 478, 482, 490], "tf_listener_beluga_amcl": [466, 468, 470, 472], "tf_listener_std": [462, 490], "tf_listener_transform": [462, 490], "than": [29, 47, 65, 77, 107, 121, 122, 260, 336, 418, 424, 438, 451, 456, 492, 493, 537, 538], "thei": [4, 13, 15, 17, 79, 122, 236, 249, 261, 456, 527, 537], "them": [2, 5, 65, 122, 314, 458, 537, 554], "therebi": 104, "therefor": 4, "theta": [112, 122, 247, 492, 493, 548], "theta_clustering_resolut": [112, 113, 315], "theta_clustering_resolutionclust": 112, "thi": [1, 2, 3, 4, 6, 12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 498, 499, 501, 502, 503, 504, 505, 506, 517, 518, 519, 520, 521, 522, 523, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 553, 554], "thin": [492, 493, 503, 505, 519, 521, 525, 533], "thing": 243, "thoroughli": 553, "those": [1, 2, 107, 178, 243, 448, 554], "though": [1, 107, 553], "thousand": 6, "thread_loc": [128, 276, 317], "threadsaf": [26, 27, 40, 41, 65, 235, 260, 267], "three": [305, 420], "threshold": [121, 122, 128, 236, 276, 277, 278, 279, 328, 342, 344, 394, 395, 401, 492], "thresholdpercentag": 394, "through": [5, 122, 234, 255, 315, 483, 517, 532, 554], "throughout": 2, "throughput": 3, "throw": [41, 100, 257, 270], "thrun": [42, 500, 550], "thrun_recovery_probability_estim": [24, 25, 26, 104, 184], "thrunrecoveryprobabilityestim": [26, 105, 120, 208, 210, 212, 222, 224, 227, 260, 444, 495], "thrunrecoveryprobabilityestimatorconstexpr": 444, "thrunrecoveryprobabilityestimatorinlin": 105, "thrunrecoveryprobabilityestimatorrandom": [26, 235, 444], "thu": [5, 13, 15, 20, 55, 57, 75, 77, 90, 260], "tiancheng": 42, "tie": [34, 245], "tim": 315, "time": [3, 4, 26, 27, 37, 38, 61, 63, 65, 104, 112, 114, 116, 118, 235, 236, 243, 260, 267, 297, 304, 315, 320, 448, 490, 492, 493, 505, 523, 525, 534, 554], "timelin": 11, "timer": [462, 465, 467, 469, 471, 490], "timer_": [465, 469, 471, 478, 482, 490], "timer_beluga_amcl": [466, 470, 472], "timer_rclcpp": 490, "timer_tim": 490, "timerbas": [465, 469, 471, 490], "timerev": [462, 467, 468], "timestamp": [523, 525], "timestamptim": 525, "tnumer": 432, "to2d": [12, 128, 260, 261, 263], "to2dsophu": [12, 128], "to3d": [12, 128, 260, 261, 263], "to3dsophu": [12, 128], "to_cel": 270, "to_likelihood": 249, "to_the_cub": 249, "to_vector": [212, 227, 255, 257, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "to_vectorstat": 255, "todo": [32, 249, 270, 495], "togeth": [344, 537], "tomsg": [524, 527, 528, 532, 537, 545, 546, 547, 548], "tomsgbeluga_ro": [537, 546, 548], "too": [51, 122, 179, 448, 493, 537], "tool": [3, 5, 553], "toolbox": 6, "toolkit": [1, 11], "top": [122, 171, 344, 458, 553], "topic": 6, "topleftcorn": 179, "total": [104, 260, 271, 348, 554], "total_weight": [122, 173, 272, 444], "trace": [55, 77, 98, 99, 212, 227, 299], "traceauto": 299, "track": 260, "trade": 3, "trait": [3, 27, 36, 128, 153, 157, 166, 173, 184, 235, 254, 257, 260, 267, 272, 276, 282, 283, 290, 293, 303, 305, 317, 388, 441, 444, 445, 448, 449, 450, 505, 533, 534, 540], "transact": [42, 500, 550], "transfer_fn": [260, 451], "transfer_fncal": 260, "transferfn": [260, 451], "transferfncal": 260, "transform": [12, 14, 17, 26, 31, 32, 33, 34, 122, 128, 175, 176, 178, 179, 243, 244, 245, 246, 247, 248, 249, 260, 269, 272, 273, 274, 284, 285, 293, 300, 301, 303, 305, 338, 451, 460, 462, 465, 467, 469, 471, 488, 495, 503, 522, 523, 524, 532, 547, 548, 554], "transform_": 257, "transform_broadcast": [459, 460, 461, 462, 487, 488, 490], "transform_listen": [459, 460, 461, 462, 487, 488, 490], "transform_reduc": [32, 34, 179, 245, 249, 270, 451, 554], "transform_toler": [492, 493], "transformbroadcast": [462, 465, 467, 469, 471, 490], "transformed_sigma_point": 451, "transformlisten": [462, 465, 467, 469, 471, 490], "transient": [6, 493], "transit": [236, 292, 460, 465, 469, 471, 488, 490], "translat": [12, 34, 86, 112, 114, 128, 179, 245, 249, 255, 260, 269, 276, 280, 299, 309, 311, 315, 328, 338, 342, 401, 492, 493, 534, 537, 538, 543, 548], "translation_noise_from_rot": [128, 227, 231, 276, 328, 342], "translation_noise_from_rotationbeluga": [329, 343], "translation_noise_from_rotationdoubl": [128, 276], "translation_noise_from_rotationtransl": [128, 276], "translation_noise_from_transl": [128, 227, 231, 276, 328, 342], "translation_noise_from_translationbeluga": [329, 343], "translation_noise_from_translationdoubl": [128, 276], "translation_noise_from_translationtransl": [128, 276], "translation_param": [128, 276], "translation_view": 179, "translations_view": 179, "translationtyp": 537, "transpos": [179, 257, 269, 270, 451], "travers": 73, "treat": [128, 276, 418], "tree": 469, "triangl": 537, "triangle_list": 537, "trigger": [26, 152, 180, 181, 184, 236, 260, 277, 278, 279, 280, 287, 392, 394, 396, 401, 493], "trinari": [534, 540], "tro": 550, "troubleshoot": 6, "true": [6, 17, 19, 26, 27, 38, 41, 43, 51, 65, 71, 107, 171, 235, 260, 267, 274, 280, 290, 374, 376, 392, 398, 401, 439, 445, 446, 448, 492, 493, 495, 537, 538, 554], "true_typ": [30, 235, 283, 290, 305, 446], "truncat": [234, 483, 517], "try": [2, 6, 22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 121, 123, 125, 127, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 167, 170, 172, 175, 178, 180, 182, 234, 237, 239, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 348, 350, 352, 354, 356, 358, 372, 373, 374, 375, 376, 398, 400, 403, 405, 411, 416, 418, 420, 422, 434, 437, 438, 440, 441, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 483, 486, 487, 494, 498, 503, 505, 517, 520, 521, 533, 536, 545, 547, 553, 554], "try_emplac": 122, "tthe": [79, 83, 260, 308, 310], "ttupl": 314, "tunderli": [92, 432, 434], "tune": 6, "tupl": [2, 26, 27, 43, 67, 94, 102, 106, 108, 109, 112, 114, 116, 117, 120, 124, 127, 128, 155, 157, 175, 176, 184, 186, 188, 189, 191, 192, 196, 197, 198, 200, 208, 209, 210, 211, 212, 222, 223, 224, 226, 227, 228, 230, 235, 236, 247, 260, 267, 273, 274, 275, 276, 283, 289, 290, 314, 315, 316, 317, 362, 363, 365, 367, 372, 373, 374, 375, 376, 408, 410, 411, 412, 413, 430, 445, 446, 447, 448, 450, 456, 457, 458, 487, 488, 495, 501, 554], "tuple_el": [27, 40, 41, 120, 227, 228, 235, 267, 435, 436], "tuple_element_t": [363, 446], "tuple_index": [27, 120, 235, 260, 267, 411, 445, 446], "tuple_index_found": [27, 120, 235, 267, 445, 446], "tuple_index_foundconstexpr": 446, "tuple_index_help": [445, 446], "tuple_index_helperconstexpr": 446, "tuple_index_t": [260, 261, 265, 445, 446], "tuple_index_tconveni": 446, "tuple_index_ttypenam": 446, "tuple_index_v": [260, 261, 266, 445, 446], "tuple_index_vconstexpr": 446, "tuple_index_vconveni": 446, "tuple_indexmeta": 446, "tuple_s": [27, 40, 41, 120, 235, 267, 437, 446], "tuple_size_v": [290, 362, 408, 446], "tuple_trait": [127, 128, 157, 184, 275, 276, 282, 283, 289, 290, 316, 317, 362, 363, 365, 367, 372, 373, 374, 375, 376, 410, 411, 449, 450], "tuple_vector": [106, 107, 109, 123, 124, 155, 174, 184, 257], "tuplecontain": [107, 108, 120, 186, 188, 189, 191, 192, 196, 197, 198, 200, 209, 210, 211, 212, 223, 224, 226, 227, 228, 230, 235, 260, 447, 448], "tuplecontainerconstexpr": 448, "tuplecontainerprimari": 448, "tuplelik": [27, 120, 227, 228, 235, 260, 267, 290, 366, 375, 411, 445, 446], "tupletupl": [116, 175], "tuplevector": [2, 26, 43, 120, 235, 236, 260, 261, 263, 447, 448, 487, 488, 495], "tuplevectorshorthand": 448, "tuplevectortuplevector": 448, "turn": 554, "turtlebot": 553, "tutori": [553, 554], "tutorial_param": 554, "twice": [122, 439], "two": [2, 4, 6, 18, 27, 40, 41, 65, 75, 79, 179, 234, 235, 260, 267, 305, 328, 342, 362, 403, 420, 446, 448, 483, 494, 499, 501, 509, 511, 517, 554], "two_d_sampling_fn": 128, "two_epsilon": 441, "two_squared_sigma": 249, "txt": 554, "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 32, 33, 34, 36, 38, 39, 40, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 108, 109, 110, 117, 118, 120, 121, 122, 125, 126, 128, 153, 157, 162, 173, 178, 179, 182, 183, 184, 186, 188, 189, 191, 192, 196, 197, 198, 200, 208, 209, 210, 211, 212, 222, 223, 224, 226, 227, 228, 230, 235, 238, 242, 243, 244, 245, 246, 247, 249, 250, 251, 254, 255, 256, 257, 259, 260, 267, 269, 270, 272, 273, 274, 276, 282, 283, 289, 290, 293, 300, 301, 303, 305, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 330, 334, 338, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 376, 378, 379, 382, 385, 387, 388, 394, 398, 400, 401, 408, 410, 412, 414, 416, 430, 432, 434, 435, 436, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 456, 457, 467, 487, 495, 496, 499, 501, 503, 505, 509, 511, 518, 519, 521, 522, 523, 525, 530, 532, 533, 534, 536, 537, 543, 545, 546, 547, 548, 553], "type_trait": [26, 35, 36, 40, 41, 92, 127, 128, 153, 172, 173, 184, 237, 238, 269, 270, 271, 272, 275, 276, 288, 289, 290, 292, 293, 296, 297, 302, 303, 304, 305, 312, 313, 314, 315, 316, 317, 362, 363, 365, 367, 370, 372, 373, 374, 375, 376, 388, 410, 411, 432, 434, 440, 441, 444, 447, 448, 451, 536, 537], "type_traitsdifferential_drive_model": 143, "type_traitseffective_sample_s": 139, "type_traitsnorm": 136, "type_traitssampl": 150, "typecommon": 446, "typedef": [19, 28, 33, 40, 107, 121, 127, 190, 240, 244, 260, 264, 268, 282, 289, 300, 312, 445, 447, 464, 479, 487, 497, 513], "typedefbeluga": [56, 58, 64, 66, 68, 72, 74, 76, 78, 80, 82, 91, 95, 101, 103, 108, 117, 119, 339, 364, 366, 380, 381, 383, 384, 386, 389], "typedefbeluga_amcl": 468, "typedefbeluga_ro": [502, 504], "typedefstd": 436, "typenam": [26, 38, 39, 40, 41, 43, 45, 47, 49, 51, 53, 61, 63, 65, 67, 71, 79, 81, 90, 93, 94, 98, 100, 102, 107, 110, 122, 126, 128, 174, 178, 179, 207, 208, 221, 222, 235, 238, 247, 251, 255, 256, 257, 260, 269, 270, 274, 276, 282, 283, 297, 299, 300, 301, 305, 312, 313, 315, 317, 318, 319, 326, 338, 362, 363, 373, 376, 378, 379, 382, 385, 387, 407, 414, 416, 422, 432, 434, 435, 437, 445, 446, 447, 448, 451, 453, 487, 488, 525, 532, 536, 537, 543, 547, 548], "typereturn": 446, "typesbearing_sensor_model": 148, "typesel": 107, "typeslandmark_map": 149, "typestd": 446, "typet": 41, "typic": [2, 492, 493, 503, 519, 553], "u": [16, 27, 28, 41, 79, 80, 120, 185, 187, 190, 202, 213, 227, 228, 229, 231, 235, 257, 260, 261, 267, 305, 363, 364, 420, 421, 445, 446, 478, 480, 512], "u_": 4, "u_t": [4, 554], "ubuntu": 5, "uij": 269, "uint32_t": [240, 241, 260, 315, 462, 467, 468], "uint64_t": 315, "uint8_t": [38, 51, 59, 274], "unary_fn": 293, "unaryexpr": 257, "uncertainti": [260, 554], "unchang": [292, 553], "unconfigur": [460, 465, 469, 471, 488, 490], "undef": 177, "undefin": [65, 71, 107], "under": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "underli": [41, 65, 77, 92, 100, 319, 432, 487, 505, 534], "underlying_hasher_": 315, "underlying_typ": 92, "underlying_type_t": 41, "underlying_typetag": 92, "understand": 554, "undesir": 73, "undocu": [234, 483, 517], "unexpect": [32, 322], "uniform": [27, 79, 81, 83, 84, 86, 88, 166, 179, 184, 235, 236, 258, 259, 260, 267, 295, 304, 418, 458, 492, 493, 554], "uniform_distribut": 236, "uniform_int_distribut": [259, 305], "uniform_real_distribut": 259, "uniformli": 86, "uniformrandombitgener": [19, 79, 81, 414, 416, 422], "union": [27, 463, 496], "unique_ptr": [460, 462, 465, 466, 467, 468, 469, 471, 472, 488, 490], "unit": [179, 537], "unit_complex": [179, 249, 299, 309, 311], "unit_quaternion": [179, 548], "unitari": [79, 257], "uniti": 537, "unitless": [26, 320], "unitx": 537, "unknown": [297, 534, 540], "unknown_space_occupancy_likelihood_cub": 249, "unknown_space_occupancy_prob": 249, "unless": [3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "unlik": [304, 456, 492], "unnecessarili": 448, "unnorm": [4, 554], "unordered_map": [121, 122, 270, 487, 488, 537], "unordered_set": [440, 441], "unpack": 314, "unreachable_sentinel_t": 305, "unscent": [260, 451], "unscented_transform": [24, 25, 184, 260, 261, 263], "unscented_transformauto": 451, "unsign": 315, "unsigned_typ": 315, "unsigned_valu": 315, "until": [65, 440, 448, 554], "unwrap": [3, 297, 305, 414, 420], "up": [1, 4, 5, 6, 122, 260, 553, 554], "updat": [4, 5, 26, 32, 34, 43, 44, 55, 57, 69, 75, 77, 102, 104, 213, 229, 236, 245, 249, 260, 292, 302, 320, 328, 342, 356, 444, 460, 462, 465, 467, 469, 471, 488, 490, 492, 493, 495, 501, 502, 512, 514, 537, 538], "update_covariance_diagnost": [462, 467, 468, 478, 480], "update_covariance_diagnosticsvoid": 462, "update_map": [26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 213, 229, 245, 249, 495, 501, 502, 512, 514], "update_mapvoid": [26, 32, 34, 245, 249, 495], "update_min_a": [26, 229, 231, 320, 492, 493, 495, 512, 516, 538], "update_min_abeluga": 321, "update_min_abeluga_ro": 539, "update_min_adoubl": [26, 495], "update_min_amin": 26, "update_min_arot": 495, "update_min_d": [26, 229, 231, 320, 492, 493, 495, 512, 516, 538], "update_min_dbeluga": 321, "update_min_dbeluga_ro": 539, "update_min_ddoubl": [26, 495], "update_min_dmin": 26, "update_min_dtransl": 495, "update_policy_": [26, 495], "updateauto": [26, 495], "upgrad": 5, "upon": [492, 493], "upper": [260, 344, 440, 441, 492, 493, 538], "upstream": 5, "url": 550, "urng": [16, 84, 85, 86, 87, 88, 89, 210, 211, 224, 226, 235, 259, 296, 297, 304, 305, 414, 415, 417, 418, 419, 420, 421, 423], "urnga": [414, 416, 422], "urngth": [84, 86, 88], "us": [2, 4, 5, 6, 12, 14, 15, 16, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 43, 51, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81, 90, 92, 94, 96, 100, 102, 104, 107, 112, 114, 116, 118, 121, 122, 124, 126, 127, 128, 153, 171, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 234, 235, 236, 238, 240, 241, 243, 244, 245, 247, 248, 249, 251, 253, 255, 257, 259, 260, 267, 269, 270, 272, 274, 276, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 317, 319, 320, 322, 324, 332, 336, 338, 340, 344, 348, 350, 352, 356, 363, 367, 378, 379, 382, 385, 387, 388, 394, 403, 414, 422, 426, 435, 439, 441, 443, 444, 445, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 460, 462, 467, 483, 487, 488, 490, 492, 493, 495, 499, 501, 503, 517, 522, 523, 532, 534, 537, 538, 546, 548, 554], "usa": [42, 500, 550], "usag": [39, 92], "use_composit": 6, "use_map_top": [492, 493], "user": [2, 3, 18, 29, 260, 271, 458, 469, 490, 496, 518, 530, 536, 543], "usual": 519, "uth": [79, 260], "util": [26, 33, 34, 37, 38, 40, 41, 71, 121, 122, 153, 178, 179, 184, 242, 243, 256, 257, 260, 289, 290, 292, 293, 296, 297, 298, 299, 304, 305, 314, 315, 362, 376, 412, 442, 445, 446, 451, 452, 453, 456, 459, 460, 461, 462, 469, 490, 494, 495, 509, 519, 533, 534, 536, 547, 548], "utilitycircular_arrai": 141, "v": [17, 28, 120, 187, 190, 202, 214, 228, 230, 255, 261, 305, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 420, 421, 507, 512, 537, 554], "v3": [26, 29, 30, 31, 32, 33, 34, 37, 38, 41, 65, 107, 121, 122, 170, 171, 172, 173, 175, 176, 178, 179, 236, 242, 243, 244, 245, 246, 247, 248, 249, 269, 271, 272, 273, 274, 277, 278, 282, 283, 284, 285, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 438, 439, 440, 441, 444, 447, 448, 451, 456, 457, 494, 495, 521, 522, 536, 537, 554], "valid": [16, 18, 19, 21, 43, 122, 260, 270, 492, 493], "valu": [13, 14, 15, 17, 19, 20, 27, 30, 32, 38, 40, 41, 47, 63, 65, 66, 69, 71, 79, 81, 92, 100, 107, 108, 110, 121, 122, 160, 170, 171, 175, 178, 179, 184, 185, 235, 236, 249, 260, 267, 270, 271, 274, 283, 290, 292, 296, 297, 304, 305, 308, 310, 312, 313, 314, 315, 322, 336, 340, 370, 371, 382, 414, 416, 441, 445, 446, 448, 452, 453, 492, 493, 496, 503, 505, 518, 522, 525, 530, 532, 533, 534, 536, 540, 541, 554], "value_": 319, "value_grid": [110, 134, 160, 184, 248, 249], "value_or": [32, 249, 297, 451], "value_trait": [17, 51, 274, 505, 506, 512, 514, 534], "value_traitsstat": 534, "value_typ": [38, 41, 63, 64, 65, 66, 71, 72, 100, 107, 108, 228, 230, 238, 448], "value_typeiter": 38, "value_typestd": [238, 448], "value_typet": 41, "value_typevalu": [41, 238, 448], "value_typevector2": 38, "valuea": 260, "valuebeluga": 60, "valuegrid2": [111, 120, 191, 199, 203, 210, 211, 214, 215, 216, 224, 226, 230, 232, 235, 249, 260, 452, 453], "valuegrid2gener": 453, "valuegrid2valuegrid2": 453, "valueinput": 314, "valueth": [107, 314, 370], "valuetrait": [505, 507, 512, 514, 516, 533, 534, 541], "valuetraitsinlinestat": 541, "valuetraitsstat": 541, "valuetraitstrait": [518, 534], "vari": 1, "variabl": [28, 29, 79, 81, 175, 180, 190, 234, 260, 264, 268, 271, 276, 277, 279, 282, 284, 289, 292, 296, 302, 304, 408, 430, 438, 440, 445, 446, 456, 464, 479, 483, 497, 513, 517, 553], "varianc": [178, 179, 260, 554], "variant": [4, 38, 59, 60, 61, 62, 179, 193, 230, 445, 487, 488, 490, 494, 495, 501], "variant_": 38, "variantbresenham": 61, "variantvariantbresenham": 38, "variat": 1, "vector": [2, 20, 26, 27, 31, 32, 33, 34, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 61, 73, 75, 77, 79, 82, 90, 96, 100, 101, 107, 109, 110, 111, 121, 122, 125, 126, 170, 171, 174, 179, 206, 208, 220, 222, 226, 228, 230, 235, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 255, 256, 257, 259, 260, 261, 265, 267, 269, 270, 273, 274, 301, 313, 330, 338, 340, 368, 369, 378, 379, 382, 385, 387, 447, 448, 451, 452, 453, 458, 495, 505, 506, 533, 534, 554], "vector2": [37, 38, 62, 63, 64, 178, 179, 188, 191, 192, 197, 200, 204, 205, 208, 217, 219, 222, 223, 224, 228, 230, 235, 247, 260, 308, 309, 326, 327, 532, 537, 545, 546, 548], "vector22d": 61, "vector2d": [13, 15, 17, 45, 46, 49, 50, 51, 52, 61, 110, 111, 122, 126, 128, 251, 259, 269, 274, 276, 317, 505, 506, 534], "vector2i": [13, 17, 38, 45, 46, 49, 50, 51, 52, 59, 60, 110, 111, 126, 251, 270, 274, 299, 340, 487, 488, 505, 506], "vector2ipoint": 59, "vector2near": [308, 309], "vector2nearauto": 309, "vector3": [179, 308, 309, 548], "vector3d": [12, 34, 240, 241, 243, 245, 259, 260, 269, 315, 495], "vector3i": [270, 340], "vector3near": [308, 309], "vector3nearauto": 309, "vector4": 179, "vector_typ": [79, 80, 81, 82, 228, 230, 235, 255, 257, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "vector_typeth": [255, 257], "vector_typetypenam": [255, 257], "vector_typevector": 257, "vectorshorthand": [174, 257, 448], "vectorstd": [174, 257, 448], "veloc": 554, "veri": [5, 19, 122, 243], "verifi": [260, 440, 441], "version": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 75, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 553, 554], "vertex_color": 537, "vertic": 537, "via": [43, 492, 493], "view": [2, 3, 14, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 120, 121, 122, 153, 170, 171, 172, 173, 178, 179, 184, 208, 210, 211, 218, 222, 224, 226, 231, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 267, 269, 271, 272, 273, 274, 283, 292, 293, 298, 299, 300, 301, 302, 303, 346, 352, 354, 356, 358, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 444, 447, 448, 451, 458, 494, 495, 521, 522, 536, 537, 554], "view_": [38, 63, 297, 305], "view_adaptor": [235, 297], "view_closur": [30, 304, 305, 346], "view_facad": [235, 305], "view_interfac": [38, 235], "viewseffective_sample_s": 140, "viewsinclud": 150, "viewsnorm": 137, "viewstuple_vector": 142, "virtual": [465, 469, 471, 490], "visibl": 73, "vision": 1, "visit": [171, 495], "visual": [234, 483, 493, 517, 525, 536, 554], "visualization_msg": [459, 460, 465, 469, 471, 490, 493, 523], "void": [26, 27, 30, 32, 34, 38, 40, 41, 43, 55, 57, 65, 69, 75, 77, 79, 104, 107, 113, 115, 117, 119, 120, 122, 183, 208, 211, 222, 224, 226, 228, 235, 245, 249, 255, 257, 260, 267, 283, 290, 297, 305, 314, 315, 365, 372, 374, 377, 407, 410, 444, 446, 448, 460, 462, 465, 467, 469, 471, 488, 490, 495, 501, 524, 532, 547, 548], "void_t": [27, 120, 235, 260, 267, 283, 290, 305, 445, 446], "volatil": 6, "volum": 73, "w": [4, 5, 21, 28, 42, 120, 122, 187, 190, 202, 215, 228, 231, 232, 260, 261, 272, 303, 305, 362, 376, 408, 430, 500, 512, 537, 548, 550], "w0": 451, "w_i": [492, 493, 538], "w_t": 4, "wa": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 234, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 465, 467, 469, 471, 483, 492, 493, 501, 503, 505, 517, 538, 540, 542, 543], "wai": [92, 315], "wait": [492, 493], "wall": [73, 554], "want": [5, 32, 491], "warn": 492, "warranti": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "we": [6, 30, 32, 34, 107, 109, 122, 245, 249, 260, 270, 297, 356, 448, 495, 537, 553, 554], "weight": [4, 18, 21, 26, 27, 32, 34, 43, 55, 57, 75, 77, 90, 96, 97, 104, 121, 122, 172, 173, 178, 179, 231, 232, 235, 236, 245, 249, 260, 261, 265, 266, 267, 270, 271, 272, 278, 282, 283, 284, 285, 289, 290, 292, 302, 303, 304, 305, 322, 336, 344, 348, 356, 360, 370, 388, 418, 419, 420, 421, 430, 431, 444, 451, 458, 487, 488, 492, 493, 495, 501, 525, 536, 537, 538, 554], "weight_cap_percentil": [122, 231, 232, 344], "weight_cap_percentilebeluga": 345, "weight_cap_percentileclust": 122, "weight_cap_percentiledoubl": 122, "weight_detail": [120, 122, 173, 179, 208, 222, 235, 260, 283, 285, 289, 290, 430, 431, 451, 537], "weight_fn": [120, 122, 173, 179, 208, 222, 260, 283, 285, 289, 290, 431, 451, 537], "weight_fncustom": [235, 290], "weight_fninlin": 431, "weight_t": [260, 261, 265, 282, 283, 525, 536, 537], "weight_ttyp": 283, "weight_ttypenam": [283, 537], "weight_typ": [21, 32, 34, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 228, 232, 245, 249, 260, 270, 282, 283, 388, 389, 537], "weight_typedoubl": [32, 34, 245, 249, 270], "weight_typestd": 283, "weight_typeth": 283, "weight_typeweight": [32, 34, 245, 249, 270], "weightaverag": 122, "weightbeluga": 361, "weightconstexpr": [122, 173, 179, 283, 285, 290, 451, 537], "weightcustom": [122, 173, 179, 283, 285, 290, 451], "weightdoubl": 122, "weighted_average_quaternion": [178, 179], "weighted_average_quaternioneigen": 179, "weighted_mean": 179, "weighted_sampl": 179, "weighted_squared_devi": 179, "weighted_vari": 179, "weightnumer": [26, 488, 537], "weights_sum": 179, "weights_view": 179, "weightsa": 260, "weightsconstexpr": [122, 285, 305, 537], "weightsdefinit": [122, 285, 305], "weightspos": 260, "weightsrang": [96, 178, 179, 260], "weightsrangea": [178, 260], "weightsweight": 260, "weightt": [26, 44, 186, 195, 196, 201, 204, 209, 213, 217, 223, 229, 235], "weighttag": [26, 260, 289, 290, 488, 537], "weightttyp": 43, "weightweight": 26, "well": [2, 27, 235, 260, 267, 282, 283, 388, 458, 554], "were": [276, 492], "wg21": 315, "what": [18, 92, 104, 107, 260, 308, 537, 553], "wheel": 11, "when": [2, 3, 4, 6, 16, 26, 41, 43, 45, 47, 49, 51, 53, 57, 65, 73, 75, 79, 107, 236, 249, 260, 270, 277, 304, 320, 336, 392, 408, 412, 430, 448, 492, 493, 495, 538, 554], "where": [4, 18, 34, 121, 170, 171, 179, 180, 236, 245, 249, 260, 277, 279, 392, 424, 426, 448, 456, 457, 492, 493, 495, 538, 553, 554], "wherea": 493, "wherev": 2, "whether": [13, 43, 320, 465, 467, 471, 492, 493, 501, 538], "which": [2, 4, 5, 19, 20, 22, 24, 26, 27, 29, 31, 33, 35, 37, 40, 86, 96, 98, 121, 123, 125, 127, 170, 172, 175, 178, 180, 182, 185, 234, 235, 237, 240, 244, 248, 250, 252, 254, 256, 258, 260, 267, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 344, 373, 394, 414, 416, 438, 440, 445, 447, 449, 452, 454, 456, 483, 492, 493, 494, 503, 517, 521, 533, 536, 537, 545, 547], "whichev": 90, "while": [2, 4, 41, 122, 171, 236, 440, 554], "whole": [243, 554], "whose": [27, 178, 235, 260, 267, 290, 344, 410, 445, 446, 525], "why": [32, 249], "wide": [1, 2, 3, 458], "width": [13, 45, 49, 51, 110, 111, 126, 215, 232, 249, 251, 453, 505, 506, 512, 514, 534], "width_": 453, "widthgrid": 110, "widthstd": [453, 534], "wiki": [179, 257, 260, 537], "wikipedia": [179, 257, 260, 537], "wild": 1, "window": [40, 260], "wise": [3, 491, 553], "wish": 554, "within": [73, 84, 88, 122, 234, 259, 360, 483, 517], "without": [3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 100, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 492, 493, 495, 499, 522, 523, 534, 537, 546, 548], "wn": 451, "wolfram": [42, 500, 550], "word": [2, 6, 79], "work": [2, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 236, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 465, 467, 469, 471, 493, 501, 503, 505, 538, 540, 542, 543], "workflow": [5, 6], "world": [34, 73, 240, 241, 243, 245, 260, 553, 554], "world_in_sensor_transform": 243, "world_pose_typ": [34, 73, 74, 228, 232, 243], "world_pose_typesophu": 243, "world_pose_typetyp": 243, "world_to_likelihood_field_transform_": 249, "wors": 65, "worth": 6, "would": 19, "wrap": 519, "wrapper": [492, 493, 495, 496, 499, 503, 505, 509, 511, 518, 519, 521, 522, 523, 525, 530, 533, 534], "write": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 65, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 493, 495, 499, 522, 523, 534, 537, 546, 548, 554], "written": 554, "wrt": 178, "www": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 368, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "x": [4, 12, 13, 17, 19, 20, 32, 34, 38, 45, 46, 49, 50, 51, 52, 61, 110, 111, 112, 114, 122, 126, 128, 179, 245, 247, 249, 251, 255, 259, 274, 276, 280, 309, 315, 492, 493, 495, 505, 506, 532, 534, 537, 538, 546, 548], "x10": 249, "x_": [4, 38, 554], "x_0": [4, 554], "x_clustering_resolut": [112, 113, 114, 115, 315], "x_clustering_resolutionclust": [112, 114], "x_distribution_": 259, "x_k": 554, "x_offset": 249, "x_t": [4, 554], "xa": 492, "xi": [13, 17, 19, 20, 45, 46, 49, 50, 51, 52, 110, 111, 126, 251, 274, 505, 506], "xigrid": [45, 51], "xml": 6, "xplane": [45, 51], "xspan_": 38, "xstep_": 38, "xx": 492, "xy": [179, 492, 493], "xyaw": 493, "xyz": [114, 315], "y": [5, 12, 13, 17, 19, 32, 34, 38, 41, 45, 46, 49, 50, 51, 52, 61, 65, 110, 111, 112, 114, 122, 126, 128, 179, 245, 247, 249, 251, 259, 274, 276, 280, 309, 315, 492, 493, 495, 505, 506, 532, 534, 537, 538, 546, 548], "y_": 38, "y_clustering_resolut": [112, 113, 114, 115, 315], "y_clustering_resolutionclust": [112, 114], "y_distribution_": 259, "y_offset": 249, "ya": 492, "yaw": [114, 179, 315, 492, 493, 532], "yaw_clustering_resolut": [114, 115, 315], "yaw_clustering_resolutionclust": 114, "yellow": [234, 483, 517], "yet": [1, 122, 537], "yi": [13, 17, 45, 46, 49, 50, 51, 52, 110, 111, 126, 251, 274, 505, 506], "yield": [71, 178, 238, 554], "yigrid": [45, 51], "you": [0, 5, 6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 260, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 308, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548, 553, 554], "your": [5, 6, 553, 554], "your_typ": 92, "yplane": [45, 51], "yspan_": 38, "ystep_": 38, "yy": 492, "yyaw": 493, "z": [12, 28, 32, 34, 114, 120, 128, 187, 190, 231, 233, 245, 255, 259, 260, 309, 315, 426, 427, 440, 441, 495, 537, 538, 548], "z_": [4, 554], "z_clustering_resolut": [114, 115, 315], "z_clustering_resolutionclust": 114, "z_distribution_": 259, "z_hit": [32, 231, 233, 249, 322, 336, 493], "z_hitbeluga": [323, 337], "z_hitdoubl": [32, 249], "z_hitweight": [32, 249], "z_max": [32, 231, 233, 322, 493], "z_maxbeluga": 323, "z_maxdoubl": 32, "z_maxweight": 32, "z_mean": 32, "z_rand": [32, 231, 233, 322, 493], "z_randbeluga": 323, "z_randdoubl": 32, "z_random": [231, 233, 249, 336], "z_randombeluga": 337, "z_randomdoubl": 249, "z_randomweight": 249, "z_randweight": 32, "z_short": [32, 231, 233, 322, 493], "z_shortbeluga": 323, "z_shortdoubl": 32, "z_shortweight": 32, "z_t": [4, 554], "zero": [3, 12, 69, 79, 128, 179, 183, 245, 257, 260, 424, 438, 444, 451, 493, 537], "zip": [27, 121, 122, 151, 178, 179, 184, 235, 236, 246, 247, 267, 269, 283, 412, 428, 447, 448, 451, 454, 455, 536, 537], "zip_fn": [120, 208, 222, 429, 448, 456, 457], "zip_fnimplement": [235, 457], "zip_fninlin": 429, "zip_view": [270, 428, 457], "zip_with": [122, 260], "zip_with_view": 412, "zipconstexpr": [448, 457], "zipgiven": [448, 457], "zsee": 426, "zupper": 260, "zyx": 315, "\u00eatre": 1, "\u03b7": 4, "\u2124": 59}, "titles": ["Contact", "Rationale", "Architecture", "Design principles", "Key concepts", "Installation", "Quickstart", "Benchmarking Beluga", "Extending Beluga", "Profiling Beluga", "Using Beluga AMCL on an AMR", "Overview", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File", "Beluga: Beluga named requirements: DenseGrid2", "Beluga: Beluga named requirements: LaserScan", "Beluga: Beluga named requirements: LinearGrid2", "Beluga: Beluga named requirements: MotionModel", "Beluga: Beluga named requirements: OccupancyGrid2d", "Beluga: Beluga named requirements: Particle", "Beluga: Beluga named requirements: RandomStateDistribution", "Beluga: Beluga named requirements: RegularGrid", "Beluga: Beluga named requirements: SensorModel", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File", "Beluga: Class List", "Classes", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File", "Beluga: Bibliography", "Beluga: beluga::Amcl&amp;lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseDenseGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLaserScan&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLinearGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseOccupancyGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseRegularGrid&amp;lt; Derived, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BeamSensorModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BearingSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i Class Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator Class Reference", "Beluga: Member List", "Beluga: beluga::CircularArray&amp;lt; T, N, F &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModel&amp;lt; StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::ExponentialFilter Class Reference", "Beluga: Member List", "Beluga: beluga::IndexingIterator&amp;lt; Indexable, Index &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LandmarkMap Class Reference", "Beluga: Member List", "Beluga: beluga::LandmarkSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistribution&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistributionParam&amp;lt; Vector, Matrix &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; T, Constraint &amp;gt; Class Template Reference", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, Eigen::AlignedBox2d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE3d, Eigen::AlignedBox3d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::NDTSensorModel&amp;lt; SparseGridT &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Numeric&amp;lt; T, PhantomType, typename &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::ParticleClusterizer Class Reference", "Beluga: Member List", "Beluga: beluga::Ray2d&amp;lt; OccupancyGrid, Algorithm &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::SparseValueGrid&amp;lt; MapType, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::StationaryModel Class Reference", "Beluga: Member List", "Beluga: beluga::ThrunRecoveryProbabilityEstimator Class Reference", "Beluga: Member List", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, T &amp;gt; Class Template Reference", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, std::tuple&amp;lt; Types... &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::TupleVector&amp;lt; T &amp;gt; Class Template Reference", "Beluga: beluga::ValueGrid2&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE2d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE3d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Tuple&amp;lt; Types... &amp;gt;, std::enable_if_t&amp;lt;(std::is_arithmetic_v&amp;lt; Types &amp;gt; &amp;amp;&amp;amp;...), void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; std::array&amp;lt; T, N &amp;gt;, std::enable_if_t&amp;lt; std::is_arithmetic_v&amp;lt; T &amp;gt;, void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: Class Index", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; actions Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; containers Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; motion Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; policies Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; random Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; testing Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; raycasting Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; utility Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; data Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference", "Beluga: _doxygen Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File", "Beluga: File List", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File", "Beluga: Class Members", "All", "Beluga: Class Members", "Beluga: Class Members", "Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Enumerations", "Beluga: Class Members - Enumerator", "Beluga: Class Members", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Related Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Typedefs", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Variables", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Graph Legend", "Beluga: Class Hierarchy", "Beluga: API Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File", "Beluga: Class Hierarchy", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File", "Beluga: beluga Namespace Reference", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace List", "Namespaces", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File", "Beluga: Related Pages", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File", "Beluga: beluga::AmclParams Struct Reference", "Beluga: Member List", "Beluga: beluga::BeamModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::BearingModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator::sentinel Struct Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkBearingDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkPositionDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::NDTCell&amp;lt; NDim, Scalar &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::NDTModelParam&amp;lt; NDim &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::ParticleClusterizerParam Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::assign_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::clusterizer_detail::ClusterCell&amp;lt; State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::common_tuple_type&amp;lt; T, U, Is &amp;gt; Struct Template Reference", "Beluga: beluga::common_tuple_type&amp;lt; T, U, std::index_sequence&amp;lt; I... &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; T, class &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::detail::CellHasher&amp;lt; N &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::detail::make_from_state_fn&amp;lt; Particle, State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::has_common_tuple_type&amp;lt; typename, typename, typename &amp;gt; Struct Template Reference", "Beluga: beluga::has_common_tuple_type&amp;lt; T, U, std::void_t&amp;lt; common_tuple_type_t&amp;lt; T, U &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::is_tuple_like&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Eigen::EigenBase&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::particle_traits&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_effective_size_drop_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy&amp;lt; PolicyFn &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy_base Struct Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::state_detail::state_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::views::detail::as_common_tuple_indirect_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_view&amp;lt; Range, Fn, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_view&amp;lt; Range, Distribution, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_evenly_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_while_kld_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::zip_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::weight_detail::weight_fn Struct Reference", "Beluga: Member List", "Beluga: std::hash&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::numeric_limits&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: std::tuple_element&amp;lt; I, beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::tuple_size&amp;lt; beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/unscented_transform.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File", "Overview", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File", "Beluga AMCL: Class List", "Classes", "Beluga AMCL: beluga_amcl::AmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::AmclNodelet Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::BaseAMCLNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::NdtAmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: Class Index", "Beluga AMCL: _doxygen Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference", "Beluga AMCL: File List", "Beluga AMCL: Class Members", "Class Members", "Beluga AMCL: Class Members - Functions", "Beluga AMCL: Class Members - Typedefs", "Beluga AMCL: Class Members - Variables", "Beluga AMCL: Graph Legend", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: API Reference", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File", "Beluga AMCL: Related Pages", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File", "Overview", "ROS Reference", "ROS 2 Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File", "Beluga ROS: Class List", "Classes", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File", "Beluga ROS: Bibliography", "Beluga ROS: beluga_ros::Amcl Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::LaserScan Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid Class Reference", "Beluga ROS: Member List", "Beluga ROS: Class Index", "Beluga ROS: _doxygen Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include Directory Reference", "Beluga ROS: File List", "Beluga ROS: Class Members", "Class Members", "Beluga ROS: Class Members - Functions", "Beluga ROS: Class Members - Typedefs", "Beluga ROS: Class Members - Variables", "Beluga ROS: Graph Legend", "Beluga ROS: Class Hierarchy", "Beluga ROS: API Reference", "Beluga ROS: Class Hierarchy", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File", "Beluga ROS: Sophus Namespace Reference", "Beluga ROS: beluga_ros Namespace Reference", "Beluga ROS: beluga_ros::msg Namespace Reference", "Beluga ROS: Namespace Members", "Beluga ROS: Namespace Members", "Namespace Members", "Beluga ROS: Namespace List", "Namespaces", "Beluga ROS: tf2 Namespace Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File", "Beluga ROS: Related Pages", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File", "Beluga ROS: beluga_ros::AmclParams Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid::ValueTraits Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; T &amp;gt; Struct Template Reference", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga ROS: Member List", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File", "Overview", "Bibliography", "Features", "Releases", "Using Beluga with Nav2", "Primer on Particle Filtering with Beluga"], "titleterms": {"1": 554, "2": [493, 554], "3": 554, "3d_embed": 12, "4": 554, "5": 554, "6": 554, "7": 554, "_doxygen": [154, 474, 508], "abstract": 2, "action": [22, 23, 29, 30, 129, 136, 137, 161, 271, 272, 292, 293, 302, 303], "adapt": 2, "advertis": [492, 493], "algorithm": [24, 25, 26, 37, 38, 98, 121, 122, 138, 139, 140, 144, 146, 158, 169, 170, 171, 172, 173, 178, 179, 182, 183, 298, 299, 314, 315, 444, 451], "alignedbox2d": 84, "alignedbox3d": 88, "all": 187, "almost_equal_to": 542, "amcl": [10, 43, 485, 494, 495, 501], "amcl_cor": 26, "amcl_nod": [459, 460], "amcl_nodelet": [461, 462], "amclnod": [465, 493], "amclnodelet": [467, 492], "amclparam": [320, 538], "amp": 116, "amr": 10, "an": 10, "architectur": 2, "arg": [367, 375, 411], "as_common_tuple_indirect_fn": 412, "assign": [29, 30], "assign_fn": 346, "awar": 3, "base": 2, "baseamclnod": 469, "basedensegrid2": 45, "baselaserscan": 47, "baselineargrid2": 49, "baseoccupancygrid2": 51, "baseregulargrid": 53, "beam_model": [31, 32], "beammodelparam": 322, "beamsensormodel": 55, "bearing_sensor_model": [33, 34], "bearingmodelparam": 324, "bearingsensormodel": 57, "belief": 554, "beluga": [5, 6, 7, 8, 9, 10, 12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 475, 476, 485, 487, 488, 490, 494, 495, 498, 499, 509, 510, 519, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548, 553, 554], "beluga_amcl": [459, 460, 461, 462, 475, 476, 487, 488, 490, 492, 493], "beluga_demo": 553, "beluga_demo_nav2": 553, "beluga_ro": [494, 495, 498, 499, 509, 510, 521, 522, 523, 525, 533, 534, 536, 537, 545, 546, 547, 548], "benchmark": 7, "bibliographi": [42, 500, 550], "binari": 5, "bound": 3, "bresenham": [37, 38], "bresenham2i": 59, "broadcast": [492, 493], "build": 5, "call": 492, "carlo": 4, "cellhash": 368, "center": 3, "ciabatta": [39, 168], "circular_arrai": [40, 41], "circulararrai": [65, 435, 437], "class": [27, 28, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 120, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 365, 374, 410, 463, 464, 465, 467, 469, 471, 473, 478, 479, 480, 481, 482, 484, 486, 496, 497, 501, 503, 505, 507, 512, 513, 514, 515, 516, 518, 520], "clone": [5, 553], "cluster_based_estim": [121, 122], "clustercel": 360, "common_tuple_typ": 362, "common_tuple_type_t": 373, "compat": [492, 493], "compil": 554, "concept": 4, "conclus": 553, "consist": 3, "constraint": 83, "contact": 0, "contain": [40, 41, 123, 124, 130, 141, 142, 155, 447, 448], "creat": 553, "crtp": 2, "data": [2, 125, 126, 147, 149, 160, 242, 243, 246, 247, 250, 251, 269, 273, 274, 300, 301, 312, 313, 452, 453], "decay_t": 367, "decay_tuple_lik": 365, "dense_grid": [125, 126], "densegrid2": 13, "depend": [5, 458], "deriv": [45, 47, 49, 51, 53], "design": 3, "detail": [165, 177, 291], "develop": 554, "differential_drive_model": [127, 128], "differentialdrivemodel": 67, "differentialdrivemodelparam": 328, "directori": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 474, 475, 476, 508, 509, 510], "distance_map": [170, 171], "distribut": [2, 5, 422], "easi": 3, "effective_sample_s": [172, 173], "eigen_compat": 174, "eigenbas": 382, "element": [175, 176], "enabl": [377, 407], "enumer": [193, 194], "epilogu": 177, "estim": [178, 179, 554], "evalu": 3, "every_n": [180, 181], "every_n_fn": 390, "every_n_polici": 392, "exampl": 553, "executionpolici": 43, "explan": 553, "exponential_filt": [182, 183], "exponentialfilt": 69, "extend": 8, "f": [65, 435, 437], "featur": [11, 458, 551], "file": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 477, 487, 488, 490, 494, 495, 498, 499, 511, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "filter": [492, 493, 554], "fn": 416, "focus": 3, "form": 2, "forward_lik": 185, "from": 5, "function": [2, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 225, 480, 514], "graph": [234, 483, 517], "gt": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 98, 100, 106, 107, 109, 110, 112, 114, 116, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 338, 340, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 398, 400, 401, 403, 407, 410, 411, 416, 422, 432, 434, 435, 437, 542, 543], "has_common_tuple_typ": 372, "has_single_el": 374, "hierarchi": [235, 239, 484, 486, 518, 520], "home": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 475, 476, 487, 488, 490, 494, 495, 498, 499, 509, 510, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "hpp": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 487, 488, 490, 494, 495, 498, 499, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "i": [362, 363], "includ": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 475, 476, 487, 488, 490, 494, 495, 498, 499, 509, 510, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "index": [71, 120, 473, 507], "index_sequ": 363, "indexing_iter": [237, 238], "indexingiter": 71, "initi": [492, 493, 554], "instal": 5, "integ": 61, "interfac": [492, 493], "internalcontain": 106, "is_arithmetic_v": [116, 118], "is_tuple_lik": 376, "iter": 63, "kei": 4, "landmark": 554, "landmark_detection_typ": [240, 241], "landmark_map": [242, 243], "landmark_sensor_model": [244, 245], "landmarkbearingdetect": 330, "landmarkmap": [57, 73, 75], "landmarkmodelparam": 332, "landmarkpositiondetect": 334, "landmarksensormodel": 75, "laser_scan": [246, 247, 521, 522], "laserscan": [14, 503], "lazi": 3, "legend": [234, 483, 517], "like": 2, "likelihood_field_model": [248, 249], "likelihoodfieldmodel": 77, "likelihoodfieldmodelparam": 336, "line": 61, "linear_grid": [250, 251], "lineargrid2": 15, "list": [27, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 111, 113, 115, 117, 119, 184, 267, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 364, 366, 369, 371, 380, 381, 383, 384, 386, 389, 391, 393, 395, 397, 399, 402, 404, 406, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 436, 463, 466, 468, 470, 472, 477, 496, 502, 504, 506, 511, 530, 539, 541, 544], "local": 4, "lt": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 90, 92, 98, 100, 106, 107, 109, 110, 116, 118, 338, 340, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 398, 400, 401, 403, 407, 410, 411, 416, 422, 432, 434, 435, 437, 542, 543], "make_from_state_fn": 370, "map": 554, "maptyp": 100, "matrix": 81, "member": [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 111, 113, 115, 117, 119, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 261, 262, 263, 264, 265, 266, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 364, 366, 369, 371, 380, 381, 383, 384, 386, 389, 391, 393, 395, 397, 399, 402, 404, 406, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 436, 466, 468, 470, 472, 478, 479, 480, 481, 482, 502, 504, 506, 512, 513, 514, 515, 516, 527, 528, 529, 539, 541, 544], "memori": 3, "messag": 523, "misc": [492, 493], "model": [492, 493, 554], "mont": 4, "motion": [127, 128, 131, 143, 163, 252, 253, 275, 276, 316, 317, 492, 493], "motionmodel": [16, 43], "msg": 526, "multivariate_distribution_trait": [254, 255, 377], "multivariate_normal_distribut": [256, 257], "multivariate_uniform_distribut": [258, 259], "multivariatenormaldistribut": 79, "multivariatenormaldistributionparam": 81, "multivariateuniformdistribut": 83, "n": [65, 368, 435, 437], "namespac": [260, 261, 262, 263, 264, 265, 266, 267, 268, 524, 525, 526, 527, 528, 529, 530, 531, 532], "nav2": 553, "ndim": [53, 100, 338, 340], "ndt_amcl_nod": [487, 488], "ndt_cell": 269, "ndt_sensor_model": 270, "ndtamclnod": 471, "ndtcell": 338, "ndtmodelparam": 340, "ndtsensormodel": 90, "node": 493, "nodelet": 492, "normal": [271, 272], "normalize_base_fn": 348, "normalize_fn": 350, "note": [492, 493], "numer": [92, 432, 434], "observ": [492, 493], "occupancy_grid": [273, 274, 533, 534], "occupancygrid": [55, 77, 86, 98, 505], "occupancygrid2d": 17, "omnidirectional_drive_model": [275, 276], "omnidirectionaldrivemodel": 94, "omnidirectionaldrivemodelparam": 342, "on_effective_size_drop": [277, 278], "on_effective_size_drop_polici": 394, "on_mot": [279, 280], "on_motion_fn": 396, "on_motion_polici": 398, "on_motion_policy_bas": 400, "output": 6, "over": 6, "overview": [11, 458, 491, 549, 553, 554], "packag": 553, "page": [281, 489, 535], "paramet": [492, 493, 554], "particl": [18, 284, 285, 370, 492, 493, 554], "particle_cloud": [536, 537], "particle_trait": [282, 283, 388], "particlecluster": 96, "particleclusterizerparam": 344, "particletyp": 43, "perform": 3, "phantomtyp": [92, 432, 434], "polici": [132, 144, 152, 180, 181, 277, 278, 279, 280, 286, 287, 288, 403], "policy_bas": 405, "policyfn": 403, "pose": [398, 400, 492, 493], "predict": 554, "prerequisit": 6, "primer": 554, "primit": [289, 290], "principl": 3, "profil": 9, "prologu": 291, "propag": [292, 293], "propagate_base_fn": 352, "propagate_fn": 354, "publish": [492, 493], "quickstart": 6, "random": [133, 145, 166, 254, 255, 256, 257, 258, 259, 294, 295], "random_interspers": [296, 297], "random_intersperse_fn": 414, "random_intersperse_view": 416, "randomstatedistribut": 19, "randomstategener": 43, "rang": [2, 416, 422], "rational": 1, "ray2d": 98, "raycast": [37, 38, 138, 169, 298, 299], "re": 3, "record": 6, "refer": [22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 121, 123, 125, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 178, 180, 182, 237, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 271, 273, 275, 277, 279, 282, 284, 286, 289, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 438, 440, 442, 445, 447, 449, 452, 454, 456, 459, 461, 465, 467, 469, 471, 474, 475, 476, 487, 492, 493, 494, 498, 501, 503, 505, 508, 509, 510, 521, 524, 525, 526, 532, 533, 536, 538, 540, 542, 543, 545, 547], "regular_grid": [300, 301], "regulargrid": 20, "relat": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 225, 281, 489, 535], "releas": 552, "repositori": 5, "requir": [553, 554], "resampl": 554, "reweight": [302, 303], "reweight_base_fn": 356, "reweight_fn": 358, "ro": [5, 492, 493, 519], "robot": 6, "ros2_common": 490, "run": [6, 553, 554], "runner": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 475, 476, 487, 488, 490, 494, 495, 498, 499, 509, 510, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "sampl": [304, 305], "sample_base_fn": 418, "sample_fn": 420, "sample_view": 422, "scalar": [338, 401, 543], "se2": [401, 543], "se2bas": 387, "se2d": [86, 112], "se3bas": 379, "se3d": 114, "sensor": [31, 32, 33, 34, 125, 126, 134, 145, 146, 147, 148, 149, 159, 160, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 269, 270, 273, 274, 300, 301, 306, 307, 312, 313, 452, 453], "sensormodel": [21, 43], "sentinel": 326, "servic": [492, 493], "simul": 6, "so2bas": 378, "so3bas": 385, "sophu": 524, "sophus_match": [308, 309], "sophus_print": [310, 311], "sourc": [5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 122, 124, 126, 128, 171, 173, 174, 176, 177, 179, 181, 183, 185, 238, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 269, 270, 272, 274, 276, 278, 280, 283, 285, 287, 288, 290, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319, 439, 441, 443, 444, 446, 448, 450, 451, 453, 455, 457, 460, 462, 488, 490, 495, 499, 522, 523, 534, 537, 546, 548], "sparse_value_grid": [312, 313], "sparsegridt": 90, "sparsevaluegrid": 100, "spatial_hash": [314, 315, 407], "state": [360, 370], "state_fn": 408, "statetyp": [57, 67, 75], "static": 3, "stationary_model": [316, 317], "stationarymodel": 102, "step": 554, "stl": [2, 3], "strongly_typed_numer": [318, 319], "struct": [320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 390, 392, 394, 396, 398, 400, 401, 403, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 435, 437, 538, 540, 542, 543], "subscrib": [492, 493], "support": 11, "system": 554, "t": [65, 79, 83, 92, 106, 109, 110, 118, 362, 365, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 407, 410, 411, 432, 434, 435, 437, 542], "take_evenli": [438, 439], "take_evenly_fn": 424, "take_while_kld": [440, 441], "take_while_kld_fn": 426, "task": 554, "templat": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 86, 90, 92, 98, 100, 106, 107, 109, 110, 116, 118, 338, 340, 360, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 385, 387, 388, 398, 400, 401, 403, 407, 410, 411, 416, 422, 432, 434, 435, 437, 542, 543], "test": [135, 162, 308, 309, 310, 311, 442, 443], "tf2": 532, "tf2_eigen": [545, 546], "tf2_sophu": [547, 548], "thrun_recovery_probability_estim": 444, "thrunrecoveryprobabilityestim": 104, "topic": [492, 493], "transform": [492, 493], "tupl": 107, "tuple_index": 410, "tuple_index_found": [375, 411], "tuple_trait": [445, 446], "tuple_vector": [447, 448], "tuplecontain": 106, "tuplelik": [367, 374, 410], "tuplevector": 109, "type": [107, 116, 148, 149, 164, 240, 241], "type_trait": [136, 139, 143, 150, 157, 282, 283, 318, 319, 445, 446, 449, 450], "typedef": [228, 481, 515], "typenam": [92, 372], "u": [362, 373], "unscented_transform": 451, "updat": 554, "urng": [416, 422], "us": [3, 10, 553], "util": [141, 156, 185, 237, 238], "ux": 3, "value_grid": [452, 453], "valuegrid2": 110, "valuetrait": 540, "variabl": [231, 482, 516], "vector": 81, "vector2": 61, "view": [137, 140, 142, 150, 151, 175, 176, 284, 285, 296, 297, 304, 305, 438, 439, 440, 441, 454, 455, 456, 457], "visual": 6, "void": [112, 114, 116, 118], "void_t": 373, "weight_fn": 430, "weightt": 43, "work": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 475, 476, 487, 488, 490, 494, 495, 498, 499, 509, 510, 521, 522, 523, 533, 534, 536, 537, 545, 546, 547, 548], "workspac": [5, 553], "zip": [456, 457], "zip_fn": 428}})