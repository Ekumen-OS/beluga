Search.setIndex({"alltitles": {"/home/runner/work/beluga/beluga/beluga/include Directory Reference": [[165, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; actions Relation": [[127, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; containers Relation": [[128, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; motion Relation": [[129, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; policies Relation": [[130, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; random Relation": [[131, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; sensor Relation": [[132, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; testing Relation": [[133, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference": [[151, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File": [[12, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; type_traits Relation": [[134, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; views Relation": [[135, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference": [[159, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference": [[22, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File": [[23, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference": [[29, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File": [[30, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference": [[269, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File": [[270, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference": [[290, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File": [[291, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference": [[300, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File": [[301, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; raycasting Relation": [[136, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; type_traits Relation": [[137, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; views Relation": [[138, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference": [[156, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference": [[24, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File": [[25, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File": [[26, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp File Reference": [[119, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp Source File": [[120, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference": [[168, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File": [[169, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference": [[170, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File": [[171, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference": [[176, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File": [[177, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference": [[180, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File": [[181, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference": [[167, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference": [[296, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File": [[297, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference": [[37, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File": [[38, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference": [[312, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File": [[313, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File": [[442, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference": [[35, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File": [[36, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; utility Relation": [[139, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; views Relation": [[140, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference": [[153, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference": [[121, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File": [[122, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference": [[40, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File": [[41, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference": [[445, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File": [[446, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference": [[163, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File": [[175, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File": [[289, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File": [[172, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion -&gt; type_traits Relation": [[141, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference": [[161, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference": [[250, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File": [[251, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference": [[125, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File": [[126, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference": [[273, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File": [[274, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference": [[314, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File": [[315, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies -&gt; algorithm Relation": [[142, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference": [[150, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference": [[284, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File": [[285, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference": [[178, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File": [[179, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference": [[275, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File": [[276, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference": [[277, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File": [[278, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File": [[286, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference": [[287, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File": [[288, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random -&gt; sensor Relation": [[143, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference": [[164, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference": [[292, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File": [[293, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference": [[252, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File": [[253, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference": [[254, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File": [[255, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference": [[256, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File": [[257, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; algorithm Relation": [[144, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; data Relation": [[145, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; types Relation": [[146, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference": [[157, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference": [[304, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File": [[305, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference": [[31, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File": [[32, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference": [[33, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File": [[34, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&gt; types Relation": [[147, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference": [[158, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference": [[123, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File": [[124, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference": [[240, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File": [[241, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference": [[244, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File": [[245, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference": [[248, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File": [[249, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File": [[267, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference": [[271, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File": [[272, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference": [[298, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File": [[299, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference": [[310, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File": [[311, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference": [[449, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File": [[450, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference": [[242, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File": [[243, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference": [[246, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File": [[247, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File": [[268, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference": [[160, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference": [[440, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File": [[441, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference": [[306, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File": [[307, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference": [[308, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File": [[309, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference": [[155, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference": [[447, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File": [[448, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference": [[280, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File": [[281, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference": [[316, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File": [[317, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference": [[443, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File": [[444, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference": [[162, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference": [[238, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File": [[239, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference": [[154, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File": [[183, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference": [[235, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File": [[236, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views -&gt; type_traits Relation": [[148, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference": [[149, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference": [[451, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File": [[452, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference": [[173, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File": [[174, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference": [[282, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File": [[283, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference": [[294, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File": [[295, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference": [[302, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File": [[303, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference": [[436, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File": [[437, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference": [[438, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File": [[439, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference": [[453, null]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File": [[454, null]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference": [[166, null]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File": [[39, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference": [[470, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference": [[471, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference": [[456, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File": [[457, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference": [[458, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File": [[459, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference": [[482, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File": [[483, null]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File": [[485, null]], "/home/runner/work/beluga/beluga/beluga_ros/include Directory Reference": [[505, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference": [[504, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference": [[489, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File": [[490, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference": [[493, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File": [[494, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference": [[516, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File": [[517, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File": [[518, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference": [[528, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File": [[529, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference": [[531, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File": [[532, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference": [[540, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File": [[541, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference": [[542, null]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File": [[543, null]], "1 Develop": [[549, "develop"]], "1.1 Parameters": [[549, "parameters"]], "1.2 Landmark map": [[549, "landmark-map"]], "1.3 Initial belief": [[549, "initial-belief"]], "1.4 System modelling": [[549, "system-modelling"]], "1.5 Filter prediction step": [[549, "filter-prediction-step"]], "1.6 Filter update step": [[549, "filter-update-step"]], "1.6.2 Filter resampling step": [[549, "filter-resampling-step"]], "1.7 Estimate": [[549, "estimate"]], "2 Compile and run": [[549, "compile-and-run"]], "Advertised services": [[487, "advertised-services"], [488, "advertised-services"]], "AlignedBox2d &gt; Class Reference": [[84, null]], "AlignedBox3d &gt; Class Reference": [[88, null]], "All": [[185, null]], "Amcl Class Reference": [[496, null]], "Amcl&lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &gt; Class Template Reference": [[43, null]], "AmclNode Class Reference": [[462, null]], "AmclNodelet Class Reference": [[464, null]], "AmclParams Struct Reference": [[318, null], [533, null]], "Architecture": [[2, null]], "BaseDenseGrid2&lt; Derived &gt; Class Template Reference": [[45, null]], "BaseLaserScan&lt; Derived &gt; Class Template Reference": [[47, null]], "BaseLinearGrid2&lt; Derived &gt; Class Template Reference": [[49, null]], "BaseOccupancyGrid2&lt; Derived &gt; Class Template Reference": [[51, null]], "BaseRegularGrid&lt; Derived, NDim &gt; Class Template Reference": [[53, null]], "BeamModelParam Struct Reference": [[320, null]], "BeamSensorModel&lt; OccupancyGrid &gt; Class Template Reference": [[55, null]], "BearingModelParam Struct Reference": [[322, null]], "BearingSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[57, null]], "Beluga": [[234, null]], "Beluga AMCL": [[480, null]], "Beluga ROS": [[514, null]], "Benchmarking Beluga": [[7, null]], "Bibliography": [[42, null], [495, null], [545, null]], "Bresenham2i Class Reference": [[59, null]], "Broadcasted transforms": [[487, "broadcasted-transforms"], [488, "broadcasted-transforms"]], "Build and source workspace": [[5, "build-and-source-workspace"]], "Building from source (with ROS)": [[5, "building-from-source-with-ros"]], "CRTP-based data adapters": [[2, "crtp-based-data-adapters"]], "Called services": [[487, "called-services"]], "CellHasher&lt; N &gt; Struct Template Reference": [[366, null]], "CircularArray&lt; T, N, F &gt; &gt; Struct Template Reference": [[433, null], [435, null]], "CircularArray&lt; T, N, F &gt; Class Template Reference": [[65, null]], "Class Hierarchy": [[233, null], [237, null], [479, null], [481, null], [513, null], [515, null]], "Class Index": [[118, null], [468, null], [502, null]], "Class List": [[27, null], [460, null], [491, null]], "Class Members": [[184, null], [186, null], [187, null], [188, null], [189, null], [190, null], [193, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [224, null], [225, null], [227, null], [228, null], [230, null], [231, null], [473, null], [474, null], [507, null], [508, null]], "Class Members - Enumerations": [[191, null]], "Class Members - Enumerator": [[192, null]], "Class Members - Functions": [[194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [475, null], [509, null]], "Class Members - Related Functions": [[223, null]], "Class Members - Typedefs": [[226, null], [476, null], [510, null]], "Class Members - Variables": [[229, null], [477, null], [511, null]], "Classes": [[28, null], [461, null], [492, null]], "Clone Beluga repository": [[5, "clone-beluga-repository"]], "Clone beluga_demo": [[548, "clone-beluga-demo"]], "ClusterCell&lt; State &gt; Struct Template Reference": [[358, null]], "Compatibility Notes": [[487, "compatibility-notes"]], "Compatibility notes": [[488, "compatibility-notes"]], "Conclusion": [[548, "conclusion"]], "Contact": [[0, null]], "Create the workspace": [[548, "create-the-workspace"]], "DenseGrid2": [[13, null]], "Dependencies": [[455, "dependencies"]], "Design principles": [[3, null]], "DifferentialDriveModel&lt; StateType &gt; Class Template Reference": [[67, null]], "DifferentialDriveModelParam Struct Reference": [[326, null]], "Distribution as a range": [[2, "distribution-as-a-range"]], "Easy to (re)use": [[3, "easy-to-re-use"]], "EigenBase&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[380, null]], "Explanation": [[548, "explanation"]], "ExponentialFilter Class Reference": [[69, null]], "Extending Beluga": [[8, null]], "Features": [[11, "features"], [455, "features"], [546, null]], "File List": [[182, null], [472, null], [506, null]], "Functional forms": [[2, "functional-forms"]], "Functions": [[200, null]], "Graph Legend": [[232, null], [478, null], [512, null]], "IndexingIterator&lt; Indexable, Index &gt; Class Template Reference": [[71, null]], "Initial Pose and Transform Broadcast Parameters": [[487, "initial-pose-and-transform-broadcast-parameters"], [488, "initial-pose-and-transform-broadcast-parameters"]], "Install ROS distribution": [[5, "install-ros-distribution"]], "Install dependencies": [[5, "install-dependencies"]], "Installation": [[5, null]], "Installing binaries": [[5, "installing-binaries"]], "Interface Parameters": [[487, "interface-parameters"], [488, "interface-parameters"]], "Key concepts": [[4, null]], "LandmarkBearingDetection Struct Reference": [[328, null]], "LandmarkMap Class Reference": [[73, null]], "LandmarkModelParam Struct Reference": [[330, null]], "LandmarkPositionDetection Struct Reference": [[332, null]], "LandmarkSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[75, null]], "LaserScan": [[14, null]], "LaserScan Class Reference": [[498, null]], "Lazy evaluated": [[3, "lazy-evaluated"]], "LikelihoodFieldModel&lt; OccupancyGrid &gt; Class Template Reference": [[77, null]], "LikelihoodFieldModelParam Struct Reference": [[334, null]], "Line&lt; Vector2, Integer &gt; Class Template Reference": [[61, null]], "LinearGrid2": [[15, null]], "Member List": [[44, null], [46, null], [48, null], [50, null], [52, null], [54, null], [56, null], [58, null], [60, null], [62, null], [64, null], [66, null], [68, null], [70, null], [72, null], [74, null], [76, null], [78, null], [80, null], [82, null], [85, null], [87, null], [89, null], [91, null], [93, null], [95, null], [97, null], [99, null], [101, null], [103, null], [105, null], [108, null], [111, null], [113, null], [115, null], [117, null], [319, null], [321, null], [323, null], [325, null], [327, null], [329, null], [331, null], [333, null], [335, null], [337, null], [339, null], [341, null], [343, null], [345, null], [347, null], [349, null], [351, null], [353, null], [355, null], [357, null], [359, null], [362, null], [364, null], [367, null], [369, null], [378, null], [379, null], [381, null], [382, null], [384, null], [387, null], [389, null], [391, null], [393, null], [395, null], [397, null], [400, null], [402, null], [404, null], [407, null], [411, null], [413, null], [415, null], [417, null], [419, null], [421, null], [423, null], [425, null], [427, null], [429, null], [431, null], [434, null], [463, null], [465, null], [467, null], [497, null], [499, null], [501, null], [534, null], [536, null], [539, null]], "Memory aware": [[3, "memory-aware"]], "Misc Parameters": [[487, "misc-parameters"], [488, "misc-parameters"]], "Monte Carlo Localization": [[4, "monte-carlo-localization"]], "Motion Model Parameters": [[487, "motion-model-parameters"], [488, "motion-model-parameters"]], "MotionModel": [[16, null]], "MultivariateNormalDistribution&lt; T &gt; Class Template Reference": [[79, null]], "MultivariateNormalDistributionParam&lt; Vector, Matrix &gt; Class Template Reference": [[81, null]], "MultivariateUniformDistribution&lt; T, Constraint &gt; Class Template Reference": [[83, null]], "NDTCell&lt; NDim, Scalar &gt; Struct Template Reference": [[336, null]], "NDTModelParam&lt; NDim &gt; Struct Template Reference": [[338, null]], "NDTSensorModel&lt; SparseGridT &gt; Class Template Reference": [[90, null]], "Namespace List": [[265, null], [525, null]], "Namespace Members": [[259, null], [260, null], [261, null], [262, null], [263, null], [264, null], [522, null], [523, null], [524, null]], "Namespaces": [[266, null], [526, null]], "NdtAmclNode Class Reference": [[466, null]], "Nodelets": [[487, "nodelets"]], "Nodes": [[488, "nodes"]], "Numeric&lt; T, PhantomType &gt; &gt; Struct Template Reference": [[430, null], [432, null]], "Numeric&lt; T, PhantomType, typename &gt; Class Template Reference": [[92, null]], "Observation Model Parameters": [[487, "observation-model-parameters"], [488, "observation-model-parameters"]], "OccupancyGrid Class Reference": [[500, null]], "OccupancyGrid2d": [[17, null]], "OmnidirectionalDriveModel Class Reference": [[94, null]], "OmnidirectionalDriveModelParam Struct Reference": [[340, null]], "Overview": [[11, null], [455, null], [486, null], [544, null], [548, "overview"], [549, "overview"]], "Parameters": [[487, "parameters"], [488, "parameters"]], "Particle": [[18, null]], "Particle Filter Parameters": [[487, "particle-filter-parameters"], [488, "particle-filter-parameters"]], "ParticleClusterizer Class Reference": [[96, null]], "ParticleClusterizerParam Struct Reference": [[342, null]], "Performance focused": [[3, "performance-focused"]], "Prerequisites": [[6, "prerequisites"]], "Primer on Particle Filtering with Beluga": [[549, null]], "Profiling Beluga": [[9, null]], "Published topics": [[487, "published-topics"], [488, "published-topics"]], "Quickstart": [[6, null]], "ROS 2 Reference": [[488, null]], "ROS Reference": [[487, null]], "RandomStateDistribution": [[19, null]], "Rationale": [[1, null]], "Ray2d&lt; OccupancyGrid, Algorithm &gt; Class Template Reference": [[98, null]], "RegularGrid": [[20, null]], "Related Pages": [[279, null], [484, null], [530, null]], "Releases": [[547, null]], "Requirements": [[548, "requirements"], [549, "requirements"]], "Run Beluga in simulation": [[6, "run-beluga-in-simulation"]], "Run Beluga on a robot": [[6, "run-beluga-on-a-robot"]], "Run Beluga over a recording": [[6, "run-beluga-over-a-recording"]], "Run the example": [[548, "run-the-example"]], "SE2&lt; Scalar &gt; &gt; Struct Template Reference": [[399, null], [538, null]], "SE2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[385, null]], "SE2d, OccupancyGrid &gt; Class Template Reference": [[86, null]], "SE2d, void &gt; Class Reference": [[112, null]], "SE3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[377, null]], "SO2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[376, null]], "SO3Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[383, null]], "STL consistent": [[3, "stl-consistent"]], "STL-like abstractions": [[2, "stl-like-abstractions"]], "SensorModel": [[21, null]], "Sophus Namespace Reference": [[519, null]], "SparseValueGrid&lt; MapType, NDim &gt; Class Template Reference": [[100, null]], "Statically bound": [[3, "statically-bound"]], "StationaryModel Class Reference": [[102, null]], "Subscribed topics": [[487, "subscribed-topics"], [488, "subscribed-topics"]], "Subscribed transforms": [[487, "subscribed-transforms"], [488, "subscribed-transforms"]], "Support": [[11, "support"]], "Tasks": [[549, "tasks"]], "ThrunRecoveryProbabilityEstimator Class Reference": [[104, null]], "TupleContainer&lt; InternalContainer, T &gt; Class Template Reference": [[106, null]], "TupleVector&lt; T &gt; Class Template Reference": [[109, null]], "UX centered": [[3, "ux-centered"]], "Using Beluga AMCL on an AMR": [[10, null]], "Using Beluga with Nav2": [[548, null]], "ValueGrid2&lt; T &gt; Class Template Reference": [[110, null]], "ValueTraits Struct Reference": [[535, null]], "Visualize Beluga output": [[6, "visualize-beluga-output"]], "_doxygen Directory Reference": [[152, null], [469, null], [503, null]], "almost_equal_to&lt; T &gt; Struct Template Reference": [[537, null]], "as_common_tuple_indirect_fn Struct Reference": [[410, null]], "assign_fn Struct Reference": [[344, null]], "beluga Namespace Reference": [[258, null]], "beluga_amcl/AmclNodelet": [[487, "beluga-amcl-amclnodelet"]], "beluga_amcl::AmclNode": [[488, "beluga-amcl-amclnode"]], "beluga_demo_nav2 package": [[548, "beluga-demo-nav2-package"]], "beluga_ros Namespace Reference": [[520, null]], "common_tuple_type&lt; T, U, Is &gt; Struct Template Reference": [[360, null]], "decay_t&lt; TupleLike&lt; Args\u2026 &gt; &gt; &gt; &gt; &gt; Struct Template Reference": [[365, null]], "decay_tuple_like&lt; T, class &gt; Struct Template Reference": [[363, null]], "every_n_fn Struct Reference": [[388, null]], "every_n_policy Struct Reference": [[390, null]], "has_common_tuple_type&lt; typename, typename, typename &gt; Struct Template Reference": [[370, null]], "has_single_element&lt; T, TupleLike, class &gt; Struct Template Reference": [[372, null]], "index_sequence&lt; I\u2026 &gt; &gt; Struct Template Reference": [[361, null]], "is_arithmetic_v&lt; T &gt;, void &gt; &gt; Class Template Reference": [[116, null]], "is_arithmetic_v&lt; Types &gt; &amp;&amp;\u2026), void &gt; &gt; Class Template Reference": [[114, null]], "is_tuple_like&lt; T &gt; Struct Template Reference": [[374, null]], "iterator Class Reference": [[63, null]], "make_from_state_fn&lt; Particle, State &gt; Struct Template Reference": [[368, null]], "msg Namespace Reference": [[521, null]], "multivariate_distribution_traits&lt; T, Enable &gt; Struct Template Reference": [[375, null]], "normalize_base_fn Struct Reference": [[346, null]], "normalize_fn Struct Reference": [[348, null]], "on_effective_size_drop_policy Struct Reference": [[392, null]], "on_motion_fn Struct Reference": [[394, null]], "on_motion_policy&lt; Pose &gt; Struct Template Reference": [[396, null]], "on_motion_policy_base&lt; Pose &gt; Struct Template Reference": [[398, null]], "particle_traits&lt; T &gt; Struct Template Reference": [[386, null]], "policy&lt; PolicyFn &gt; Struct Template Reference": [[401, null]], "policy_base Struct Reference": [[403, null]], "propagate_base_fn Struct Reference": [[350, null]], "propagate_fn Struct Reference": [[352, null]], "random_intersperse_fn Struct Reference": [[412, null]], "random_intersperse_view&lt; Range, Fn, URNG &gt; Struct Template Reference": [[414, null]], "reweight_base_fn Struct Reference": [[354, null]], "reweight_fn Struct Reference": [[356, null]], "sample_base_fn Struct Reference": [[416, null]], "sample_fn Struct Reference": [[418, null]], "sample_view&lt; Range, Distribution, URNG &gt; Struct Template Reference": [[420, null]], "sentinel Struct Reference": [[324, null]], "spatial_hash&lt; T, Enable &gt; Struct Template Reference": [[405, null]], "state_fn Struct Reference": [[406, null]], "take_evenly_fn Struct Reference": [[422, null]], "take_while_kld_fn Struct Reference": [[424, null]], "tf2 Namespace Reference": [[527, null]], "tuple&lt; Types\u2026 &gt; &gt; Class Template Reference": [[107, null]], "tuple_index&lt; T, TupleLike, class &gt; Struct Template Reference": [[408, null]], "tuple_index_found&lt; T, Args\u2026 &gt;()&gt; &gt; Struct Template Reference": [[373, null], [409, null]], "void_t&lt; common_tuple_type_t&lt; T, U &gt; &gt; &gt; Struct Template Reference": [[371, null]], "weight_fn Struct Reference": [[428, null]], "zip_fn Struct Reference": [[426, null]]}, "docnames": ["about/contact", "about/rationale", "concepts/architecture", "concepts/design-principles", "concepts/key-concepts", "getting-started/installation", "getting-started/quickstart", "guides/benchmarking-beluga", "guides/extending-beluga", "guides/profiling-beluga", "guides/using-beluga-amcl", "index", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/annotated", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/citelist", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1", "packages/beluga/docs/_doxygen/generated/reference/html/classes", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/files", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga/docs/_doxygen/generated/reference/html/index", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/inherits", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/pages", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source", "packages/beluga/docs/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source", "packages/beluga_amcl/docs/index", "packages/beluga_amcl/docs/ros-reference", "packages/beluga_amcl/docs/ros2-reference", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source", "packages/beluga_ros/docs/index", "resources/bibliography", "roadmap/features", "roadmap/releases", "tutorials/nav2-integration", "tutorials/particle-filtering"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["about/contact.md", "about/rationale.md", "concepts/architecture.md", "concepts/design-principles.md", "concepts/key-concepts.md", "getting-started/installation.md", "getting-started/quickstart.md", "guides/benchmarking-beluga.md", "guides/extending-beluga.md", "guides/profiling-beluga.md", "guides/using-beluga-amcl.md", "index.md", "packages/beluga/docs/_doxygen/generated/reference/html/3d__embedding_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGridPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ParticleClusterizer-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/cluster__based__estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/eigen__compatibility_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z.rst", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1ParticleClusterizerParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1clusterizer__detail_1_1ClusterCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is14a8f4eaf89c5248a34012104455aef8.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7181fb16a0982e51ad03a3e45b8f3508.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is72ce39e8fabe4098180348777969ad69.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1iscd5fdf80de344db88138b1e69a58d58d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source.rst", "packages/beluga/docs/index.md", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source.rst", "packages/beluga_amcl/docs/index.md", "packages/beluga_amcl/docs/ros-reference.md", "packages/beluga_amcl/docs/ros2-reference.md", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source.rst", "packages/beluga_ros/docs/index.md", "resources/bibliography.md", "roadmap/features.md", "roadmap/releases.md", "tutorials/nav2-integration.md", "tutorials/particle-filtering.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 4, 5, 16, 21, 27, 28, 37, 38, 42, 59, 61, 63, 65, 67, 73, 92, 94, 100, 102, 104, 107, 108, 118, 119, 120, 149, 173, 177, 182, 185, 188, 200, 209, 224, 226, 229, 232, 233, 234, 241, 243, 258, 259, 265, 267, 268, 274, 297, 301, 306, 311, 336, 406, 428, 437, 445, 446, 452, 455, 473, 475, 477, 478, 480, 487, 488, 495, 507, 512, 514, 532, 545, 549], "0": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 65, 107, 114, 116, 119, 120, 122, 124, 126, 169, 170, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 318, 320, 322, 326, 330, 334, 336, 337, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 392, 406, 407, 412, 424, 428, 437, 438, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 488, 490, 494, 517, 518, 529, 532, 533, 535, 541, 543, 549], "0003": 11, "001": [26, 318, 487, 490, 533], "01": [42, 126, 274, 326, 340, 495, 545], "02": 315, "05": [26, 32, 318, 320, 485, 487, 488, 490, 532, 533], "08": 549, "09023224677087": 258, "0f": 532, "0l": 268, "0u": 41, "0ul": 437, "0ull": 439, "0x00": [40, 41, 258], "0x01": [40, 41, 258], "0x02": [40, 41, 258], "0x04": [40, 41, 258], "0x9e3779b9": 268, "1": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "10": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 65, 107, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 488, 490, 494, 517, 518, 529, 532, 533, 541, 543, 545, 549], "100": [30, 34, 38, 124, 126, 241, 243, 247, 249, 253, 255, 257, 268, 270, 272, 278, 281, 288, 291, 295, 297, 301, 303, 311, 313, 334, 446, 459, 483, 485, 487, 488, 490, 518, 529, 535, 543, 549], "101": [30, 34, 38, 41, 124, 126, 236, 241, 243, 247, 249, 253, 255, 257, 268, 270, 272, 274, 278, 281, 286, 288, 291, 295, 297, 299, 301, 311, 313, 444, 446, 457, 485, 490, 529, 543], "102": [26, 30, 34, 38, 120, 236, 241, 243, 247, 249, 255, 257, 268, 270, 272, 274, 276, 281, 286, 288, 291, 295, 297, 299, 301, 303, 311, 437, 446, 457, 459, 483, 485, 490, 518, 529, 543], "103": [30, 32, 34, 38, 41, 120, 124, 126, 236, 241, 243, 247, 249, 253, 255, 257, 268, 270, 272, 274, 278, 281, 288, 291, 295, 297, 299, 301, 303, 311, 313, 437, 446, 459, 483, 485, 490, 529, 532, 543], "104": [32, 34, 38, 41, 120, 236, 241, 243, 249, 253, 255, 257, 268, 270, 274, 281, 286, 288, 291, 295, 297, 301, 303, 311, 313, 437, 457, 483, 485, 529, 532, 543], "105": [26, 32, 34, 38, 120, 177, 236, 241, 243, 247, 249, 253, 255, 257, 268, 270, 272, 274, 278, 281, 286, 288, 291, 295, 297, 299, 301, 303, 313, 437, 444, 446, 457, 459, 483, 485, 490, 529, 532, 543], "106": [26, 32, 34, 38, 41, 120, 177, 236, 241, 243, 247, 253, 255, 257, 274, 281, 288, 295, 297, 299, 301, 303, 437, 444, 457, 459, 485, 490, 529, 532, 543], "107": [26, 32, 34, 38, 120, 177, 241, 243, 249, 253, 255, 257, 268, 270, 274, 281, 286, 288, 291, 295, 297, 299, 301, 303, 313, 444, 457, 483, 485, 529, 532, 543], "108": [26, 32, 34, 38, 120, 124, 126, 177, 236, 241, 243, 247, 253, 255, 257, 268, 270, 274, 278, 281, 286, 288, 291, 295, 297, 299, 303, 313, 444, 446, 457, 459, 483, 485, 490, 518, 529, 532, 543], "109": [26, 32, 34, 38, 41, 120, 124, 126, 177, 236, 241, 243, 255, 257, 268, 270, 274, 278, 281, 286, 288, 291, 295, 297, 299, 444, 446, 459, 485, 518, 529, 532, 543], "10u": 532, "11": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 549], "110": [26, 32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 253, 255, 257, 268, 270, 274, 278, 281, 286, 288, 291, 295, 297, 299, 301, 303, 313, 444, 446, 457, 483, 485, 518, 529, 532, 543], "1109": 545, "111": [26, 32, 34, 38, 120, 124, 126, 177, 236, 241, 243, 249, 253, 255, 257, 268, 270, 272, 274, 278, 281, 286, 288, 291, 297, 303, 439, 444, 446, 457, 459, 483, 485, 518, 529, 532], "112": [26, 32, 34, 38, 41, 120, 124, 126, 177, 241, 243, 249, 253, 255, 257, 268, 270, 272, 274, 278, 286, 291, 295, 297, 303, 439, 444, 446, 457, 459, 485, 518, 532, 543], "113": [26, 32, 34, 38, 120, 126, 177, 236, 241, 243, 247, 249, 253, 255, 257, 268, 270, 274, 278, 281, 288, 291, 295, 297, 303, 439, 444, 446, 457, 483, 485, 518, 532], "114": [26, 32, 34, 120, 124, 126, 177, 236, 241, 243, 247, 249, 253, 255, 257, 268, 270, 272, 274, 278, 286, 288, 291, 297, 303, 313, 439, 444, 446, 457, 459, 483, 485, 518, 532], "11400714819323198485llu": 313, "115": [26, 32, 34, 38, 120, 126, 177, 236, 241, 243, 247, 249, 255, 257, 268, 270, 274, 278, 288, 295, 297, 301, 303, 313, 439, 444, 446, 459, 485, 490, 532], "116": [26, 32, 34, 38, 120, 126, 177, 236, 241, 243, 247, 249, 253, 255, 268, 274, 288, 291, 295, 297, 301, 303, 439, 444, 446, 457, 483, 485, 490, 518, 532], "117": [26, 32, 34, 38, 120, 126, 177, 236, 241, 243, 247, 249, 253, 255, 257, 268, 270, 274, 278, 288, 291, 295, 297, 301, 303, 313, 439, 444, 446, 459, 483, 485, 490, 532], "118": [26, 32, 34, 38, 120, 124, 126, 177, 236, 241, 243, 247, 249, 255, 257, 268, 270, 274, 286, 288, 291, 295, 297, 301, 303, 439, 444, 446, 485, 490, 532, 543], "119": [26, 32, 34, 38, 124, 126, 177, 236, 241, 243, 247, 249, 253, 255, 257, 270, 272, 274, 281, 286, 288, 291, 295, 297, 301, 303, 439, 444, 446, 483, 485, 490, 532, 543], "12": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 460, 479, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 549], "120": [26, 32, 34, 38, 120, 126, 177, 236, 241, 243, 247, 249, 253, 255, 268, 270, 272, 274, 281, 286, 288, 291, 295, 303, 439, 444, 446, 483, 485, 490, 532, 543], "121": [26, 32, 34, 120, 124, 126, 177, 236, 241, 243, 247, 249, 255, 257, 268, 270, 274, 278, 281, 286, 288, 291, 295, 313, 439, 444, 446, 485, 490, 518, 532, 543], "122": [26, 32, 34, 38, 41, 120, 126, 177, 236, 241, 243, 247, 249, 253, 255, 268, 272, 274, 278, 281, 286, 288, 291, 303, 313, 439, 446, 483, 485, 490, 518, 532, 543], "123": [26, 32, 34, 38, 41, 126, 177, 241, 243, 247, 249, 253, 255, 268, 270, 274, 278, 281, 286, 288, 291, 295, 313, 439, 444, 446, 472, 483, 485, 490, 491, 506, 518, 525, 532, 543], "12345": [27, 182, 233, 265, 513], "124": [26, 29, 31, 32, 33, 34, 37, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 119, 120, 123, 125, 126, 168, 170, 173, 176, 177, 178, 180, 235, 236, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 252, 254, 255, 256, 258, 268, 269, 270, 271, 273, 274, 275, 277, 278, 280, 281, 282, 286, 287, 288, 290, 294, 296, 298, 300, 302, 303, 306, 310, 312, 313, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 361, 365, 366, 368, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 399, 401, 403, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 433, 436, 438, 439, 443, 444, 445, 446, 449, 453, 457, 462, 464, 466, 482, 485, 489, 490, 496, 498, 500, 516, 518, 520, 528, 531, 533, 535, 538, 540, 542, 543], "125": [26, 32, 34, 38, 41, 126, 177, 236, 241, 243, 247, 249, 253, 255, 268, 270, 274, 278, 286, 295, 303, 313, 439, 444, 446, 457, 459, 483, 485, 490, 518, 532, 543], "126": [32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 247, 249, 253, 255, 257, 268, 270, 274, 286, 288, 291, 295, 313, 439, 444, 446, 459, 483, 485, 490, 518, 543], "127": [26, 32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 247, 249, 255, 257, 268, 270, 274, 303, 313, 439, 444, 446, 457, 485, 490, 518, 543], "128": [26, 32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 247, 249, 253, 257, 268, 270, 272, 274, 286, 295, 303, 313, 439, 444, 446, 459, 483, 485, 490, 518, 543], "129": [32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 247, 249, 253, 255, 268, 272, 274, 286, 288, 303, 439, 444, 446, 483, 485, 490, 518, 543], "13": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "130": [26, 32, 34, 38, 41, 126, 177, 241, 243, 247, 249, 257, 268, 270, 272, 274, 286, 288, 303, 313, 439, 444, 446, 485, 490, 518, 543], "131": [26, 32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 247, 249, 253, 268, 270, 272, 274, 286, 288, 291, 303, 313, 439, 446, 483, 485, 490, 518], "132": [26, 32, 34, 38, 41, 126, 177, 236, 241, 243, 247, 249, 253, 270, 274, 286, 288, 291, 303, 313, 439, 444, 446, 483, 485, 490, 532, 543], "133": [26, 32, 34, 38, 41, 126, 177, 236, 241, 243, 247, 249, 268, 272, 274, 286, 288, 291, 303, 439, 444, 446, 485, 490, 532], "134": [26, 32, 34, 38, 41, 126, 177, 236, 241, 243, 247, 253, 257, 268, 270, 274, 288, 291, 303, 313, 439, 444, 446, 457, 483, 485, 490, 532], "135": [26, 32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 247, 253, 257, 268, 270, 274, 288, 291, 303, 313, 439, 446, 457, 459, 483, 485, 532], "136": [26, 32, 34, 38, 41, 124, 126, 177, 236, 241, 243, 247, 253, 255, 257, 268, 270, 274, 288, 303, 439, 444, 446, 459, 485, 490, 532], "137": [26, 32, 34, 38, 41, 120, 126, 177, 236, 241, 243, 247, 253, 255, 257, 268, 270, 274, 288, 303, 313, 439, 444, 446, 457, 483, 485, 490, 532], "138": [26, 32, 34, 38, 41, 120, 124, 126, 177, 241, 243, 247, 253, 255, 257, 268, 270, 272, 274, 288, 439, 444, 446, 457, 459, 483, 485, 543], "139": [32, 34, 38, 41, 120, 126, 236, 241, 243, 247, 253, 255, 268, 272, 274, 288, 295, 303, 444, 446, 459, 485, 490, 532, 543], "14": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "140": [26, 32, 34, 38, 41, 120, 126, 241, 243, 253, 255, 257, 268, 270, 272, 274, 288, 295, 439, 444, 446, 457, 483, 485, 490, 543], "141": [32, 34, 38, 41, 120, 126, 177, 241, 243, 247, 253, 255, 268, 270, 272, 274, 295, 313, 444, 446, 457, 459, 483, 485, 490, 543], "142": [32, 34, 38, 41, 120, 126, 236, 241, 243, 253, 268, 270, 274, 288, 295, 313, 444, 446, 459, 485, 490, 543], "143": [32, 38, 41, 120, 124, 126, 236, 241, 243, 255, 268, 270, 272, 274, 295, 457, 483, 485, 490, 543], "144": [26, 32, 34, 38, 41, 120, 124, 126, 241, 243, 253, 255, 268, 270, 274, 295, 313, 444, 446, 457, 459, 483, 485, 490, 543], "145": [26, 32, 34, 38, 41, 120, 124, 126, 236, 241, 243, 253, 274, 288, 295, 444, 446, 485, 490, 543], "146": [26, 32, 34, 38, 41, 120, 124, 126, 241, 243, 247, 255, 268, 270, 274, 288, 295, 303, 444, 446, 457, 459, 483, 485, 490, 532, 543], "147": [26, 32, 34, 38, 41, 120, 124, 126, 241, 243, 247, 253, 255, 268, 270, 274, 288, 295, 303, 446, 483, 485, 490, 532], "148": [26, 32, 34, 38, 41, 120, 124, 126, 236, 241, 243, 247, 253, 268, 270, 272, 274, 288, 295, 303, 313, 439, 444, 446, 457, 459, 485, 532, 543], "149": [32, 34, 38, 41, 120, 124, 126, 236, 241, 243, 247, 255, 257, 270, 272, 274, 288, 295, 303, 313, 439, 444, 457, 483, 485, 490, 532], "14th": [42, 495, 545], "15": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "150": [26, 32, 34, 38, 41, 120, 124, 126, 177, 243, 247, 253, 255, 257, 268, 270, 272, 274, 288, 295, 303, 313, 439, 444, 446, 459, 485, 532], "151": [26, 38, 41, 120, 124, 126, 177, 236, 243, 247, 253, 257, 270, 272, 274, 288, 295, 303, 313, 439, 457, 485, 532], "152": [32, 34, 38, 41, 120, 124, 126, 177, 243, 247, 255, 257, 268, 270, 272, 274, 288, 295, 303, 313, 439, 444, 457, 459, 485, 490, 532], "153": [26, 32, 34, 38, 120, 124, 126, 177, 243, 247, 253, 255, 257, 272, 274, 288, 295, 303, 313, 439, 444, 485, 490, 532], "154": [34, 38, 41, 120, 124, 126, 177, 236, 243, 247, 253, 257, 268, 272, 274, 288, 295, 303, 313, 439, 444, 457, 459, 485, 490, 532, 543], "155": [32, 38, 120, 124, 126, 177, 236, 243, 247, 255, 257, 270, 272, 274, 288, 295, 303, 313, 439, 459, 485, 490, 532, 543], "156": [32, 34, 38, 120, 124, 126, 177, 243, 247, 253, 255, 257, 268, 274, 288, 295, 303, 439, 444, 446, 457, 485, 532, 543], "157": [32, 34, 38, 120, 124, 126, 177, 236, 243, 247, 253, 257, 268, 272, 274, 288, 295, 303, 439, 444, 446, 459, 483, 485, 490, 532, 543], "158": [32, 34, 38, 120, 124, 126, 177, 247, 255, 257, 268, 274, 288, 295, 303, 439, 444, 446, 457, 483, 485, 490, 532, 543], "159": [32, 34, 38, 124, 126, 243, 247, 253, 255, 257, 268, 274, 288, 303, 313, 439, 444, 446, 457, 459, 485, 532, 543], "16": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 549], "160": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "161": [32, 34, 38, 124, 126, 236, 243, 247, 253, 255, 257, 268, 274, 288, 295, 313, 444, 446, 459, 485, 490, 532, 543], "162": [32, 41, 126, 236, 243, 247, 253, 257, 268, 270, 272, 295, 303, 444, 457, 483, 485, 490, 532, 543], "163": [32, 34, 38, 41, 120, 126, 236, 243, 247, 253, 268, 270, 272, 274, 281, 283, 288, 291, 295, 303, 313, 315, 439, 459, 485, 490, 532, 543], "1637": 120, "164": [32, 38, 41, 126, 243, 247, 253, 255, 257, 268, 270, 272, 288, 295, 303, 444, 457, 483, 485, 490, 532, 543], "165": [26, 41, 124, 126, 236, 243, 247, 255, 257, 270, 272, 288, 303, 444, 457, 459, 483, 485, 532, 543], "166": [26, 38, 41, 124, 126, 247, 253, 257, 268, 270, 272, 288, 295, 303, 444, 459, 485, 490, 532, 543], "167": [26, 38, 41, 124, 126, 243, 247, 253, 255, 257, 272, 303, 457, 483, 485, 532, 543], "168": [26, 41, 124, 126, 236, 243, 247, 253, 257, 288, 303, 313, 444, 446, 459, 485, 532, 543], "169": [26, 38, 41, 124, 126, 236, 243, 247, 253, 257, 272, 288, 313, 444, 446, 457, 483, 485, 532], "17": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 455, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 544, 549], "170": [26, 38, 41, 124, 126, 236, 247, 253, 257, 272, 288, 303, 313, 439, 444, 446, 459, 483, 485, 532, 543], "171": [26, 38, 41, 124, 126, 236, 243, 247, 253, 268, 272, 288, 313, 439, 444, 446, 457, 485, 532], "172": [26, 38, 41, 124, 126, 243, 247, 253, 255, 268, 272, 288, 303, 313, 439, 444, 459, 483, 485, 532], "173": [26, 38, 120, 126, 236, 243, 247, 253, 255, 268, 272, 288, 303, 313, 439, 444, 446, 457, 485, 532], "174": [26, 38, 41, 120, 126, 243, 247, 253, 272, 288, 303, 439, 459, 483, 485, 532], "175": [26, 120, 126, 243, 247, 253, 255, 268, 272, 288, 295, 303, 313, 439, 444, 457, 483, 485, 532], "176": [26, 38, 41, 120, 236, 243, 247, 253, 268, 272, 288, 295, 303, 439, 444, 446, 457, 459, 483, 485, 532, 543], "177": [26, 38, 120, 126, 236, 247, 253, 268, 288, 295, 303, 444, 446, 459, 485, 532, 543], "178": [26, 41, 120, 126, 247, 268, 272, 288, 295, 303, 446, 457, 483, 485, 490, 532, 543], "179": [26, 38, 41, 120, 236, 247, 268, 272, 288, 295, 313, 444, 446, 459, 485, 490, 532, 543], "18": [12, 23, 26, 30, 32, 34, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 295, 297, 299, 301, 303, 311, 313, 315, 317, 437, 439, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 517, 518, 529, 532, 541, 543], "180": [26, 38, 120, 126, 247, 272, 288, 295, 303, 313, 444, 457, 483, 485, 490, 532, 533, 543], "181": [26, 41, 120, 126, 247, 255, 268, 272, 288, 295, 303, 313, 446, 459, 485, 490, 532, 543], "182": [26, 38, 120, 126, 177, 236, 247, 255, 268, 272, 288, 295, 303, 444, 446, 457, 483, 485, 490, 532, 543], "183": [26, 38, 41, 120, 126, 177, 236, 247, 255, 268, 272, 288, 295, 303, 313, 444, 446, 459, 485, 490, 532, 543], "184": [26, 38, 120, 126, 177, 247, 268, 272, 288, 295, 303, 313, 444, 446, 457, 459, 483, 485, 490, 532, 543], "185": [26, 38, 41, 120, 177, 236, 247, 255, 272, 288, 295, 303, 457, 485, 490, 532], "186": [26, 38, 41, 120, 177, 247, 268, 272, 288, 295, 303, 313, 444, 446, 457, 459, 483, 485, 490, 532, 543], "187": [26, 38, 120, 177, 247, 272, 281, 288, 303, 444, 446, 457, 459, 483, 485, 490, 532], "188": [26, 38, 41, 120, 177, 236, 247, 268, 272, 288, 303, 444, 457, 485, 490, 532], "189": [26, 38, 120, 177, 236, 255, 288, 303, 444, 446, 457, 459, 483, 485, 490, 532], "19": [12, 23, 26, 30, 32, 34, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 295, 297, 299, 301, 303, 311, 313, 315, 317, 437, 439, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 517, 518, 529, 532, 541, 543], "190": [26, 38, 41, 177, 236, 255, 268, 288, 295, 303, 313, 444, 446, 485, 490, 532], "191": [26, 38, 120, 177, 236, 255, 288, 295, 303, 313, 444, 459, 483, 485, 490, 532], "192": [26, 38, 41, 177, 255, 268, 288, 295, 303, 313, 446, 485, 490, 532, 543], "193": [26, 38, 41, 177, 236, 268, 288, 295, 303, 313, 446, 459, 483, 485, 490, 532, 543], "194": [26, 38, 177, 236, 255, 288, 295, 303, 313, 459, 485, 490, 532, 543], "195": [26, 38, 41, 177, 236, 268, 288, 313, 446, 483, 485, 490, 532, 543], "196": [26, 38, 177, 236, 303, 313, 446, 459, 483, 485, 490, 532, 543], "197": [26, 38, 41, 177, 236, 288, 303, 313, 446, 483, 485, 490, 532, 543], "198": [26, 38, 177, 236, 255, 303, 313, 446, 459, 483, 485, 490, 532, 543], "199": [26, 38, 41, 177, 236, 255, 288, 303, 313, 446, 483, 485, 490, 532, 543], "1990": 1, "1_55_0": 366, "1d": 549, "1e": [268, 532], "1ul": [26, 318, 437, 490, 533], "2": [4, 5, 6, 11, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 45, 51, 55, 65, 67, 79, 81, 84, 90, 98, 112, 120, 122, 124, 126, 164, 169, 171, 172, 174, 175, 177, 179, 181, 182, 183, 233, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 256, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 298, 299, 301, 303, 305, 307, 308, 309, 310, 311, 313, 315, 317, 318, 320, 326, 334, 338, 344, 346, 406, 412, 422, 424, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 455, 456, 457, 459, 460, 462, 466, 471, 472, 479, 480, 482, 483, 485, 486, 487, 490, 491, 494, 495, 496, 513, 514, 517, 518, 520, 521, 525, 527, 529, 531, 532, 533, 538, 540, 541, 543, 544, 548], "20": [12, 23, 26, 30, 32, 34, 38, 39, 41, 120, 122, 124, 126, 149, 169, 171, 172, 173, 174, 175, 177, 182, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 295, 297, 299, 301, 303, 311, 313, 315, 317, 342, 437, 439, 442, 444, 446, 448, 450, 452, 454, 455, 457, 459, 483, 485, 490, 517, 518, 529, 532, 541, 543], "200": [26, 38, 41, 177, 236, 255, 303, 313, 446, 459, 483, 485, 490, 532, 543, 549], "2000": [11, 485, 488], "2000ul": [26, 318, 490, 533], "2001": [42, 495, 545], "2005": [42, 495, 545], "2006": 545, "2007": [42, 495, 545], "20070017872": 177, "201": [26, 38, 177, 236, 255, 268, 303, 313, 446, 485, 490, 532, 543], "2015": 42, "2019": 39, "202": [26, 38, 41, 120, 177, 236, 268, 288, 303, 446, 459, 485, 490, 532, 543], "2020": 258, "2022": [25, 36, 126, 169, 174, 177, 181, 247, 251, 281, 305, 313, 315, 446, 448, 452, 457, 483, 529, 543], "2023": [32, 34, 38, 120, 124, 126, 169, 174, 177, 181, 183, 239, 241, 243, 245, 247, 249, 251, 255, 272, 274, 283, 288, 293, 297, 299, 305, 307, 313, 315, 317, 437, 439, 444, 448, 450, 459, 517, 518, 529, 543], "2024": [12, 23, 25, 26, 30, 36, 41, 120, 122, 171, 172, 175, 179, 183, 236, 253, 255, 257, 267, 268, 270, 276, 278, 281, 285, 286, 288, 289, 291, 295, 301, 303, 307, 309, 311, 439, 441, 442, 444, 446, 452, 454, 457, 459, 483, 485, 490, 494, 532, 541], "203": [38, 120, 177, 255, 268, 303, 446, 485, 490, 532, 543], "204": [26, 38, 120, 177, 268, 288, 303, 446, 459, 485, 490, 532, 543], "205": [26, 38, 120, 177, 268, 288, 303, 446, 459, 485, 490, 532, 543], "206": [26, 120, 177, 288, 303, 446, 459, 485, 490, 532, 543], "207": [38, 120, 177, 255, 268, 288, 303, 446, 459, 485, 490, 532], "208": [26, 38, 41, 120, 177, 255, 288, 303, 446, 459, 485, 490, 532, 543], "209": [26, 41, 120, 177, 255, 288, 303, 446, 459, 485, 490, 532], "21": [12, 23, 26, 30, 32, 34, 38, 39, 41, 120, 124, 126, 169, 171, 172, 174, 175, 177, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 281, 285, 286, 288, 289, 291, 295, 297, 299, 301, 303, 311, 313, 315, 317, 437, 439, 442, 444, 446, 450, 452, 454, 457, 459, 483, 485, 490, 517, 518, 529, 532, 541, 543], "210": [26, 38, 41, 120, 177, 255, 288, 446, 485, 490, 532], "211": [26, 41, 120, 177, 255, 288, 303, 446, 485, 490, 532], "212": [26, 41, 120, 177, 255, 268, 288, 303, 446, 485, 490, 532], "213": [26, 41, 120, 177, 255, 268, 288, 303, 446, 485, 490, 532, 543], "214": [26, 41, 120, 177, 268, 288, 303, 485, 490, 532, 543], "215": [26, 38, 41, 120, 177, 255, 268, 288, 303, 446, 485, 490, 532, 543], "216": [26, 38, 41, 120, 172, 177, 255, 268, 303, 446, 485, 490, 532, 543], "217": [26, 38, 41, 120, 177, 268, 288, 303, 446, 485, 490, 532, 543], "218": [26, 41, 120, 177, 268, 288, 303, 485, 490, 532, 543], "219": [26, 38, 41, 120, 177, 255, 268, 288, 303, 446, 485, 490, 532, 543], "22": [12, 23, 26, 30, 32, 34, 38, 39, 41, 120, 124, 126, 169, 171, 177, 239, 241, 243, 245, 247, 249, 253, 255, 257, 267, 268, 270, 272, 274, 276, 285, 288, 289, 291, 295, 297, 299, 301, 303, 311, 313, 315, 437, 439, 442, 446, 450, 452, 457, 459, 483, 485, 490, 517, 518, 529, 532, 541, 543], "220": [26, 38, 41, 120, 177, 255, 268, 288, 485, 490, 532, 543], "221": [26, 41, 120, 177, 255, 288, 485, 490, 532, 543], "222": [26, 38, 41, 120, 177, 255, 288, 303, 446, 485, 490, 532, 543], "223": [26, 38, 41, 120, 177, 255, 268, 288, 446, 485, 490, 532, 543], "224": [26, 38, 120, 177, 255, 268, 288, 485, 490, 532, 543], "225": [26, 38, 41, 120, 177, 255, 268, 288, 446, 485, 490, 532, 543], "226": [26, 38, 120, 177, 268, 288, 446, 485, 490, 532, 543], "227": [26, 38, 120, 177, 255, 268, 288, 446, 485, 490, 532, 543], "228": [26, 38, 120, 177, 255, 268, 288, 485, 490, 532], "229": [26, 38, 120, 177, 268, 446, 485, 532, 543], "23": [25, 26, 32, 34, 38, 39, 41, 42, 120, 124, 126, 169, 172, 175, 177, 181, 239, 241, 243, 245, 247, 249, 257, 258, 267, 268, 270, 272, 274, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 309, 311, 313, 315, 360, 437, 439, 441, 442, 446, 450, 452, 457, 459, 483, 485, 490, 495, 517, 518, 529, 532, 541, 543, 545], "230": [26, 38, 120, 177, 255, 268, 288, 446, 485, 490, 532], "231": [26, 38, 41, 120, 177, 255, 268, 446, 485, 490, 532], "232": [26, 41, 120, 177, 268, 446, 485, 490, 532], "233": [26, 38, 41, 120, 177, 255, 268, 288, 446, 485, 490, 532], "234": [26, 38, 41, 120, 177, 268, 288, 446, 485, 490, 532, 543], "235": [26, 41, 120, 177, 268, 288, 485, 490, 532, 543], "236": [26, 38, 41, 120, 177, 268, 288, 485, 490, 532, 543], "237": [26, 38, 41, 120, 268, 288, 485, 490, 532, 543], "238": [41, 120, 177, 255, 268, 288, 485, 490, 532, 543], "239": [38, 41, 120, 255, 268, 288, 485, 490, 532, 543], "24": [12, 25, 26, 32, 34, 38, 39, 41, 120, 124, 126, 169, 172, 175, 177, 181, 239, 241, 243, 245, 247, 249, 257, 267, 268, 270, 272, 274, 286, 288, 291, 293, 295, 297, 299, 301, 303, 309, 313, 315, 439, 441, 442, 446, 452, 457, 459, 483, 485, 490, 517, 518, 529, 532, 541, 543], "240": [38, 41, 120, 268, 288, 303, 485, 490, 532, 543], "241": [41, 120, 255, 268, 288, 303, 485, 490, 532, 543], "242": [38, 41, 120, 288, 303, 485, 490, 532, 543], "243": [38, 41, 120, 288, 303, 485, 490, 532, 543], "244": [41, 120, 288, 303, 485, 490, 532, 543], "245": [38, 41, 120, 485, 490, 532, 543], "246": [38, 41, 120, 288, 485, 490, 532, 543], "247": [120, 255, 288, 485, 490, 532, 543], "248": [38, 41, 120, 255, 288, 485, 490, 532, 543], "249": [38, 255, 288, 485, 490, 532, 543], "25": [12, 25, 26, 32, 34, 38, 39, 41, 120, 124, 126, 172, 175, 177, 179, 241, 243, 245, 247, 249, 257, 267, 268, 270, 272, 274, 286, 289, 291, 293, 295, 297, 299, 301, 303, 309, 313, 315, 317, 318, 439, 441, 442, 446, 452, 457, 459, 483, 485, 488, 490, 517, 518, 529, 532, 533, 541, 543, 549], "250": [120, 255, 288, 485, 490, 532], "251": [38, 120, 255, 288, 485, 490, 532, 543], "252": [120, 268, 288, 485, 490, 532, 543], "253": [41, 120, 255, 268, 288, 485, 490, 532], "254": [41, 268, 288, 485, 532, 543], "255": [41, 120, 177, 268, 288, 485, 532, 543], "256": [41, 177, 268, 288, 485, 532, 543], "257": [38, 41, 177, 268, 288, 485, 532, 543], "258": [38, 177, 268, 288, 485, 532, 543], "259": [38, 41, 177, 268, 288, 485, 532], "26": [12, 25, 26, 32, 34, 39, 41, 120, 122, 126, 172, 175, 177, 179, 181, 241, 243, 245, 247, 257, 267, 268, 270, 272, 274, 278, 283, 286, 291, 295, 297, 299, 301, 303, 307, 309, 313, 317, 441, 442, 446, 448, 457, 459, 483, 485, 490, 518, 529, 532, 541, 543], "260": [38, 177, 255, 268, 288, 485, 532, 543], "261": [38, 177, 255, 268, 288, 485, 532, 543], "262": [38, 177, 255, 268, 288, 485, 532, 543], "263": [38, 177, 255, 268, 485, 543], "264": [38, 41, 120, 171, 177, 255, 268, 281, 283, 288, 485, 532, 543], "265": [38, 41, 120, 177, 268, 288, 485], "2654435769u": 313, "266": [38, 41, 120, 177, 255, 268, 288, 485, 543], "267": [38, 41, 177, 268, 288, 485, 543], "268": [38, 41, 120, 177, 268, 288, 485, 543], "269": [120, 177, 268, 485, 532, 543], "27": [12, 25, 26, 32, 34, 39, 120, 126, 172, 174, 175, 177, 179, 181, 236, 241, 243, 245, 247, 267, 268, 270, 272, 274, 278, 281, 283, 286, 291, 297, 301, 307, 309, 313, 442, 444, 446, 454, 457, 459, 483, 485, 490, 518, 529, 532, 541, 543], "270": [41, 177, 268, 485, 532, 543], "271": [120, 177, 268, 485, 532], "272": [120, 177, 268, 485, 532, 543], "273": [41, 177, 255, 268, 485, 532, 543], "274": [41, 120, 177, 255, 268, 485, 532, 543], "275": [41, 177, 255, 268, 485, 532, 543], "276": [41, 177, 255, 268, 485, 532, 543], "277": [41, 177, 268, 485, 532], "278": [41, 42, 120, 177, 255, 268, 485, 532, 543], "279": [41, 120, 177, 268, 485, 532, 543], "28": [23, 25, 26, 30, 32, 34, 36, 120, 126, 171, 172, 174, 177, 179, 236, 241, 243, 247, 253, 255, 267, 268, 272, 276, 278, 281, 285, 291, 297, 307, 309, 317, 444, 454, 457, 459, 483, 485, 494, 518, 529, 532, 541, 543], "280": [120, 177, 268, 485, 532, 543], "281": [41, 120, 177, 268, 485, 532, 543], "28155156327703": 258, "282": [120, 177, 268, 485, 532, 543], "283": [120, 177, 268, 485, 532], "284": [41, 177, 268, 485, 543], "285": [41, 120, 177, 255, 268, 485, 543], "286": [41, 177, 255, 268, 485, 543], "287": [41, 177, 255, 268, 485, 543], "288": [41, 42, 177, 255, 268, 485, 543], "289": [41, 177, 255, 268, 485, 543], "29": [12, 25, 26, 30, 32, 34, 36, 39, 120, 126, 171, 177, 181, 241, 243, 247, 253, 255, 267, 268, 272, 276, 278, 286, 289, 297, 307, 309, 311, 437, 444, 450, 454, 457, 459, 483, 485, 494, 518, 529, 532, 541, 543], "290": [41, 177, 255, 268, 485, 543], "291": [41, 177, 255, 268, 485, 543], "292": [120, 177, 268, 485], "293": [41, 120, 177, 255, 268, 485], "294": [120, 177, 255, 268, 485], "295": [120, 177, 255, 268, 485], "296": [41, 120, 177, 255, 268, 485], "297": [41, 120, 177, 255, 268, 485], "298": [41, 120, 177, 255, 268, 485], "2980539": 545, "2980632": 545, "299": [41, 120, 177, 255, 268, 485], "2d": [6, 11, 27, 32, 33, 34, 37, 38, 45, 47, 49, 51, 55, 57, 59, 61, 63, 67, 75, 77, 84, 86, 90, 94, 98, 102, 110, 123, 124, 125, 177, 233, 234, 242, 243, 244, 245, 247, 248, 249, 256, 257, 258, 265, 267, 268, 271, 272, 296, 297, 298, 310, 330, 449, 450, 456, 458, 462, 464, 466, 471, 472, 480, 482, 486, 487, 488, 489, 490, 491, 496, 498, 500, 504, 506, 513, 514, 516, 517, 518, 520, 525, 527, 528, 529], "2u": 439, "2x2": 177, "3": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 51, 65, 79, 88, 104, 120, 122, 124, 126, 164, 169, 171, 172, 174, 175, 177, 179, 181, 182, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 256, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 298, 299, 301, 303, 305, 307, 308, 309, 310, 311, 313, 315, 317, 318, 334, 344, 383, 385, 437, 438, 439, 441, 442, 444, 446, 448, 450, 452, 454, 455, 457, 459, 483, 485, 490, 494, 495, 517, 518, 520, 527, 529, 532, 533, 541, 543, 548], "30": [12, 25, 26, 32, 34, 36, 39, 120, 169, 177, 179, 236, 239, 241, 243, 247, 267, 268, 276, 281, 283, 286, 288, 289, 303, 307, 309, 311, 437, 444, 450, 454, 457, 459, 483, 485, 494, 518, 529, 532, 541, 543], "300": [41, 120, 177, 268, 485, 549], "301": [41, 120, 177, 268, 485], "302": [41, 120, 177, 268, 485], "303": [41, 120, 177, 268, 485], "304": [120, 177, 268, 485], "305": [41, 120, 177, 268, 485], "306": [120, 177, 268, 485], "307": [120, 268, 485], "308": [41, 120, 177, 268, 485], "309": [41, 120, 268, 485], "31": [12, 25, 26, 30, 34, 36, 38, 39, 120, 124, 169, 171, 174, 177, 239, 243, 247, 249, 253, 255, 267, 268, 276, 278, 281, 283, 286, 288, 289, 307, 315, 437, 439, 452, 457, 459, 483, 485, 494, 517, 518, 529, 532, 541, 543], "310": [41, 120, 268, 485], "311": [41, 120, 268, 485], "312": [41, 120, 485], "313": [41, 120, 485], "314": [41, 120, 485], "315": [41, 485], "316": [120, 485], "317": [41, 120, 485], "318": [120, 485], "319": [120, 485], "32": [12, 25, 30, 34, 36, 38, 39, 41, 42, 120, 124, 177, 181, 183, 239, 241, 243, 249, 253, 255, 257, 267, 268, 286, 295, 299, 303, 307, 309, 311, 313, 315, 437, 439, 444, 450, 454, 457, 459, 483, 485, 494, 517, 518, 529, 532, 543], "320": [41, 120, 177, 485], "321": [41, 120, 177, 485], "322": [41, 120, 177, 485], "323": [41, 120, 177, 485], "324": [41, 120, 177, 485], "325": [41, 177, 485], "326": [41, 120, 177, 485], "32634787735669": 258, "327": [177, 485], "328": [41, 177, 485], "329": [177, 485], "33": [12, 26, 30, 34, 36, 39, 41, 120, 169, 177, 179, 181, 183, 239, 241, 245, 253, 255, 257, 267, 268, 270, 274, 276, 281, 286, 295, 299, 301, 303, 307, 313, 439, 444, 446, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 543], "330": [177, 485], "331": [41, 177, 485], "332": [41, 177, 485], "333": [41, 177, 485], "334": [41, 177, 485], "335": [41, 120, 177, 485], "336": [41, 120, 177, 485], "337": [41, 120, 177, 485], "338": [120, 177, 485], "339": [41, 120, 177, 485], "34": [12, 30, 36, 38, 39, 42, 120, 126, 177, 179, 183, 239, 241, 245, 255, 268, 270, 274, 278, 283, 286, 291, 295, 301, 303, 307, 313, 315, 437, 439, 444, 446, 454, 457, 459, 483, 485, 490, 494, 495, 517, 518, 529, 532, 543, 545], "340": [120, 177, 485], "341": [120, 177, 485], "342": [41, 120, 177, 485], "343": [41, 120, 177, 485], "344": [41, 120, 177, 485], "345": [41, 120, 177, 485], "346": [41, 120, 177, 485], "347": [41, 120, 177, 485], "348": [41, 120, 177, 485], "349": [41, 120, 485], "35": [12, 26, 30, 36, 38, 39, 41, 120, 126, 174, 177, 181, 183, 239, 253, 255, 257, 267, 268, 270, 272, 276, 278, 281, 283, 286, 291, 295, 297, 301, 303, 307, 313, 442, 444, 450, 454, 457, 459, 483, 494, 517, 518, 529, 532, 543], "350": [120, 177, 485], "351": [41, 485], "352": [120, 485], "353": [120, 485], "354": [41, 120, 485], "355": [41, 120, 485], "356": [41, 120, 485], "357": [41, 120, 485], "358": [41, 120, 485], "359": [41, 120, 485], "36": [12, 30, 32, 36, 39, 41, 120, 174, 179, 181, 183, 239, 241, 253, 255, 267, 268, 270, 272, 274, 276, 278, 281, 283, 286, 291, 297, 301, 307, 313, 437, 439, 444, 446, 450, 454, 457, 459, 483, 485, 490, 518, 527, 529, 532, 542, 543], "360": [41, 120, 485], "361": [41, 120, 485], "362": [41, 120, 485], "363": [41, 120, 485], "364": [41, 120, 485], "365": [120, 177, 485], "366": [41, 120, 177, 485], "367": [120, 177, 485], "368": [120, 177, 485], "369": [120, 177, 485], "37": [26, 30, 32, 36, 38, 39, 41, 120, 126, 174, 183, 236, 239, 241, 247, 253, 255, 267, 268, 281, 283, 291, 295, 303, 307, 317, 439, 444, 446, 450, 454, 457, 459, 483, 517, 518, 529, 532, 549], "370": [120, 177, 485], "371": [120, 177, 485], "372": [41, 120, 177, 485], "373": [41, 120, 177, 485], "374": [41, 120, 485], "375": [41, 120, 177, 485], "376": [41, 120, 485], "377": [41, 120, 485], "378": [41, 120, 485], "379": [41, 120, 485], "38": [26, 30, 36, 38, 39, 41, 120, 174, 181, 183, 236, 243, 247, 253, 255, 268, 270, 274, 276, 278, 283, 286, 288, 297, 301, 313, 317, 439, 442, 444, 446, 454, 457, 459, 483, 485, 490, 517, 518, 529, 532, 541, 543], "380": [120, 485], "381": [41, 120, 485], "382": [120, 485], "383": [120, 485], "384": [41, 120, 485], "385": [41, 120, 485], "386": [120, 485], "387": [41, 120, 485], "388": [120, 485], "389": [120, 485], "39": [26, 30, 32, 34, 36, 38, 39, 41, 120, 174, 177, 179, 183, 236, 239, 241, 243, 253, 257, 267, 268, 274, 281, 286, 291, 297, 307, 309, 315, 317, 439, 442, 446, 450, 454, 457, 459, 483, 490, 518, 541], "390": [120, 485], "391": [120, 485], "392": [41, 120, 177, 485], "393": [41, 120, 177, 485], "394": [41, 120, 177, 485], "395": [41, 120, 177, 485], "396": [41, 120, 177, 485], "397": [41, 120, 177, 485], "398": [41, 120, 177, 485], "399": [41, 120, 177, 485], "3d": [12, 27, 33, 34, 57, 67, 73, 75, 88, 90, 125, 126, 233, 234, 240, 241, 242, 243, 253, 256, 257, 258, 265, 267, 268, 298, 310, 330, 498, 527], "3d_embed": [26, 32, 34, 38, 41, 120, 124, 125, 126, 169, 171, 177, 181, 182, 183, 236, 239, 241, 243, 245, 247, 249, 253, 255, 257, 267, 268, 272, 274, 281, 286, 288, 297, 299, 311, 313, 315, 317, 439, 442, 444, 446, 450], "3x3": [258, 527, 542, 543], "4": [12, 13, 15, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 45, 49, 51, 67, 77, 79, 110, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 326, 334, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 520, 527, 529, 532, 541, 543], "40": [30, 34, 39, 120, 126, 174, 179, 183, 239, 241, 247, 253, 255, 257, 268, 270, 281, 286, 301, 309, 315, 439, 444, 446, 459, 483, 485, 518], "400": [41, 177, 485], "401": [41, 120, 177, 485], "402": [41, 177, 485], "403": [177, 485], "404": [41, 485], "405": 485, "406": 485, "407": 485, "408": [41, 485], "409": [41, 485], "41": [26, 30, 38, 39, 41, 120, 174, 181, 183, 236, 239, 243, 253, 255, 257, 267, 268, 278, 281, 291, 309, 317, 439, 442, 444, 454, 459, 483, 490, 518, 541], "410": 485, "411": [41, 485], "413": 120, "414": 120, "415": [41, 120], "416": [41, 120], "417": 120, "418": [41, 120], "419": [41, 120], "42": [30, 32, 34, 38, 39, 120, 126, 177, 179, 181, 183, 236, 239, 241, 253, 274, 276, 278, 286, 309, 315, 444, 454, 459, 483, 485, 490, 518], "420": 120, "421": [41, 120], "422": [41, 120], "423": 120, "424": [41, 120], "425": [41, 42, 120], "426": 120, "427": [41, 120], "428": [41, 120], "429": 120, "43": [26, 30, 34, 39, 41, 120, 177, 181, 183, 239, 247, 253, 255, 257, 267, 278, 281, 286, 297, 309, 317, 454, 459, 483, 518, 543], "430": [41, 120], "431": 120, "432": 120, "433": 120, "434": 120, "435": 120, "436": 41, "437": 41, "438": 41, "439": 41, "44": [32, 34, 38, 39, 41, 120, 177, 181, 183, 236, 241, 243, 255, 257, 274, 276, 281, 295, 297, 307, 309, 313, 315, 444, 450, 454, 459, 483, 485, 490, 518, 529, 532, 543], "440": 41, "441": 41, "442": 41, "443": 41, "444": 41, "445": 41, "446": 41, "447": 41, "448": 41, "449": 41, "45": [26, 30, 34, 39, 120, 171, 177, 181, 183, 239, 241, 243, 247, 253, 257, 267, 268, 276, 278, 281, 286, 295, 297, 307, 309, 311, 313, 315, 437, 442, 450, 454, 457, 459, 483, 485, 490, 518, 529, 532, 541], "450": 41, "451": 41, "452": 41, "453": 41, "454": 41, "456": 41, "46": [30, 32, 34, 39, 41, 42, 120, 126, 171, 181, 183, 236, 239, 243, 253, 255, 267, 268, 276, 295, 303, 307, 309, 311, 313, 317, 437, 442, 450, 454, 457, 459, 483, 495, 518, 532, 541, 543, 545], "460": 41, "461": 41, "462": 41, "463": 41, "464": 41, "465": 41, "466": 41, "468": 41, "47": [26, 30, 39, 41, 120, 171, 179, 181, 183, 239, 243, 255, 257, 270, 276, 281, 286, 295, 297, 303, 307, 309, 311, 313, 315, 437, 442, 450, 483, 485, 490, 518, 529, 532, 541], "472": 41, "473": 41, "474": 41, "475": 41, "476": 41, "477": 41, "478": 41, "479": 41, "48": [32, 34, 39, 41, 126, 171, 179, 181, 183, 236, 239, 243, 253, 268, 270, 274, 276, 281, 286, 295, 303, 307, 309, 313, 317, 437, 442, 444, 450, 454, 457, 483, 485, 529, 541], "480": 41, "481": 41, "483": 41, "486": 41, "487": 41, "488": 41, "489": 41, "49": [26, 30, 39, 41, 171, 179, 181, 183, 239, 241, 247, 253, 255, 267, 268, 270, 276, 278, 281, 286, 288, 295, 307, 309, 311, 313, 437, 442, 444, 446, 457, 483, 485, 517, 518, 532, 541], "490": 41, "492": 41, "495": 41, "496": 41, "497": 41, "498": 41, "499": 41, "4b": 11, "4d": 177, "5": [6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 42, 55, 67, 75, 77, 79, 104, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 320, 326, 330, 334, 342, 392, 412, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 488, 490, 494, 517, 518, 527, 529, 532, 533, 541, 543], "50": [32, 38, 39, 41, 171, 179, 181, 183, 236, 239, 241, 243, 245, 255, 257, 267, 268, 270, 274, 276, 278, 281, 286, 295, 303, 307, 309, 313, 317, 437, 442, 444, 446, 450, 457, 483, 485, 517, 518, 529, 541], "500": [485, 488], "5000": 487, "500ul": [26, 318, 490, 533], "501": 41, "504": 41, "505": 41, "506": 41, "507": 41, "508": 41, "51": [26, 30, 38, 39, 41, 171, 179, 181, 183, 236, 239, 241, 247, 253, 257, 267, 268, 270, 278, 281, 286, 291, 295, 297, 301, 303, 309, 311, 313, 317, 437, 446, 450, 454, 457, 483, 485, 490, 517, 518, 541], "510": 41, "513": 41, "514": 41, "515": 41, "516": 41, "517": 41, "519": 41, "52": [30, 32, 38, 39, 126, 171, 179, 181, 183, 239, 253, 255, 257, 267, 268, 270, 276, 281, 291, 295, 297, 301, 307, 309, 313, 317, 437, 442, 444, 454, 459, 483, 485, 490, 517, 518, 532, 541, 549], "522": 41, "523": [38, 41], "523598": 487, "524": [41, 120, 342], "525": 41, "526": 41, "527": 41, "528": 41, "529": 41, "53": [26, 30, 39, 41, 120, 169, 171, 179, 181, 236, 247, 267, 268, 270, 276, 278, 281, 286, 291, 295, 297, 301, 303, 309, 311, 313, 317, 437, 444, 446, 450, 454, 457, 459, 483, 485, 517, 518, 529, 532, 541], "530": 41, "532": 41, "533": 41, "534": 41, "536": 41, "537": 41, "538": 41, "539": 41, "54": [26, 30, 32, 38, 39, 41, 120, 126, 169, 171, 179, 236, 241, 247, 253, 257, 267, 268, 270, 276, 281, 286, 291, 301, 313, 315, 317, 437, 444, 446, 450, 454, 457, 485, 490, 517, 518, 532, 541], "540": 41, "541": 41, "542": 41, "543": 41, "55": [26, 30, 38, 39, 41, 120, 169, 171, 179, 241, 247, 249, 253, 267, 268, 270, 274, 276, 281, 286, 291, 295, 297, 301, 309, 311, 313, 315, 317, 437, 454, 457, 459, 485, 490, 517, 518, 529, 532, 541, 543, 549], "5555": 545, "56": [26, 30, 32, 39, 41, 120, 169, 171, 179, 236, 268, 270, 276, 281, 286, 288, 291, 295, 301, 311, 313, 315, 317, 437, 442, 444, 446, 450, 454, 457, 459, 485, 517, 518, 532, 543], "57": [26, 30, 32, 38, 39, 41, 169, 171, 236, 247, 253, 255, 267, 268, 270, 274, 276, 281, 286, 288, 291, 299, 301, 307, 311, 313, 315, 317, 437, 442, 446, 450, 454, 459, 485, 490, 517, 518, 529, 532, 543], "58": [30, 32, 39, 41, 120, 126, 169, 171, 179, 236, 245, 253, 255, 267, 270, 276, 281, 286, 291, 295, 301, 303, 307, 313, 315, 317, 437, 442, 457, 459, 485, 490, 517, 518, 532, 543], "59": [30, 34, 38, 39, 169, 171, 177, 245, 255, 257, 267, 268, 270, 281, 286, 288, 291, 301, 303, 307, 311, 313, 315, 317, 437, 442, 446, 450, 454, 457, 459, 483, 485, 517, 518, 529, 532, 543], "6": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 55, 75, 77, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 320, 326, 330, 334, 377, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 490, 494, 517, 518, 529, 532, 541, 543], "60": [30, 32, 34, 38, 39, 41, 126, 169, 171, 177, 179, 236, 241, 243, 245, 247, 253, 257, 267, 268, 270, 276, 281, 286, 288, 291, 301, 303, 307, 309, 313, 315, 320, 437, 442, 444, 446, 450, 459, 483, 485, 487, 488, 517, 518, 529, 532, 543], "61": [30, 34, 39, 169, 177, 179, 236, 241, 247, 253, 255, 257, 267, 268, 270, 274, 278, 281, 286, 288, 291, 301, 303, 307, 309, 313, 315, 317, 437, 444, 454, 457, 485, 490, 517, 518, 532, 543], "62": [30, 38, 39, 169, 171, 177, 179, 236, 241, 243, 245, 247, 253, 257, 268, 270, 278, 281, 288, 291, 297, 301, 303, 305, 307, 309, 313, 315, 437, 442, 444, 446, 450, 454, 457, 459, 483, 485, 490, 517, 518, 529, 532, 543], "63": [30, 34, 38, 39, 169, 171, 177, 179, 241, 243, 245, 249, 257, 267, 268, 270, 274, 278, 281, 286, 291, 297, 301, 303, 305, 307, 309, 311, 313, 315, 437, 444, 446, 450, 454, 459, 483, 485, 518, 529, 532, 543], "64": [26, 30, 38, 39, 126, 169, 171, 177, 179, 236, 241, 243, 245, 247, 249, 253, 257, 267, 268, 270, 272, 276, 278, 281, 286, 288, 291, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 437, 444, 450, 454, 457, 483, 485, 517, 518, 532, 543], "64485362793663": 258, "65": [30, 34, 39, 124, 126, 169, 171, 177, 236, 241, 245, 249, 253, 257, 267, 268, 270, 276, 278, 281, 286, 288, 291, 295, 297, 299, 301, 303, 305, 311, 313, 315, 317, 437, 444, 446, 450, 454, 457, 459, 485, 490, 517, 518, 529, 532, 543, 549], "66": [38, 39, 169, 171, 177, 179, 236, 241, 243, 245, 251, 257, 267, 268, 270, 276, 278, 281, 286, 288, 291, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 442, 444, 450, 454, 459, 483, 485, 490, 518, 529, 532, 543], "67": [30, 34, 38, 39, 126, 169, 171, 177, 236, 241, 245, 249, 253, 255, 257, 267, 268, 270, 276, 278, 281, 286, 288, 291, 295, 297, 301, 303, 305, 313, 317, 437, 442, 444, 450, 454, 457, 483, 485, 517, 518, 543], "68": [39, 126, 169, 171, 177, 236, 241, 243, 245, 249, 253, 255, 257, 267, 268, 270, 274, 276, 278, 281, 288, 291, 295, 297, 299, 301, 303, 305, 311, 313, 437, 442, 450, 454, 457, 459, 483, 485, 517, 518, 529, 532], "69": [34, 38, 39, 126, 169, 171, 177, 236, 241, 245, 249, 255, 257, 267, 268, 270, 274, 278, 281, 286, 288, 291, 295, 297, 301, 303, 311, 313, 317, 437, 442, 444, 450, 459, 485, 517, 518, 529, 532, 543], "6x6": [258, 527, 542, 543], "7": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "70": [26, 38, 39, 42, 169, 177, 179, 241, 243, 249, 253, 257, 268, 270, 278, 281, 286, 288, 291, 295, 297, 301, 303, 313, 437, 442, 444, 446, 450, 454, 457, 483, 485, 490, 517, 518, 529, 532], "71": [34, 39, 120, 126, 169, 177, 179, 236, 241, 245, 249, 253, 255, 257, 267, 268, 270, 274, 278, 281, 286, 288, 291, 295, 297, 303, 307, 309, 311, 313, 437, 442, 446, 450, 457, 459, 483, 485, 490, 517, 518], "713": [42, 495, 545], "72": [34, 38, 39, 120, 169, 177, 179, 236, 241, 243, 249, 257, 267, 268, 270, 274, 278, 281, 286, 288, 291, 295, 297, 301, 303, 307, 309, 311, 313, 437, 439, 442, 444, 450, 459, 483, 485, 517, 518, 532], "720": [42, 495, 545], "73": [26, 38, 39, 120, 169, 177, 179, 236, 241, 249, 253, 257, 267, 268, 270, 274, 281, 286, 288, 291, 295, 301, 307, 309, 313, 317, 437, 439, 442, 444, 446, 450, 457, 459, 483, 485, 517, 518, 532], "74": [26, 32, 34, 39, 120, 124, 169, 177, 179, 236, 241, 243, 249, 253, 257, 267, 268, 278, 281, 286, 288, 291, 295, 297, 299, 301, 303, 307, 309, 311, 313, 317, 437, 439, 442, 444, 446, 454, 457, 483, 485, 490, 518, 529, 549], "75": [26, 32, 38, 39, 41, 120, 169, 177, 236, 241, 243, 245, 255, 267, 268, 270, 272, 274, 281, 286, 288, 291, 293, 295, 299, 301, 303, 307, 309, 311, 313, 437, 439, 442, 444, 454, 459, 483, 485, 490, 517, 518, 529, 532, 549], "76": [26, 32, 38, 39, 41, 120, 169, 177, 241, 245, 249, 253, 255, 257, 267, 268, 281, 286, 288, 291, 295, 299, 301, 309, 313, 317, 437, 439, 442, 446, 454, 457, 459, 483, 485, 517, 518, 529], "77": [26, 39, 41, 120, 169, 177, 236, 241, 243, 245, 247, 253, 255, 257, 267, 278, 281, 286, 288, 291, 295, 299, 301, 303, 307, 309, 311, 437, 439, 442, 444, 454, 457, 483, 485, 490, 517, 518], "78": [26, 32, 38, 39, 120, 169, 177, 236, 241, 245, 247, 255, 257, 267, 270, 274, 278, 288, 291, 295, 299, 301, 303, 309, 311, 439, 442, 444, 454, 459, 483, 485, 490, 517, 518, 529, 543], "79": [26, 30, 34, 38, 39, 41, 120, 126, 169, 177, 236, 241, 245, 247, 249, 253, 270, 274, 278, 281, 286, 288, 291, 295, 297, 301, 311, 313, 437, 439, 442, 444, 446, 457, 459, 485, 517, 518, 529, 532, 543], "8": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 104, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 549], "80": [26, 30, 32, 34, 39, 120, 126, 169, 177, 236, 241, 245, 249, 253, 255, 257, 267, 268, 270, 278, 281, 286, 288, 291, 297, 299, 301, 303, 311, 317, 439, 442, 446, 457, 483, 485, 490, 518, 532, 543], "81": [26, 30, 34, 38, 39, 41, 120, 126, 169, 177, 236, 241, 245, 247, 249, 257, 268, 270, 274, 278, 281, 286, 288, 295, 297, 301, 303, 311, 317, 439, 442, 444, 457, 459, 483, 485, 490, 517, 518, 529, 532, 543], "82": [26, 30, 32, 34, 38, 39, 120, 124, 126, 169, 177, 236, 241, 243, 245, 249, 253, 257, 267, 268, 270, 278, 286, 288, 291, 295, 297, 303, 307, 311, 317, 439, 442, 444, 446, 459, 483, 485, 517, 518, 529, 543], "83": [26, 30, 39, 41, 120, 124, 126, 169, 177, 241, 243, 245, 247, 249, 253, 268, 270, 274, 281, 286, 288, 291, 297, 301, 307, 311, 317, 439, 442, 444, 446, 457, 483, 485, 490, 518, 532, 543], "84": [26, 30, 32, 34, 38, 39, 120, 124, 126, 169, 177, 236, 241, 243, 245, 249, 253, 255, 257, 267, 268, 270, 272, 274, 278, 281, 286, 288, 291, 295, 297, 301, 303, 307, 311, 317, 439, 442, 446, 457, 459, 483, 485, 490, 517, 518, 529, 532, 543], "85": [26, 30, 38, 39, 41, 120, 126, 169, 177, 236, 241, 245, 247, 253, 255, 257, 268, 270, 272, 278, 288, 291, 295, 297, 301, 303, 307, 317, 439, 442, 444, 446, 459, 483, 485, 490, 517, 518, 529, 532, 543], "86": [26, 30, 32, 38, 39, 42, 120, 124, 169, 177, 236, 241, 243, 245, 253, 267, 268, 270, 272, 274, 278, 281, 286, 288, 291, 297, 299, 301, 307, 311, 437, 439, 442, 444, 446, 457, 483, 485, 517, 518, 532, 543], "87": [26, 32, 38, 39, 41, 120, 126, 169, 177, 236, 241, 245, 247, 255, 257, 267, 268, 270, 274, 278, 288, 291, 295, 297, 299, 301, 303, 307, 311, 313, 437, 439, 442, 444, 457, 459, 483, 485, 517, 518, 529, 532, 543, 549], "88": [26, 38, 39, 120, 126, 169, 177, 236, 241, 245, 249, 253, 257, 267, 268, 270, 272, 278, 288, 291, 295, 297, 299, 301, 303, 307, 311, 313, 437, 439, 442, 446, 459, 483, 485, 490, 517, 518, 529, 532, 543], "889486": 545, "89": [26, 30, 32, 34, 38, 39, 41, 42, 120, 169, 177, 241, 245, 247, 249, 253, 257, 267, 268, 270, 272, 274, 278, 288, 291, 297, 299, 303, 311, 313, 437, 439, 442, 444, 446, 457, 485, 490, 517, 518, 532, 543], "9": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "90": [26, 34, 38, 39, 120, 124, 126, 169, 177, 236, 241, 245, 247, 249, 257, 267, 268, 270, 278, 288, 291, 295, 301, 303, 307, 311, 313, 342, 437, 439, 442, 444, 457, 459, 483, 485, 517, 518, 529, 532], "900": 258, "91": [26, 34, 38, 39, 41, 120, 124, 126, 169, 177, 236, 243, 245, 249, 253, 257, 268, 270, 272, 278, 288, 291, 295, 297, 299, 301, 303, 307, 311, 313, 437, 439, 442, 444, 446, 459, 483, 485, 490, 517, 518, 529, 532, 543], "92": [26, 34, 38, 41, 120, 124, 169, 236, 243, 245, 247, 249, 253, 268, 270, 278, 281, 301, 303, 307, 311, 313, 437, 439, 442, 444, 446, 457, 483, 485, 490, 517, 518, 532], "93": [26, 34, 38, 39, 124, 126, 169, 177, 236, 243, 245, 249, 257, 268, 270, 274, 278, 281, 288, 291, 295, 303, 307, 311, 313, 439, 442, 444, 457, 459, 485, 517, 518, 529, 532], "94": [26, 34, 38, 39, 41, 120, 124, 126, 169, 236, 243, 249, 253, 255, 268, 270, 274, 278, 281, 291, 295, 301, 303, 307, 311, 313, 442, 446, 483, 485, 490, 517, 518, 529, 532], "95": [32, 34, 38, 41, 124, 169, 236, 243, 253, 255, 268, 270, 278, 281, 288, 291, 295, 299, 301, 307, 313, 437, 439, 442, 444, 446, 457, 483, 485, 490, 517, 518, 532], "950": 258, "96": [26, 32, 34, 38, 126, 169, 236, 241, 243, 249, 255, 268, 272, 274, 278, 281, 291, 295, 299, 301, 303, 307, 311, 313, 442, 444, 457, 459, 485, 490, 517, 518, 529], "9658": [27, 233, 265], "9660": [27, 182, 265, 460, 472, 479, 491, 506, 513, 525], "9670": [29, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 119, 173, 176, 178, 258, 269, 275, 277, 282, 290, 294, 300, 302, 306, 308, 312, 326, 334, 336, 338, 340, 342, 344, 346, 350, 354, 368, 380, 390, 392, 394, 399, 401, 406, 410, 412, 414, 416, 420, 422, 424, 428, 430, 436, 438, 443, 453, 462, 464, 466, 496, 498, 500, 520, 527, 531, 538], "97": [34, 38, 41, 124, 169, 236, 241, 243, 253, 255, 268, 270, 272, 278, 281, 291, 295, 297, 299, 301, 303, 307, 311, 313, 439, 446, 459, 483, 485, 490, 518, 529, 532, 543, 549], "972": 532, "9780262201629": 545, "98": [32, 34, 38, 236, 241, 243, 253, 255, 257, 268, 270, 272, 278, 281, 288, 291, 295, 297, 299, 301, 311, 444, 446, 457, 483, 485, 490, 518, 529, 543], "99": [30, 34, 38, 41, 236, 241, 243, 247, 255, 257, 268, 270, 272, 278, 281, 291, 295, 297, 299, 303, 313, 444, 457, 459, 483, 485, 487, 488, 518, 529, 543], "990": 258, "999": [258, 438, 439], "A": [4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 71, 102, 118, 119, 232, 233, 234, 235, 241, 258, 280, 314, 358, 401, 455, 468, 478, 487, 488, 502, 512, 514, 549], "AND": [40, 41, 120, 258, 286, 403], "AS": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "And": 344, "As": 3, "But": [1, 295], "For": [0, 3, 4, 5, 102, 119, 120, 253, 255, 258, 354, 548, 549], "If": [0, 5, 30, 43, 65, 107, 120, 258, 269, 295, 401, 416, 422, 424, 436, 439, 446, 462, 464, 466, 496, 527, 532, 548, 549], "In": [4, 6, 29, 42, 79, 100, 495, 532, 545, 549], "It": [1, 4, 43, 45, 47, 49, 51, 53, 55, 65, 71, 77, 92, 100, 102, 104, 107, 234, 258, 306, 336, 446, 480, 485, 486, 487, 488, 496, 514, 533, 549], "Its": [65, 258, 410, 411, 454, 455], "NOT": [286, 403], "No": [65, 270, 462, 464], "Not": [247, 295], "OF": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "OR": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 40, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 403, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "On": 6, "One": 548, "Ones": [255, 299], "That": [65, 98, 548], "The": [2, 3, 4, 5, 6, 18, 19, 29, 31, 33, 34, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 119, 120, 123, 125, 168, 169, 170, 173, 176, 178, 180, 232, 235, 238, 240, 242, 243, 244, 246, 248, 252, 254, 256, 258, 268, 269, 271, 273, 275, 277, 280, 282, 287, 290, 294, 295, 296, 298, 300, 302, 306, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 436, 438, 443, 445, 446, 449, 453, 455, 462, 464, 466, 478, 485, 487, 488, 489, 493, 496, 498, 500, 512, 516, 520, 527, 528, 531, 533, 535, 537, 538, 548, 549], "Then": [5, 16, 21], "There": [1, 6, 446, 532, 549], "These": [2, 13, 17, 300], "To": [2, 3, 4, 274, 302, 548, 549], "Will": [112, 344], "With": 176, "_": [120, 437, 488], "_angular_resolut": [532, 538, 539], "_angular_resolutionresolut": 538, "_linear_resolut": [532, 538, 539], "_linear_resolutionresolut": 538, "_model": 4, "_t": 4, "aa": 487, "ab": [126, 270, 274, 278, 442, 532, 549], "abil": 104, "abl": [4, 22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542], "abort": [462, 464, 466], "about": [12, 119, 120, 126, 255, 258, 532, 549], "abov": [4, 92, 107, 232, 306, 342, 439, 446, 478, 512, 549], "absolut": [5, 306], "abstract": [3, 36, 123, 124, 151, 158, 182, 247, 248, 249, 257, 271, 272, 281, 283, 287, 298, 311, 450], "academ": [0, 1], "accept": [92, 107, 306], "access": [3, 13, 15, 27, 29, 32, 34, 36, 41, 65, 71, 120, 126, 151, 154, 168, 169, 171, 176, 177, 182, 232, 233, 235, 236, 243, 247, 258, 265, 268, 274, 281, 283, 287, 288, 291, 295, 303, 313, 315, 406, 420, 428, 439, 459, 464, 478, 512], "accord": [19, 32, 43, 258, 267, 336, 488, 496, 549], "accordingli": [43, 496], "account": 258, "accumul": [119, 120, 170, 171, 176, 177, 269, 270, 342, 354, 442, 549], "acknowledg": 549, "acquir": 6, "action": [2, 3, 16, 26, 35, 36, 43, 67, 68, 94, 95, 102, 118, 126, 150, 151, 178, 179, 182, 206, 220, 223, 233, 234, 274, 275, 276, 277, 278, 285, 315, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 390, 394, 399, 455, 490, 532, 549], "action_closur": [30, 269, 270, 344], "actioncontrol": [67, 94], "actionsact": 127, "actionsinclud": [134, 135], "activ": [457, 462, 466, 483, 485, 488], "actual": [107, 487, 488], "actuat": 549, "ad": [17, 104, 258, 485, 487, 488, 533], "adapt": [11, 26, 27, 29, 42, 43, 233, 258, 265, 295, 318, 410, 412, 414, 420, 438, 453, 454, 455, 489, 490, 491, 494, 495, 496, 504, 506, 513, 514, 520, 525, 533, 545, 549], "adaptor": [23, 27, 29, 30, 149, 159, 173, 182, 233, 234, 265, 269, 270, 282, 290, 291, 294, 295, 300, 301, 302, 303, 344, 346, 348, 350, 352, 354, 356, 412, 414, 418, 422, 424, 426, 436, 437, 438, 439, 446, 452, 453, 454, 455, 549], "adaptor_bas": 295, "add": [39, 102, 107, 120, 446, 532, 549], "add_execut": 549, "addit": [20, 34, 243, 258, 418, 500, 549], "addition": 65, "addressof": [71, 236, 295, 303], "adequ": 549, "adjac": [120, 342], "adjacent_grid_cells_": 120, "adjust": [43, 496, 549], "adl": [18, 258, 406, 428, 519, 525, 532, 542, 543], "adopt": [1, 2, 3, 5], "advanc": [41, 295, 446], "advantag": 4, "affect": 3, "afford": [3, 15, 486], "after": [2, 4, 43, 65, 71, 104, 177, 234, 236, 302, 416, 487, 488, 496, 549], "again": [32, 241, 487, 488, 490, 533], "against": [79, 81, 241, 306], "agent": [42, 495, 545], "aggreg": [3, 41, 65, 487, 488, 549], "agnost": [487, 488], "agre": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "aid": 514, "aka": [17, 59], "al": 258, "algebra": [177, 258, 455], "algorithm": [3, 4, 6, 27, 30, 31, 32, 35, 36, 43, 59, 61, 63, 69, 96, 99, 104, 112, 114, 116, 151, 182, 187, 196, 208, 210, 222, 225, 233, 240, 241, 246, 247, 258, 265, 269, 270, 275, 276, 277, 278, 290, 291, 295, 300, 301, 302, 303, 318, 324, 342, 344, 346, 348, 350, 352, 354, 356, 358, 396, 405, 412, 416, 422, 424, 426, 437, 439, 445, 446, 454, 455, 456, 458, 471, 472, 482, 483, 489, 494, 496, 504, 506, 514, 531, 532, 549], "algorithm_": 297, "algorithma": 98, "algorithmbeam_model": 144, "algorithminclud": [136, 137, 138], "algorithmon_effective_size_drop": 142, "algorithmrai": 98, "alia": [40, 107, 125, 258, 281, 298, 310, 443, 444, 459, 464], "alias": 313, "align": [84, 88], "alignedbox2d": [27, 85, 118, 204, 206, 218, 220, 233, 256, 257, 258, 265], "alignedbox3d": [27, 89, 118, 204, 206, 218, 220, 233, 238, 239, 241, 256, 257, 258, 265], "alik": 5, "aliv": 549, "all": [4, 5, 6, 20, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 151, 177, 182, 184, 186, 187, 188, 189, 190, 193, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 232, 233, 234, 242, 243, 246, 247, 250, 258, 259, 262, 265, 266, 268, 279, 280, 281, 292, 295, 296, 297, 303, 304, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 368, 369, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 439, 440, 446, 447, 453, 454, 461, 462, 463, 464, 465, 466, 467, 472, 473, 474, 478, 482, 484, 492, 493, 496, 497, 498, 499, 500, 501, 504, 506, 507, 508, 512, 520, 522, 524, 525, 526, 530, 532, 533, 534, 535, 536, 538, 539, 548, 549], "all_quaternion": 177, "alloc": [3, 27, 65, 107, 109, 172, 233, 255, 258, 265, 445, 446], "allocator_typ": [41, 65, 66, 107, 108, 184, 226, 446], "allocator_typealloc": [41, 446], "allocator_typevoid": [41, 446], "allof": 307, "allow": [14, 25, 27, 92, 120, 156, 176, 182, 233, 258, 265, 269, 312, 313, 405, 455, 485, 487, 488, 490, 498, 533], "almost": 549, "almost_equal_to": [502, 507, 509, 511, 513, 531, 532, 538, 539], "almost_equal_toalmost_equal_to": 532, "almost_equal_tostd": 532, "alon": [531, 532], "along": [13, 98, 297, 490, 533, 549], "alpha": [69, 70, 181, 531, 532], "alpha1": [326, 340, 485, 488], "alpha2": [326, 340, 485, 488], "alpha3": [326, 340, 485, 488], "alpha4": [326, 340, 485, 488], "alpha5": [340, 485, 488], "alpha_": 181, "alpha_fast": [26, 104, 105, 184, 229, 318, 442, 490, 507, 511, 533], "alpha_fastbeluga": 319, "alpha_fastbeluga_ro": 534, "alpha_fastdecai": 104, "alpha_fastdoubl": [26, 490], "alpha_fastexponenti": 490, "alpha_fastus": 26, "alpha_slow": [26, 104, 105, 184, 229, 318, 442, 490, 507, 511, 533], "alpha_slowbeluga": 319, "alpha_slowbeluga_ro": 534, "alpha_slowdecai": 104, "alpha_slowdoubl": [26, 490], "alpha_slowexponenti": 490, "alpha_slowus": 26, "alphabet": [233, 479, 513], "alphahuetorgba": [531, 532], "alphahuetorgbabeluga_ro": 532, "alphath": 69, "alreadi": [6, 34, 120, 243, 247, 258, 289], "also": [5, 16, 17, 19, 21, 43, 55, 77, 120, 302, 326, 340, 350, 462, 464, 466, 487, 488, 496, 548, 549], "altern": [5, 6, 18], "alwai": [29, 41, 258, 401, 422, 433, 436, 453], "always_reset_initial_pos": [487, 488], "amcl": [1, 6, 11, 26, 27, 32, 44, 118, 184, 193, 194, 199, 202, 207, 211, 215, 221, 227, 233, 247, 258, 265, 318, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 491, 493, 494, 497, 502, 504, 506, 507, 509, 510, 513, 514, 517, 518, 520, 525, 529, 532, 533, 549], "amcl_cor": [43, 182, 318, 482, 483], "amcl_nod": [462, 471, 472, 487, 488], "amcl_nodelet": [464, 471, 472], "amcl_pos": 487, "amclamcl": [26, 490], "amclconfig": [458, 459, 464, 465], "amclconfigserv": [459, 464, 465, 473, 476], "amclconfigserverdynamic_reconfigur": 459, "amclconfigservertyp": 459, "amcldefinit": 490, "amclimplement": 26, "amclinlin": 497, "amclnod": [456, 457, 463, 468, 473, 475, 477, 480], "amclnode2d": [457, 479], "amclnodeamclnod": 457, "amclnodeexplicit": 463, "amclnodelet": [458, 459, 465, 468, 473, 475, 476, 477, 480], "amclnodelet2d": [459, 479], "amclnodeletmutableprotect": 465, "amclnodeletprotect": 465, "amclnodeletprotectedstat": 465, "amclnodeprotect": 463, "amclnodeprotectedstat": 463, "amclparam": [26, 43, 44, 118, 184, 216, 218, 222, 224, 227, 229, 258, 319, 489, 490, 496, 497, 502, 507, 511, 520, 534], "amclparamsstruct": [26, 233, 490, 513], "american": 42, "among": [548, 549], "amount": [312, 401], "amp": [12, 26, 27, 30, 32, 34, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 124, 126, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 206, 209, 220, 222, 223, 224, 226, 233, 236, 241, 243, 245, 247, 249, 253, 254, 255, 256, 257, 258, 259, 261, 265, 267, 268, 270, 272, 274, 276, 278, 286, 288, 289, 291, 295, 297, 299, 301, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 324, 325, 336, 337, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 437, 439, 442, 443, 444, 445, 446, 450, 454, 457, 459, 462, 463, 464, 465, 466, 467, 483, 485, 490, 496, 497, 498, 500, 501, 517, 518, 519, 520, 527, 529, 531, 532, 538, 539, 540, 541, 542, 543], "amplitud": 247, "an": [2, 3, 4, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 40, 41, 43, 53, 55, 61, 65, 69, 71, 77, 79, 90, 92, 94, 98, 104, 107, 114, 116, 120, 122, 124, 126, 150, 156, 161, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 232, 233, 234, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 265, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 302, 303, 305, 306, 307, 309, 311, 313, 315, 317, 334, 340, 344, 346, 348, 361, 366, 388, 390, 394, 406, 420, 422, 428, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 450, 452, 454, 457, 459, 462, 464, 466, 478, 483, 485, 487, 488, 490, 494, 496, 512, 517, 518, 519, 527, 529, 531, 532, 535, 540, 541, 542, 543, 548, 549], "analyz": 41, "andino": [6, 11], "andom_interspers": [295, 412], "angl": [14, 34, 47, 243, 245, 258, 277, 399, 498, 499, 507, 509, 517], "angle_incr": 517, "angle_min": 517, "anglesauto": 517, "anglez": 12, "angular": [26, 120, 318, 342], "angular_clustering_resolut": [112, 113, 313], "angular_clustering_resolutionclust": 112, "angular_hash_resolut": [120, 184, 229, 342], "angular_hash_resolutionbeluga": 343, "angular_hash_resolutionclust": 120, "angular_hash_resolutiondoubl": 120, "angular_resolut": [507, 511, 520, 531, 532, 538], "angular_resolutionangular": 520, "angular_resolutionbeluga_ro": 539, "angular_resolutionconst": 532, "angular_resolutionresolut": 532, "ani": [2, 4, 6, 12, 19, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 43, 71, 98, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 233, 235, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 265, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 302, 303, 305, 307, 309, 311, 313, 315, 317, 318, 342, 401, 416, 418, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 462, 464, 466, 483, 485, 487, 488, 490, 494, 517, 518, 529, 532, 541, 543, 549], "anim": 549, "anoth": [16, 41, 65, 71, 79, 232, 236, 255, 478, 512], "any_of": 549, "any_polici": [26, 258, 259, 263, 286, 490], "any_view": 26, "anyth": 1, "apach": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "apertur": [34, 243], "api": [2, 26, 28, 35, 100, 151, 177, 182, 185, 188, 200, 234, 262, 266, 461, 474, 480, 492, 493, 494, 504, 506, 508, 514, 524, 526, 532, 540, 542], "append": [29, 107], "appli": [3, 43, 173, 234, 243, 346, 350, 354, 401, 446, 487, 488, 496, 548, 549], "applic": [1, 3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 455, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "approach": [6, 253], "appropri": [2, 3, 258], "approxim": [2, 4, 253, 258, 342, 487, 488, 533], "apt": 5, "ar": [1, 2, 4, 5, 6, 13, 15, 17, 18, 19, 27, 29, 34, 41, 43, 51, 55, 57, 65, 75, 77, 79, 81, 90, 96, 98, 102, 107, 119, 120, 177, 232, 234, 243, 258, 268, 291, 300, 338, 350, 422, 433, 436, 437, 446, 453, 460, 478, 487, 488, 491, 496, 512, 532, 545, 548, 549], "arg": [5, 27, 34, 39, 57, 118, 225, 226, 233, 258, 265, 286, 364, 401, 402, 443, 444], "argument": [6, 19, 39, 43, 92, 98, 107, 258, 270, 291, 301, 302, 303, 306, 346, 348, 350, 352, 354, 356, 401, 412, 414, 418], "arithmet": [19, 21, 27, 37, 38, 59, 92, 233, 258, 265], "around": [90, 102, 247, 258, 302, 334, 487, 488, 490, 533, 548], "arra": [41, 65], "arrai": [26, 27, 38, 40, 41, 65, 114, 116, 117, 118, 120, 122, 153, 173, 182, 206, 209, 220, 222, 224, 226, 233, 234, 255, 258, 265, 268, 299, 312, 313, 433, 435, 444, 455, 500, 520, 527, 529, 542, 543], "arrayarrai": 116, "arrow": [63, 232, 478, 488, 512, 532], "arrow_bodi": 532, "arrow_body_bas": 532, "arrow_head": 532, "arrow_head_bas": 532, "arrow_head_left_corn": 532, "arrow_head_right_corn": 532, "arrow_head_tip": 532, "as_common_tuple_indirect_fn": [118, 206, 220, 411, 453, 454], "as_common_tuple_indirect_fninlin": 411, "as_common_tuple_indirect_fnutil": [233, 454], "as_const": 183, "asap": 120, "asdiagon": 255, "assert": [120, 177, 247, 257, 268, 303, 311, 442, 450, 454, 517], "assert_that": 306, "assign": [4, 22, 23, 26, 27, 39, 59, 65, 79, 107, 108, 120, 159, 182, 184, 194, 233, 234, 255, 265, 344, 446, 490, 520, 531, 532, 549], "assign_clust": 120, "assign_fn": [29, 30, 118, 206, 220, 223, 345], "assign_fnfriend": 345, "assign_fnimplement": [30, 233], "assign_fninlin": 345, "assign_particle_cloud": [520, 522, 523, 531, 532], "assign_particle_cloudbeluga_ro": 532, "assign_rang": [107, 108, 184, 194, 446], "assign_rangeconstexpr": 446, "assignconstexpr": [30, 446], "assigndefinit": 30, "assoaci": [32, 320], "associ": [32, 42, 79, 100, 119, 255, 311, 320], "assum": [6, 34, 243, 258, 302, 303, 336, 406, 416, 424, 439, 487, 488, 531, 535], "assumpt": 549, "atan": 532, "atan2": [34, 126, 243, 274], "atconstexpr": 41, "attach": [487, 488], "attribut": [290, 318, 320, 322, 326, 328, 330, 332, 334, 336, 338, 340, 342, 358, 380, 392, 412, 462, 464, 466, 533, 535, 538], "auto": [26, 30, 32, 34, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 67, 75, 77, 81, 90, 94, 96, 98, 100, 102, 107, 110, 119, 120, 124, 126, 168, 169, 170, 171, 173, 174, 177, 179, 183, 241, 243, 245, 247, 249, 255, 258, 268, 270, 272, 274, 276, 278, 281, 282, 283, 286, 288, 291, 295, 297, 299, 301, 303, 306, 307, 309, 311, 313, 315, 344, 346, 348, 350, 352, 354, 356, 368, 388, 392, 394, 401, 403, 406, 410, 412, 416, 418, 422, 424, 426, 428, 437, 438, 439, 443, 444, 446, 454, 457, 459, 462, 464, 466, 483, 485, 490, 496, 498, 500, 517, 518, 529, 532, 543, 549], "autocovari": 177, "automat": 258, "autonom": [42, 495, 545], "autostart": [485, 488], "autostart_callback": [457, 462, 463, 466, 467, 473, 475, 483], "autostart_callbackvoid": [457, 483], "autostart_delai": [485, 488], "autostart_timer_": [457, 462, 466, 473, 477, 483], "autostart_timer_beluga_amcl": [463, 467], "autostart_timer_rclcpp": [457, 483], "autostart_timer_tim": [457, 483], "auxiliar": [162, 238], "avail": [5, 6, 65, 86, 258, 487, 488], "averag": [104, 176, 177, 258, 358, 485, 487, 488, 490, 533], "average_quat": 177, "average_weight": 442, "avoid": [3, 41, 104, 313, 444, 485, 487, 488, 490, 533, 549], "axi": [12, 13, 45, 51, 84, 88, 112, 114, 116, 126, 249, 258, 313, 485, 490, 533], "a\u017eman": 39, "b": [28, 38, 39, 40, 41, 118, 185, 186, 188, 195, 200, 229, 241, 258, 259, 473, 477, 532, 538, 539], "ba": 490, "back": [41, 65, 66, 186, 195, 258, 446], "back_insert": 446, "backconstexpr": 41, "backward": [126, 274], "bad": [446, 487, 488, 533], "bag": 6, "bar": 549, "bare": 3, "base": [4, 25, 26, 27, 33, 39, 43, 45, 47, 49, 51, 53, 86, 96, 104, 112, 119, 120, 123, 124, 150, 156, 177, 178, 182, 233, 234, 242, 244, 245, 248, 249, 257, 258, 265, 271, 272, 274, 275, 276, 277, 278, 285, 286, 290, 294, 298, 299, 311, 361, 394, 396, 399, 403, 438, 439, 442, 444, 446, 450, 455, 485, 486, 487, 488, 490, 496, 531, 532, 549], "base_footprint": [485, 487, 488], "base_frame_id": [485, 487, 488], "base_pose_in_odom": [490, 496, 497], "base_pose_in_odombas": 496, "basedensegrid2": [46, 49, 50, 51, 52, 110, 111, 118, 123, 124, 187, 189, 196, 197, 205, 219, 233, 249, 258, 500, 501, 513], "basedensegrid2dens": [124, 249], "baselaserscan": [2, 48, 118, 207, 221, 233, 244, 245, 258, 498, 499, 513, 514, 517], "baselaserscanlas": 245, "baselineargrid2": [50, 51, 52, 110, 111, 118, 187, 189, 196, 197, 202, 205, 215, 219, 233, 248, 249, 258, 272, 450, 500, 501, 513], "baselineargrid2linear": [249, 272, 450], "baseoccupancygrid2": [2, 52, 118, 187, 191, 193, 196, 199, 206, 220, 233, 256, 257, 258, 271, 272, 500, 501, 513, 514, 529], "baseoccupancygrid2occup": [257, 272], "baseregulargrid": [45, 46, 49, 50, 51, 52, 54, 100, 101, 110, 111, 118, 187, 196, 233, 258, 298, 299, 311, 500, 501, 513], "baseregulargrid2": [124, 258, 259, 263, 298, 299], "baseregulargrid3": [258, 259, 263, 298, 299], "baseregulargridregularli": [124, 299, 311], "bash": [5, 548], "basi": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 455, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "basic": [73, 240, 258], "bay": 4, "bayesian": [1, 4, 42], "beam": [14, 31, 32, 55, 75, 157, 182, 233, 234, 243, 258, 305, 320, 455, 485, 487, 488, 498], "beam_bear": 32, "beam_max_rang": [32, 186, 229, 320], "beam_max_rangebeluga": 321, "beam_max_rangedoubl": 32, "beam_max_rangemaximum": 32, "beam_model": [55, 157, 182, 304, 305, 320], "beam_skip_dist": 488, "beam_skip_error_threshold": 488, "beam_skip_threshold": 488, "beammodelparam": [31, 32, 55, 75, 118, 186, 217, 224, 229, 231, 258, 321], "beammodelparamparamet": [32, 233], "beamsensormodel": [21, 27, 31, 32, 56, 77, 118, 186, 195, 206, 211, 218, 220, 221, 224, 226, 227, 230, 233, 234, 258, 265, 320, 490, 496], "beamsensormodelbeam": 32, "beamsensormodelbeamsensormodel": 32, "bear": [27, 32, 33, 34, 57, 73, 75, 98, 99, 157, 182, 233, 234, 238, 239, 241, 243, 258, 265, 297, 305, 322, 328, 330, 332, 455], "bearing_error": [34, 243], "bearing_error_prob": [34, 243], "bearing_sensor_model": [57, 157, 182, 304, 305, 322], "bearingdirect": 98, "bearingmodelparam": [33, 34, 57, 118, 224, 229, 258, 323], "bearingmodelparamparamet": [34, 233], "bearingsensormodel": [21, 27, 33, 34, 58, 118, 186, 195, 206, 211, 218, 220, 221, 224, 226, 227, 230, 233, 234, 258, 265, 322], "bearingsensormodel2d": [33, 34, 258, 259, 263], "bearingsensormodel3d": [33, 34, 258, 259, 263], "bearingsensormodelbearingsensormodel": 34, "bearingsensormodelgener": 34, "becam": 1, "becaus": [1, 29, 55, 77, 107, 232, 243, 247, 268, 437, 478, 498, 512, 532, 549], "becom": 1, "been": [3, 75, 278, 396, 399, 488], "befor": [5, 71, 120, 236, 306, 443, 446, 485, 487, 488, 490, 532, 533, 549], "begin": [4, 38, 41, 61, 62, 65, 66, 107, 108, 120, 177, 186, 195, 241, 270, 291, 301, 303, 446, 549], "begin_adaptor": 295, "begin_cursor": 303, "beginauto": 38, "beginconstexpr": [41, 446], "behav": [40, 258], "behavior": [55, 65, 71, 107], "being": [4, 19, 34, 65, 241, 258, 334, 438, 439], "bel": [4, 549], "belief": [4, 258], "belong": [119, 120, 258, 259, 522], "below": [234, 258, 275, 488], "beluga": [0, 1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 152, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 259, 260, 261, 262, 263, 264, 265, 266, 279, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 481, 484, 486, 487, 488, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 515, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 533, 534, 535, 536, 537, 538, 539, 544], "beluga_3d_embedding_hpp": 12, "beluga_actions_assign_hpp": 30, "beluga_actions_hpp": 23, "beluga_actions_normalize_hpp": 270, "beluga_actions_propagate_hpp": 291, "beluga_actions_reweight_hpp": 301, "beluga_algorithm_amcl_core_hpp": 26, "beluga_algorithm_cluster_based_estimation_hpp": 120, "beluga_algorithm_distance_map_hpp": 169, "beluga_algorithm_effective_sample_size_hpp": 171, "beluga_algorithm_estimation_hpp": 177, "beluga_algorithm_exponential_filter_hpp": 181, "beluga_algorithm_hpp": 25, "beluga_algorithm_raycasting_bresenham_hpp": 38, "beluga_algorithm_raycasting_hpp": 297, "beluga_algorithm_spatial_hash_hpp": 313, "beluga_algorithm_thrun_recovery_probability_estimator_hpp": 442, "beluga_amcl": [5, 462, 463, 464, 465, 466, 467, 468, 472, 473, 475, 476, 477, 480, 548], "beluga_amcl_amcl_node_hpp": 457, "beluga_amcl_amcl_nodelet_hpp": 459, "beluga_amcl_ndt_amcl_node_hpp": 483, "beluga_amcl_ros2_common_hpp": 485, "beluga_amclamclnod": [462, 463], "beluga_amclamclnodelet": [464, 465], "beluga_amclndtamclnod": [466, 467], "beluga_beluga_hpp": 36, "beluga_containers_circular_array_hpp": 41, "beluga_containers_hpp": 122, "beluga_containers_tuple_vector_hpp": 446, "beluga_demo_nav2_launch": 548, "beluga_demo_w": 548, "beluga_eigen_compatibility_hpp": 172, "beluga_exampl": [5, 6], "beluga_motion_differential_drive_model_hpp": 126, "beluga_motion_hpp": 251, "beluga_motion_omnidirectional_drive_model_hpp": 274, "beluga_motion_stationary_model_hpp": 315, "beluga_policies_every_n_hpp": 179, "beluga_policies_hpp": 285, "beluga_policies_on_effective_size_drop_hpp": 276, "beluga_policies_on_motion_hpp": 278, "beluga_policies_policy_hpp": 286, "beluga_primitives_hpp": 288, "beluga_prologue_includ": [175, 289], "beluga_random_hpp": 293, "beluga_random_multivariate_distribution_traits_hpp": 253, "beluga_random_multivariate_normal_distribution_hpp": 255, "beluga_random_multivariate_uniform_distribution_hpp": 257, "beluga_ro": [2, 5, 456, 457, 458, 459, 462, 463, 464, 465, 482, 483, 485, 496, 497, 498, 499, 500, 501, 502, 506, 507, 509, 510, 511, 514, 519, 521, 522, 523, 527, 533, 534, 535, 536, 537, 538, 539], "beluga_ros_amcl_hpp": 490, "beluga_ros_beluga_ros_hpp": 494, "beluga_ros_laser_scan_hpp": 517, "beluga_ros_messages_hpp": 518, "beluga_ros_occupancy_grid_hpp": 529, "beluga_ros_particle_cloud_hpp": 532, "beluga_ros_tf2_eigen_hpp": 541, "beluga_ros_tf2_sophus_hpp": 543, "beluga_ros_vers": [518, 529, 541, 543], "beluga_rosamcl": [496, 497], "beluga_rosamclparam": [533, 534], "beluga_rosdetailalmost_equal_to": [537, 538, 539], "beluga_roslaserscan": [498, 499], "beluga_rosmsg": 521, "beluga_rosoccupancygrid": [500, 501], "beluga_rosoccupancygridvaluetrait": [535, 536], "beluga_rosth": [490, 517, 518, 529, 532], "beluga_sensor_beam_model_hpp": 32, "beluga_sensor_bearing_sensor_model_hpp": 34, "beluga_sensor_data_dense_grid_hpp": 124, "beluga_sensor_data_landmark_map_hpp": 241, "beluga_sensor_data_laser_scan_hpp": 245, "beluga_sensor_data_linear_grid_hpp": 249, "beluga_sensor_data_ndt_cell_hpp": 267, "beluga_sensor_data_occupancy_grid_hpp": 272, "beluga_sensor_data_regular_grid_hpp": 299, "beluga_sensor_data_sparse_value_grid_hpp": 311, "beluga_sensor_data_value_grid_hpp": 450, "beluga_sensor_hpp": 305, "beluga_sensor_landmark_sensor_model_hpp": 243, "beluga_sensor_likelihood_field_model_hpp": 247, "beluga_sensor_ndt_sensor_model_hpp": 268, "beluga_testing_hpp": 441, "beluga_testing_sophus_matchers_hpp": 307, "beluga_testing_sophus_printers_hpp": 309, "beluga_tutori": 549, "beluga_type_traits_hpp": 448, "beluga_type_traits_particle_traits_hpp": 281, "beluga_type_traits_strongly_typed_numeric_hpp": 317, "beluga_type_traits_tuple_traits_hpp": 444, "beluga_types_landmark_detection_types_hpp": 239, "beluga_utility_forward_like_hpp": 183, "beluga_utility_indexing_iterator_hpp": 236, "beluga_views_elements_hpp": 174, "beluga_views_hpp": 452, "beluga_views_particles_hpp": 283, "beluga_views_random_intersperse_hpp": 295, "beluga_views_sample_hpp": 303, "beluga_views_take_evenly_hpp": 437, "beluga_views_take_while_kld_hpp": 439, "beluga_views_zip_hpp": 454, "belugaactionsdetailassign_fn": [344, 345], "belugaactionsdetailnormalize_base_fn": [346, 347], "belugaactionsdetailnormalize_fn": [348, 349], "belugaactionsdetailpropagate_base_fn": [350, 351], "belugaactionsdetailpropagate_fn": [352, 353], "belugaactionsdetailreweight_base_fn": [354, 355], "belugaactionsdetailreweight_fn": [356, 357], "belugaamcl": [43, 44], "belugaamclparam": [318, 319], "belugabasedensegrid2": [45, 46], "belugabaselaserscan": [47, 48], "belugabaselineargrid2": [49, 50], "belugabaseoccupancygrid2": [51, 52], "belugabaseregulargrid": [53, 54], "belugabeammodelparam": [320, 321], "belugabeamsensormodel": [55, 56], "belugabearingmodelparam": [322, 323], "belugabearingsensormodel": [57, 58], "belugabresenham2i": [59, 60], "belugabresenham2ilin": [61, 62], "belugabresenham2ilineiter": [63, 64], "belugabresenham2ilineiteratorsentinel": [324, 325], "belugacirculararrai": [65, 66], "belugaclusterizer_detailclustercel": [358, 359], "belugacommon_tuple_typ": [360, 361, 362], "belugadecay_tuple_lik": [363, 364, 365], "belugadetailcellhash": [366, 367], "belugadetailmake_from_state_fn": [368, 369], "belugadifferentialdrivemodel": [67, 68], "belugadifferentialdrivemodelparam": [326, 327], "belugaexponentialfilt": [69, 70], "belugahas_common_tuple_typ": [370, 371], "belugahas_single_el": [372, 373], "belugainclud": [127, 128, 129, 130, 131, 132, 133], "belugaindexingiter": [71, 72], "belugais_tuple_lik": 374, "belugalandmarkbearingdetect": [328, 329], "belugalandmarkmap": [73, 74], "belugalandmarkmodelparam": [330, 331], "belugalandmarkpositiondetect": [332, 333], "belugalandmarksensormodel": [75, 76], "belugalikelihoodfieldmodel": [77, 78], "belugalikelihoodfieldmodelparam": [334, 335], "belugamultivariate_distribution_trait": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "belugamultivariatenormaldistribut": [79, 80], "belugamultivariatenormaldistributionparam": [81, 82], "belugamultivariateuniformdistribut": [83, 84, 85, 86, 87, 88, 89], "belugandtcel": [336, 337], "belugandtmodelparam": [338, 339], "belugandtsensormodel": [90, 91], "beluganumer": [92, 93], "belugaomnidirectionaldrivemodel": [94, 95], "belugaomnidirectionaldrivemodelparam": [340, 341], "belugaparticle_trait": [386, 387], "belugaparticlecluster": [96, 97], "belugaparticleclusterizerparam": [342, 343], "belugapolici": [401, 402], "belugapoliciesdetailevery_n_fn": [388, 389], "belugapoliciesdetailevery_n_polici": [390, 391], "belugapoliciesdetailon_effective_size_drop_polici": [392, 393], "belugapoliciesdetailon_motion_fn": [394, 395], "belugapoliciesdetailon_motion_polici": [396, 397], "belugapoliciesdetailon_motion_policy_bas": [398, 399, 400], "belugapolicy_bas": [403, 404], "belugaray2d": [98, 99], "belugasparsevaluegrid": [100, 101], "belugaspatial_hash": [112, 113, 114, 115, 116, 117, 405], "belugastate_detailstate_fn": [406, 407], "belugastationarymodel": [102, 103], "belugath": [12, 26, 32, 34, 38, 41, 120, 124, 126, 169, 171, 177, 181, 183, 236, 239, 241, 243, 245, 247, 249, 253, 255, 257, 267, 268, 272, 274, 281, 286, 288, 297, 299, 311, 313, 315, 317, 439, 442, 444, 446, 450], "belugathrunrecoveryprobabilityestim": [104, 105], "belugatuple_index": [408, 409], "belugatuplecontain": [106, 107, 108], "belugatuplevector": 109, "belugavaluegrid2": [110, 111], "belugaviewsdetailas_common_tuple_indirect_fn": [410, 411], "belugaviewsdetailrandom_intersperse_fn": [412, 413], "belugaviewsdetailrandom_intersperse_view": [414, 415], "belugaviewsdetailsample_base_fn": [416, 417], "belugaviewsdetailsample_fn": [418, 419], "belugaviewsdetailsample_view": [420, 421], "belugaviewsdetailtake_evenly_fn": [422, 423], "belugaviewsdetailtake_while_kld_fn": [424, 425], "belugaviewsdetailzip_fn": [426, 427], "belugaweight_detailweight_fn": [428, 429], "benchmark_likelihood_field_model": 247, "bernoulli_distribut": 295, "best": [5, 6, 455], "better": [77, 107, 548], "between": [26, 34, 65, 71, 104, 119, 120, 232, 234, 236, 243, 258, 294, 313, 318, 326, 340, 412, 478, 485, 487, 488, 490, 512, 533, 549], "beyond": 549, "bibliographi": [279, 530], "bin_weight": 532, "binari": 3, "bind": [276, 392], "bind_back": [29, 30, 270, 276, 291, 294, 295, 301, 303, 437, 439], "bit": [79, 81, 312, 313], "bitset": [312, 313], "bitwis": [40, 41, 258], "black": [232, 478, 512], "blackwel": [42, 495, 545], "blob": [107, 177], "blue": [232, 478, 512, 549], "bodi": [1, 532], "bolic": 42, "bond": [456, 457, 462, 466, 482, 483, 485, 488], "bond_": [457, 462, 466, 473, 477, 483], "bond_beluga_amcl": [463, 467], "bond_nod": [457, 483], "bond_std": [457, 483], "bondcpp": [456, 457, 482, 483, 485], "book": 545, "bool": [17, 26, 30, 38, 40, 41, 45, 49, 51, 63, 65, 71, 79, 81, 107, 110, 120, 124, 169, 179, 183, 236, 255, 258, 272, 276, 278, 281, 286, 288, 295, 303, 318, 324, 390, 392, 396, 399, 401, 402, 443, 444, 446, 457, 459, 462, 464, 466, 483, 490, 500, 529, 532, 533, 535, 538], "boolean": [51, 234, 272, 401, 487, 488], "boost": 366, "bootstrap": [4, 11, 549], "border": [232, 478, 512], "borrow": [55, 57, 75, 77, 90], "both": [6, 18, 27, 32, 33, 34, 57, 61, 65, 75, 92, 177, 233, 234, 242, 243, 247, 258, 265, 267, 330, 336, 401, 453, 486, 487, 531, 532, 548], "bound": [27, 55, 57, 75, 77, 84, 88, 90, 233, 256, 257, 258, 265, 350, 459, 464], "boundari": [73, 74, 232, 238, 241, 258, 478, 512, 549], "boundarieslimit": 73, "box": [3, 84, 85, 88, 89, 232, 257, 478, 512], "boxth": [84, 88], "break": 549, "bresenham": [59, 61, 63, 167, 182, 233, 258, 296, 297, 324], "bresenham2i": [37, 38, 60, 61, 62, 63, 64, 98, 118, 186, 189, 190, 191, 192, 195, 198, 202, 203, 206, 215, 216, 217, 220, 221, 222, 226, 228, 233, 258, 297, 324, 325], "bresenham2ibresenham": [38, 233], "bresenham2ibresenham2i": 38, "bresenham2iinlin": 60, "bresenham2iinlineexplicit": 60, "bridg": 2, "brief": [27, 182, 265, 460, 472, 491, 506, 525], "bright": [488, 532], "bringup_launch": 548, "broadcast": [457, 459, 462, 464, 466, 483], "broader": 4, "browser": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542], "bucket": [439, 485, 487, 488, 490, 533], "buffer": [456, 457, 458, 459, 462, 464, 466, 482, 483], "build": [1, 6, 486, 548, 549], "built": [5, 455, 487, 488, 548], "burgard": [42, 495, 545], "burn": 3, "byu": 258, "c": [2, 28, 41, 118, 120, 149, 173, 182, 185, 187, 188, 196, 200, 226, 229, 234, 258, 259, 360, 437, 444, 452, 455, 473, 475, 477, 544, 549], "cach": [3, 107], "cache1": [119, 120, 436, 437], "calcul": [4, 25, 27, 32, 34, 57, 90, 112, 114, 116, 119, 120, 156, 168, 170, 171, 176, 177, 182, 233, 241, 243, 247, 258, 265, 276, 312, 313, 334, 392, 405, 487, 488, 549], "calculate_covari": [176, 177, 258, 259, 261], "calculate_covariancesophu": 177, "calculate_percentile_threshold": [119, 120], "calculate_percentile_thresholdauto": 120, "calculate_weighted_sample_covari": 177, "call": [17, 26, 29, 43, 150, 178, 179, 182, 234, 285, 286, 390, 401, 424, 446, 527], "callab": 258, "callabl": [16, 21, 43, 67, 69, 94, 98, 102, 180, 233, 258, 302, 312, 350, 354, 405, 412, 414, 424, 438, 439], "callback": [457, 459, 462, 464, 466, 483], "callbackreturn": [457, 462, 466, 483], "calmost_equal_to": [491, 525], "calmost_equal_tostd": [491, 525], "cambridg": [42, 495, 545], "camcl": [491, 525], "camclimplement": [27, 265], "camclnode2d": 460, "camclnodelet2d": 460, "camclparamsstruct": [27, 265, 491, 525], "can": [1, 2, 3, 4, 5, 6, 13, 18, 20, 26, 29, 34, 43, 55, 57, 65, 71, 73, 75, 77, 107, 109, 120, 234, 243, 258, 269, 275, 276, 290, 300, 302, 306, 344, 354, 401, 406, 424, 428, 443, 446, 487, 488, 532, 548, 549], "candid": 532, "cannot": [41, 267], "canon": 527, "cap": [120, 342], "capabl": [43, 549], "capac": [107, 108, 187, 196, 446], "capacityconstexpr": 446, "caption": 4, "cardin": 295, "care": [3, 302], "carlo": [1, 2, 11, 26, 27, 43, 233, 258, 265, 318, 455, 489, 490, 491, 494, 496, 504, 506, 513, 520, 525, 533, 549], "cartesian": [32, 47, 245], "cartograph": 6, "cas_common_tuple_indirect_fnutil": [27, 265], "case": [1, 3, 6, 29, 32, 34, 65, 104, 177, 243, 258, 320, 446, 488, 532, 549], "cassert": 268, "cassign_fnimplement": [27, 265], "cast": [32, 98, 99, 187, 196, 268, 297, 299], "castabl": [98, 233, 258, 296], "caststd": 297, "categori": [34, 38, 63, 71, 73, 187, 229, 238, 239, 241, 243, 258, 328, 332], "categorybeluga": [329, 333], "categorycategori": 239, "categorylandmarkcategori": 239, "catkin_make_isol": 5, "caus": 4, "cbasedensegrid2dens": [27, 265], "cbaselaserscanlas": [27, 265], "cbaselineargrid2linear": [27, 265], "cbaseoccupancygrid2occup": [27, 265], "cbaseregulargridregularli": [27, 265], "cbeammodelparamparamet": [27, 265], "cbeamsensormodelbeam": [27, 265], "cbearingmodelparamparamet": [27, 265], "cbearingsensormodelgener": [27, 265], "cbegin": [32, 34, 41, 65, 66, 187, 196, 243, 247, 268], "cbeginconstexpr": 41, "cbeluga": [233, 513], "cbeluga_amcl": 479, "cbeluga_ro": 513, "cbresenham2ibresenham": [27, 265], "ccellhash": [27, 265], "cciabatta": 233, "ccirculararrayan": [27, 265], "cclustercella": [27, 265], "ccommon_tuple_typ": [27, 265], "ccommon_tuple_typemeta": [27, 265], "cd": [548, 549], "cdecay_tuple_lik": [27, 265], "cdecay_tuple_likemeta": [27, 265], "cdecltyp": 233, "cdetail": 233, "cdifferentialdrivemodelparamparamet": [27, 265], "cdifferentialdrivemodelsampl": [27, 265], "ceil": 439, "cell": [13, 15, 17, 20, 27, 37, 38, 45, 46, 49, 50, 51, 52, 53, 54, 61, 63, 86, 90, 96, 98, 100, 101, 110, 111, 119, 120, 124, 168, 169, 233, 247, 249, 258, 265, 267, 268, 272, 297, 299, 311, 336, 337, 338, 342, 358, 450, 500, 501, 529, 535], "cell_at": 20, "cell_grid": 268, "cell_index": [100, 101, 311], "cell_is_valid": 297, "cell_near": [45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 124, 187, 196, 268, 272, 297, 299, 311, 500, 501], "cell_neareigen": [299, 311], "cell_posit": 297, "celldefinit": 120, "cellhash": [118, 206, 220, 233, 268, 367, 482, 483], "cellhasherdefinit": 268, "cells_data": [90, 91, 268], "cells_data_": 268, "cells_dataset": 268, "cells_dataspars": 90, "cells_matrix": 268, "cellsrang": [51, 53], "cend": [32, 34, 41, 65, 66, 187, 196, 243, 247, 268], "cendconstexpr": 41, "center": [102, 177, 247, 268, 334, 549], "centroid": [49, 53, 98], "certain": [234, 275], "certainti": 549, "cevery_n_fnimplement": [27, 265], "cevery_n_policyimplement": [27, 265], "cexponentialfiltercal": [27, 265], "chain_inherit": 39, "chang": [270, 488, 548, 549], "changelog": 39, "chapter": [55, 67, 75, 77, 104, 326, 334], "character": 258, "charg": [487, 488], "chas_common_tuple_typ": [27, 265], "chas_common_tuple_typemeta": [27, 265], "chas_single_el": [27, 265], "chas_single_elementmeta": [27, 265], "chash": [27, 265], "cheap": 302, "cheapli": 401, "check": [5, 13, 27, 40, 41, 45, 49, 51, 71, 107, 110, 120, 233, 258, 265, 370, 396, 398, 399, 443, 444, 529, 535, 548], "checks_": 38, "choic": 5, "chrome": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542], "chunk_bi": 120, "ciabatta": [182, 244, 245, 298, 299], "ciabatta_ciabatta_hpp": 39, "ciabatta_top": [39, 233, 245, 299], "cindexingiteratora": [27, 265], "circl": 177, "circuit": [286, 403], "circular": [26, 27, 40, 41, 65, 122, 153, 177, 182, 233, 234, 258, 265, 433, 435], "circular_arrai": [26, 38, 65, 121, 122, 153, 182, 433, 435], "circulararrai": [27, 38, 40, 41, 66, 118, 184, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 204, 206, 207, 208, 209, 215, 218, 220, 221, 222, 224, 225, 226, 228, 233, 234, 258, 265, 434, 490], "circulararrayan": [26, 41], "circulararraycirculararrai": 41, "circulararrayfeatureflag": [40, 41, 65, 258, 259, 260, 433, 435], "circulararrayfeatureflagscirculararrayfeatureflagsfeatur": 41, "circularli": [79, 255], "cis_tuple_likemeta": [27, 265], "citat": 177, "cite": 255, "citeratorbresenham": [27, 265], "clamp": 442, "clandmarkbearingdetectionlandmark": [27, 265], "clandmarkmapbas": [27, 265], "clandmarkmodelparamparamet": [27, 265], "clandmarkpositiondetectionlandmark": [27, 265], "clandmarksensormodelgener": [27, 265], "claserscanthin": [491, 525], "class": [2, 3, 26, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 119, 120, 123, 124, 125, 126, 168, 169, 170, 171, 176, 177, 178, 180, 181, 183, 232, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 286, 287, 288, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 324, 344, 346, 348, 350, 352, 354, 356, 358, 365, 368, 373, 375, 376, 377, 380, 383, 385, 386, 392, 394, 396, 398, 399, 401, 403, 405, 406, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 436, 437, 438, 439, 442, 443, 444, 445, 446, 449, 450, 453, 454, 456, 457, 458, 459, 478, 482, 483, 489, 490, 501, 512, 516, 517, 518, 519, 520, 527, 528, 529, 531, 532, 537, 540, 541, 542, 543], "classif": 42, "clear": [41, 65, 66, 107, 108, 187, 196, 446, 532], "clearconstexpr": 446, "clearvoid": 41, "client": [459, 464], "clikelihoodfieldmodellikelihood": [27, 265], "clikelihoodfieldmodelparamparamet": [27, 265], "clinebresenham": [27, 265], "close": [1, 34, 55, 177, 549], "closest": 243, "closur": [29, 30, 179, 234, 270, 278, 291, 295, 301, 303, 344, 346, 348, 350, 352, 354, 356, 388, 394, 412, 418, 422, 424, 437, 439, 549], "cloud": [32, 55, 77, 90, 247, 268, 457, 459, 462, 464, 466, 483, 494, 504, 506, 514, 520, 531, 532], "cluster": [25, 27, 96, 119, 120, 156, 182, 233, 258, 259, 263, 265, 287, 288, 342, 358], "cluster_based_estim": [24, 25, 96, 156, 182, 258, 259, 261, 342, 358], "cluster_based_estimateauto": 120, "cluster_id": [120, 187, 229, 358], "cluster_idbeluga": 359, "cluster_idclust": 120, "cluster_idstd": 120, "clustercel": [118, 119, 120, 187, 219, 222, 229, 230, 233, 359], "clustercella": 120, "clusterizer_detail": [118, 119, 120, 187, 219, 222, 229, 230, 233, 358, 359], "clustermap": [119, 120], "clustermapa": 120, "clustermapstd": 120, "clustersclust": 258, "clustertag": [258, 287, 288], "clutter": 55, "cmake": [5, 549], "cmake_from_state_fnfunct": [27, 265], "cmake_minimum_requir": 549, "cmakelist": 549, "cmath": [31, 32, 33, 34, 242, 243, 244, 245, 246, 247, 298, 299, 312, 313, 438, 439, 528, 529, 531, 532, 549], "cmultivariate_distribution_trait": [27, 265], "cmultivariate_distribution_traitsforward": [27, 265], "cmultivariatenormaldistributionmultivari": [27, 265], "cmultivariatenormaldistributionparammultivari": [27, 265], "cmultivariateuniformdistribut": [27, 265], "cmultivariateuniformdistributionprimari": [27, 265], "cndtamclnode2d": 460, "cndtcellrepresent": [27, 265], "cndtmodelparamparamet": [27, 265], "cndtsensormodelndt": [27, 265], "cnodelet": 479, "cnormalize_base_fnimplement": [27, 265], "cnormalize_fnimplement": [27, 265], "cnumeric_limit": [27, 233, 265], "cnumerichelp": [27, 265], "co": [245, 543], "coccupancygridthin": [491, 525], "code": [1, 3, 11, 22, 24, 29, 31, 33, 35, 37, 40, 119, 121, 123, 125, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 170, 173, 176, 178, 180, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 366, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 471, 482, 489, 493, 504, 516, 528, 531, 540, 542, 549], "coeff": [177, 543], "coeffici": [177, 309], "coeffref": [177, 543], "cognit": 3, "coincid": 488, "col": [177, 268, 308, 309], "colcon": [5, 548], "collabor": [0, 45, 47, 49, 51, 53, 61, 100, 109, 110, 348, 352, 356, 370, 371, 372, 373, 374, 396, 401, 409, 414, 418, 420, 432, 435, 462, 464, 466, 498, 500], "collect": [2, 4], "color": [488, 531, 532], "color_rgba": 518, "colorrgba": [518, 531, 532], "colsatcompiletim": [253, 255, 380], "colsth": 308, "column": [253, 255, 308], "colwis": 268, "com": [0, 5, 32, 107, 120, 177, 247, 258, 360, 374, 406, 428, 532, 545, 548], "combin": [40, 41, 247, 258, 334, 455, 482, 483, 532], "come": [2, 7, 8, 9, 10, 546, 547], "command": [6, 548, 549], "comment": [232, 478, 512], "commerci": 0, "common": [4, 27, 120, 176, 177, 233, 258, 265, 267, 268, 269, 270, 280, 290, 291, 300, 301, 302, 303, 360, 361, 370, 371, 386, 439, 443, 444, 446], "common_tupl": [107, 446, 454], "common_tuple_typ": [27, 118, 225, 226, 233, 258, 265, 361, 362, 443, 444], "common_tuple_type_t": [27, 67, 94, 102, 118, 126, 233, 258, 259, 263, 265, 274, 315, 443, 444], "common_tuple_type_tconveni": 444, "common_tuple_type_ttypenam": 444, "common_tuple_typemeta": 444, "common_typ": 360, "common_type_t": [295, 361, 444], "common_types_t": 360, "commun": [487, 488], "comnidirectionaldrivemodelparamparamet": [27, 265], "comnidirectionaldrivemodelsampl": [27, 265], "compar": [4, 79, 81, 169, 258, 306, 443, 446, 538], "compat": [6, 79, 120, 234, 255, 455, 480, 486, 514, 520, 521, 548], "compil": [3, 65, 295, 313], "complet": [4, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 105, 108, 111, 113, 115, 117, 233, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 362, 364, 367, 369, 378, 379, 381, 382, 384, 387, 389, 391, 393, 395, 397, 400, 402, 404, 407, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 434, 463, 465, 467, 479, 497, 499, 501, 513, 534, 536, 539], "complex": [3, 4, 65, 177, 313, 549], "complianc": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "compliant": 43, "compon": [2, 75, 177, 234, 480, 514, 548], "compos": [3, 26, 39, 234, 270, 281, 291, 295, 301, 346, 348, 350, 352, 354, 356, 401, 412, 422, 424, 437, 439, 455, 456, 457, 460, 462, 466, 479, 480, 482, 483, 487, 488, 490, 548], "composit": [30, 344], "comput": [3, 4, 13, 15, 27, 32, 41, 43, 45, 49, 51, 53, 55, 57, 59, 67, 71, 75, 77, 86, 94, 96, 98, 100, 102, 104, 110, 119, 120, 176, 177, 233, 247, 258, 265, 268, 300, 338, 354, 360, 424, 444, 549], "computation": [55, 77, 268], "compute_free_st": 257, "compute_offset": 303, "con_effective_size_drop_policyimplement": [27, 265], "con_motion_fnimplement": [27, 265], "con_motion_policy_bas": [27, 265], "con_motion_policy_baseprimari": [27, 265], "con_motion_policybas": [27, 265], "concept": [1, 2, 3, 26, 107, 123, 158, 234, 241, 248, 271, 275, 276, 298, 302, 549], "concret": 39, "condens": 488, "condit": [4, 12, 16, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 55, 57, 67, 75, 77, 90, 94, 102, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 234, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 392, 401, 437, 438, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 549], "conditional_t": [90, 268, 338], "confer": [42, 495, 545], "config": [459, 464, 465], "config_": [459, 464, 473, 477], "config_beluga_amcl": [459, 465], "config_callback": [459, 464, 465, 473, 475], "config_callbackvoid": 459, "config_curr": 459, "config_server_": [459, 464, 473, 477], "config_server_beluga_amcl": [459, 465], "config_server_std": 459, "configur": [34, 43, 55, 57, 67, 75, 77, 90, 94, 126, 243, 247, 268, 274, 455, 457, 459, 462, 464, 466, 483, 485, 487, 488, 496, 548, 549], "configured_": [459, 464, 473, 477], "configured_beluga_amcl": 465, "configured_bool": 459, "configured_flag": 459, "confus": 313, "conjunction_v": [281, 288, 406, 428], "connect": [13, 15, 45, 49, 51, 110, 124, 249, 457, 459, 462, 464, 466, 483], "consid": [5, 26, 65, 232, 241, 277, 318, 478, 485, 487, 488, 498, 512], "consist": [4, 17, 26, 120, 176, 177, 234, 258, 436], "const": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 32, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 124, 126, 169, 171, 176, 177, 179, 206, 220, 236, 241, 243, 245, 247, 249, 253, 254, 255, 256, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 286, 288, 291, 295, 297, 299, 301, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 324, 325, 336, 337, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 366, 367, 368, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 392, 394, 396, 397, 399, 400, 401, 406, 407, 410, 411, 412, 416, 418, 422, 424, 426, 428, 429, 437, 439, 442, 443, 444, 445, 446, 450, 454, 457, 459, 462, 463, 464, 465, 466, 467, 482, 483, 490, 496, 497, 498, 500, 501, 517, 519, 527, 529, 532, 538, 539, 540, 541, 542, 543, 549], "const_": 281, "const_iter": [41, 65, 66, 187, 226], "const_iteratorconst": 41, "const_iteratorindexingiter": 41, "const_point": [41, 65, 66, 187, 226], "const_pointerconst": 41, "const_refer": [41, 65, 66, 187, 226], "const_referenceconst": 41, "const_reverse_iter": [41, 65, 66, 187, 226], "const_reverse_iteratorconst": 41, "const_reverse_iteratorstd": 41, "constant": [40, 41, 65, 126, 247, 258, 274, 485, 490, 533, 549], "constarrow": 38, "constbeluga": [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 74, 76, 78, 80, 82, 91, 95, 97, 99, 101, 103, 108, 111, 113, 115, 117, 325, 337, 347, 349, 351, 353, 355, 357, 367, 369, 389, 393, 395, 413, 417, 419, 423, 425, 427, 499, 501], "constbeluga_amcl": 467, "constbeluga_ro": [497, 499, 501, 539], "constcalcul": 313, "constcast": 297, "constcheck": [124, 272], "constcompar": [255, 532], "constcomput": [38, 120, 124, 126, 249, 272, 274, 297, 299, 311, 315], "constdefinit": [267, 268], "constderefer": 38, "constequ": 38, "constexpr": [26, 29, 30, 34, 39, 40, 41, 65, 69, 86, 92, 104, 107, 114, 116, 120, 126, 173, 174, 178, 179, 181, 183, 243, 253, 255, 257, 258, 267, 268, 269, 270, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 288, 290, 291, 294, 295, 300, 301, 302, 303, 312, 313, 317, 336, 344, 346, 348, 350, 352, 354, 356, 368, 376, 377, 380, 383, 385, 388, 390, 392, 394, 396, 399, 401, 403, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 436, 437, 438, 439, 442, 443, 444, 446, 453, 454, 485, 529, 532, 535], "constexprnoexcept": [258, 443], "constfind": [34, 241, 243], "constgener": 255, "constget": [124, 249, 272, 311, 450, 483, 517, 529], "consthash": 268, "constinequ": 38, "constoverload": [179, 270, 276, 278, 291, 295, 301, 303, 437, 439, 454], "constptr": [459, 464, 465, 518], "constrain": 75, "constraint": [233, 257], "constraintth": 83, "constretriev": 272, "constreturn": [26, 32, 34, 38, 41, 241, 243, 247, 255, 268, 281, 446, 490], "construct": [19, 26, 27, 31, 32, 33, 34, 38, 41, 43, 55, 57, 59, 61, 63, 65, 67, 69, 71, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 98, 100, 107, 110, 112, 114, 116, 119, 120, 125, 126, 177, 233, 236, 242, 243, 246, 247, 255, 257, 258, 265, 268, 273, 274, 295, 303, 311, 313, 320, 322, 326, 330, 334, 338, 340, 342, 414, 420, 445, 446, 450, 532, 538, 549], "constructor": [19, 34, 38, 39, 41, 43, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 104, 107, 110, 112, 114, 116, 120, 126, 177, 179, 236, 241, 243, 247, 268, 274, 278, 286, 295, 303, 313, 317, 390, 399, 401, 414, 420, 446, 457, 462, 466, 483, 490, 496, 498, 500, 538], "constsampl": 303, "constsentinel": 38, "constsharedptr": [457, 462, 463, 466, 467, 483, 518], "constview": 245, "contain": [2, 3, 6, 13, 15, 26, 27, 29, 35, 36, 43, 45, 46, 49, 50, 51, 52, 65, 67, 71, 94, 96, 100, 102, 104, 106, 107, 109, 110, 111, 114, 116, 119, 124, 151, 154, 182, 187, 196, 232, 233, 234, 235, 236, 258, 265, 297, 311, 318, 392, 424, 433, 435, 451, 455, 478, 489, 490, 491, 496, 500, 501, 512, 513, 520, 525, 533, 548, 549], "containerscontain": 128, "containersinclud": [139, 140], "containsbool": 124, "content": 79, "context": 258, "contigu": [15, 65, 158, 182, 234, 248, 272, 294, 450], "continu": [268, 487, 488, 549], "contribut": 5, "control": [3, 4, 16, 67, 68, 94, 95, 102, 103, 126, 274, 315, 549], "control_act": [26, 43, 44], "control_action_typ": [94, 102], "control_action_window_": [26, 490], "control_actioncontrol": 43, "control_typ": [16, 67, 68, 94, 95, 102, 103, 126, 187, 226, 274, 315], "control_type_2d": 126, "control_type_3d": 126, "control_typecurr": [126, 274, 315], "control_typestd": [126, 274, 315], "controla": [67, 94, 102], "conveni": [40, 41, 92, 107, 258, 298, 306, 310, 443, 446], "converg": [104, 488, 549], "convers": [3, 29, 30, 31, 32, 33, 34, 92, 107, 119, 120, 242, 243, 246, 247, 258, 286, 401, 487, 488, 494, 504, 506, 514, 519, 525, 527, 532, 540, 541, 542, 543, 549], "convert": [16, 29, 30, 32, 234, 241, 243, 253, 302, 313, 376, 377, 380, 383, 385, 485, 519, 527, 532, 540, 541, 542, 543, 549], "convini": [125, 258, 482], "coordin": [13, 15, 17, 20, 45, 47, 49, 51, 53, 86, 100, 101, 110, 112, 245, 247, 249, 272, 299, 311, 313, 485, 487, 488, 532, 538, 549], "coordinates_at": [15, 17, 20, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 187, 196, 247, 249, 272, 297, 299, 500, 501], "coordinates_atauto": 272, "coordinates_ateigen": [249, 299], "coordinates_for": [17, 20, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 187, 196, 257, 272, 299, 500, 501], "coordinates_forauto": [272, 299], "copi": [3, 12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 59, 61, 71, 79, 107, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 302, 303, 305, 307, 309, 311, 313, 315, 317, 410, 437, 439, 441, 442, 444, 445, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 549], "copied_s": 446, "coplanar": 498, "copy_tag": [410, 411, 454], "copyabl": [110, 401], "copyassign": 19, "copyconstruct": 19, "copyright": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "core": [3, 37, 38, 41, 123, 124, 176, 177, 238, 239, 248, 249, 252, 253, 267, 268, 271, 272, 298, 299, 302, 310, 311, 482, 483, 540, 541], "correct": [4, 32, 253, 254, 255, 258, 446, 457, 459, 462, 464, 466, 483, 487, 548], "correl": 255, "correspond": [5, 13, 14, 17, 19, 51, 75, 79, 96, 119, 255, 269, 487, 488, 529, 535], "cos_apertur": [34, 243], "cos_theta": 247, "could": [295, 549], "couldn": 268, "count": [107, 108, 178, 179, 234, 388, 389, 390, 391, 422, 423, 436, 437, 439, 446], "count_": 179, "count_if": [176, 177], "counter": 390, "counterpart": 486, "countnew": 107, "countnumb": 422, "countsiz": 107, "countth": 390, "cov": [267, 268], "covari": [26, 43, 44, 79, 80, 81, 82, 102, 119, 120, 176, 177, 187, 229, 253, 255, 258, 267, 268, 336, 376, 377, 380, 383, 385, 455, 457, 459, 462, 464, 466, 483, 485, 487, 488, 490, 496, 497, 527, 542, 543], "covariance_": 488, "covariance_i": 485, "covariance_matrix": 177, "covariance_typ": [79, 80, 187, 226, 233, 253, 254, 255, 258, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "covariance_typeth": [253, 255], "covariance_typetypenam": [253, 255], "covariance_x": 485, "covariance_xi": 485, "covariance_xyaw": 485, "covariance_yaw": 485, "covariance_yyaw": 485, "covariancebeluga": 337, "covariancecovari": 267, "covarianceeigen": 267, "covarianceeigentorowmajor": [522, 523, 527, 542, 543], "covarianceeigentorowmajorarrai": 543, "covariancer": [79, 81], "covariancerowmajortoeigen": [522, 523, 527, 542, 543], "covariancerowmajortoeigensophu": 543, "covariances_dataset": 268, "covariancet": [26, 43, 44], "covariancettyp": 43, "cover": 3, "cp": [16, 18, 21], "cparticle_traitscommon": [27, 265], "cparticleclusterizerparamparamet": [27, 265], "cparticleclusterizerparticl": [27, 265], "cpo": [406, 428], "cpolicy_baseimplement": [27, 265], "cpolicyfn": 233, "cpolicyforward": [27, 265], "cpp": [247, 258, 360, 374, 406, 428, 549], "cpprefer": [258, 360, 374, 406, 428], "cpropagate_base_fnimplement": [27, 265], "cpropagate_fnimplement": [27, 265], "crandom_intersperse_fnimplement": [27, 265], "crandom_intersperse_viewimplement": [27, 265], "crang": 233, "cray2dcast": [27, 265], "crbegin": [41, 65, 66, 187, 196], "crbeginconstexpr": 41, "crclcpp_lifecycl": 479, "creat": [18, 19, 27, 92, 119, 120, 177, 179, 233, 241, 258, 265, 278, 280, 281, 288, 303, 316, 317, 334, 344, 368, 388, 394, 487, 488, 490, 533], "create_timer_ro": 485, "crend": [41, 65, 66, 187, 196], "crendconstexpr": 41, "creweight_base_fnimplement": [27, 265], "creweight_fnimplement": [27, 265], "cross": [34, 177, 243], "crtp": 39, "csample_base_fnimplement": [27, 265], "csample_fnimplement": [27, 265], "csample_viewimplement": [27, 265], "csentinelpast": [27, 265], "csparsevaluegridgener": [27, 265], "cspatial_hash": [27, 265], "cspatial_hashcal": [27, 265], "cstate_fncustom": [27, 265], "cstate_typ": 233, "cstationarymodela": [27, 265], "cstd": 233, "cstdint": [37, 38, 40, 41, 235, 236, 238, 239, 240, 241, 248, 249, 268, 271, 272, 312, 313, 449, 450], "ctake_evenly_fnimplement": [27, 265], "ctake_while_kld_fnimplement": [27, 265], "cthrunrecoveryprobabilityestimatorrandom": [27, 265], "ctuple_el": [27, 265], "ctuple_index": [27, 265], "ctuple_indexmeta": [27, 265], "ctuple_s": [27, 265], "ctuplecontain": [27, 265], "ctuplecontainerprimari": [27, 265], "ctuplevectorshorthand": [27, 265], "cube": 247, "cup": 4, "curious": 2, "current": [1, 4, 26, 41, 43, 65, 67, 71, 94, 102, 107, 120, 234, 236, 278, 290, 300, 354, 390, 399, 400, 446, 455, 457, 459, 462, 464, 466, 483, 485, 487, 488, 490, 496, 533, 549], "current_": 179, "current_orient": [126, 274], "current_point_": 38, "current_pose_2d": 126, "current_posit": 549, "currentth": 399, "curri": 39, "cursor": [71, 72, 236, 303], "cursor_": 236, "custom": [18, 26, 43, 258, 287, 406, 428, 490, 496, 527, 549], "cvaluegrid2gener": [27, 265], "cvaluetraitstrait": [491, 525], "cweight_fncustom": [27, 265], "cwiseab": 177, "cwisesqrt": 255, "cycl": [3, 258, 549], "cyril": [42, 495, 545], "czip_fnimplement": [27, 265], "d": [0, 1, 6, 19, 28, 32, 42, 118, 185, 188, 189, 197, 200, 226, 229, 259, 473, 477, 495, 507, 545, 549], "d1": [90, 189, 229, 267, 268, 336, 337, 338], "d1beluga": 339, "d1doubl": 268, "d1scale": 268, "d2": [90, 189, 229, 267, 268, 336, 337, 338], "d2beluga": 339, "d2doubl": 268, "d2scale": 268, "dark": [232, 478, 512], "dash": [232, 478, 512], "data": [3, 6, 13, 15, 17, 27, 32, 34, 41, 42, 43, 45, 47, 49, 51, 53, 65, 66, 73, 100, 101, 110, 111, 119, 120, 177, 182, 189, 197, 233, 238, 239, 243, 246, 247, 256, 257, 258, 265, 268, 326, 328, 332, 334, 336, 338, 340, 342, 358, 380, 482, 483, 487, 488, 496, 498, 500, 501, 507, 509, 514, 516, 517, 528, 529, 549], "data_": [41, 311, 450], "data_at": [13, 15, 45, 46, 49, 50, 51, 52, 100, 101, 110, 111, 124, 189, 197, 249, 268, 272, 311, 500, 501], "data_atauto": [124, 249, 272], "data_atstd": 311, "data_near": [13, 45, 46, 49, 50, 51, 52, 100, 101, 110, 111, 124, 189, 197, 247, 311, 500, 501], "data_nearauto": 124, "data_nearstd": 311, "dataaggreg": 65, "dataconst": [311, 450, 529], "dataconstexpr": 41, "datagrid": [100, 110], "datainclud": 147, "datalikelihood_field_model": 145, "dataset": 268, "datatyp": [27, 34, 73, 158, 182, 233, 240, 241, 243, 258, 265], "date": [5, 485, 487, 488], "dbuild_test": 5, "debug": [267, 336], "decai": [27, 233, 258, 265, 363, 443, 444, 485, 487, 488, 490, 533], "decay_t": [27, 30, 118, 120, 225, 226, 233, 258, 265, 270, 281, 288, 291, 301, 346, 348, 350, 352, 354, 356, 360, 361, 364, 373, 386, 406, 409, 428, 443, 444], "decay_tuple_lik": [27, 118, 225, 226, 233, 258, 265, 281, 364, 365, 443, 444], "decay_tuple_like_t": [258, 259, 263, 281, 443, 444, 445, 446], "decay_tuple_like_tconveni": [281, 444], "decay_tuple_like_ttypenam": [281, 444], "decay_tuple_likemeta": 444, "decid": [234, 485, 487, 488, 490, 533], "declar": [19, 26, 27, 233, 253, 255, 258, 265, 270, 276, 286, 291, 301, 375, 401], "declare_common_param": 485, "declare_paramet": 485, "decltyp": [26, 30, 38, 39, 71, 120, 169, 173, 174, 233, 236, 245, 258, 281, 288, 291, 295, 303, 386, 406, 428, 443, 444, 446, 490, 532], "declval": [71, 236, 281, 288, 295, 303, 386], "decreas": [120, 532], "decrement": [71, 236], "dedu": 59, "deduc": [254, 255, 258], "deduct": [109, 254, 255, 256, 257, 258, 445, 446], "default": [6, 19, 27, 38, 39, 41, 59, 61, 63, 65, 71, 79, 81, 92, 98, 100, 107, 109, 112, 172, 233, 236, 255, 258, 265, 269, 270, 275, 286, 290, 291, 295, 297, 300, 301, 303, 311, 313, 317, 342, 346, 348, 350, 352, 356, 392, 401, 412, 414, 420, 424, 438, 439, 445, 446, 459, 464, 465, 487, 488, 490, 496, 549], "default_config_": [459, 464, 473, 477], "default_config_beluga_amcl": [459, 465], "default_config_default": 459, "default_random_engin": [295, 303, 412, 414, 420], "defaultbeluga": [60, 62, 64, 66, 72, 80, 82, 93, 101, 108, 113, 402, 415, 421], "defaultconstruct": [38, 255, 311], "defaultdefault": [38, 41, 236, 286, 295, 303, 313, 317, 446], "defer": 39, "defin": [2, 4, 12, 14, 17, 18, 20, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 45, 47, 49, 51, 53, 62, 66, 71, 80, 98, 109, 120, 122, 124, 126, 150, 169, 171, 172, 174, 177, 178, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 275, 276, 277, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 348, 352, 356, 406, 428, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 463, 465, 467, 483, 485, 490, 494, 517, 518, 527, 529, 532, 541, 543, 549], "definit": [12, 26, 30, 32, 34, 38, 41, 120, 124, 126, 169, 171, 172, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 286, 288, 291, 295, 297, 299, 301, 303, 307, 311, 313, 315, 317, 437, 439, 442, 444, 446, 450, 454, 457, 459, 483, 490, 517, 518, 529, 532, 541, 543], "degeneraci": [43, 496, 549], "degrad": [55, 258], "degre": [3, 532], "delai": [485, 488], "delet": [39, 295], "delta": [126, 177, 255, 274, 278, 549], "delta_bear": 274, "delta_rot_hat": 274, "demo": 548, "demonstr": [548, 549], "denot": [232, 478, 512], "dens": [13, 15, 45, 123, 158, 172, 182, 233, 249, 258], "dense_grid": [45, 158, 182, 248, 249], "densegrid2": [15, 45, 279], "densiti": [19, 342, 532], "dep": 5, "depend": [22, 24, 29, 31, 33, 34, 35, 37, 40, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 482, 483, 489, 493, 516, 528, 531, 540, 542], "depict": [488, 549], "deplet": 549, "deprec": 120, "depriv": 485, "depth": 6, "derefer": [63, 71, 437, 453], "deriv": [27, 46, 48, 50, 52, 54, 110, 111, 119, 123, 124, 187, 189, 191, 193, 196, 197, 199, 202, 205, 206, 207, 215, 219, 220, 221, 233, 244, 245, 248, 249, 252, 256, 257, 258, 265, 271, 272, 298, 299, 376, 377, 380, 383, 385], "derivedconcret": [45, 47, 49, 51, 53], "descend": 120, "describ": [45, 47, 49, 51, 53, 75, 234, 487, 488], "descript": [22, 24, 27, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 119, 121, 123, 125, 168, 170, 173, 176, 178, 180, 182, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 265, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 460, 462, 464, 466, 472, 482, 485, 489, 491, 493, 496, 498, 500, 506, 516, 519, 520, 521, 525, 527, 528, 531, 533, 535, 537, 538, 540, 542], "descriptor": 485, "design": [178, 275, 277], "desir": 275, "destin": 549, "destroi": 241, "destructor": [43, 55, 57, 61, 65, 67, 69, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 98, 100, 104, 107, 110, 112, 114, 116, 390, 399, 414, 420, 496, 498, 500, 538], "detail": [22, 24, 26, 27, 29, 30, 31, 33, 35, 37, 39, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 119, 121, 123, 125, 168, 170, 173, 176, 177, 178, 179, 180, 182, 190, 198, 206, 208, 209, 216, 220, 222, 223, 224, 229, 233, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 265, 268, 269, 270, 271, 273, 275, 276, 277, 278, 280, 281, 282, 284, 286, 287, 290, 291, 292, 294, 295, 296, 298, 300, 301, 302, 303, 304, 306, 308, 310, 312, 313, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 449, 451, 453, 454, 456, 458, 460, 462, 464, 466, 472, 479, 482, 483, 489, 490, 491, 493, 496, 498, 500, 502, 506, 507, 509, 511, 513, 516, 518, 519, 520, 521, 525, 527, 528, 531, 532, 533, 535, 537, 538, 539, 540, 542], "detect": [27, 33, 34, 57, 58, 73, 75, 76, 126, 233, 234, 238, 239, 241, 242, 243, 258, 265, 274, 277, 278, 326, 328, 332, 340, 392, 396, 399, 549], "detection_bearing_in_robot": 243, "detection_bearing_in_sensor": [34, 73, 74, 189, 229, 239, 241, 328], "detection_bearing_in_sensorbear": 239, "detection_bearing_in_sensorbeluga": 329, "detection_bearing_in_sensorlandmarkbearing3": 239, "detection_bearing_in_sensorth": 73, "detection_categori": [34, 73, 74, 241, 243], "detection_categoryth": 73, "detection_position_in_robot": [189, 229, 239, 241, 243, 332], "detection_position_in_robotbeluga": 333, "detection_position_in_robotdetect": 239, "detection_position_in_robotlandmarkposition3": 239, "detection_position_in_world": [73, 74, 241, 243], "detection_position_in_worldth": 73, "detection_range_in_robot": 243, "detection_weight": [34, 243], "detections2d": 75, "detectionslandmark": 57, "determin": [258, 549], "develop": [5, 6], "deviat": [32, 34, 177, 243, 247, 320, 322, 330, 334, 342, 487, 488, 549], "diagnosic_updater_": [459, 464, 473, 477], "diagnosic_updater_beluga_amcl": 465, "diagnosic_updater_diagnost": 459, "diagnosic_updater_diagnostic_updat": 459, "diagnost": [459, 464, 487], "diagnostic_updat": [458, 459, 464, 465], "diagnosticarrai": 487, "diagnostics_msg": 487, "diagnosticstatuswrapp": [459, 464, 465], "diagram": [45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 462, 464, 466, 498, 500], "dictat": [487, 488], "did": [34, 243, 532], "dieter": [42, 495, 545], "diff": 487, "differ": [19, 38, 41, 63, 65, 71, 90, 92, 107, 120, 177, 236, 306, 313, 446, 532, 548, 549], "difference_typ": [38, 41, 63, 64, 65, 66, 71, 72, 107, 108, 189, 226, 236, 446], "difference_typediffer": 446, "difference_typeiter": 38, "difference_types": 41, "difference_typesign": 236, "difference_typestd": [38, 41, 236, 446], "differenti": [27, 67, 125, 126, 161, 182, 233, 234, 251, 258, 265, 455, 485], "differential_dr": [485, 487, 488], "differential_drive_model": [67, 161, 182, 250, 251, 326, 482, 483], "differentialdrivemodel": [2, 16, 27, 68, 118, 125, 126, 187, 189, 197, 206, 220, 221, 224, 226, 233, 234, 258, 265, 326], "differentialdrivemodel2d": [125, 126, 258, 259, 263, 482, 483, 490, 496], "differentialdrivemodel2ddifferentialdrivemodel": 490, "differentialdrivemodel3d": [125, 126, 258, 259, 263], "differentialdrivemodeldifferentialdrivemodel": 126, "differentialdrivemodelparam": [67, 118, 125, 126, 189, 222, 225, 229, 258, 327], "differentialdrivemodelparamparamet": [126, 233], "differentialdrivemodelsampl": 126, "differentialmotionmodel": [485, 488], "digit": 313, "dim": [172, 268, 488, 532], "dimens": [267, 336], "dimension": [20, 25, 27, 53, 79, 100, 120, 124, 156, 182, 233, 258, 265, 267, 268, 298, 299, 310, 311, 312, 336, 366, 489, 494, 496, 504, 506, 549], "dims_out": 268, "direct": [65, 98, 297], "directional_statist": 177, "directli": [19, 22, 24, 29, 31, 33, 35, 37, 40, 104, 119, 121, 123, 125, 168, 170, 173, 176, 178, 180, 235, 238, 242, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 436, 438, 443, 445, 447, 449, 451, 453, 489, 516, 527, 528, 531, 540, 542], "dirti": 32, "discard": [4, 47], "discret": [4, 19, 27, 33, 75, 157, 182, 233, 234, 242, 243, 258, 265, 305, 487, 488, 500, 529, 549], "discrete_distribut": 303, "discuss": 548, "dispers": 177, "distanc": [25, 26, 41, 65, 71, 98, 120, 126, 156, 168, 169, 182, 236, 241, 247, 258, 274, 277, 297, 318, 326, 334, 340, 399, 438, 446, 487, 488, 549], "distance_funct": [168, 169, 247, 258], "distance_functiongiven": 258, "distance_map": [24, 25, 156, 182, 246, 247], "distance_threshold": [126, 189, 229, 274, 326, 340], "distance_thresholdbeluga": [327, 341], "distance_thresholddist": [126, 274], "distance_thresholddoubl": [126, 274], "distance_to": 295, "distance_vari": [126, 274], "distancefunct": [168, 169, 247, 258], "distancefunctiona": 258, "distancetyp": [169, 258], "distinguish": 549, "distri": 490, "distribut": [3, 4, 11, 12, 16, 19, 23, 25, 26, 27, 30, 32, 34, 36, 38, 39, 41, 43, 44, 79, 81, 82, 83, 84, 86, 88, 120, 122, 124, 126, 151, 164, 169, 171, 172, 174, 175, 177, 179, 181, 182, 183, 209, 224, 233, 234, 236, 239, 241, 243, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 265, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 292, 293, 295, 297, 299, 301, 302, 303, 305, 307, 309, 311, 313, 315, 317, 320, 336, 342, 412, 416, 417, 418, 419, 421, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 455, 457, 459, 483, 485, 487, 488, 490, 494, 496, 497, 517, 518, 520, 529, 531, 532, 533, 541, 543, 549], "distribution_": [255, 257, 295, 303], "distribution_typ": 19, "distributiona": [81, 420], "distributionparam": [126, 274], "distributionth": 420, "distrubut": 258, "div_hashed_valu": 313, "dive": 549, "divers": [2, 4, 43, 487, 488, 490, 496, 533], "divid": [20, 110, 234, 269, 485], "djuric": 42, "do": [65, 297, 487, 488, 549], "do_beamskip": 488, "doc": [313, 366], "document": [5, 23, 25, 29, 30, 32, 34, 36, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 119, 120, 122, 124, 126, 169, 171, 173, 174, 176, 177, 178, 179, 181, 182, 184, 186, 187, 189, 190, 193, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 232, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 265, 269, 270, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 288, 290, 291, 293, 294, 295, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 436, 437, 438, 439, 441, 443, 444, 446, 448, 450, 452, 453, 454, 457, 459, 462, 464, 466, 472, 473, 478, 483, 484, 490, 494, 496, 498, 500, 506, 507, 512, 517, 520, 522, 525, 527, 529, 530, 531, 532, 533, 535, 537, 538, 541, 543], "doe": [2, 4, 19, 41, 65, 107, 232, 258, 302, 401, 478, 488, 512, 548, 549], "doesn": [39, 79, 100, 268, 488], "doi": 545, "don": [6, 29, 120, 253, 281, 297, 446], "dontaligncol": 309, "door": 549, "dot": [4, 34, 241, 243], "dot_product_a": 241, "dot_product_b": 241, "doubl": [13, 17, 20, 26, 32, 34, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 69, 70, 75, 77, 90, 92, 98, 99, 100, 101, 104, 105, 110, 111, 112, 113, 114, 116, 119, 120, 124, 126, 177, 181, 233, 243, 247, 257, 258, 267, 268, 270, 272, 274, 276, 287, 288, 295, 297, 299, 311, 312, 313, 318, 320, 322, 326, 330, 334, 336, 337, 338, 340, 342, 346, 347, 348, 349, 358, 392, 393, 412, 413, 414, 415, 424, 425, 438, 439, 442, 450, 483, 485, 490, 498, 500, 501, 517, 529, 532, 533, 541, 543, 549], "doublenear": 307, "doubt": 5, "down": [3, 549], "download": 177, "doxygen": [232, 478, 512], "draw": [4, 27, 37, 38, 59, 61, 63, 233, 258, 265, 302, 549], "drawing_values_from_the_distribut": 255, "drift": [487, 488], "drive": [27, 67, 94, 125, 126, 161, 182, 233, 234, 251, 258, 265, 273, 274, 455, 485], "drop": [234, 275, 392], "dt": 549, "due": 55, "durabl": 6, "dure": [4, 29, 104, 462, 464, 466], "dx_": 4, "dxspan_": 38, "dynam": [4, 177, 268, 549], "dynamic_reconfigur": [458, 459, 464], "dyspan_": 38, "e": [3, 16, 28, 65, 71, 92, 107, 114, 116, 118, 120, 177, 185, 188, 190, 198, 200, 236, 239, 258, 259, 306, 307, 328, 332, 473, 477, 507, 549], "each": [4, 13, 19, 55, 107, 114, 116, 119, 120, 168, 169, 173, 176, 177, 184, 186, 187, 189, 190, 193, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 234, 247, 258, 269, 282, 295, 312, 313, 354, 412, 414, 424, 439, 446, 473, 485, 487, 488, 507, 532, 533, 549], "eagerli": [29, 234, 344], "earli": 3, "easili": 4, "ecosystem": 486, "edu": 258, "eff": [487, 488, 533], "effect": [4, 19, 25, 26, 29, 41, 65, 150, 156, 170, 182, 234, 258, 275, 276, 285, 485, 487, 488, 533, 549], "effective_s": [41, 65, 66, 190, 198], "effective_sample_s": [24, 25, 156, 182, 258, 259, 261, 275, 276], "effective_sample_sizeauto": [171, 276], "effective_sizeconstexpr": 41, "effici": [2, 29, 36, 121, 151, 182, 258], "effort": 6, "eigen": [3, 12, 13, 15, 17, 20, 27, 34, 37, 38, 45, 46, 49, 50, 51, 52, 53, 54, 59, 79, 84, 85, 88, 89, 90, 100, 101, 110, 111, 118, 123, 124, 126, 160, 172, 176, 177, 182, 187, 193, 199, 204, 206, 210, 218, 220, 222, 224, 225, 226, 228, 229, 233, 238, 239, 243, 247, 248, 249, 252, 253, 255, 256, 257, 258, 265, 267, 268, 271, 272, 274, 297, 298, 299, 306, 308, 309, 310, 311, 315, 336, 338, 366, 367, 376, 377, 380, 383, 384, 385, 441, 455, 457, 459, 462, 463, 464, 465, 466, 467, 482, 483, 494, 500, 501, 504, 506, 514, 527, 529, 532, 540, 541, 542, 543], "eigen3": [238, 239], "eigen_compat": [123, 124, 182, 267, 268, 298, 299, 310, 311], "eigen_major_vers": 172, "eigen_world_vers": 172, "eigenbas": [27, 118, 187, 193, 199, 210, 218, 222, 224, 225, 226, 228, 229, 233, 252, 253, 255, 258, 265, 384], "eigensolv": 177, "eigenvalu": [177, 255], "eigenvector": [177, 255], "either": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 67, 107, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 401, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 488, 490, 494, 517, 518, 529, 532, 541, 543], "ekumen": [0, 5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 548], "ekumenlab": 0, "elem": 268, "element": [27, 29, 65, 107, 119, 120, 149, 176, 177, 182, 233, 234, 258, 259, 261, 265, 288, 294, 306, 307, 308, 312, 372, 399, 406, 408, 412, 420, 422, 424, 428, 429, 436, 437, 438, 439, 443, 444, 446, 451, 452, 453, 454, 527], "elementconstexpr": [288, 444], "elementsconstexpr": 174, "elementsdefinit": 174, "elev": 247, "elif": [518, 529, 541, 543], "els": [26, 32, 34, 41, 120, 126, 177, 183, 236, 243, 255, 268, 270, 281, 291, 295, 303, 313, 439, 444, 446, 518, 529, 541, 543], "emb": [12, 126, 258], "embed": [13, 15, 17, 20], "emit": 487, "emphas": 234, "emplace_back": [124, 268, 532], "empti": [4, 26, 41, 65, 66, 107, 108, 120, 169, 190, 198, 257, 422, 436, 446, 456, 457, 458, 459, 462, 463, 464, 465, 482, 483, 487, 488, 490, 532], "emptyconstexpr": [41, 446], "en": [177, 255, 258, 360, 374, 406, 428, 532], "enabl": [30, 41, 65, 233, 253, 258, 303, 312, 313, 344, 401, 462, 464, 466, 487, 488, 490, 519, 525, 532, 533, 542, 543], "enable_borrowed_rang": [175, 289], "enable_if_t": [27, 30, 41, 65, 92, 114, 115, 116, 117, 118, 170, 171, 176, 177, 187, 193, 199, 206, 209, 210, 218, 220, 222, 224, 225, 226, 228, 229, 233, 252, 253, 258, 265, 270, 281, 286, 288, 291, 301, 312, 313, 317, 344, 346, 348, 350, 352, 354, 356, 360, 364, 365, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 401, 402, 406, 409, 424, 428, 439, 443, 444, 445, 446, 520, 531, 532], "enable_safe_rang": 289, "enable_tf_broadcast_": [457, 459, 462, 464, 466, 473, 477, 483], "enable_tf_broadcast_beluga_amcl": [463, 465, 467], "enable_tf_broadcast_bool": [457, 459, 483], "enable_tf_broadcast_wheth": [457, 459, 483], "encourag": 2, "end": [4, 27, 37, 38, 41, 61, 62, 63, 65, 66, 98, 107, 108, 120, 177, 190, 198, 233, 241, 247, 265, 270, 291, 301, 303, 311, 324, 446, 532, 549], "end_cursor": 303, "endauto": 38, "endconstexpr": [41, 446], "endfor": 4, "endif": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "enforc": 2, "engin": [84, 85, 86, 87, 88, 89, 257, 295, 303, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "engine_": [295, 303], "engineth": [84, 86, 88, 412, 414, 420], "enhanc": 104, "enough": 4, "ensur": [5, 120, 437, 532], "entri": [100, 120], "enum": [38, 40, 41, 51, 52, 59, 60, 258, 272, 500, 501], "enumcastoutofrang": 41, "enumer": [28, 40, 59, 168, 169, 188, 258, 262, 266, 271, 272, 436, 437], "enumeratorkrolloveronwrit": 258, "enumeratorkstandard": 59, "environ": [55, 77, 258, 548], "epilogu": 182, "epsilon": [177, 258, 270, 424, 425, 438, 439, 442], "epsilonmaximum": 258, "epsilonse": 424, "equal": [19, 38, 63, 65, 71, 79, 81, 236, 258, 324, 368, 416, 491, 513, 525, 532, 537, 538, 549], "equal_to": [491, 513, 525, 531, 532, 537, 538], "equalitycompar": 19, "equat": [4, 177, 549], "equip": 6, "equival": [65, 258, 360, 453, 488, 491, 513, 514, 525, 531, 532, 537, 538], "eras": 258, "erasur": 3, "erf": 32, "ericniebl": [107, 120], "error": [34, 73, 175, 241, 243, 258, 267, 289, 306, 322, 330, 462, 464, 466, 485, 487, 488, 490, 518, 529, 533, 541, 543], "error_": 38, "ess": [25, 26, 150, 156, 170, 171, 182, 234, 258, 275, 276, 285, 392], "estim": [4, 6, 24, 25, 26, 27, 43, 67, 94, 102, 104, 119, 120, 126, 156, 182, 233, 258, 259, 261, 265, 274, 315, 342, 442, 455, 457, 459, 462, 463, 464, 465, 466, 467, 483, 485, 487, 488, 490, 496, 532, 533], "estimate_clust": [119, 120, 258, 259, 261], "estimate_clustersauto": 120, "estimatea": [462, 464, 466], "estimatecovari": 120, "estimated_pos": 177, "estimatest": 120, "estimatestd": [26, 120, 177, 490], "estimation_typ": [26, 43, 44], "et": 258, "eta_hit": 32, "eta_short": 32, "eth": 306, "eugen": 59, "ev": [459, 464, 465], "eval": 177, "evalu": [29, 43, 120, 234, 401, 496, 549], "even": [1, 3, 6, 75, 446, 548, 549], "evenli": [20, 110, 234, 436, 485, 487, 488], "eventu": 6, "everi": [19, 26, 150, 178, 179, 182, 234, 258, 285, 290, 390], "every_n": [26, 150, 182, 234, 284, 285, 388, 390, 490], "every_n_fn": [26, 27, 118, 178, 179, 206, 220, 233, 265, 389, 490], "every_n_fnimplement": [179, 233], "every_n_fninlin": 389, "every_n_polici": [27, 118, 178, 179, 190, 198, 206, 220, 233, 265, 391], "every_n_policyconstexpr": 179, "every_n_policyimplement": [179, 233], "every_n_policyinlin": 391, "every_n_policyinlineexplicit": 391, "every_nconstexpr": [26, 179, 490], "every_npolici": [26, 179], "evolv": [234, 549], "exact": [86, 446], "exactli": [107, 253, 437], "exampl": [1, 2, 6, 232, 258, 478, 512, 549], "except": [6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 65, 79, 81, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 462, 464, 466, 483, 485, 490, 494, 496, 517, 518, 529, 532, 541, 543], "exec": 5, "execut": [26, 27, 43, 44, 233, 265, 269, 270, 290, 291, 300, 301, 346, 348, 350, 352, 354, 356, 455, 457, 459, 462, 464, 466, 482, 483, 485, 487, 488, 490, 496, 497, 549], "execution_polici": [26, 43, 44, 485, 487, 488, 490, 496, 497], "execution_policy_": [26, 490], "execution_policy_vari": [457, 459, 462, 464, 490, 496, 497, 507, 510], "execution_policy_variantbeluga_amcl": [463, 465], "execution_policy_variantexecut": 490, "execution_policy_variantget": [457, 459], "execution_policy_variantstd": 490, "execution_policypolici": 43, "execution_policyvari": 496, "executionpolici": [26, 44, 184, 193, 194, 199, 202, 207, 211, 215, 221, 227, 233, 270, 291, 301, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 482, 483], "executionpolicyan": [346, 350, 354], "executionpolicyexecut": 43, "executionpolicyvari": [466, 482, 483], "executionpolicyvariantbeluga_amcl": 467, "executionpolicyvariantget": 483, "executionpolicyvariantstd": 483, "executionpolicyvariantsupport": 483, "exercis": 3, "exhibit": 65, "exist": [1, 27, 65, 100, 107, 120, 233, 258, 265, 268, 303, 346, 350, 354, 370, 371, 420, 438, 443, 444, 487, 488], "exp": [32, 34, 243, 247, 253, 267, 549], "expect": [2, 32, 73, 177, 320, 446, 487, 488, 532], "expect_that": 306, "expens": [55, 241], "experi": 55, "explain": [232, 478, 512, 548], "explicit": [32, 34, 38, 39, 41, 72, 120, 126, 179, 181, 236, 243, 247, 255, 257, 274, 286, 295, 297, 303, 311, 313, 446, 450, 457, 483, 517, 529, 532], "exploit": [177, 549], "explor": [234, 480, 514], "exponenti": [25, 27, 69, 156, 180, 181, 182, 233, 253, 258, 265, 442, 485, 487, 488, 533], "exponential_filt": [24, 25, 69, 156, 182, 442], "exponentialfilt": [70, 118, 180, 181, 190, 198, 206, 208, 220, 222, 258, 442], "exponentialfiltercal": [181, 233, 442], "exponentialfilterconstexpr": 181, "exponentialfilterinlin": 70, "exponentialfilterinlineexplicit": 70, "express": [12, 18, 19, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 344, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "extend": [2, 3, 75, 107, 234, 268], "extens": [519, 525, 527, 532, 540, 541, 542, 543], "extent": 13, "extern": [34, 120, 239, 241, 243, 406, 428, 488, 513], "extra": [104, 446], "extract": [380, 416, 519, 542, 543], "extrapol": [65, 258], "extrins": [487, 488], "f": [16, 17, 21, 27, 28, 38, 40, 41, 66, 118, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 204, 206, 207, 208, 209, 215, 218, 220, 221, 222, 224, 225, 226, 228, 233, 258, 259, 265, 434, 507], "face": [2, 253], "factor": [4, 69, 177, 234, 269, 270, 346, 347, 348, 349], "factori": 258, "factorth": 346, "fail": [255, 488, 549], "fall": 258, "fals": [26, 38, 41, 65, 79, 81, 169, 258, 272, 313, 318, 390, 392, 399, 437, 454, 457, 459, 462, 464, 466, 483, 485, 487, 488, 490, 533], "false_typ": [30, 233, 281, 288, 303, 444], "famili": 4, "far_end_cel": 297, "far_end_pose_in_local_fram": 297, "farrai": 65, "fast": [446, 485, 487, 488, 490, 533], "fast_averag": 442, "fast_filter_": 442, "favor": 3, "feasibl": 268, "featur": [1, 40, 41, 57, 65, 258, 480, 486, 488, 548, 549], "few": [1, 2, 4, 6, 65, 247, 548], "fewer": 1, "fibonacci": 313, "field": [27, 77, 157, 182, 233, 234, 246, 247, 258, 265, 305, 455, 488, 549], "fifo": 65, "figur": [258, 549], "file": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 462, 464, 466, 471, 496, 498, 500, 504, 533, 535, 537, 538, 548, 549], "filesystem": 268, "fill": [41, 65, 66, 193, 199, 232, 478, 512, 543], "fillvoid": 41, "filter": [4, 11, 25, 26, 27, 42, 43, 69, 75, 104, 119, 120, 156, 176, 180, 181, 182, 233, 234, 240, 241, 244, 245, 258, 265, 271, 272, 318, 436, 437, 438, 442, 457, 459, 462, 464, 466, 483, 485, 490, 495, 496, 498, 514, 517, 532, 533, 545], "filter_funct": 437, "final": [317, 457, 462, 466, 483], "find": [6, 34, 73, 100, 119, 120, 241, 243, 268, 311, 443, 444, 548], "find_closest_bearing_landmark": [34, 73, 74, 193, 199, 241], "find_closest_bearing_landmarkstd": [34, 241], "find_nearest_landmark": [73, 74, 193, 199, 241, 243], "find_nearest_landmarkstd": [241, 243], "find_packag": 549, "finder": [27, 31, 32, 55, 77, 90, 157, 182, 233, 234, 246, 247, 258, 265, 268, 305], "finit": [13, 295], "firefox": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542], "first": [1, 5, 6, 32, 38, 41, 61, 65, 66, 98, 107, 108, 120, 169, 247, 286, 406, 422, 436, 446, 459, 464, 487, 488, 549], "first_": 303, "first_map_onli": [487, 488], "first_rot": [126, 274], "first_rotation_param": 126, "firstiter": 65, "fit": [41, 65, 232, 478, 512], "fit_point": 268, "fix": [38, 63, 65, 532, 549], "flag": [40, 41, 43, 65, 258, 464, 487, 496], "flatland": 6, "flatten": [12, 67, 126, 258, 342], "flip": 3, "flipped_rot": [126, 274], "float": [258, 267, 336, 487, 488, 517, 531, 532], "floating_point_rang": 485, "floor": [299, 312, 313], "floor_and_fibo_hash": [312, 313], "floor_and_fibo_hashconstexpr": 313, "flow": 3, "fmod": 532, "fn": [16, 21, 30, 208, 222, 233, 286, 291, 294, 295, 344, 345, 350, 351, 352, 353, 401, 402, 403, 404, 412, 413, 415], "fn_": 295, "fn_return_": 295, "fna": [350, 412, 414], "fnfn": 412, "fnthe": 414, "focu": 11, "follow": [4, 5, 6, 16, 18, 19, 21, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 232, 253, 274, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 446, 455, 462, 464, 466, 478, 496, 498, 500, 512, 533, 535, 537, 538, 548, 549], "footprint": [34, 243], "forc": [26, 43, 487, 488, 490, 496], "force_upd": [26, 43, 44, 193, 199, 490, 496, 497, 507, 509], "force_update_": [26, 490], "force_updatevoid": [26, 490], "foremost": 6, "form": [177, 258], "format": 309, "formula": [32, 247, 487, 488], "fortun": 6, "forward": [71, 120, 126, 173, 174, 183, 233, 236, 258, 270, 274, 276, 286, 288, 291, 295, 301, 303, 317, 375, 401, 406, 407, 412, 414, 428, 429, 430, 439, 444, 454, 532], "forward_iter": [38, 63], "forward_iterator_tag": [38, 63], "forward_lik": [182, 258, 259, 261, 287, 288], "forward_likeconstexpr": 183, "forwhich": [232, 478, 512], "found": [1, 18, 73, 258, 406, 428, 443, 444, 487, 488], "fox": [42, 495, 545], "fox01": [487, 488, 545], "fr": 59, "fraction": 258, "fragment": 120, "frame": [14, 17, 34, 47, 51, 52, 55, 57, 73, 75, 77, 90, 98, 191, 193, 238, 239, 241, 243, 245, 257, 258, 272, 322, 328, 332, 336, 485, 487, 488, 496, 498, 500, 501, 517, 518, 520, 529], "frame_id": [487, 488, 518, 520], "frame_idfram": 520, "frameframecoordin": 272, "frameplan": 51, "framework": [1, 548], "free": [17, 18, 51, 59, 86, 98, 272, 529, 535, 549], "free_at": [17, 51, 52, 193, 199, 272, 297, 500, 501], "free_atbool": 272, "free_cel": [17, 51, 52, 193, 199, 257, 272, 500, 501], "free_cellsauto": 272, "free_near": [17, 51, 52, 193, 199, 272, 500, 501], "free_nearbool": 272, "free_states_": 257, "friend": [30, 38, 41, 61, 62, 66, 71, 72, 80, 236, 255, 267, 286, 295, 303, 336, 337, 344, 403], "from": [3, 4, 14, 17, 19, 25, 27, 32, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 119, 120, 126, 156, 168, 173, 176, 177, 182, 232, 233, 234, 236, 243, 247, 252, 253, 255, 258, 265, 270, 274, 280, 281, 291, 294, 295, 301, 302, 303, 306, 312, 313, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 438, 445, 446, 455, 457, 459, 462, 464, 466, 478, 483, 485, 487, 488, 490, 496, 498, 500, 512, 519, 532, 533, 535, 537, 538, 542, 543, 549], "from_valu": 485, "from_vector": [193, 199, 253, 255, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "from_vectorstat": 253, "frommsg": [519, 522, 523, 527, 542, 543], "frommsgvoid": 543, "front": [41, 65, 66, 193, 199, 258], "frontconstexpr": 41, "full": [3, 41, 65, 66, 98, 193, 199, 258, 488], "fullconstexpr": 41, "fulli": [6, 258], "function": [3, 4, 6, 18, 19, 27, 28, 29, 30, 32, 34, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 119, 120, 126, 168, 170, 176, 179, 188, 233, 234, 243, 247, 254, 256, 258, 262, 265, 266, 268, 274, 276, 278, 280, 281, 286, 288, 290, 294, 295, 300, 303, 306, 308, 312, 315, 316, 317, 324, 336, 342, 344, 346, 348, 350, 352, 354, 356, 360, 363, 366, 368, 370, 372, 374, 376, 377, 380, 383, 385, 388, 390, 392, 394, 396, 399, 401, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 438, 443, 444, 445, 446, 461, 462, 464, 466, 474, 482, 483, 492, 496, 498, 500, 508, 514, 519, 520, 524, 525, 526, 527, 531, 532, 535, 538, 540, 542, 543], "functor": [2, 532, 538], "further": [11, 55, 77, 98], "furthermor": [3, 6], "fuse": 342, "futur": [19, 485, 487, 488], "g": [3, 13, 15, 17, 19, 20, 38, 40, 41, 65, 66, 107, 258, 259, 473, 475, 477, 532], "g1": 19, "g2": 19, "gap": 2, "gaussian": [32, 102, 247, 253, 320, 334, 487, 488, 549], "gazebo": 548, "gazebo_model_path": 548, "ga\u0161per": 39, "gen": [126, 274, 295, 315], "gener": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549], "generatoran": [79, 81], "generatorth": [79, 81], "gentle2009computationalstatist": 255, "geometri": [238, 239, 256, 257], "geometry_msg": [456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 482, 483, 485, 487, 488, 518, 519, 542, 543], "get": [4, 5, 40, 41, 45, 49, 51, 100, 110, 114, 120, 173, 174, 241, 258, 259, 261, 272, 288, 295, 303, 313, 336, 406, 407, 444, 446, 457, 459, 462, 464, 466, 483, 487, 488, 498, 500, 529, 548], "get_default_neighbors_kernel": [268, 338], "get_execution_polici": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "get_execution_policyauto": 483, "get_execution_policystat": [457, 459], "get_initial_estim": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "get_initial_estimateauto": [457, 459, 483], "get_map_client_": [459, 464, 473, 477], "get_map_client_beluga_amcl": 465, "get_map_client_map": 459, "get_map_client_ro": 459, "get_motion_model": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "get_motion_modelauto": [457, 459, 483], "get_random_engin": [291, 295, 303, 412, 413, 414, 415, 420, 421], "get_random_state_gener": 26, "get_sensor_model": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "get_sensor_modelauto": [457, 459], "get_sensor_modelbeluga": 483, "getconstexpr": 41, "getmap": [458, 459, 487], "getsimpleextentdim": 268, "getspac": 268, "getyaw": [529, 543], "giorgio": [42, 495, 545], "git": [5, 548], "github": [5, 32, 107, 120, 177, 247, 532, 548], "given": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 34, 40, 41, 43, 45, 49, 51, 53, 65, 67, 69, 71, 73, 79, 94, 96, 98, 100, 102, 110, 112, 114, 116, 119, 120, 126, 170, 171, 176, 177, 181, 233, 234, 236, 241, 243, 249, 255, 258, 265, 269, 272, 274, 276, 280, 281, 294, 297, 299, 300, 302, 303, 311, 313, 315, 350, 354, 360, 368, 424, 436, 439, 444, 453, 457, 459, 462, 464, 466, 483, 490, 496, 520, 529, 535, 549], "global": [14, 17, 457, 459, 462, 464, 485, 487, 488], "global_frame_id": [485, 487, 488], "global_loc": 487, "global_localization_callback": [457, 459, 462, 463, 464, 465, 473, 475], "global_localization_callbackbool": 459, "global_localization_callbackvoid": 457, "global_localization_server_": [457, 459, 462, 464, 473, 477], "global_localization_server_beluga_amcl": [463, 465], "global_localization_server_glob": [457, 459], "global_localization_server_rclcpp": 457, "global_localization_server_ro": 459, "glpuga": [32, 247], "gmock": [306, 307], "go": [22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 479, 481, 482, 483, 489, 490, 493, 494, 513, 515, 516, 517, 528, 529, 531, 532, 540, 541, 542, 543, 549], "goe": 2, "golden": 313, "good": [1, 4, 32, 258, 320], "googl": 545, "googletest": 306, "gov": 177, "govern": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "grai": [232, 478, 512], "graph": [22, 24, 29, 31, 33, 35, 37, 40, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 482, 489, 493, 516, 528, 531, 540, 542], "graphic": [233, 479, 513], "great": 3, "greater": [47, 65, 107, 119, 422, 436], "green": [232, 478, 512, 549], "grid": [13, 15, 17, 20, 27, 32, 42, 45, 49, 51, 53, 55, 56, 77, 78, 86, 87, 90, 98, 99, 100, 110, 123, 124, 158, 182, 233, 247, 248, 249, 256, 257, 258, 265, 268, 271, 272, 297, 298, 299, 310, 311, 342, 449, 450, 455, 457, 459, 462, 464, 466, 483, 487, 488, 491, 495, 496, 500, 501, 513, 525, 528, 529, 535, 545], "grid_": [32, 297, 529], "gridgrid": 98, "gridnew": 77, "gridoccup": [55, 77, 500], "gridth": 86, "grisetti": [42, 495, 545], "ground": 1, "group": [112, 119, 120, 177, 253, 258, 313, 455], "group_bi": [119, 120], "gsb07": [487, 488, 545], "gt": [12, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 50, 52, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 72, 73, 76, 78, 80, 82, 85, 87, 89, 91, 93, 94, 96, 99, 101, 102, 104, 108, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 328, 330, 332, 334, 337, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 362, 364, 367, 369, 378, 379, 381, 382, 384, 387, 388, 390, 392, 394, 397, 400, 402, 403, 404, 406, 407, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 424, 426, 428, 429, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 478, 482, 483, 485, 489, 490, 491, 493, 494, 496, 497, 498, 499, 500, 501, 502, 507, 509, 511, 512, 513, 516, 517, 518, 519, 520, 525, 527, 528, 529, 531, 532, 533, 535, 539, 540, 541, 542, 543], "gtest": [160, 182, 306, 441], "guarante": 120, "guard": [175, 289], "guid": [109, 254, 255, 256, 257, 258, 445, 446, 548], "guidelin": 446, "h": [28, 39, 118, 176, 177, 185, 188, 200, 201, 214, 259, 268, 306, 307, 456, 457, 458, 459, 473, 475, 482, 483, 485, 507, 518, 527, 528, 529, 541, 542, 543], "h5": 268, "h5cpp": [268, 482, 483], "h5f_acc_rdonli": 268, "h5file": 268, "ha": [1, 19, 75, 107, 120, 183, 255, 258, 278, 396, 399], "hack": 32, "half": [275, 485, 487, 488, 533], "halfwai": 342, "handl": [177, 549], "handle_map_with_default_initial_pos": [459, 464, 465, 473, 475], "handle_map_with_default_initial_posevoid": 459, "happen": [26, 318, 485, 487, 488, 490, 532, 533], "hardwar": 6, "has_common_tuple_typ": [27, 118, 233, 258, 265, 371, 443, 444], "has_common_tuple_type_v": [258, 259, 264, 443, 444], "has_common_tuple_type_vconstexpr": 444, "has_common_tuple_type_vconveni": 444, "has_common_tuple_typemeta": 444, "has_member_st": [288, 406], "has_member_state_v": 288, "has_member_variable_st": [288, 406], "has_member_variable_state_v": 288, "has_member_variable_weight": [288, 428], "has_member_variable_weight_v": 288, "has_member_weight": [288, 428], "has_member_weight_v": 288, "has_non_member_st": [288, 406], "has_non_member_state_v": 288, "has_non_member_weight": [288, 428], "has_non_member_weight_v": 288, "has_single_el": [27, 118, 233, 258, 265, 288, 373, 428, 443, 444], "has_single_element_v": [258, 259, 264, 443, 444], "has_single_element_vconstexpr": 444, "has_single_element_vconveni": 444, "has_single_elementmeta": [288, 444], "has_stat": 281, "has_state_v": 281, "has_valu": [120, 268, 272], "has_weight": 281, "has_weight_v": 281, "hash": [25, 27, 43, 92, 96, 112, 114, 116, 118, 120, 156, 182, 206, 220, 233, 258, 265, 268, 312, 313, 316, 317, 366, 405, 424, 430, 431, 439], "hash_combin": 366, "hash_impl": [312, 313], "hash_implconstexpr": 313, "hasher": [43, 112, 114, 116, 313, 424, 425, 439], "hashera": 424, "hasherhash": 424, "hashesrang": 258, "hasn": 488, "have": [3, 4, 6, 13, 18, 19, 65, 71, 75, 107, 120, 177, 232, 241, 253, 258, 368, 401, 416, 446, 478, 512, 548, 549], "hawksbil": 11, "hdf5": [268, 485], "head": [12, 41, 253, 532], "head_index": 41, "header": [175, 289, 306, 487, 488, 518, 520], "heading_rot": [126, 274], "heavili": 3, "height": [13, 45, 49, 51, 110, 111, 124, 201, 214, 243, 249, 450, 500, 501, 507, 509, 529], "height_": 450, "heightstd": [450, 529], "help": [443, 485, 487, 488, 490, 533, 544], "helper": [92, 155, 182, 233, 258, 288, 316, 459, 464], "here": [2, 27, 32, 107, 182, 184, 186, 187, 189, 190, 193, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 258, 259, 265, 279, 334, 460, 472, 473, 484, 491, 506, 507, 522, 525, 530], "hidden": [30, 232, 344, 478, 512], "hierarchi": [28, 461, 492], "high": 4, "higher": [2, 3, 90, 120, 334], "highest": 258, "highli": 549, "histogram": 532, "histori": 6, "hit": [6, 32, 55, 75, 77, 90, 98, 247, 268, 320, 334, 487, 488], "hmmm": 120, "hold": [13, 27, 119, 120, 233, 265, 358], "home": [6, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 462, 464, 466, 496, 498, 500, 533, 535, 537, 538], "homogen": [41, 433], "how": [5, 26, 232, 234, 258, 318, 326, 340, 478, 485, 487, 488, 512, 548, 549], "howev": [4, 65, 549], "hpp": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 182, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 462, 464, 466, 471, 472, 496, 498, 500, 504, 506, 514, 533, 535, 537, 538, 549], "hppaction": 127, "hppassign": 127, "hppauxiliar": [34, 182, 241, 243], "hppbeam_model": 132, "hppbearing_sensor_model": 132, "hppbresenham": 136, "hppcircular_arrai": 128, "hppconcept": [124, 182, 247, 249, 257, 272, 311, 450], "hppcontain": 128, "hppdata": [132, 143, 146], "hppdefin": [182, 285], "hppdifferential_drive_model": 129, "hppdistance_map": 144, "hppeffective_sample_s": 142, "hppevery_n": 130, "hppgener": [494, 506], "hppimplement": [23, 25, 32, 36, 41, 120, 122, 126, 171, 182, 247, 251, 255, 268, 270, 274, 276, 281, 283, 288, 291, 293, 297, 301, 303, 305, 315, 437, 439, 441, 442, 446, 448, 452, 490, 494, 506], "hppinclud": [26, 36, 182, 446, 506], "hppindexing_iter": 139, "hpplandmark": 182, "hpplandmark_detection_typ": [146, 147], "hpplandmark_sensor_model": [132, 146], "hpplikelihood_field_model": [132, 144, 145], "hppmessag": [494, 506, 532], "hppmotion": 129, "hppmultivariate_normal_distribut": 131, "hppmultivariate_uniform_distribut": 131, "hppndt_sensor_model": 145, "hppnormal": 127, "hppoccupancy_grid": 145, "hppomnidirectional_drive_model": [129, 141], "hppon_effective_size_drop": 130, "hppon_mot": 130, "hppparticl": [135, 138], "hppparticle_trait": [134, 137, 148], "hpppolici": 130, "hpppropag": [127, 134, 135], "hpprandom": [131, 132], "hppraycast": 144, "hppreweight": [127, 134, 135], "hppro": 472, "hppsensor": 132, "hppsophus_match": 133, "hppsophus_print": 133, "hppsparse_value_grid": 145, "hppstationary_model": [129, 141], "hpptake_while_kld": 148, "hpptest": 133, "hppthrun_recovery_probability_estim": [137, 138], "hpptuple_trait": 141, "hpptuple_vector": 128, "hpputil": [494, 506], "hppvalue_grid": 145, "hppzip": 140, "hsize_t": 268, "hsl_and_hsv": 532, "hsv_to_rgb_altern": 532, "html": [313, 366], "http": [5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 107, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 360, 366, 374, 406, 428, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 545, 548], "hue": [531, 532], "humbl": [11, 548], "hypot": 32, "i": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 200, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 364, 366, 367, 369, 370, 371, 372, 373, 374, 378, 379, 381, 382, 384, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 496, 497, 498, 499, 500, 501, 504, 506, 507, 512, 513, 514, 515, 516, 517, 518, 522, 525, 527, 528, 529, 530, 531, 532, 533, 534, 536, 539, 540, 541, 542, 543, 544, 548, 549], "id": [96, 120, 241, 258, 312, 313, 358, 446, 487, 488, 518, 520, 532, 545], "idea": 302, "ident": 19, "identif": 243, "identifi": [38, 53, 172, 437, 543], "idiom": [2, 3], "idsindex": 312, "ie": [59, 100, 110, 158, 182, 248, 272, 311, 450, 487, 488, 500, 527, 529, 532, 542, 543, 549], "ieee": [42, 495, 545], "ifdef": 289, "ifndef": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "ignor": [102, 243, 487, 488], "iii": 258, "ill": 258, "imag": 57, "implement": [1, 2, 3, 4, 18, 22, 26, 27, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 61, 65, 69, 79, 96, 98, 100, 104, 107, 119, 120, 121, 123, 124, 125, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 170, 173, 176, 177, 178, 180, 181, 182, 233, 234, 235, 242, 244, 246, 247, 248, 249, 252, 254, 256, 257, 258, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 287, 290, 291, 294, 295, 296, 298, 300, 301, 302, 306, 308, 310, 311, 312, 314, 316, 318, 344, 346, 348, 350, 352, 354, 356, 374, 388, 390, 392, 394, 396, 403, 412, 414, 416, 418, 420, 422, 424, 426, 436, 437, 438, 439, 442, 443, 445, 446, 449, 450, 451, 453, 454, 455, 487, 488, 489, 490, 491, 494, 496, 504, 506, 513, 514, 516, 520, 525, 528, 533, 549], "impli": [12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "implicit": [92, 255], "import": [4, 55, 57, 75, 77, 90, 247, 258, 290, 300, 354, 487, 488], "improv": [42, 495, 545], "imput": 42, "ina": 527, "inact": [457, 462, 466, 483], "inc": [12, 23, 25, 26, 30, 32, 34, 36, 38, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "includ": [4, 13, 15, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 182, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 455, 462, 463, 464, 465, 466, 467, 472, 496, 497, 498, 499, 500, 501, 506, 533, 534, 535, 536, 537, 538, 539, 548, 549], "includebeluga": [12, 22, 23, 24, 25, 35, 36, 121, 122, 127, 128, 129, 130, 131, 132, 133, 151, 172, 250, 251, 284, 285, 287, 288, 292, 293, 304, 305, 440, 441, 447, 448, 451, 452], "includebeluga_amcl": [456, 457, 458, 459, 471, 482, 483, 485], "includebeluga_ro": [489, 490, 493, 494, 504, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "includebelugaact": [29, 30, 134, 135, 159, 269, 270, 290, 291, 300, 301], "includebelugaalgorithm": [26, 119, 120, 136, 137, 138, 156, 168, 169, 170, 171, 176, 177, 180, 181, 296, 297, 312, 313, 442], "includebelugaalgorithmraycast": [37, 38, 167], "includebelugacontain": [40, 41, 139, 140, 153, 445, 446], "includebelugadetail": [163, 175, 289], "includebelugamot": [125, 126, 141, 161, 273, 274, 314, 315], "includebelugapolici": [142, 150, 178, 179, 275, 276, 277, 278, 286], "includebelugarandom": [143, 164, 252, 253, 254, 255, 256, 257], "includebelugasensor": [31, 32, 33, 34, 144, 145, 146, 157, 242, 243, 246, 247, 268], "includebelugasensordata": [123, 124, 147, 158, 240, 241, 244, 245, 248, 249, 267, 271, 272, 298, 299, 310, 311, 449, 450], "includebelugatest": [160, 306, 307, 308, 309], "includebelugatyp": [162, 238, 239], "includebelugatype_trait": [155, 280, 281, 316, 317, 443, 444], "includebelugautil": [154, 183, 235, 236], "includebelugaview": [148, 149, 173, 174, 282, 283, 294, 295, 302, 303, 436, 437, 438, 439, 453, 454], "includeciabatta": [39, 166], "inclus": 104, "incorpor": 4, "incorrect": [104, 176, 253, 548], "increment": [71, 236, 390], "independ": [75, 255, 302, 549], "index": [13, 15, 17, 27, 28, 41, 45, 49, 50, 51, 52, 65, 66, 72, 100, 110, 111, 114, 116, 154, 169, 177, 182, 189, 202, 206, 215, 220, 221, 222, 223, 226, 228, 233, 235, 236, 247, 249, 258, 265, 268, 272, 408, 437, 443, 444, 461, 492, 500, 501], "index_at": [13, 45, 49, 50, 51, 52, 110, 111, 124, 202, 215, 249, 272, 500, 501], "index_atstd": 249, "index_sequ": [27, 118, 225, 226, 233, 258, 265, 312, 313, 362, 443, 444, 446], "index_sequenceunus": 312, "indexable_": 236, "indexablecontain": 71, "indexcontain": 71, "indexgrid": [49, 51], "indexing_iter": [40, 41, 71, 154, 182], "indexingiter": [41, 65, 72, 118, 189, 202, 206, 215, 220, 221, 222, 223, 226, 228, 233, 235, 236, 258], "indexingiteratora": [41, 236], "indexingiteratorindexingiter": 236, "indexpair": 169, "indic": [15, 17, 49, 51, 65, 114, 116, 176, 258, 272, 302, 485, 487, 488], "indirect": 29, "indirectli": [22, 24, 29, 31, 33, 35, 37, 40, 119, 121, 123, 125, 168, 170, 173, 176, 178, 180, 235, 238, 242, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 436, 438, 443, 445, 447, 449, 451, 453, 489, 516, 528, 531, 540, 542], "indistinguish": 19, "individu": [55, 416], "industri": 1, "inequ": [38, 63, 324], "infer": 1, "infin": 177, "infinit": [19, 177, 253, 295, 302, 303], "inflat": [120, 487, 488], "inflect": 342, "info": [255, 529], "inform": [4, 26, 34, 42, 43, 243, 255, 258, 313, 354, 380, 490, 495, 496, 532, 545], "inher": 55, "inherit": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 100, 101, 103, 105, 106, 108, 109, 110, 111, 113, 115, 117, 232, 233, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 362, 364, 367, 369, 370, 371, 372, 373, 374, 378, 379, 381, 382, 384, 387, 389, 391, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 407, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 435, 462, 463, 464, 465, 466, 467, 478, 479, 497, 498, 499, 500, 501, 512, 513, 534, 536, 539], "init": [107, 108, 446], "initi": [4, 26, 43, 44, 65, 96, 107, 120, 173, 202, 215, 338, 380, 446, 457, 459, 462, 464, 466, 483, 485, 490, 496, 497, 507, 509, 548], "initial_cov_": 487, "initial_pos": [485, 487, 488], "initial_pose_": 487, "initial_pose_callback": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "initial_pose_callbackvoid": [457, 459, 483], "initial_pose_sub_": [457, 459, 462, 464, 466, 473, 477, 483], "initial_pose_sub_beluga_amcl": [463, 465, 467], "initial_pose_sub_pos": [457, 459, 483], "initial_pose_sub_rclcpp": [457, 483], "initial_pose_sub_ro": 459, "initial_pose_top": [485, 487, 488], "initial_posit": 549, "initial_position_distribut": 549, "initial_position_sigma": 549, "initialize_from_estim": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "initialize_from_estimatebool": [457, 459, 483], "initialize_from_map": [457, 459, 462, 463, 464, 465, 473, 475, 490, 496, 497, 507, 509], "initialize_from_mapbool": [457, 459], "initialize_from_mapvoid": 490, "initializer_list": [107, 108, 446], "initializevoid": [26, 490], "initialpos": [485, 487, 488], "inject": [53, 104], "inlin": [12, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 98, 99, 101, 102, 108, 111, 112, 113, 115, 117, 174, 179, 258, 268, 270, 276, 278, 281, 283, 286, 288, 291, 295, 301, 303, 306, 307, 336, 337, 367, 369, 397, 400, 402, 415, 421, 430, 431, 437, 439, 444, 454, 485, 496, 518, 520, 527, 531, 532, 539, 541, 543], "inlineconstexpr": [29, 65, 104, 107, 114, 116, 173, 178, 258, 269, 275, 277, 282, 290, 294, 300, 302, 346, 350, 354, 368, 390, 392, 394, 399, 401, 410, 412, 414, 420, 422, 424, 436, 438, 453], "inlineconstexprnoexcept": [65, 69, 92, 104, 406, 428], "inlineconstexprprotect": 416, "inlineexplicit": [55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 94, 99, 100, 101, 108, 110, 111, 112, 113, 114, 115, 116, 117, 402, 498, 500, 538, 539], "inlineexplicitconstexpr": [86, 107, 390], "inlineexplicitconstexprnoexcept": 69, "inlineexplicitnoexcept": 98, "inlinenoexcept": [65, 71, 79], "inlinestat": [378, 379, 381, 382, 384], "input": [4, 29, 30, 69, 70, 96, 102, 119, 181, 258, 282, 302, 344, 346, 350, 354, 416, 424, 437, 438, 443, 444, 446], "input_iter": [258, 445, 446], "input_rang": [303, 439, 446], "inputnext": 69, "insert": [26, 119, 120, 234, 294, 295, 318, 412, 414, 439, 446, 532], "insert_iter": [445, 446], "insid": [268, 338], "instal": [6, 548, 549], "instanc": [13, 14, 15, 16, 17, 18, 20, 21, 26, 27, 31, 32, 33, 34, 43, 55, 57, 65, 67, 75, 77, 79, 81, 90, 94, 100, 119, 120, 125, 126, 173, 232, 233, 242, 243, 246, 247, 255, 258, 265, 268, 273, 274, 320, 322, 326, 330, 334, 336, 338, 340, 342, 350, 354, 412, 424, 430, 457, 459, 462, 464, 466, 478, 483, 512, 527], "instanti": [45, 47, 49, 51, 53, 232, 457, 459, 462, 464, 466, 478, 483, 512], "instead": [5, 22, 24, 29, 31, 32, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 79, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 241, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 486, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542, 549], "int": [4, 13, 17, 20, 30, 38, 45, 46, 49, 50, 51, 52, 53, 54, 63, 64, 71, 72, 100, 101, 110, 111, 124, 170, 171, 172, 232, 236, 249, 253, 258, 267, 268, 270, 272, 288, 291, 299, 301, 308, 309, 311, 336, 338, 344, 346, 348, 350, 352, 354, 356, 366, 367, 380, 406, 424, 428, 439, 478, 485, 500, 501, 512, 517, 549], "int64_t": 268, "int8_t": [40, 41, 258, 529, 535, 536], "integ": [15, 20, 27, 37, 38, 59, 62, 63, 64, 65, 186, 189, 190, 195, 198, 202, 203, 206, 215, 217, 220, 221, 222, 226, 228, 233, 258, 265, 268, 312, 313, 324, 325, 366, 487, 488, 549], "integer_rang": 485, "integerinteg": 61, "integr": [2, 11, 71, 436, 456, 458, 471, 472, 482, 514, 544, 548, 549], "integral_const": [41, 233, 313, 444], "intellig": [42, 495, 545], "intend": [1, 5], "intens": 77, "interchang": [2, 120], "interest": 258, "interfac": [3, 27, 36, 39, 107, 151, 158, 182, 233, 234, 244, 258, 265, 304, 445, 460, 486, 491, 494, 504, 506, 514, 531], "intern": [19, 26, 42, 79, 104, 107, 177, 255, 390, 442, 495, 545], "internalcontain": [27, 107, 108, 118, 184, 186, 187, 189, 190, 194, 195, 196, 198, 207, 208, 209, 210, 221, 222, 224, 225, 226, 228, 233, 258, 265, 445, 446], "internalcontainercontain": 107, "interpret": [232, 258, 478, 491, 500, 512, 513, 525, 528, 529, 535], "interspers": 295, "interv": [26, 65, 318, 455, 487, 488, 532], "inth": 527, "intrins": 320, "inv_resolut": 299, "invalid": [43, 79, 81, 255, 496, 518, 529, 541, 543], "invalid_argu": 268, "invers": [126, 177, 241, 243, 247, 267, 274, 278, 297], "inverse_mean": 177, "invert": [39, 532], "investig": [32, 247], "invis": [232, 478, 512], "invoc": [19, 119], "invok": [30, 65, 79, 120, 344, 424, 439], "invoke_result_t": [26, 169], "involv": 29, "io": 268, "ioformat": 309, "iostream": [308, 309], "iota": [176, 177, 516, 517], "iresult": 312, "iron": 11, "irwini": 11, "is_adding_const": 183, "is_arithmetic_v": [27, 92, 115, 117, 118, 176, 177, 206, 209, 220, 222, 224, 226, 233, 258, 265, 312, 313, 317], "is_base_of_v": [27, 118, 187, 193, 199, 210, 218, 222, 224, 225, 226, 228, 229, 233, 252, 253, 255, 258, 265, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "is_complet": [233, 444], "is_const_v": 183, "is_directori": 268, "is_execution_policy_v": [270, 291, 301, 346, 348, 350, 352, 354, 356], "is_floating_point_v": [245, 267], "is_fre": [17, 272, 507, 509, 529, 535, 536], "is_freestat": 529, "is_invocable_r_v": [286, 401, 402, 439], "is_invocable_v": [26, 291, 295], "is_lvalue_reference_v": [183, 303], "is_nothrow_swappable_v": [41, 65, 66], "is_obstacl": 169, "is_occupi": [17, 272, 507, 509, 529, 535, 536], "is_occupiedstat": 529, "is_particl": 281, "is_particle_range_v": [170, 171, 258, 270, 281, 291, 301, 303, 439, 442], "is_particle_v": 281, "is_random_distribut": 303, "is_random_distribution_v": 303, "is_range_closur": 30, "is_range_closure_v": [30, 344], "is_same_v": [26, 30, 34, 41, 65, 120, 126, 176, 177, 243, 258, 268, 303, 311, 313, 444, 520, 531, 532], "is_tuple_lik": [118, 233, 258, 288, 406, 428, 443, 444], "is_tuple_like_v": [27, 118, 225, 226, 233, 258, 259, 264, 265, 281, 364, 365, 373, 409, 443, 444], "is_tuple_like_vconstexpr": 444, "is_tuple_like_vconveni": 444, "is_tuple_likemeta": [288, 444], "is_unknown": [507, 509, 529, 535, 536], "is_unknownstat": 529, "is_valid_neighbor": 120, "isapprox": 255, "isbn": 545, "isnan": 245, "issu": [6, 32, 120, 247, 253], "it_": 303, "iter": [26, 27, 37, 38, 40, 41, 43, 61, 62, 64, 65, 66, 71, 72, 107, 118, 154, 176, 177, 182, 189, 202, 206, 215, 220, 221, 222, 226, 228, 233, 235, 236, 258, 265, 295, 302, 318, 324, 325, 412, 414, 437, 445, 446, 453, 490, 496], "iter_mov": [410, 411, 454], "iter_reference_t": [410, 411, 454], "iter_rvalue_reference_t": [410, 411, 454], "iter_value_t": [258, 410, 411, 445, 446, 454], "iter_zip_with": 454, "iterator_categori": [38, 63, 64, 71, 72, 215, 226, 236], "iterator_categorycategori": 236, "iterator_categoryiter": 38, "iterator_categorystd": [38, 236], "iterator_t": [295, 303], "iterator_trait": [41, 65], "iteratorbresenham": [38, 233], "iteratorindexingiter": 41, "iteratorinlin": 64, "iteratorinlineexplicit": 64, "iteratoriter": [38, 41], "ith": [40, 41, 258], "itr": 311, "its": [3, 26, 27, 34, 41, 65, 71, 73, 120, 176, 177, 233, 236, 241, 258, 265, 363, 401, 410, 411, 444, 454, 457, 459, 462, 464, 466, 483, 486, 548, 549], "itself": [2, 3, 30, 169, 457, 462, 466, 483, 485, 488, 520], "j": 258, "jalisco": 11, "jazzi": 11, "jmangelson": 258, "jointli": 258, "journal": 42, "jtc1": 313, "jtsmeaaaqbaj": 545, "jump": [487, 488], "just": [6, 344, 548], "k": [28, 185, 188, 216, 226, 229, 259, 439, 507, 549], "k_i": 485, "kalman": 4, "karrowbodylength": 532, "karrowheadlength": 532, "karrowheadwidth": 532, "karrowlength": 532, "kb": 532, "kbit": 313, "kdefaultangularresolut": 532, "kdefaultkldz": [258, 424, 425, 438, 439], "kdefaultkldzconstexpr": 439, "kdefaultkldzdefault": 439, "kdefaultlinearresolut": 532, "kdefaultneighborkernel2d": 268, "kdefaultneighborkernel3d": 268, "kdefaultprob": [216, 229, 295, 412, 413], "kdefaultprobabilitybeluga": 413, "kdefaultprobabilitydefault": 295, "kdefaultprobabilitystat": 295, "kdefaultthreshold": [216, 229, 276, 392, 393], "kdefaultthresholdbeluga": 393, "kdefaultthresholddefault": 276, "kdefaultthresholdstat": 276, "kdifferentialmodelnam": 485, "keep": [3, 6, 258, 488, 548, 549], "kei": [2, 6, 100, 119, 120, 311, 549], "kept": [65, 107], "kernel": [90, 268, 338, 549], "kextrapolateonread": [40, 41, 258], "key_typ": [100, 101, 120, 216, 226, 268, 311], "key_typekei": 311, "key_typetypenam": 311, "keywithprior": 120, "keyword": 39, "kfib": 313, "kflippingrot": 126, "kfreevalu": [507, 511, 529, 535], "kfreevaluebeluga_ro": 536, "kfreevaluefre": 529, "kfreevaluestat": 529, "kg": 532, "kglobal": [51, 257, 272], "kind": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "kindex": 444, "kinemat": 549, "klayoutrevers": [40, 41, 65, 258], "kld": [26, 42, 234, 258, 318, 438, 439, 455, 485, 487, 488, 490, 495, 533, 545], "kld_condit": [258, 259, 261, 424, 438, 439], "kld_conditionauto": 439, "kld_epsilon": [26, 216, 229, 318, 490, 507, 511, 533], "kld_epsilonbeluga": 319, "kld_epsilonbeluga_ro": 534, "kld_epsilondoubl": [26, 490], "kld_epsilonmaximum": 490, "kld_epsilonus": 26, "kld_z": [26, 216, 229, 318, 490, 507, 511, 533], "kld_zbeluga": 319, "kld_zbeluga_ro": 534, "kld_zdoubl": [26, 490], "kld_zupper": 490, "kld_zuse": 26, "klocal": [51, 272], "kmatch": 444, "kminpointspercel": 268, "kminvari": 268, "kmodifi": [38, 59, 60, 192, 216], "kmodifieddefinit": 38, "knav2differentialmodelnam": 485, "knav2omnidirectionalmodelnam": 485, "knone": [40, 41, 65, 258], "know": [295, 446, 549], "known": [2, 57, 75, 326, 340, 455, 457, 459, 462, 464, 466, 483, 487, 488, 549], "knumdim": 268, "koccupiedvalu": [507, 511, 529, 535], "koccupiedvaluebeluga_ro": 536, "koccupiedvalueoccupi": 529, "koccupiedvaluestat": 529, "komnidirectionalmodelnam": 485, "kr": 532, "krolloveronwrit": [40, 41, 258], "ksinglelin": 309, "kstandard": [38, 59, 60, 192, 216], "kstandardstandard": 38, "kstationarymodelnam": 485, "ktupleindexambigu": 444, "ktupleindexnotfound": 444, "kullback": [258, 438], "kunknownvalu": [507, 511, 529, 535], "kunknownvaluebeluga_ro": 536, "kunknownvaluestat": 529, "kunknownvalueunknown": 529, "l": [14, 28, 118, 185, 188, 200, 203, 217, 226, 229, 241, 259, 473, 475, 477, 502, 507], "l133": 177, "l2": [90, 336], "l262": 107, "label": [232, 478, 512], "lack": 55, "lambda": [2, 120], "lambda_short": [32, 217, 229, 320, 488], "lambda_shortbeluga": 321, "lambda_shortdoubl": 32, "lambda_shortintrins": 32, "landmark": [27, 33, 34, 57, 73, 74, 75, 157, 158, 162, 182, 233, 234, 238, 239, 240, 241, 242, 243, 258, 265, 305, 328, 332, 455], "landmark_a_bearing_in_sensor": 241, "landmark_a_position_in_world": 241, "landmark_b_bearing_in_sensor": 241, "landmark_b_distance_in_world_squar": 241, "landmark_b_position_in_world": 241, "landmark_b_squared_in_world_squar": 241, "landmark_bearing_in_robot": 243, "landmark_bearing_in_sensor": 34, "landmark_detection_typ": [33, 34, 162, 182, 240, 241, 242, 243, 328, 332], "landmark_in_robot_posit": 243, "landmark_map": [34, 57, 58, 73, 75, 76, 146, 158, 182, 243, 549], "landmark_map_": [34, 243], "landmark_mapmap": [57, 75], "landmark_posit": 549, "landmark_position_in_sensor": 241, "landmark_position_in_world": 243, "landmark_range_in_robot": 243, "landmark_sensor_model": [75, 157, 182, 304, 305, 330], "landmarkbearing3": [34, 73, 74, 238, 239, 241, 258, 259, 263, 328], "landmarkbearing3bear": [239, 241], "landmarkbearing3eigen": [239, 241], "landmarkbearingdetect": [34, 57, 118, 187, 189, 229, 238, 239, 258, 329], "landmarkbearingdetectionlandmark": [233, 239], "landmarkcategori": [34, 73, 74, 238, 239, 241, 243, 258, 259, 263, 328, 332], "landmarkcategorytyp": [239, 241], "landmarkcategoryuint32_t": [239, 241], "landmarkmap": [33, 34, 58, 74, 76, 118, 186, 193, 195, 199, 203, 204, 206, 211, 217, 218, 220, 221, 224, 226, 227, 230, 233, 240, 241, 242, 243, 258], "landmarkmapbas": [34, 233, 241, 243], "landmarkmapboundari": [73, 74, 238, 239, 241, 258, 259, 263], "landmarkmapboundariesboundari": [239, 241], "landmarkmapboundarieseigen": [239, 241], "landmarkmapclass": [57, 75], "landmarkmapinlin": 74, "landmarkmaplandmarkmap": 241, "landmarkmodelparam": [75, 118, 224, 229, 242, 243, 258, 331], "landmarkmodelparamparamet": [233, 243], "landmarkposition3": [73, 74, 238, 239, 241, 243, 258, 259, 263, 332], "landmarkposition3eigen": [239, 241], "landmarkposition3posit": [239, 241], "landmarkpositiondetect": [73, 75, 118, 187, 189, 229, 238, 239, 241, 243, 258, 333], "landmarkpositiondetectionlandmark": [233, 239], "landmarks_": 241, "landmarks_set_position_data": [73, 74, 217, 226, 241], "landmarks_set_position_datastd": 241, "landmarks_set_position_datavector": 241, "landmarksensormodel": [21, 27, 76, 118, 203, 206, 211, 217, 218, 220, 221, 224, 226, 227, 230, 233, 234, 242, 243, 258, 265, 330], "landmarksensormodel2d": [242, 243, 258, 259, 263], "landmarksensormodel3d": [242, 243, 258, 259, 263], "landmarksensormodelgener": 243, "landmarksensormodellandmarksensormodel": 243, "landmarkslist": 73, "lang": 41, "languag": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "laps": [487, 488], "larg": [1, 4, 241, 258, 446, 488], "larger": 3, "laser": [47, 158, 182, 233, 244, 247, 258, 334, 457, 459, 462, 464, 466, 483, 485, 487, 488, 498, 517], "laser_callback": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "laser_callbackvoid": [457, 459, 483], "laser_lambda_short": 487, "laser_likelihood_max_dist": [487, 488], "laser_max_rang": [485, 487, 488], "laser_min_rang": [485, 487, 488], "laser_model_typ": [487, 488], "laser_scan": [47, 158, 182, 456, 457, 459, 464, 465, 482, 483, 489, 490, 493, 494, 496, 497, 498, 504, 506, 518], "laser_scan_connection_": [457, 459, 462, 464, 466, 473, 477, 483], "laser_scan_connection_beluga_amcl": [463, 465, 467], "laser_scan_connection_connect": [457, 459, 483], "laser_scan_connection_message_filt": [457, 459, 483], "laser_scan_filter_": [457, 459, 462, 464, 466, 473, 477, 483], "laser_scan_filter_beluga_amcl": [463, 465, 467], "laser_scan_filter_std": [457, 459, 483], "laser_scan_filter_transform": [457, 459, 483], "laser_scan_sub_": [457, 459, 462, 464, 466, 473, 477, 483], "laser_scan_sub_beluga_amcl": [463, 465, 467], "laser_scan_sub_las": [457, 459, 483], "laser_scan_sub_message_filt": 459, "laser_scan_sub_std": [457, 483], "laser_scanlas": 496, "laser_sigma_hit": 487, "laser_z_hit": 487, "laser_z_max": 487, "laser_z_rand": 487, "laser_z_short": 487, "laserscan": [2, 47, 279, 457, 458, 459, 462, 463, 464, 465, 466, 467, 483, 487, 488, 490, 491, 494, 496, 497, 499, 502, 504, 506, 507, 509, 510, 513, 514, 516, 517, 518, 520, 525], "laserscanconstsharedptr": [498, 499, 517, 518], "laserscaninlin": 499, "laserscaninlineexplicit": 499, "laserscanlaserscan": 517, "laserscanthin": [490, 513, 517, 518], "last": [6, 41, 65, 66, 107, 108, 258, 326, 340, 422, 436, 446, 462, 464, 466, 487, 488, 490, 533, 549], "last_in": 446, "last_known_estimate_": [457, 459, 462, 464, 466, 473, 477, 483], "last_known_estimate_beluga_amcl": [463, 465, 467], "last_known_estimate_last": [457, 459, 483], "last_known_estimate_std": [457, 459, 483], "last_known_map_": [459, 464, 473, 477], "last_known_map_beluga_amcl": 465, "last_known_map_last": 459, "last_known_map_nav_msg": 459, "last_known_odom_transform_in_map_": [457, 459, 462, 464, 466, 473, 477, 483], "last_known_odom_transform_in_map_beluga_amcl": [463, 465, 467], "last_known_odom_transform_in_map_last": [457, 459, 483], "last_known_odom_transform_in_map_std": [457, 459, 483], "last_out": 446, "lastsentinel": 65, "latch": 488, "latest": 5, "latest_pose_": 278, "launch": [6, 548], "law": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "layer": [104, 520, 521, 525], "layout": [3, 15, 41, 65, 258], "lazili": [173, 234, 282, 401], "lead": 295, "least": [5, 173, 312, 488, 532], "left": [286, 290, 403, 404], "left_hash": 313, "legend": [45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 462, 464, 466, 498, 500], "leibler": [258, 438], "length": [3, 20], "length_error": 41, "length_errorif": 65, "less": [29, 77, 107, 120, 258, 485, 487, 488, 533], "let": [32, 549], "level": [27, 182, 233, 265, 459, 460, 464, 465, 472, 479, 491, 506, 513, 525], "leverag": [2, 486], "lflag": [40, 41, 258], "li": 42, "lib": [366, 549], "librari": [2, 3, 34, 36, 100, 120, 151, 182, 234, 239, 241, 243, 281, 283, 287, 306, 366, 455, 480, 514, 544, 549], "licens": [1, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "lidar": [6, 32, 55, 75, 77, 90, 247, 268, 487, 488, 498, 514], "lie": [177, 253, 258, 268, 338, 455, 488], "lifecycl": [456, 457, 460, 462, 466, 479, 480, 482, 483, 488], "lifecycle_nod": [456, 457, 482, 483], "lifecyclenod": [457, 462, 466, 479, 483, 485], "lifecyclenodeinterfac": [457, 483], "lifecyclepublish": [457, 462, 466, 483], "lifetim": [55, 57, 75, 77, 90, 532], "lifo": 65, "like": [3, 6, 27, 37, 40, 41, 67, 71, 94, 102, 107, 126, 155, 167, 182, 233, 234, 258, 265, 274, 281, 288, 295, 297, 315, 360, 363, 371, 372, 374, 406, 428, 443, 444, 445, 448, 488, 532, 549], "likelihood": [2, 32, 77, 90, 157, 182, 233, 234, 246, 247, 258, 268, 300, 305, 336, 338, 455, 488, 549], "likelihood_at": [90, 91, 203, 217, 267, 268, 336, 337], "likelihood_atdoubl": [267, 268], "likelihood_data": 247, "likelihood_field": [77, 78, 203, 217, 247, 487, 488], "likelihood_field_": 247, "likelihood_field_model": [77, 132, 157, 182, 304, 305, 334], "likelihood_fieldconst": 247, "likelihoodfieldmodel": [2, 21, 27, 78, 118, 203, 206, 211, 217, 218, 220, 221, 224, 226, 227, 230, 233, 234, 246, 247, 258, 265, 334, 490, 496], "likelihoodfieldmodellikelihood": 247, "likelihoodfieldmodellikelihoodfieldmodel": 247, "likelihoodfieldmodelparam": [77, 118, 218, 224, 229, 231, 246, 247, 258, 335], "likelihoodfieldmodelparamparamet": [233, 247], "limit": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 71, 83, 86, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 312, 313, 315, 316, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 488, 490, 494, 517, 518, 529, 532, 533, 541, 543], "limited_rang": 446, "line": [27, 37, 38, 59, 62, 63, 64, 118, 186, 189, 190, 195, 198, 202, 203, 206, 215, 217, 220, 221, 222, 226, 228, 233, 258, 265, 324, 325, 532], "line_list": 532, "linear": [15, 17, 27, 49, 110, 120, 158, 177, 182, 233, 248, 258, 265, 272, 342, 449, 450, 455], "linear_clustering_resolut": [112, 113, 313], "linear_clustering_resolutionclust": 112, "linear_grid": [49, 158, 182, 271, 272, 449, 450], "linear_hash_resolut": [120, 217, 229, 342], "linear_hash_resolutionbeluga": 343, "linear_hash_resolutionclust": 120, "linear_hash_resolutiondoubl": 120, "linear_resolut": [507, 511, 520, 531, 532, 538], "linear_resolutionbeluga_ro": 539, "linear_resolutionconst": 532, "linear_resolutionlinear": 520, "linear_resolutionresolut": 532, "lineargrid2": [17, 49, 279], "linearli": 532, "linebresenham": 38, "linelin": 38, "link": [184, 186, 187, 189, 190, 193, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 259, 306, 473, 507, 522], "linux": 11, "list": [5, 28, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 184, 186, 187, 189, 190, 193, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 233, 259, 266, 279, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 361, 365, 366, 368, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 399, 401, 403, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 433, 461, 462, 464, 466, 473, 479, 484, 492, 496, 498, 500, 507, 513, 522, 526, 530, 532, 533, 535, 538], "listen": [457, 459, 462, 464, 466, 483], "literatur": [268, 338], "littl": 1, "ll": 243, "llvm": [175, 289], "load": [3, 485, 488, 548], "load_from_hdf5": 268, "local": [1, 3, 5, 6, 11, 14, 17, 26, 27, 32, 43, 107, 120, 233, 247, 258, 265, 318, 455, 485, 487, 488, 489, 490, 491, 494, 496, 498, 504, 506, 513, 520, 525, 533, 548, 549], "local_setup": 548, "localization_launch": 6, "localization_map": 6, "localization_params_fil": 6, "locat": 241, "log": [12, 34, 126, 177, 243, 253, 274, 278, 313, 462, 464, 466, 532, 543], "logarithm": 177, "logic": [3, 286, 403], "long": [1, 19, 104], "longer": 3, "longitudin": 340, "longstand": 486, "look": [27, 107, 233, 234, 258, 265, 445], "lookup": 258, "loss": [3, 487, 488, 490, 533], "lot": 446, "low": [4, 446, 549], "lower": [47, 120, 485, 487, 488, 533], "lsquo": 43, "lt": [12, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 50, 52, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 72, 73, 76, 78, 80, 82, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 99, 101, 102, 104, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 328, 330, 332, 334, 337, 339, 340, 342, 344, 346, 348, 350, 352, 354, 356, 359, 362, 364, 367, 369, 378, 379, 381, 382, 384, 387, 388, 390, 392, 394, 397, 400, 402, 403, 404, 406, 407, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 424, 426, 428, 429, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 478, 482, 483, 485, 489, 490, 491, 493, 494, 496, 497, 498, 499, 500, 501, 502, 507, 509, 511, 512, 513, 516, 517, 518, 519, 520, 525, 527, 528, 529, 531, 532, 533, 535, 539, 540, 541, 542, 543], "lvalu": [19, 29, 40, 41, 61, 258], "m": [21, 28, 41, 42, 65, 66, 100, 118, 185, 188, 200, 204, 218, 226, 229, 259, 473, 475, 477, 507, 549], "m0": 437, "m1": 437, "m_pi": 32, "m_usedclass": [232, 478, 512], "ma": [42, 495, 545], "macro": [39, 306], "made": 5, "magazin": 42, "mai": [5, 6, 12, 23, 25, 26, 29, 30, 32, 34, 36, 38, 39, 41, 65, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 548, 549], "main": [12, 19, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 119, 120, 123, 124, 125, 126, 168, 169, 170, 171, 173, 176, 177, 178, 180, 181, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 265, 267, 268, 269, 271, 272, 273, 274, 275, 277, 280, 281, 282, 286, 287, 288, 290, 294, 296, 297, 298, 299, 300, 302, 306, 310, 311, 312, 313, 314, 315, 316, 317, 436, 438, 439, 442, 443, 444, 445, 446, 449, 450, 453, 489, 490, 491, 493, 516, 517, 518, 520, 525, 528, 529, 531, 532, 549], "maintain": [43, 496], "major": [488, 500, 527, 529, 542, 543], "make": [3, 29, 32, 65, 247, 253, 258, 302, 306, 342, 368, 531, 532, 549], "make_action_closur": [30, 270, 291, 301], "make_cluster_map": 120, "make_from_pair": 120, "make_from_st": [26, 258, 259, 264, 280, 281, 303, 490, 549], "make_from_state_fn": [118, 206, 220, 233, 258, 280, 281, 303, 369], "make_from_state_fnfunct": 281, "make_from_statea": [281, 303], "make_from_stateconstexpr": [281, 303], "make_index_sequ": [313, 360, 444, 446], "make_likelihood_field": 247, "make_opt": [249, 297], "make_origin_transform": 529, "make_pair": [120, 490], "make_particle_filt": [457, 459, 462, 463, 464, 465, 466, 467, 473, 475, 483], "make_particle_filterauto": [457, 459, 483], "make_polici": [179, 258, 259, 264, 276, 278, 286], "make_policy_fn": [179, 258, 276, 278, 286], "make_policyconstexpr": [179, 276, 278, 286], "make_policymak": [179, 276, 278, 286], "make_priority_queu": [119, 120], "make_priority_queueauto": 120, "make_signed_t": [71, 236, 313], "make_subrang": 446, "make_transform": 255, "make_tupl": 313, "make_unsigned_t": 313, "make_view_closur": [295, 303, 437, 439], "manag": [5, 57, 75, 457, 462, 466, 483, 487, 488], "mangelson": 258, "mangelson2020tro": 258, "mani": [1, 2, 3, 26, 318, 485, 487, 488, 549], "manifold": 258, "manual": [26, 43, 490, 496], "map": [6, 26, 27, 32, 34, 42, 43, 44, 55, 56, 57, 58, 65, 73, 75, 76, 77, 90, 100, 119, 120, 158, 168, 169, 177, 182, 233, 238, 239, 240, 241, 243, 247, 253, 258, 265, 268, 334, 338, 457, 459, 462, 464, 465, 466, 482, 483, 485, 487, 488, 490, 495, 496, 497, 531, 532, 545, 548], "map_boundaries_": 241, "map_callback": [457, 459, 462, 463, 464, 465, 473, 475], "map_callbackvoid": [457, 459], "map_distribution_": 490, "map_limit": [73, 74, 204, 218, 241], "map_limitslandmarkmapboundari": 241, "map_path": 485, "map_servic": 487, "map_siz": 549, "map_sub_": [457, 459, 462, 464, 473, 477], "map_sub_beluga_amcl": [463, 465], "map_sub_occup": [457, 459], "map_sub_rclcpp": 457, "map_sub_ro": 459, "map_timer_": [459, 464, 473, 477], "map_timer_beluga_amcl": 465, "map_timer_callback": [459, 464, 465, 473, 475], "map_timer_callbackvoid": 459, "map_timer_ro": 459, "map_timer_tim": 459, "map_top": [487, 488], "map_typ": [26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 100, 101, 218, 226, 243, 247, 268, 311], "map_typemap": [32, 247, 268], "map_typemaptyp": 311, "map_typeoccupancygrid": [32, 247], "map_typesparsegridt": 268, "map_typeunderli": 311, "map_yaml_path": 6, "mapnew": 55, "mapoccup": 496, "mapped_typ": [90, 100, 101, 218, 226, 268, 311], "mapped_typetypenam": 311, "mapped_typevalu": 311, "mapth": 119, "maptyp": [101, 189, 197, 208, 209, 216, 218, 222, 224, 226, 233, 258, 310, 311], "maptypeassoci": 100, "margin": 4, "marker": [457, 462, 518, 520, 531, 532], "marker_arrai": [456, 457, 518], "markerarrai": [457, 462, 488, 518, 520, 531, 532], "mask": [40, 41, 258], "mass": 549, "match": [3, 4, 34, 55, 65, 67, 86, 94, 102, 114, 116, 126, 176, 243, 258, 274, 315, 443, 444, 488, 520, 549], "matcher": [160, 182, 306, 307, 441], "mathrm": [4, 549], "matric": [308, 455], "matrix": [79, 82, 172, 177, 204, 206, 218, 220, 224, 226, 228, 233, 253, 254, 255, 258, 267, 268, 308, 309, 336, 376, 377, 380, 383, 385, 482, 483, 527, 532, 540, 541, 542, 543], "matrix2": [176, 177, 258], "matrix2xd": 267, "matrix3": [176, 177, 258, 527, 542, 543], "matrix3d": [457, 459, 462, 463, 464, 465, 466, 467, 483, 490, 496, 497], "matrix3xd": 267, "matrix6": [26, 120, 176, 177, 258, 490], "matrix_s": [218, 229, 253, 380], "matrix_sizebeluga": 384, "matrix_typ": [81, 82, 218, 226, 255], "matrix_typematrix": 255, "matrix_typeth": 255, "max": [32, 257, 268, 303, 306, 320, 424, 425, 439, 485, 487, 488, 498, 499, 517, 532], "max_beam": [485, 487, 488, 498, 499, 517], "max_beams_": 517, "max_beamsmaximum": 498, "max_bin_weight": 532, "max_eigenvalue_index": 177, "max_eigenvector": 177, "max_el": [119, 120, 300, 301], "max_laser_dist": [218, 229, 247, 334], "max_laser_distancebeluga": 335, "max_laser_distancedoubl": 247, "max_laser_distancemaximum": 247, "max_obstacle_dist": [218, 229, 247, 334], "max_obstacle_distancebeluga": 335, "max_obstacle_distancedoubl": 247, "max_obstacle_distancemaximum": 247, "max_particl": [26, 218, 229, 318, 485, 487, 488, 490, 507, 511, 533], "max_particlesbeluga": 319, "max_particlesbeluga_ro": 534, "max_particlesmaximum": [26, 490], "max_particlesstd": [26, 490], "max_prior": 120, "max_rang": [14, 47, 98, 99, 245, 297, 498, 499, 507, 509, 517], "max_range_": [297, 517], "max_rangeauto": 517, "max_rangemaximum": [98, 498], "max_siz": [41, 65, 66, 204, 218], "max_sizeconstexpr": 41, "max_weight": 120, "maxcoeff": 177, "maxim": 241, "maxima": 258, "maximum": [14, 41, 65, 258, 318, 320, 334, 485, 487, 488, 498, 517, 533], "maxmaximum": 424, "mayb": 120, "maybe_ndt": 268, "maybe_unus": [102, 103, 312, 313, 315], "mcl": [1, 11, 455, 514, 549], "mean": [13, 15, 17, 26, 79, 80, 81, 82, 119, 120, 176, 177, 218, 229, 232, 255, 258, 267, 268, 336, 342, 455, 478, 487, 488, 512, 549], "mean_": 255, "mean_pose_vector": 177, "mean_transl": 177, "meana": 81, "meanan": 79, "meanbeluga": 337, "meaneigen": 267, "meanin": 107, "meanmean": 267, "means_dataset": 268, "means_matrix": 268, "meanth": 258, "measur": [4, 21, 26, 32, 43, 44, 55, 57, 75, 77, 90, 91, 98, 234, 267, 268, 300, 336, 337, 338, 487, 488, 490, 498, 517, 549], "measurement_cel": 268, "measurement_typ": [21, 26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 218, 226, 243, 247, 268], "measurement_typemeasur": [32, 34, 243, 247, 268], "measurement_typestd": [32, 34, 243, 247, 268], "measurementmeasur": 43, "mechan": [26, 258, 318], "meet": [79, 81], "member": [18, 19, 27, 28, 36, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 151, 182, 233, 258, 265, 266, 281, 283, 287, 295, 303, 306, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 361, 363, 365, 366, 368, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 399, 401, 403, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 433, 444, 446, 461, 462, 464, 466, 487, 488, 492, 496, 498, 500, 526, 533, 535, 538], "memori": [13, 15, 65, 120, 258, 456, 457, 458, 459, 528, 529, 531, 532], "merit": 258, "messag": [459, 462, 464, 465, 466, 487, 488, 490, 491, 498, 500, 504, 506, 513, 514, 516, 517, 519, 520, 521, 525, 527, 528, 529, 531, 532, 540, 541, 542, 543], "message_filt": [456, 457, 458, 459, 462, 464, 466, 482, 483], "messagea": 520, "messagefilt": [457, 459, 462, 464, 466, 483], "messagemark": 520, "messagemessag": 520, "messageparticl": 520, "meta": [176, 177, 233, 258, 360, 363, 370, 372, 374, 408, 443], "metaprogram": 3, "meter": [14, 26, 98, 100, 112, 311, 318, 485, 487, 488, 498, 500, 520, 529, 532, 538, 549], "method": [1, 4, 42, 43, 61, 77, 107, 253, 255, 258, 406, 428, 443, 444, 459, 464, 496], "metric": [26, 150, 182, 275, 276, 285], "might": [32, 120], "migrat": [4, 486], "min": [41, 120, 126, 241, 247, 257, 258, 274, 297, 303, 318, 424, 425, 438, 439, 498, 499, 517, 532, 549], "min_angl": [278, 394, 395, 399, 400], "min_angle_": 278, "min_angleth": 399, "min_dist": [278, 394, 395, 399, 400, 549], "min_distance_": 278, "min_distanceth": 399, "min_el": [241, 549], "min_likelihood": 90, "min_particl": [26, 218, 229, 318, 485, 487, 488, 490, 507, 511, 533], "min_particle_weight": 549, "min_particlesbeluga": 319, "min_particlesbeluga_ro": 534, "min_particlesminimum": [26, 490], "min_particlesstd": [26, 490], "min_rang": [14, 47, 245, 498, 499, 507, 509, 517], "min_range_": 517, "min_rangeauto": 517, "min_rangeminimum": 498, "min_scale_factor": 532, "minim": [3, 34, 73, 241, 548], "minimization_funct": 241, "minimum": [3, 14, 258, 318, 399, 438, 485, 487, 488, 498, 517, 533, 549], "minimum_likelihood": [218, 229, 268, 338], "minimum_likelihoodbeluga": 339, "minimum_likelihooddoubl": 268, "minimum_likelihoodlikelihood": 268, "minminimum": [258, 424], "miodrag": 42, "misc": 454, "mismatch": 4, "miss": [32, 42, 320], "mit": [42, 495, 545], "mix": 3, "mixin": 39, "mixin_bas": 39, "mixin_impl": 39, "mixtur": [487, 488], "mkdir": [5, 548, 549], "mm": 532, "mobil": [486, 487, 488], "modal": 4, "model": [2, 4, 11, 16, 17, 21, 27, 31, 32, 33, 34, 36, 43, 55, 57, 65, 67, 75, 77, 90, 94, 102, 125, 126, 151, 157, 161, 162, 182, 233, 234, 238, 241, 242, 243, 246, 247, 250, 251, 258, 265, 268, 273, 274, 300, 301, 302, 304, 305, 314, 315, 354, 355, 356, 357, 455, 457, 459, 462, 464, 466, 482, 483, 485, 490, 496], "modela": 354, "modern": [2, 41, 444], "modifi": [59, 71, 236], "modified_": 38, "modul": 455, "modular": 455, "monocular": 57, "mont": [1, 2, 11, 26, 27, 43, 233, 258, 265, 318, 455, 489, 490, 491, 494, 496, 504, 506, 513, 520, 525, 533, 549], "more": [22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 119, 121, 123, 125, 168, 170, 173, 176, 177, 178, 180, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 256, 258, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 482, 489, 493, 496, 498, 500, 516, 519, 520, 521, 527, 528, 531, 533, 535, 537, 538, 540, 542], "most": [1, 3, 34, 65, 120, 457, 462, 466, 483, 488, 532], "mostderiv": 39, "mostli": [267, 336], "motion": [4, 11, 16, 26, 27, 35, 36, 43, 67, 75, 94, 102, 150, 151, 182, 233, 234, 258, 265, 277, 278, 285, 326, 340, 394, 396, 398, 399, 455, 457, 459, 462, 464, 466, 482, 483, 485, 490, 496, 549], "motion_distribut": 549, "motion_model": [26, 43, 44, 490, 496, 497, 549], "motion_model_": [26, 490], "motion_model_sigma": 549, "motion_model_vari": [457, 459, 462, 464, 490, 496, 497, 507, 510], "motion_model_variantbeluga_amcl": [463, 465], "motion_model_variantget": [457, 459], "motion_model_variantmot": 490, "motion_model_variantstd": 490, "motion_modelmot": 43, "motion_modelvari": 496, "motioninclud": 141, "motionmodel": [2, 26, 44, 67, 94, 102, 184, 193, 194, 199, 202, 207, 211, 215, 221, 227, 233, 279, 482, 483], "motionmodelclass": 43, "motionmodelvari": [466, 482, 483], "motionmodelvariantbeluga_amcl": 467, "motionmodelvariantget": 483, "motionmodelvariantstd": 483, "motionmodelvariantsupport": 483, "motionmot": 129, "movabl": 21, "move": [26, 29, 30, 32, 34, 38, 41, 59, 65, 79, 120, 171, 183, 236, 241, 243, 247, 255, 268, 270, 278, 281, 286, 291, 295, 297, 301, 302, 303, 311, 410, 439, 446, 450, 454, 490, 517, 529, 549], "move_tag": [410, 411, 454], "movement": [485, 490, 533, 549], "msg": [456, 457, 462, 463, 466, 467, 482, 483, 485, 488, 498, 499, 500, 501, 517, 518, 519, 520, 527, 529, 531, 532, 540, 541, 542, 543], "msgthe": 527, "mt19937": 303, "mth": [234, 446, 453, 454], "much": [3, 326, 340, 446], "multi": 79, "multimod": 4, "multinomi": [234, 302, 455, 549], "multipl": [4, 241, 297, 300, 390, 446, 532], "multipli": [34, 177, 243, 354, 549], "multivari": [27, 79, 81, 83, 84, 86, 88, 164, 182, 233, 234, 252, 254, 255, 256, 257, 258, 265, 293, 455], "multivariate_distribution_trait": [27, 79, 118, 164, 182, 187, 193, 199, 210, 218, 222, 224, 225, 226, 228, 229, 233, 254, 255, 258, 265, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "multivariate_distribution_traitsforward": [253, 255], "multivariate_normal_distribut": [26, 79, 81, 164, 182, 292, 293], "multivariate_uniform_distribut": [83, 84, 86, 88, 132, 164, 182, 292, 293], "multivariatenormaldistribut": [2, 19, 26, 80, 118, 187, 204, 206, 207, 208, 218, 220, 221, 222, 224, 226, 228, 233, 234, 254, 255, 258, 259, 261, 490], "multivariatenormaldistributionmultivari": [26, 255], "multivariatenormaldistributionmultivariatenormaldistribut": 255, "multivariatenormaldistributionparam": [79, 82, 118, 204, 206, 218, 220, 224, 226, 228, 233, 254, 255, 258], "multivariatenormaldistributionparammultivari": 255, "multivariatenormaldistributionparammultivariatenormaldistributionparam": 255, "multivariateuniformdistribut": [84, 85, 86, 87, 88, 89, 118, 204, 206, 218, 220, 233, 234, 256, 257, 258, 259, 261, 490], "multivariateuniformdistributionconstexpr": 257, "multivariateuniformdistributionmultivariateuniformdistribut": 257, "multivariateuniformdistributionprimari": 257, "mundan": 1, "must": [3, 5, 6, 19, 43, 45, 47, 49, 51, 53, 55, 61, 65, 71, 77, 79, 81, 100, 110, 258, 302, 406, 428, 487, 488, 527, 549], "mutabl": [18, 286, 303, 439, 459], "mutat": [3, 61], "mutex": [458, 459, 464], "mutex_": [459, 464, 473, 477], "mutex_beluga_amcl": 465, "mutex_mutex": 459, "mutex_std": 459, "n": [4, 20, 25, 26, 27, 28, 32, 38, 40, 41, 53, 66, 100, 116, 117, 118, 120, 124, 150, 156, 173, 174, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 215, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 233, 234, 241, 258, 259, 265, 267, 268, 285, 298, 299, 310, 311, 312, 313, 336, 367, 390, 434, 446, 453, 454, 468, 473, 475, 477, 532, 549], "n_": [487, 488, 533], "n_eff": 485, "naction": [27, 265], "nahuel": 490, "name": [13, 14, 15, 16, 17, 18, 19, 20, 21, 38, 43, 45, 47, 49, 51, 53, 55, 57, 67, 75, 77, 79, 90, 94, 102, 155, 171, 172, 182, 234, 270, 279, 280, 291, 301, 303, 350, 437, 439, 442, 448, 457, 459, 462, 464, 466, 483, 485, 487, 488, 520, 543], "namebeluga": [52, 60, 501], "namespac": [12, 18, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 119, 120, 123, 124, 125, 126, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 288, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 406, 428, 436, 437, 438, 439, 442, 443, 444, 445, 446, 449, 450, 453, 454, 457, 459, 483, 485, 489, 490, 491, 493, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "nan": 47, "nasa": 177, "native_doubl": 268, "native_int": 268, "natur": [2, 3, 42, 495, 545], "nav": 488, "nav2": [274, 480, 487, 488, 514], "nav2_amcl": [485, 486, 488, 548], "nav2_bringup": 548, "nav_msg": [456, 457, 458, 459, 462, 463, 464, 465, 487, 488, 490, 491, 494, 500, 504, 506, 513, 514, 518, 520, 525, 528, 529], "navig": [487, 488, 548], "nbeluga": 525, "nbeluga_amcl": 460, "nbeluga_rosth": [491, 525], "nbelugath": [27, 265], "nbsp": [29, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 119, 173, 176, 178, 258, 269, 275, 277, 282, 290, 294, 300, 302, 306, 308, 312, 326, 334, 336, 338, 340, 342, 344, 346, 350, 354, 368, 380, 390, 392, 394, 399, 401, 406, 410, 412, 414, 416, 420, 422, 424, 428, 430, 436, 438, 443, 453, 462, 464, 466, 496, 498, 500, 520, 527, 531, 538], "nclusterizer_detail": [27, 265], "ncovari": 267, "ndash": [42, 495], "ndetail": [27, 265, 491, 525], "ndim": [20, 45, 46, 49, 50, 51, 52, 54, 101, 110, 111, 187, 189, 196, 197, 203, 208, 209, 216, 217, 218, 219, 220, 222, 223, 224, 226, 229, 233, 267, 268, 298, 299, 310, 311, 337, 339, 500, 501, 513], "ndim1": 20, "ndimdimens": [53, 100], "ndt": [27, 90, 233, 258, 265, 267, 268, 336, 460, 466, 471, 472, 479, 482, 483], "ndt_amcl_nod": [466, 471, 472], "ndt_cell": [182, 268, 336, 337, 482, 483], "ndt_cell_typ": [90, 91, 219, 226, 268], "ndt_cell_typendt": 268, "ndt_cell_typetypenam": 268, "ndt_sensor_model": [90, 132, 182, 304, 305, 338, 366, 482, 483], "ndtamcl": [482, 483], "ndtamclnod": [467, 468, 473, 475, 477, 482, 483], "ndtamclnode2d": [479, 483], "ndtamclnodeexplicit": 467, "ndtamclnodendtamclnod": 483, "ndtamclnodeprotect": 467, "ndtamclvari": [466, 467, 482, 483], "ndtamclvariantal": 483, "ndtamclvariantstd": 483, "ndtcell": [118, 187, 203, 217, 218, 219, 220, 223, 224, 226, 229, 233, 258, 267, 268, 337], "ndtcell2d": [258, 259, 263, 267, 268, 482, 483], "ndtcell2f": [258, 259, 263, 267], "ndtcell3d": [258, 259, 263, 267, 268], "ndtcell3f": [258, 259, 263, 267], "ndtcellrepresent": [267, 268], "ndtmaprepresent": [466, 482, 483], "ndtmaprepresentationt": 268, "ndtmodelparam": [90, 118, 189, 218, 219, 229, 233, 258, 268, 339], "ndtmodelparam2d": [258, 259, 263, 268], "ndtmodelparam3d": [258, 259, 263, 268], "ndtmodelparamparamet": 268, "ndtsensormodel": [27, 91, 118, 203, 205, 206, 217, 218, 219, 220, 221, 224, 226, 230, 233, 258, 265, 268, 338, 466, 482, 483], "ndtsensormodelndt": 268, "ndtsensormodelndtsensormodel": 268, "nearbi": 549, "nearest": [17, 45, 49, 51, 53, 73, 100, 110, 124, 168, 169, 241, 243, 247, 258, 272, 299, 311, 549], "nearest_obstacle_distance_map": [168, 169, 247, 258, 259, 261], "nearest_obstacle_distance_mapauto": [169, 247], "nearest_obstacle_index": 169, "necessari": [3, 5, 6, 43, 268, 485, 487, 488, 496, 533, 548], "necessarili": 65, "need": [0, 2, 3, 19, 30, 55, 107, 109, 178, 241, 258, 277, 295, 303, 410, 437, 455, 485, 487, 488, 527, 548, 549], "neg": 255, "negat": [288, 406, 428], "neigen": 265, "neighbor": [45, 49, 90, 96, 97, 120, 205, 219, 258, 338], "neighbor_hash": 120, "neighbor_pos": 120, "neighborhood": [13, 15, 45, 49, 51, 110, 124, 247, 249], "neighborhood4": [13, 15, 45, 46, 49, 50, 51, 52, 110, 111, 124, 205, 219, 247, 249, 500, 501], "neighborhood4auto": [124, 249], "neighbors_funct": [120, 168, 169, 247, 258], "neighbors_functiongiven": 258, "neighbors_kernel": [219, 229, 268, 338], "neighbors_kernelbeluga": 339, "neighbors_kernelneighbor": 268, "neighbors_kernelstd": 268, "neighborsauto": 120, "neighborsfunct": [120, 168, 169, 247, 258], "neighborsfunctiona": 258, "neighborst": 258, "nelement": 173, "neural": [42, 495, 545], "never": 1, "new": [4, 19, 32, 34, 39, 55, 57, 75, 77, 81, 92, 107, 120, 177, 234, 243, 247, 255, 258, 281, 344, 354, 368, 416, 446, 453, 454, 455, 549], "new_cap": [107, 108, 446], "new_capnew": 107, "newer": 258, "next": [26, 43, 79, 255, 295, 303, 490, 496, 549], "next_cluster_id": 120, "ninjemi": 11, "nio": 265, "nip": [42, 495, 545], "nmaximum": 65, "nmsgcompat": 525, "nnumber": 312, "node": [32, 456, 457, 460, 462, 466, 479, 480, 482, 483, 485, 487, 548], "node_interfac": [457, 483], "nodelet": [458, 459, 460, 464, 479, 480], "nodeopt": [457, 462, 463, 466, 467, 483], "nodiscard": [26, 32, 34, 38, 39, 41, 120, 124, 126, 181, 183, 236, 241, 243, 245, 247, 249, 253, 255, 257, 267, 268, 272, 274, 295, 297, 299, 303, 311, 315, 446, 450, 490, 517, 529], "noetic": 11, "noexcept": [38, 40, 41, 59, 60, 65, 66, 69, 71, 79, 92, 93, 98, 104, 107, 181, 183, 236, 255, 258, 288, 295, 297, 303, 317, 406, 407, 410, 411, 428, 429, 442, 443, 444, 446, 454, 490], "noexceptbeluga": [60, 66, 70, 72, 80, 93, 99, 105, 108, 407, 429], "noexceptcheck": 236, "noexceptclear": [41, 446], "noexceptcomput": 236, "noexceptconstruct": [181, 297], "noexceptconstructor": 442, "noexceptderefer": 236, "noexceptforward": 236, "noexceptget": 41, "noexcepthelp": 444, "noexceptmov": 255, "noexceptpop": 41, "noexceptpost": 236, "noexceptpr": 236, "noexceptreset": [26, 181, 442], "noexceptreturn": [41, 183, 288, 444, 446], "noexceptrewind": 236, "noexceptupd": 181, "nois": [32, 102, 126, 247, 274, 320, 326, 334, 340, 342, 485, 487, 488, 549], "noiseless": 258, "noisi": [32, 320, 549], "nolint": [38, 41, 172, 175, 183, 255, 289, 309, 317, 437, 444, 454, 543], "nomin": 65, "nomotion_update_callback": [457, 459, 462, 463, 464, 465, 473, 475], "nomotion_update_callbackbool": 459, "nomotion_update_callbackvoid": 457, "nomotion_update_server_": [457, 459, 462, 464, 473, 477], "nomotion_update_server_beluga_amcl": [463, 465], "nomotion_update_server_no": [457, 459], "nomotion_update_server_rclcpp": 457, "nomotion_update_server_ro": 459, "non": [0, 1, 26, 27, 40, 41, 51, 65, 77, 98, 176, 177, 233, 258, 265, 267, 286, 302, 403, 406, 428], "none": [65, 269], "nonneg": [487, 488], "nor": 549, "norm": [34, 126, 177, 243, 274, 297], "normal": [4, 22, 23, 26, 27, 32, 34, 79, 81, 159, 164, 176, 177, 182, 233, 234, 241, 243, 253, 254, 255, 258, 265, 267, 293, 336, 342, 346, 348, 438, 439, 455, 485, 487, 488, 490, 533, 549], "normal_distribut": [2, 81, 82, 126, 234, 255, 274, 315, 549], "normalize_and_cap_weight": 120, "normalize_and_squar": 171, "normalize_base_fn": [118, 206, 220, 269, 270, 347, 348, 349], "normalize_base_fnimplement": [233, 270], "normalize_base_fninlin": [347, 349], "normalize_fn": [118, 206, 220, 269, 270, 349], "normalize_fnimplement": [233, 270], "normalize_fninlin": 349, "normalizeconstexpr": 270, "normalized_weight": [171, 176, 177, 258], "normalized_weights_view": 177, "normalized_weightsrang": [176, 258], "normalizedefinit": 270, "note": [18, 51, 53, 65, 258, 268, 498, 549], "notethi": [55, 57, 75, 77], "noth": 107, "notic": [34, 120, 177, 243], "now": [5, 313, 549], "nowher": [71, 236], "npolici": [27, 265], "nsophu": 265, "nsophussophu": 525, "nstate_detail": [27, 265], "nstd": [27, 265], "ntest": 265, "ntf2tf2": 525, "nth": 234, "nth_element": 120, "ntr": 177, "nullari": 295, "nullopt": [26, 43, 45, 49, 73, 100, 124, 241, 249, 297, 311, 466, 483, 490, 496], "nullptr": [236, 268, 466, 483, 517], "num_dim": [90, 219, 229, 267, 268, 336], "num_dimbeluga": 337, "num_dimnumb": 267, "num_dimstat": 267, "num_particl": [120, 219, 229, 358], "num_particlesbeluga": 359, "num_particlesnumb": 120, "num_particlesstd": 120, "num_quaternion": 177, "number": [4, 11, 26, 84, 86, 88, 100, 110, 119, 120, 177, 232, 234, 241, 258, 275, 308, 311, 313, 318, 336, 350, 358, 412, 414, 416, 420, 438, 450, 478, 485, 487, 488, 490, 498, 512, 532, 533, 549], "number_of_cycl": 549, "number_of_non_zero_weight": 177, "number_of_particl": 549, "numer": [27, 93, 118, 119, 120, 155, 170, 171, 176, 177, 182, 205, 206, 219, 220, 233, 258, 265, 269, 270, 287, 288, 316, 317, 431, 442, 455, 483, 549], "numeric_limit": [27, 92, 118, 177, 233, 265, 270, 313, 316, 317, 432, 439, 442, 485, 498, 499, 517], "numericconstexpr": 317, "numerichelp": [120, 288, 317], "nview": [27, 265], "nweight_detail": [27, 265], "o": [5, 28, 32, 65, 118, 185, 188, 200, 206, 220, 241, 247, 258, 259, 267, 308, 309, 336, 337, 446, 473, 475, 494, 502, 504, 506, 507, 514, 531, 548], "object": [18, 19, 23, 27, 29, 30, 32, 34, 79, 81, 92, 120, 126, 149, 159, 171, 173, 177, 178, 179, 182, 233, 234, 241, 243, 247, 255, 258, 265, 268, 269, 270, 274, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 288, 290, 291, 294, 295, 300, 301, 302, 303, 313, 315, 344, 346, 348, 350, 352, 354, 356, 368, 388, 392, 394, 401, 403, 406, 410, 412, 414, 418, 420, 422, 424, 426, 428, 436, 437, 438, 439, 443, 444, 446, 452, 453, 454], "observ": 1, "obstacl": [17, 25, 32, 51, 156, 168, 169, 182, 247, 258, 272, 320, 334, 487, 488], "obstacle_data": [17, 51, 52, 206, 220, 247, 272, 500, 501], "obstacle_dataauto": 272, "obstacle_map": [168, 169, 247, 258], "obstacle_mapa": 258, "obtain": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 234, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 282, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 549], "occup": [17, 27, 32, 51, 55, 77, 86, 98, 158, 182, 233, 247, 256, 257, 258, 265, 271, 455, 457, 459, 462, 464, 466, 483, 487, 488, 491, 500, 513, 525, 528, 529, 535], "occupancy_grid": [51, 132, 143, 158, 182, 246, 247, 256, 257, 456, 457, 489, 490, 493, 494, 500, 504, 506, 518, 535], "occupancygrid": [2, 27, 31, 32, 56, 78, 87, 99, 118, 186, 187, 195, 196, 203, 204, 206, 208, 210, 211, 217, 218, 220, 221, 222, 224, 225, 226, 227, 230, 233, 246, 247, 256, 257, 258, 265, 296, 297, 457, 458, 459, 462, 463, 464, 465, 487, 488, 490, 491, 494, 496, 497, 501, 502, 504, 506, 507, 509, 511, 513, 514, 518, 520, 525, 528, 529, 535, 536], "occupancygrid2d": [2, 51, 55, 77, 279], "occupancygrida": [86, 98], "occupancygridconstsharedptr": [500, 501, 518, 529], "occupancygridinlin": 501, "occupancygridinlineexplicit": 501, "occupancygridinlinestat": 501, "occupancygridoccupancygrid": 529, "occupancygridthin": [490, 513, 518, 529], "occupancygridtyp": [55, 77], "occupi": [17, 529, 535], "occur": [462, 464, 466], "odom": [457, 459, 462, 464, 466, 483, 485, 487, 488], "odom_alpha1": 487, "odom_alpha2": 487, "odom_alpha3": 487, "odom_alpha4": 487, "odom_alpha5": 487, "odom_frame_id": [485, 487, 488], "odometri": [6, 27, 67, 94, 102, 125, 126, 161, 182, 233, 234, 251, 258, 265, 273, 274, 315, 326, 340, 485, 487, 488, 496], "off": [5, 104], "offici": 5, "offset": [71, 72, 236, 247, 268], "often": 3, "old": [120, 268], "older": [258, 487], "oldest": 65, "omit": 6, "omni": 487, "omni_motion_model": 274, "omnidirect": [27, 94, 161, 182, 233, 234, 251, 258, 265, 273, 274, 455, 485], "omnidirectional_dr": [485, 487, 488], "omnidirectional_drive_model": [94, 161, 182, 250, 251, 340, 482, 483], "omnidirectionaldrivemodel": [16, 27, 95, 118, 187, 206, 220, 221, 224, 226, 233, 234, 258, 265, 273, 274, 340, 482, 483, 490, 496], "omnidirectionaldrivemodelinlin": 95, "omnidirectionaldrivemodelinlineexplicit": 95, "omnidirectionaldrivemodelomnidirectionaldrivemodel": 274, "omnidirectionaldrivemodelparam": [94, 118, 189, 222, 224, 225, 229, 258, 273, 274, 341], "omnidirectionaldrivemodelparamparamet": [233, 274], "omnidirectionaldrivemodelsampl": [233, 274], "omnimotionmodel": [485, 488], "on_activ": [457, 462, 463, 466, 467, 473, 475, 483], "on_activatecallbackreturn": [457, 483], "on_cleanup": [457, 462, 463, 466, 467, 473, 475, 483], "on_cleanupcallbackreturn": [457, 483], "on_configur": [457, 462, 463, 466, 467, 473, 475, 483], "on_configurecallbackreturn": [457, 483], "on_deactiv": [457, 462, 463, 466, 467, 473, 475, 483], "on_deactivatecallbackreturn": [457, 483], "on_effective_size_drop": [26, 150, 182, 234, 284, 285, 392, 490], "on_effective_size_drop_polici": [26, 27, 118, 206, 216, 220, 229, 233, 265, 275, 276, 393], "on_effective_size_drop_policyimplement": [233, 276], "on_effective_size_drop_policyinlin": 393, "on_effective_size_drop_policystat": 393, "on_effective_size_dropconstexpr": [26, 276], "on_effective_size_droppolici": [26, 276], "on_mot": [26, 150, 182, 234, 284, 285, 394, 396, 398, 399, 490], "on_motion_fn": [26, 27, 118, 206, 220, 233, 265, 277, 278, 395, 490], "on_motion_fnimplement": [233, 278], "on_motion_fninlin": 395, "on_motion_polici": [27, 118, 206, 220, 233, 265, 277, 278, 397], "on_motion_policy_bas": [27, 118, 206, 220, 233, 265, 277, 278, 399, 400], "on_motion_policy_baseconstexpr": 278, "on_motion_policy_baseprimari": 278, "on_motion_policybas": 278, "on_motionconstexpr": [26, 278, 490], "on_motionpolici": [26, 278], "on_shutdown": [457, 462, 463, 466, 467, 473, 475, 483], "on_shutdowncallbackreturn": [457, 483], "onc": [6, 29, 437, 490], "one": [6, 27, 37, 38, 61, 63, 79, 86, 107, 120, 177, 233, 258, 265, 303, 401, 418, 487, 488, 532, 549], "oner": 3, "ones": 455, "oninit": [459, 464, 465, 473, 475], "oninitvoid": 459, "onli": [5, 12, 38, 57, 63, 65, 71, 92, 102, 107, 120, 126, 241, 258, 268, 302, 306, 312, 485, 487, 488, 532, 533, 548], "op": [65, 344], "opac": 532, "open": [6, 11, 313, 455, 548], "opendataset": 268, "oper": [2, 30, 32, 34, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 120, 126, 176, 177, 179, 181, 206, 220, 223, 234, 236, 243, 247, 255, 257, 258, 259, 261, 267, 268, 270, 274, 276, 278, 281, 286, 288, 291, 295, 301, 303, 308, 309, 313, 315, 317, 324, 325, 336, 337, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 366, 367, 368, 369, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 413, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 439, 442, 454, 491, 498, 507, 509, 513, 525, 532, 537, 538, 539, 549], "opera": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542], "opt": [5, 29, 548], "opt_landmark_bearing_in_sensor": 34, "opt_landmark_position_in_world": 243, "optim": [3, 27, 37, 38, 59, 233, 241, 258, 265, 446], "optin": 41, "option": [13, 15, 26, 34, 43, 44, 65, 73, 98, 100, 119, 120, 123, 124, 241, 243, 248, 249, 258, 273, 274, 278, 294, 295, 296, 297, 310, 311, 358, 456, 457, 459, 462, 463, 464, 465, 466, 467, 482, 483, 489, 490, 496, 497], "order": [2, 29, 39, 119, 120, 177, 258, 270, 291, 301, 346, 348, 350, 352, 354, 356, 485], "org": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 366, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "organ": 234, "orient": [177, 529, 532, 543], "origin": [14, 17, 51, 98, 247, 272, 281, 297, 490, 498, 499, 500, 501, 507, 509, 517, 529], "origin_": [517, 529], "originconst": [517, 529], "originlas": 498, "osan": 308, "ostream": [267, 308, 309, 336, 337], "other": [2, 4, 19, 38, 41, 43, 63, 64, 65, 66, 71, 72, 79, 80, 81, 82, 120, 232, 234, 236, 255, 270, 290, 291, 295, 301, 324, 325, 346, 348, 350, 352, 354, 356, 401, 412, 422, 424, 437, 439, 443, 453, 478, 487, 488, 512, 532, 548, 549], "otheranoth": 79, "otherdistribut": 79, "otherparamet": 81, "otherwis": [41, 45, 49, 65, 79, 81, 107, 390, 392, 399, 462, 464, 466, 549], "our": [6, 549], "out": [1, 3, 6, 41, 43, 520, 527, 541, 542, 543], "out_of_rang": [41, 100], "out_of_rangeif": 65, "outa": 527, "output": [27, 69, 181, 233, 258, 265, 308, 410, 442, 453, 454, 549], "output_": 181, "outth": 527, "over": [3, 4, 20, 104, 107, 234, 241, 258, 436, 487, 488, 494, 504, 506, 514, 531, 549], "overal": [120, 258], "overhead": 3, "overload": [18, 30, 38, 40, 41, 59, 63, 92, 107, 179, 234, 258, 267, 270, 286, 288, 291, 301, 306, 324, 336, 344, 346, 348, 350, 352, 354, 356, 388, 390, 392, 394, 401, 406, 410, 412, 418, 422, 424, 426, 428, 446, 454, 494, 504, 506, 514, 519, 525, 527, 532, 540, 541, 542, 543], "overrid": [457, 459, 462, 463, 464, 465, 466, 467, 483], "overridebeluga_amcl": [463, 465, 467], "overridecallback": [457, 459, 483], "overwrit": [65, 258], "overwritten": 258, "ow": 3, "own": [17, 549], "p": [4, 5, 13, 17, 18, 19, 20, 28, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 118, 124, 185, 188, 200, 207, 221, 226, 258, 272, 299, 311, 438, 439, 473, 475, 477, 485, 487, 488, 490, 500, 501, 507, 533, 548, 549], "p0": [38, 59, 60, 61, 62], "p0_": 38, "p0line": 61, "p0start": 59, "p1": [38, 59, 60, 61, 62, 120], "p1_": 38, "p1end": 59, "p1line": 61, "p2": 120, "p2593r1": 313, "packag": [5, 486], "page": [27, 42, 232, 233, 258, 265, 280, 281, 386, 478, 495, 512, 548, 549], "pair": [26, 32, 41, 43, 55, 65, 71, 77, 100, 120, 176, 177, 247, 258, 311, 437, 453, 457, 459, 462, 463, 464, 465, 466, 467, 483, 490, 496, 497], "paper": 313, "par": [485, 487, 488], "parallel": [455, 487, 488], "parallel_polici": [26, 482, 483, 490, 496], "param": [19, 26, 32, 34, 43, 44, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 79, 80, 90, 91, 94, 95, 126, 207, 221, 243, 247, 249, 255, 268, 274, 490, 496, 497], "param_typ": [19, 32, 34, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 79, 80, 90, 91, 94, 95, 126, 221, 226, 243, 247, 255, 268, 274], "param_typebearingmodelparam": 34, "param_typedifferentialdrivemodelparam": 126, "param_typelandmarkmodelparam": 243, "param_typelikelihoodfieldmodelparam": 247, "param_typemultivariatenormaldistributionparam": 255, "param_typendtmodelparam": 268, "param_typeomnidirectionaldrivemodelparam": 274, "param_typeparamet": [34, 126, 243, 247, 268, 274], "param_typeth": 255, "paramconst": 255, "paramet": [6, 19, 26, 27, 31, 32, 33, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 97, 98, 100, 102, 104, 107, 110, 112, 114, 116, 119, 120, 125, 173, 176, 232, 233, 242, 246, 254, 255, 258, 265, 267, 268, 273, 274, 302, 306, 308, 312, 318, 320, 322, 326, 330, 334, 338, 340, 342, 346, 350, 354, 368, 390, 392, 396, 398, 399, 412, 414, 420, 422, 424, 430, 432, 457, 459, 462, 464, 466, 478, 483, 485, 489, 490, 491, 496, 498, 500, 512, 513, 520, 525, 527, 533, 538, 548], "parameter": 302, "parameterdescriptor": 485, "parameters_": 120, "parametersparamet": 258, "parametervalu": 485, "parametr": [19, 258, 457, 459, 462, 464, 466, 483], "params_": [26, 32, 34, 90, 126, 243, 247, 255, 268, 274, 490], "params_path": 6, "paramsdistribut": 79, "paramsnew": 79, "paramsparamet": [43, 55, 57, 67, 75, 77, 90, 94, 496], "paramsth": 79, "paramvoid": 255, "parent": 169, "part": [4, 26, 177, 258, 318], "partial": [3, 482], "particl": [4, 11, 16, 21, 25, 26, 27, 32, 34, 42, 43, 44, 55, 57, 67, 75, 77, 90, 94, 96, 102, 104, 119, 120, 126, 149, 155, 156, 170, 171, 176, 177, 182, 206, 207, 220, 221, 233, 234, 243, 247, 258, 265, 268, 269, 270, 274, 275, 279, 280, 281, 287, 288, 290, 291, 300, 301, 302, 303, 312, 313, 315, 318, 350, 354, 358, 369, 386, 392, 405, 406, 416, 424, 428, 438, 439, 442, 448, 451, 452, 455, 457, 459, 462, 464, 466, 482, 483, 485, 490, 494, 495, 496, 497, 504, 506, 507, 509, 514, 520, 531, 532, 533, 545], "particle_cloud": [6, 488, 493, 494, 504, 506, 514, 537, 538], "particle_cloud_pub_": [457, 459, 462, 464, 466, 473, 477, 483], "particle_cloud_pub_beluga_amcl": [463, 465, 467], "particle_cloud_pub_particl": [457, 459, 483], "particle_cloud_pub_rclcpp_lifecycl": [457, 483], "particle_cloud_pub_ro": 459, "particle_cloud_timer_": [459, 464, 473, 477], "particle_cloud_timer_beluga_amcl": 465, "particle_cloud_timer_callback": [459, 464, 465, 473, 475], "particle_cloud_timer_callbackvoid": 459, "particle_cloud_timer_ro": 459, "particle_cloud_timer_tim": 459, "particle_filter_": [457, 459, 462, 464, 466, 473, 477, 483], "particle_filter_beluga_amcl": [463, 465, 467], "particle_filter_particl": [457, 459, 483], "particle_filter_std": [457, 459, 483], "particle_mark": 488, "particle_markers_pub_": [457, 462, 473, 477], "particle_markers_pub_beluga_amcl": 463, "particle_markers_pub_particl": 457, "particle_markers_pub_rclcpp_lifecycl": 457, "particle_trait": [118, 155, 170, 171, 182, 224, 226, 230, 233, 258, 269, 270, 290, 291, 300, 301, 302, 303, 368, 387, 438, 439, 442, 447, 448, 532], "particle_traitscommon": 281, "particle_typ": [26, 233, 490, 496, 497, 507, 510], "particle_typestd": 490, "particle_typeweight": 490, "particlecloud": 487, "particlecluster": [27, 97, 118, 119, 120, 205, 206, 207, 219, 220, 221, 233, 258, 265, 342], "particleclusterizerinlin": 97, "particleclusterizerinlineexplicit": 97, "particleclusterizerparam": [96, 97, 118, 119, 120, 184, 217, 229, 230, 258, 343], "particleclusterizerparamparamet": [120, 233], "particleclusterizerparticl": [120, 233], "particleclusterizerparticlecluster": 120, "particlefilt": [16, 21], "particles_": [26, 233, 490], "particlesa": 520, "particlesconst": [26, 490], "particlesdistribut": 520, "particlespos": 520, "particleth": 258, "particletyp": [26, 44, 184, 193, 194, 199, 202, 207, 211, 215, 221, 227, 233], "particletypeful": 43, "particular": [100, 258, 488], "particularli": [326, 334], "pass": [258, 401, 410], "past": [37, 38, 41, 61, 63, 65, 71, 324], "path": [5, 268, 485, 486, 549], "path_to_hdf5_fil": 268, "pattern": [2, 92], "pdf": [177, 258], "peak": [120, 342], "per": [112, 313, 457, 459, 462, 464, 466, 483, 532, 549], "per_cluster_estim": 120, "percentag": [119, 276, 392, 488], "percentil": [119, 120, 342], "percentileth": 119, "percept": [247, 334], "perfect_odometri": 6, "perform": [4, 6, 11, 43, 55, 77, 98, 107, 178, 247, 258, 274, 277, 485, 496, 549], "period": [178, 457, 459, 462, 464, 466, 483, 488], "permiss": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "petar": 42, "pf_err": [485, 487, 488], "pf_z": [485, 487, 488], "phantom": 92, "phantomtyp": [27, 93, 118, 205, 206, 219, 220, 233, 265, 316, 317, 431], "phantomtypeempti": 92, "phantomtypephantom": [430, 432], "physic": 55, "pi": [11, 13, 17, 45, 46, 49, 50, 51, 52, 53, 54, 100, 101, 110, 111, 124, 126, 247, 249, 272, 274, 299, 485, 487, 488, 490, 500, 501, 533], "pictur": 6, "pigrid": [45, 49, 51, 53], "pipelin": [437, 482], "pkg": [5, 6], "place": [3, 71, 126, 236, 274, 326, 340, 342, 548], "plai": 6, "plainmatrix": [253, 380], "plane": [34, 45, 49, 51, 53, 100, 110, 243, 249, 272, 299, 311, 498], "platform": [11, 268, 487, 488], "pleas": 0, "plenti": [2, 6], "plot": 549, "plu": [32, 171, 177, 247, 268], "plugin": 488, "point": [18, 26, 27, 32, 34, 38, 41, 47, 55, 56, 59, 61, 65, 71, 75, 77, 78, 90, 91, 120, 126, 171, 177, 232, 233, 236, 243, 245, 247, 258, 265, 267, 268, 274, 281, 283, 287, 288, 291, 313, 315, 318, 336, 406, 428, 439, 478, 512, 518, 527, 532, 540, 541, 543, 549], "pointer": [38, 41, 63, 64, 65, 66, 71, 72, 221, 226, 236], "pointerdecltyp": 236, "pointerpoint": 38, "pointervalu": [41, 236], "pointervalue_typ": 41, "pointervector2": 38, "points2d": [55, 77], "points_in_cartesian_coordin": [47, 48, 207, 221, 245, 490, 498, 499], "points_in_cartesian_coordinatesauto": 245, "points_in_cel": 268, "points_in_polar_coordin": [47, 48, 207, 221, 245, 498, 499], "points_in_polar_coordinatesauto": 245, "points_view": 268, "pointslidar": 90, "polar": [47, 245], "polici": [2, 11, 26, 27, 35, 36, 43, 118, 151, 182, 190, 198, 206, 207, 216, 220, 221, 229, 233, 234, 258, 265, 269, 270, 290, 291, 300, 301, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 455, 457, 459, 462, 464, 466, 482, 483, 485, 487, 488, 490, 496], "policiesinclud": 142, "policiespolici": 130, "policy_bas": [118, 220, 223, 258, 286, 404], "policy_basefriend": 404, "policy_baseimplement": [233, 286], "policyconstexpr": 286, "policyfn": [206, 207, 220, 221, 233, 286, 402], "policyforward": [26, 270, 276, 286, 291, 301], "policypolici": 286, "policyth": [346, 350, 354], "polymorph": 3, "pop": [65, 120, 169], "pop_back": [41, 65, 66, 207, 221], "pop_backstd": 41, "pop_front": [41, 65, 66, 207, 221], "pop_frontstd": 41, "popul": [302, 485, 487, 488, 490, 533], "popular": [1, 6], "port": 488, "portion": 20, "pose": [6, 26, 34, 43, 44, 67, 73, 84, 86, 88, 94, 96, 97, 102, 120, 126, 176, 177, 206, 220, 233, 239, 241, 243, 257, 258, 274, 277, 278, 315, 322, 332, 397, 399, 455, 457, 459, 462, 464, 466, 483, 485, 490, 496, 497, 518, 519, 520, 527, 529, 531, 532, 533, 542, 543, 548, 549], "pose_arrai": [456, 457, 482, 483, 518], "pose_pub_": [457, 459, 462, 464, 466, 473, 477, 483], "pose_pub_beluga_amcl": [463, 465, 467], "pose_pub_estim": [457, 459, 483], "pose_pub_rclcpp_lifecycl": [457, 483], "pose_pub_ro": 459, "pose_stamp": 485, "pose_to_weighted_eigen_vector": 177, "pose_with_covariance_stamp": [456, 457, 482, 483], "posearrai": [457, 462, 466, 483, 487, 488, 518, 520, 531, 532], "poses3d": 258, "poses_view": 177, "posesa": 258, "posespos": 258, "poseth": [96, 258, 396, 398], "posewithcovariancestamp": [457, 458, 459, 462, 463, 464, 465, 466, 467, 483, 487, 488], "posit": [65, 71, 75, 236, 238, 241, 243, 258, 272, 313, 455, 529, 543, 548, 549], "possibl": [2, 4, 16, 17, 21, 424, 439], "possibli": [13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 100, 234, 258, 288, 401, 443, 444], "post": [38, 63, 71, 485, 487, 488], "posterior": [4, 258, 350, 549], "potenti": 71, "pow": 549, "power": [2, 6], "pplane": [45, 51, 53], "practic": 295, "practition": 1, "pre": [71, 77, 336], "prealloc": 120, "precalcul": 34, "precis": 532, "precomput": 86, "predic": [2, 120, 234, 401], "predict": 4, "predtyp": 268, "prefigur": 4, "prefix": [6, 38, 63], "presenc": [40, 41, 258], "present": [100, 268, 311, 338], "preserv": 2, "press": [42, 495, 545], "prev": [278, 295, 399, 400], "prev_error_": 38, "prevent": [32, 43, 485, 496, 549], "previou": [4, 67, 94, 102, 126, 274, 315, 399], "previous": 258, "previous_orient": [126, 274], "previous_pos": [126, 274], "previous_pose_pose_2d": 126, "prevth": 399, "primari": [83, 106, 233, 258, 398], "primarili": 11, "primit": [26, 32, 34, 35, 36, 120, 126, 151, 168, 169, 171, 176, 177, 182, 243, 247, 268, 274, 280, 281, 282, 283, 291, 313, 315, 317, 406, 428, 439, 482, 483, 531, 532], "print": 308, "printer": [160, 182, 308, 441], "prior": [4, 350, 437, 549], "prioriti": [119, 120], "priority_queu": [120, 169], "privat": [26, 32, 34, 38, 41, 120, 126, 179, 181, 232, 236, 241, 243, 247, 255, 257, 268, 274, 278, 295, 297, 303, 311, 313, 317, 442, 446, 450, 478, 490, 512, 517, 529], "privatebas": [232, 478, 512], "prob": 532, "probabilist": [6, 42, 55, 67, 75, 77, 104, 234, 243, 320, 326, 330, 334, 495, 545], "probabilityth": [412, 414], "probabl": [2, 4, 17, 19, 26, 27, 34, 104, 233, 234, 243, 247, 258, 265, 294, 295, 334, 412, 413, 414, 415, 416, 442, 485, 487, 488, 490, 532, 533, 549], "problem": [42, 268, 549], "proceed": [5, 42, 495, 545], "process": [4, 42, 43, 120, 462, 464, 466, 485, 487, 488, 495, 545], "prod_i": 549, "produc": [29, 43, 234], "product": 241, "profession": 0, "program": [2, 3, 258], "proj": [119, 120, 439], "project": [5, 34, 59, 119, 120, 241, 243, 253, 486, 549], "project_nam": 549, "projth": 119, "prologu": [175, 182], "proof": [1, 241], "propag": [2, 4, 16, 22, 23, 26, 27, 159, 182, 233, 234, 265, 281, 350, 352, 490, 549], "propagate_base_fn": [118, 206, 220, 290, 291, 351, 352, 353], "propagate_base_fnimplement": [233, 291], "propagate_base_fninlin": [351, 353], "propagate_fn": [118, 206, 220, 290, 291, 353], "propagate_fnimplement": [233, 291], "propagate_fninlin": 353, "propagateconstexpr": 291, "propagatedefinit": 291, "properti": [183, 258, 307, 549], "proport": [258, 532], "propos": [4, 6, 549], "propriocept": 549, "protect": [232, 303, 416, 418, 457, 459, 462, 464, 466, 478, 483, 512], "protectedbas": [232, 478, 512], "protocol": 374, "prototyp": 258, "provid": [3, 18, 39, 43, 71, 77, 79, 81, 86, 92, 107, 247, 257, 258, 306, 399, 446, 455, 480, 486, 487, 488, 496, 514, 532, 548], "provis": 6, "proxi": 532, "ptrdiff_t": [38, 41, 63, 65, 107, 120, 177, 446], "pub": 258, "public": [26, 32, 34, 38, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 107, 110, 112, 114, 116, 120, 124, 126, 179, 181, 232, 236, 241, 243, 245, 247, 249, 255, 257, 268, 270, 272, 274, 278, 281, 286, 291, 295, 297, 299, 301, 303, 311, 313, 315, 317, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 361, 365, 366, 368, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 399, 401, 406, 410, 412, 414, 418, 420, 422, 424, 426, 428, 430, 433, 442, 446, 450, 457, 459, 462, 466, 478, 483, 490, 496, 498, 500, 512, 517, 529, 533, 535, 538, 548], "publicbas": [232, 478, 512], "publish": [6, 457, 459, 462, 464, 466, 483, 485, 532], "pull": 532, "punish": 446, "pure": 6, "purpl": [232, 478, 488, 512, 532], "purpos": [1, 267, 336], "push": [40, 41, 65, 120, 169, 258], "push_back": [41, 65, 66, 107, 108, 207, 221, 249, 258, 268, 446, 532], "push_back_impl": 446, "push_backconstexpr": 446, "push_backstd": 41, "push_front": [41, 65, 66, 207, 221, 258], "push_frontstd": 41, "put": [2, 549], "py": [6, 548], "pz": 32, "q": [4, 549], "qo": [6, 488], "qqt": 177, "qualiti": [1, 11], "quantil": [258, 438, 439, 485, 487, 488, 490, 533], "quat": 177, "quater": 177, "quaternion": [176, 177, 543], "quaternion_view": 177, "quaternionrang": [176, 177], "quaternionrangea": 176, "quaternionsrang": 176, "queri": 243, "queue": [119, 120, 168, 169], "quickmcl": [32, 247], "quit": [6, 446], "quot": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "r": [0, 5, 17, 20, 28, 107, 108, 118, 185, 188, 200, 208, 222, 226, 229, 259, 281, 306, 307, 446, 507, 532], "r1": 297, "radian": [14, 26, 112, 318, 399, 485, 520, 532, 538], "rai": [27, 32, 55, 77, 98, 233, 247, 258, 265, 296, 297, 334], "rainbow": 532, "raison": 1, "ramiro": [32, 268], "random": [3, 13, 15, 19, 26, 27, 31, 32, 33, 34, 35, 36, 41, 43, 71, 79, 81, 83, 84, 86, 88, 104, 125, 126, 151, 154, 182, 233, 235, 236, 242, 243, 246, 247, 258, 265, 273, 274, 290, 291, 294, 295, 302, 303, 314, 315, 318, 320, 334, 350, 375, 376, 377, 380, 383, 385, 412, 414, 416, 418, 420, 482, 483, 485, 487, 488, 533, 549], "random_access_iterator_tag": [71, 236], "random_access_rang": [302, 303], "random_engin": 549, "random_interspers": [26, 27, 149, 182, 233, 234, 265, 412, 414, 451, 452, 490], "random_intersperse_fn": [118, 206, 216, 220, 229, 294, 295, 413], "random_intersperse_fnimplement": [233, 295], "random_intersperse_fninlin": 413, "random_intersperse_fnstat": 413, "random_intersperse_view": [118, 208, 222, 233, 294, 295, 415], "random_intersperse_viewconstexpr": 295, "random_intersperse_viewimplement": 295, "random_intersperse_viewrandom_intersperse_view": 295, "random_intersperseconstexpr": 295, "random_interspersedefinit": 295, "random_probability_estimator_": [26, 490], "random_st": [26, 490], "random_state_gener": [26, 43, 44], "random_state_generator_": 26, "random_state_generator_typ": 26, "random_state_generatora": 43, "random_state_prob": [26, 490], "randominclud": 143, "randomli": [302, 438], "randomnumberdistribut": [19, 420], "randomrandom": 131, "randomstatedistribut": [79, 279], "randomstategener": [26, 44, 184, 193, 194, 199, 202, 207, 211, 215, 221, 227, 233, 482, 483], "randomstategeneratora": 43, "randomstategeneratorstd": 483, "randomstategeneratortyp": 483, "rang": [3, 13, 14, 15, 17, 20, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 59, 61, 63, 65, 75, 77, 83, 86, 90, 96, 98, 100, 101, 104, 105, 107, 108, 110, 111, 119, 120, 149, 151, 157, 159, 168, 169, 170, 171, 173, 174, 176, 177, 182, 208, 209, 222, 224, 233, 234, 240, 241, 242, 243, 244, 245, 246, 247, 257, 258, 265, 267, 268, 269, 270, 271, 272, 275, 276, 280, 281, 282, 283, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 320, 324, 330, 334, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 392, 393, 406, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 436, 437, 438, 439, 442, 445, 446, 452, 453, 454, 455, 485, 487, 488, 489, 490, 498, 499, 500, 501, 507, 509, 516, 517, 520, 531, 532, 549], "range_": 303, "range_access": [295, 303], "range_difference_t": 303, "range_error": 243, "range_error_prob": 243, "range_map": 549, "range_max": 517, "range_measur": 549, "range_min": 517, "range_v3_major": [120, 175, 289], "range_v3_minor": [120, 175, 289], "range_value_t": [120, 176, 177, 245, 258, 281, 291, 295, 303, 439, 520, 531, 532], "rangea": [104, 258, 412, 414, 420, 422], "rangean": [346, 350, 354, 424], "ranger": 11, "rangerang": 258, "ranges_value_t": 410, "rangesauto": 517, "rangesourc": [422, 424], "rangesv3": 3, "rangeth": [119, 258, 392, 412, 414, 420], "rao": [42, 495, 545], "rarr": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "raspberri": 11, "rate": [104, 485, 487, 488, 490, 533], "rather": [65, 258, 416], "ratio": [104, 313, 532], "raw_difference_typ": 236, "ray2d": [32, 99, 118, 187, 196, 208, 210, 222, 225, 233, 258, 296, 297], "ray2dcast": [32, 297], "ray2dray2d": 297, "raycast": [24, 25, 31, 32, 59, 61, 63, 98, 156, 182, 324], "raycastingraycast": 136, "raytrac": [37, 55, 167, 182, 297], "rbegin": [41, 65, 66, 208, 222], "rbeginconstexpr": 41, "rcl_interfac": 485, "rclcpp": [457, 462, 463, 466, 467, 483, 485, 518], "rclcpp_lifecycl": [456, 457, 462, 463, 466, 467, 482, 483, 485], "re": [1, 32, 39, 77, 177, 270, 291, 301, 346, 348, 350, 352, 354, 356, 457, 459, 462, 463, 464, 466, 483, 487, 488], "reach": [41, 65, 258, 446, 549], "react": 258, "read": [4, 32, 55, 65, 268, 295, 303, 320, 487, 488, 549], "read_onli": 485, "readabl": [3, 38, 41, 172, 437, 543], "readi": 514, "real": [79, 100, 177, 311], "reason": 258, "receiv": 485, "recommend": [6, 104, 549], "recov": [34, 104, 485, 487, 488, 490, 533], "recoveri": [26, 318], "recovery_alpha_fast": [485, 487, 488], "recovery_alpha_slow": [485, 487, 488], "recur": 2, "recurs": 4, "red": [232, 478, 488, 512, 532, 549], "reduc": 485, "ref": [295, 303, 490], "refer": [11, 15, 18, 26, 28, 34, 38, 41, 64, 66, 72, 183, 185, 188, 200, 222, 226, 234, 236, 239, 241, 243, 247, 262, 266, 288, 295, 303, 444, 454, 461, 474, 480, 490, 492, 508, 514, 524, 526, 529, 548], "reference_typ": [107, 108, 222, 226, 446], "reference_typerang": 446, "reference_typerefer": 446, "reference_wrapp": [295, 303, 412, 413, 418, 419], "referencedecltyp": 236, "referencefin": 92, "referencerefer": 38, "referencevalu": [41, 236], "referencevalue_typ": 41, "referencevector2": 38, "regardless": 98, "region": [4, 27, 84, 88, 233, 256, 257, 258, 265], "regular": [2, 13, 17, 20, 27, 53, 100, 124, 158, 182, 233, 258, 265, 268, 298, 310, 311], "regular_grid": [53, 123, 124, 158, 182, 310, 311], "regulargrid": [13, 53, 279], "regularli": [3, 53, 233, 258, 298], "reinitialize_global_loc": 488, "reinterpret_cast": 268, "reintroduc": 120, "rel": [1, 57, 241, 326, 340, 487, 488, 549], "relat": [0, 6, 28, 149, 171, 182, 188, 232, 270, 282, 291, 301, 303, 344, 442, 452, 455, 478, 512], "relationfil": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "releas": 5, "relev": 65, "reli": [2, 3, 57, 77, 258], "reliabl": [6, 488], "reloc": [457, 459, 462, 464], "remain": 446, "remap": 488, "rememb": 5, "remov": [39, 446, 490, 549], "remove_cv_t": [71, 236], "remove_if": 549, "remove_reference_t": [71, 183, 236], "rend": [41, 65, 66, 208, 222], "rendconstexpr": 41, "renorm": 177, "rep": 11, "repeat": [19, 65, 459, 464], "repeat_n": [176, 177], "replac": [4, 107, 149, 182, 302, 446, 452, 549], "replic": 532, "report": 498, "repositori": 548, "repres": [4, 16, 17, 21, 43, 55, 73, 77, 79, 81, 90, 100, 114, 116, 120, 232, 238, 239, 241, 258, 313, 416, 462, 464, 466, 478, 488, 512, 532, 549], "represent": [32, 55, 57, 75, 77, 90, 177, 233, 247, 253, 258, 268, 336, 376, 377, 380, 383, 385, 482], "representative_st": [120, 222, 229, 358], "representative_statebeluga": 359, "representative_statest": 120, "reproduc": 3, "req": [457, 462, 463], "request": [457, 459, 462, 463, 464, 465, 487, 488], "request_head": [457, 462, 463], "request_nomotion_upd": [487, 488], "requir": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 36, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 63, 65, 67, 75, 77, 79, 81, 90, 94, 102, 120, 122, 124, 126, 155, 169, 171, 172, 174, 175, 177, 179, 181, 182, 183, 233, 234, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 265, 267, 268, 270, 272, 274, 276, 278, 279, 280, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 302, 303, 305, 307, 309, 311, 313, 315, 317, 324, 350, 386, 412, 414, 420, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 488, 490, 494, 496, 517, 518, 520, 529, 532, 533, 541, 543], "resampl": [4, 11, 26, 42, 43, 104, 234, 258, 302, 318, 392, 416, 455, 485, 487, 488, 490, 496, 532, 533], "resample_interv": [26, 222, 229, 318, 485, 487, 488, 490, 507, 511, 533], "resample_intervalbeluga": 319, "resample_intervalbeluga_ro": 534, "resample_intervalfilt": 26, "resample_intervalnumb": 490, "resample_intervalstd": [26, 490], "resample_policy_": [26, 490], "research": [0, 1], "reserv": [107, 108, 120, 208, 222, 268, 446, 532], "reserveconstexpr": 446, "reset": [19, 26, 69, 70, 79, 80, 104, 105, 181, 208, 222, 255, 295, 442, 487, 488, 490], "resetconstexpr": [26, 181, 442, 490], "resetvoid": 255, "resiz": [107, 108, 208, 222, 446, 485], "resizeconstexpr": 446, "resolut": [20, 45, 49, 51, 53, 100, 101, 110, 111, 112, 114, 115, 116, 117, 208, 222, 247, 268, 299, 311, 312, 313, 342, 450, 485, 487, 488, 490, 491, 500, 501, 507, 509, 513, 519, 520, 525, 527, 529, 531, 532, 533, 538, 540, 541, 542, 543], "resolution_": [311, 313, 450], "resolution_dataset": 268, "resolution_in_each_axis_t": [114, 115, 116, 117, 222, 226, 313], "resolution_in_each_axis_tstd": 313, "resolution_in_each_axis_ttyp": 313, "resolutiondefinit": 120, "resolutiondoubl": [311, 450, 529], "resolutiongrid": [100, 110], "resolutionstd": [114, 116], "resolutionth": 312, "respect": [2, 4, 65, 549], "respons": [457, 459, 462, 463, 464, 465], "rest": [1, 5, 39, 488, 549], "restor": 487, "restore_default": 487, "result": [3, 4, 19, 29, 30, 39, 79, 83, 92, 124, 176, 177, 232, 249, 253, 254, 255, 258, 295, 312, 344, 376, 377, 380, 383, 385, 401, 439, 478, 487, 488, 490, 512, 549], "result_typ": [19, 79, 80, 222, 226, 253, 254, 255, 258, 295, 303, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "result_typesophu": 253, "result_typeth": [253, 255], "result_typetypenam": [253, 255], "ret": 268, "retri": 488, "retriev": [13, 51], "return": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 30, 32, 34, 38, 39, 41, 43, 55, 57, 61, 65, 73, 75, 77, 79, 90, 98, 100, 107, 120, 124, 126, 168, 169, 171, 173, 174, 176, 177, 179, 181, 183, 233, 234, 236, 241, 243, 245, 247, 249, 253, 255, 257, 258, 265, 267, 268, 270, 272, 274, 276, 278, 280, 281, 286, 288, 291, 295, 297, 299, 301, 303, 307, 309, 311, 312, 313, 315, 317, 346, 348, 350, 352, 354, 356, 365, 368, 372, 374, 390, 396, 399, 408, 410, 412, 414, 422, 424, 436, 437, 438, 439, 442, 443, 444, 446, 450, 453, 454, 462, 464, 466, 490, 496, 517, 518, 529, 532, 541, 543, 549], "returnsa": [55, 57, 67, 75, 77, 84, 86, 88, 90, 94, 96, 102, 119, 258, 527], "returnsan": [43, 496], "returnscel": [45, 49], "returnsdist": 98, "returnsful": 98, "returnsgrid": 53, "returnsplan": [49, 51, 53], "returnsrang": [45, 49, 51, 53], "returnssize_t": 430, "returnssubtend": 59, "returnsth": [73, 79, 81, 104, 112, 114, 116, 119, 176, 258, 312, 368, 527], "returnstru": [79, 81, 390, 392, 399, 462, 464, 466], "reus": [1, 2], "reusabl": [2, 3, 455, 480], "revers": [41, 65, 258], "reverse_iter": [41, 65, 66, 222, 226], "reverse_iteratorrevers": 41, "reverse_iteratorstd": 41, "reversed_": 38, "revisit": 268, "reweight": [21, 22, 23, 26, 27, 159, 182, 233, 234, 265, 354, 356, 490, 549], "reweight_base_fn": [118, 206, 220, 300, 301, 355, 356, 357], "reweight_base_fnimplement": [233, 301], "reweight_base_fninlin": [355, 357], "reweight_fn": [118, 206, 220, 300, 301, 357], "reweight_fnimplement": [233, 301], "reweight_fninlin": 357, "reweightconstexpr": 301, "reweightdefinit": 301, "rewind": 71, "rflag": [40, 41, 258], "rgba": [531, 532], "rh": 267, "right": [286, 403, 404], "right_hash": 313, "rigidli": [487, 488], "rmw_request_id_t": [457, 462, 463], "ro": [1, 6, 11, 32, 456, 457, 458, 459, 460, 462, 464, 465, 466, 471, 479, 480, 482, 483, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548], "robot": [1, 11, 34, 42, 55, 67, 75, 77, 104, 239, 243, 258, 320, 322, 326, 330, 332, 334, 455, 485, 486, 487, 488, 495, 545, 548, 549], "robot_model_typ": [485, 487, 488], "robot_pose_in_world": [34, 243], "robust": [104, 342], "roll": [40, 258], "rollingwindow": [26, 40, 41, 258, 259, 263, 490], "rollov": 65, "ros2": [5, 6, 532, 548], "ros2_common": 472, "ros_distro": 5, "rosdep": 5, "roslaunch": 6, "rospack": 6, "rosrun": 6, "rotat": [12, 86, 112, 126, 177, 253, 258, 274, 312, 313, 326, 340, 399, 485, 487, 488, 529, 532, 533, 538, 543], "rotation_noise_from_rot": [126, 222, 229, 274, 326, 340], "rotation_noise_from_rotationbeluga": [327, 341], "rotation_noise_from_rotationdoubl": [126, 274], "rotation_noise_from_rotationrot": [126, 274], "rotation_noise_from_transl": [126, 222, 229, 274, 326, 340], "rotation_noise_from_translationbeluga": [327, 341], "rotation_noise_from_translationdoubl": [126, 274], "rotation_noise_from_translationrot": [126, 274], "rotation_param": 274, "rotation_vari": [126, 274], "rotz": [12, 34, 243], "rough": 120, "roughli": [233, 479, 513], "routin": 247, "row": [253, 255, 308, 309, 500, 527, 529, 542, 543], "rowsatcompiletim": [253, 255, 268, 380], "rowsth": 308, "rowwis": 268, "rsquo": 43, "rtabmap": 6, "rule": 4, "run": 11, "runner": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 462, 464, 466, 496, 498, 500, 533, 535, 537, 538], "runtim": [3, 247, 490, 496, 549], "runtime_error": 255, "runtime_errorif": [43, 79, 81, 496], "rvalu": [29, 40, 61, 258, 291], "rviz": [6, 532], "rviz2": [6, 548], "safari": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542], "safeti": 92, "sake": 549, "same": [18, 47, 65, 71, 79, 98, 100, 177, 241, 258, 268, 274, 312, 336, 401, 487, 488, 548], "same_category_landmarks_view": 241, "sampl": [2, 3, 4, 16, 25, 26, 27, 34, 42, 67, 83, 86, 94, 102, 104, 120, 125, 126, 149, 150, 156, 170, 177, 182, 233, 234, 258, 265, 268, 273, 274, 275, 276, 285, 290, 315, 318, 350, 416, 418, 420, 424, 438, 451, 452, 487, 488, 490, 495, 520, 531, 532, 545, 549], "sample_base_fn": [118, 209, 224, 302, 303, 417, 418], "sample_base_fnimplement": [233, 303], "sample_base_fninlineprotect": [417, 419], "sample_count": 177, "sample_fn": [118, 206, 220, 302, 303, 419], "sample_fnimplement": [233, 303], "sample_fninlin": 419, "sample_from_distribut": [209, 224, 303, 416, 417, 418, 419], "sample_from_distributionconstexpr": 303, "sample_from_rang": [209, 224, 303, 416, 417, 418, 419], "sample_from_rangeconstexpr": 303, "sample_mean_and_covari": 177, "sample_view": [118, 209, 224, 233, 302, 303, 421], "sample_viewconstexpr": 303, "sample_viewimplement": 303, "sample_viewsample_view": 303, "sampleconstexpr": 303, "sampledefinit": 303, "sampleuniform": 257, "sampling_fn_2d": 126, "sampling_fn_3d": 126, "satisfi": [13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 45, 47, 49, 51, 53, 55, 57, 67, 75, 77, 90, 94, 102, 107, 234, 258, 350, 401, 412, 414, 420, 438, 439, 520], "satur": 531, "save": [120, 247, 459, 464], "save_pose_r": 487, "save_pose_timer_": [459, 464, 473, 477], "save_pose_timer_beluga_amcl": 465, "save_pose_timer_callback": [459, 464, 465, 473, 475], "save_pose_timer_callbackvoid": 459, "save_pose_timer_ro": 459, "save_pose_timer_tim": 459, "sc22": 313, "scalar": [14, 26, 27, 38, 61, 63, 79, 81, 118, 120, 172, 176, 177, 187, 203, 206, 217, 218, 219, 220, 223, 224, 226, 229, 233, 245, 253, 255, 258, 265, 267, 268, 277, 278, 306, 307, 308, 309, 312, 324, 337, 376, 377, 380, 383, 385, 394, 395, 400, 490, 491, 498, 499, 502, 507, 509, 510, 511, 513, 517, 519, 520, 525, 527, 531, 532, 539, 540, 541, 542, 543, 549], "scalar_typ": [79, 80, 81, 82, 90, 224, 226, 253, 255, 267, 268, 336, 337, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "scalar_typeflo": 267, "scalar_typescalar": 267, "scalar_typeth": [253, 255], "scalar_typetypenam": [253, 255], "scalara": 258, "scalardoubl": 517, "scalarrang": 517, "scalarsa": 258, "scalarsrang": 258, "scalarth": [176, 258, 306, 308, 399], "scale": [90, 268, 336, 338, 488, 532], "scale_factor": 532, "scan": [27, 47, 158, 182, 233, 244, 245, 258, 265, 457, 459, 462, 464, 466, 483, 485, 487, 488, 496, 498, 499, 517, 549], "scan_": 517, "scan_frame_id": [487, 488], "scan_top": [485, 487, 488], "scanlas": 498, "scatter": 1, "scenario": [178, 275, 277], "scheme": 549, "se": [84, 88, 164, 182, 256, 257, 293, 455, 490, 491, 496, 513, 525, 531, 538], "se2": [12, 27, 31, 32, 33, 34, 90, 118, 119, 120, 125, 126, 176, 177, 206, 220, 233, 242, 243, 246, 247, 252, 253, 256, 257, 258, 265, 267, 268, 273, 274, 277, 278, 296, 297, 306, 307, 308, 309, 312, 313, 314, 315, 336, 337, 385, 394, 400, 458, 459, 482, 483, 485, 491, 502, 507, 509, 511, 513, 519, 520, 525, 527, 528, 529, 531, 532, 539, 542, 543], "se2bas": [27, 118, 187, 193, 199, 210, 222, 224, 225, 226, 228, 233, 252, 253, 258, 265, 382], "se2d": [12, 17, 27, 32, 33, 34, 55, 67, 77, 84, 85, 87, 94, 96, 97, 98, 99, 102, 113, 118, 120, 125, 126, 204, 206, 209, 218, 220, 224, 233, 242, 243, 247, 256, 257, 258, 265, 274, 297, 312, 313, 315, 457, 459, 462, 463, 464, 465, 466, 467, 483, 490, 496, 497, 500, 529], "se2near": [306, 307], "se2nearauto": 307, "se3": [12, 26, 33, 34, 90, 120, 125, 126, 176, 177, 240, 241, 252, 253, 256, 257, 258, 267, 268, 336, 337, 377, 490, 516, 517, 519, 520, 527, 531, 532, 542, 543], "se3bas": [27, 118, 187, 193, 199, 210, 222, 224, 225, 226, 228, 233, 252, 253, 258, 265, 379], "se3d": [12, 14, 27, 33, 34, 67, 73, 88, 89, 118, 125, 126, 204, 206, 218, 220, 233, 241, 242, 243, 256, 257, 258, 265, 322, 498, 499, 517], "search": 241, "sec": 532, "second": [32, 107, 120, 169, 247, 286, 311, 401, 485, 487, 488, 549], "second_rot": [126, 274], "second_rotation_param": 126, "section": [258, 330, 549], "see": [11, 12, 16, 19, 21, 23, 25, 26, 27, 30, 32, 34, 36, 38, 39, 41, 55, 57, 59, 67, 75, 77, 90, 94, 98, 104, 107, 120, 122, 124, 126, 155, 169, 171, 172, 174, 175, 177, 179, 181, 182, 183, 233, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 265, 267, 268, 270, 272, 274, 276, 278, 280, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 320, 326, 330, 334, 360, 366, 374, 386, 406, 428, 437, 438, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 548], "seed": 268, "seem": [258, 268], "seen": [1, 532], "select": [26, 318, 444, 455, 487, 488, 490, 496, 533], "selective_resampl": [26, 224, 229, 318, 485, 487, 488, 490, 507, 511, 533], "selective_resamplingbeluga": 319, "selective_resamplingbeluga_ro": 534, "selective_resamplingbool": [26, 490], "selective_resamplingwheth": [26, 490], "self": [39, 124, 245, 249, 272, 299, 311, 549], "self_typ": 39, "selfadjointeigensolv": 255, "semant": 19, "semiregular_box_t": 295, "sens": 549, "sensor": [4, 11, 14, 21, 26, 27, 35, 36, 43, 45, 47, 49, 51, 53, 55, 57, 73, 75, 77, 90, 100, 110, 151, 182, 233, 234, 238, 239, 256, 257, 258, 265, 300, 320, 322, 328, 330, 334, 336, 338, 354, 366, 455, 457, 459, 462, 464, 466, 482, 483, 488, 490, 496, 516, 517, 528, 529, 549], "sensor_model": [26, 43, 44, 490, 496, 497, 549], "sensor_model_": [26, 490], "sensor_model_sigma": 549, "sensor_model_vari": [457, 459, 462, 464, 490, 496, 497, 507, 510], "sensor_model_variantbeluga_amcl": [463, 465], "sensor_model_variantget": [457, 459], "sensor_model_variantsensor": 490, "sensor_model_variantstd": 490, "sensor_modelsensor": 43, "sensor_modelvari": 496, "sensor_msg": [456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 482, 483, 487, 488, 490, 491, 494, 498, 504, 506, 513, 514, 516, 517, 518, 520, 525], "sensor_pose_in_robot": [34, 224, 229, 322], "sensor_pose_in_robotbeluga": 323, "sensor_pose_in_robotpos": 34, "sensor_pose_in_robotsophu": 34, "sensor_pose_in_world": [34, 73, 74, 241], "sensor_pose_in_worldth": 73, "sensor_rang": 549, "sensorinclud": [144, 145, 146], "sensormodel": [2, 26, 44, 55, 57, 75, 77, 90, 184, 193, 194, 199, 202, 207, 211, 215, 221, 227, 233, 279], "sensormodelclass": 43, "sensormultivariate_uniform_distribut": 143, "sensorsensor": 132, "sentinel": [27, 37, 38, 41, 61, 63, 64, 65, 66, 118, 206, 220, 233, 265, 325], "sentinel_for": [38, 324], "sentinelinlin": 325, "sentinelpast": [38, 233], "separ": [6, 309], "seq": [26, 43, 44, 270, 291, 301, 485, 487, 488, 490, 496, 497, 549], "sequenc": [4, 19, 79, 488], "sequenced_polici": [26, 43, 482, 483, 490, 496], "sequences_": 446, "sequenti": [42, 455, 487, 488], "seri": [42, 495, 545], "server": [457, 458, 459, 462, 464, 487, 488], "servic": [0, 457, 459, 462, 464], "servicecli": [459, 464], "serviceserv": [459, 464], "set": [4, 6, 19, 26, 27, 43, 55, 79, 81, 90, 104, 119, 120, 233, 234, 254, 255, 258, 265, 274, 438, 455, 457, 459, 462, 464, 466, 483, 485, 487, 488, 490, 496, 532, 548, 549], "set_initial_pos": [485, 487, 488], "set_map": 487, "set_map_callback": [459, 464, 465, 473, 475], "set_map_callbackbool": 459, "set_map_server_": [459, 464, 473, 477], "set_map_server_beluga_amcl": 465, "set_map_server_map": 459, "set_map_server_ro": 459, "setmap": [458, 459, 464, 465, 487], "setpoint": 549, "setup": [5, 548], "sever": [5, 446, 548], "shape": 2, "share": 6, "shared_ptr": [457, 462, 463], "sharedptr": [457, 462, 463, 466, 467, 483], "shift": 312, "short": [32, 104, 286, 320, 403, 487, 488], "shorthand": [109, 233, 258, 445], "should": [18, 100, 241, 253, 255, 267, 390, 392, 399, 401, 438, 485, 487, 488, 548, 549], "should_interspers": 295, "show": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542, 549], "shown": [4, 232, 478, 512, 549], "shutdown": [487, 488], "side": [3, 20], "sigma_bear": [34, 224, 229, 243, 322, 330], "sigma_bearingbeluga": [323, 331], "sigma_bearingdoubl": [34, 243], "sigma_bearingstandard": [34, 243], "sigma_hit": [32, 224, 229, 247, 320, 334, 488], "sigma_hitbeluga": [321, 335], "sigma_hitdoubl": [32, 247], "sigma_hitstandard": [32, 247], "sigma_rang": [224, 229, 243, 330], "sigma_rangebeluga": 331, "sigma_rangedoubl": 243, "sigma_rangestandard": 243, "sign": 71, "signal": 42, "signed_typ": 313, "signed_valu": 313, "signific": 312, "similar": [19, 183, 253, 258], "simpl": [3, 486, 548], "simplest": 6, "simpli": 1, "simplic": 549, "simplifi": [2, 274, 549], "simul": [548, 549], "sin": [245, 543], "sin_apertur": [34, 243], "sin_theta": 247, "sinc": [4, 41, 258, 416, 433, 548], "singl": [27, 40, 41, 119, 120, 233, 258, 265, 288, 358, 372, 443, 444, 487, 488, 532], "size": [20, 25, 26, 41, 65, 66, 71, 100, 101, 107, 108, 110, 111, 120, 150, 156, 169, 170, 176, 177, 182, 209, 224, 234, 249, 257, 258, 268, 275, 276, 285, 302, 303, 311, 380, 420, 422, 436, 437, 439, 442, 446, 450, 500, 501, 507, 509, 517, 520, 529, 531, 532, 549], "size_": 41, "size_t": [13, 15, 17, 26, 38, 40, 41, 49, 50, 51, 52, 65, 100, 107, 110, 111, 112, 114, 116, 119, 120, 169, 173, 174, 177, 179, 247, 249, 257, 258, 268, 272, 287, 288, 311, 312, 313, 317, 318, 358, 361, 366, 388, 389, 390, 391, 422, 423, 424, 425, 430, 433, 435, 437, 438, 439, 442, 443, 444, 446, 450, 490, 498, 499, 500, 501, 517, 520, 527, 529, 531, 532, 533, 542, 543, 549], "size_typ": [41, 65, 66, 71, 107, 108, 224, 226, 236, 446], "size_types": [41, 446], "size_typestd": [41, 446], "sizeconstexpr": [41, 446], "sized_rang": [276, 302, 303, 442, 446, 532], "sizeof": [114, 312, 313, 444, 446], "sizesampl": 520, "sizestd": [311, 450, 529], "skip": 488, "slam": 6, "slow": [485, 487, 488, 490, 533], "slow_averag": 442, "slow_filter_": 442, "slower": [247, 297], "small": [253, 488], "smooth": [55, 69, 77], "so": [1, 17, 18, 34, 39, 109, 243, 258, 302, 313, 401, 406, 428, 443, 446, 532, 549], "so2": [12, 31, 32, 34, 86, 125, 126, 177, 242, 243, 246, 247, 253, 267, 268, 273, 274, 278, 296, 297, 306, 307, 308, 309, 313, 314, 315, 376, 528, 529, 532, 543], "so2bas": [27, 118, 187, 193, 199, 210, 222, 224, 225, 226, 228, 233, 252, 253, 258, 265, 381], "so2d": [32, 98, 99, 120, 126, 257, 274, 297, 315, 529], "so2near": [306, 307], "so2nearauto": 307, "so3": [176, 177, 252, 253, 267, 383, 543], "so3bas": [27, 118, 187, 193, 199, 210, 222, 224, 225, 226, 228, 233, 252, 253, 258, 265, 378], "so3d": [12, 34, 243, 257], "softwar": [2, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "solut": [6, 455], "solv": 549, "solver": [255, 455], "some": [3, 13, 16, 21, 102, 258, 291, 549], "someth": 532, "soon": [7, 8, 9, 10, 546, 547], "sophu": [3, 12, 14, 17, 26, 27, 31, 32, 33, 34, 55, 67, 73, 77, 84, 85, 86, 87, 88, 89, 90, 94, 96, 97, 98, 99, 102, 112, 113, 118, 119, 120, 125, 126, 160, 176, 177, 182, 187, 193, 199, 204, 206, 209, 210, 218, 220, 222, 224, 225, 226, 228, 233, 240, 241, 242, 243, 244, 245, 246, 247, 252, 253, 256, 257, 258, 265, 267, 268, 273, 274, 277, 278, 296, 297, 306, 307, 308, 309, 312, 313, 314, 315, 322, 336, 337, 376, 377, 378, 379, 381, 382, 383, 385, 399, 400, 441, 455, 457, 458, 459, 462, 463, 464, 465, 466, 467, 482, 483, 485, 490, 491, 494, 496, 497, 498, 499, 500, 502, 504, 506, 507, 509, 511, 513, 514, 516, 517, 520, 522, 523, 525, 527, 528, 529, 531, 532, 533, 538, 539, 542, 543], "sophus_match": [160, 182, 440, 441], "sophus_print": [160, 182, 440, 441], "sophussophu": [532, 543], "sort": [2, 119, 120, 233, 479, 513], "sourc": [6, 11, 22, 24, 29, 31, 33, 35, 37, 40, 98, 119, 121, 123, 125, 168, 170, 173, 176, 178, 180, 234, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 412, 436, 438, 440, 443, 445, 447, 449, 451, 453, 455, 456, 458, 482, 489, 493, 516, 528, 531, 540, 542, 548, 549], "source_cell_": 297, "source_pos": [98, 99, 297], "source_pose_in_local_frame_": 297, "source_posepos": 98, "source_posit": 297, "space": [12, 13, 14, 15, 17, 20, 27, 53, 59, 61, 84, 86, 88, 124, 126, 164, 182, 233, 234, 256, 257, 258, 265, 277, 278, 293, 298, 299, 311, 394, 399, 436, 455, 485, 487, 488, 549], "spare": 3, "spars": [27, 90, 100, 119, 120, 158, 182, 233, 258, 265, 268, 310, 311], "sparse_value_grid": [100, 132, 158, 182, 268, 482, 483], "sparsegridt": [91, 203, 205, 206, 217, 218, 219, 220, 221, 224, 226, 230, 233, 268], "sparsegridttyp": 90, "sparsevaluegrid": [90, 101, 118, 189, 197, 208, 209, 216, 218, 222, 224, 226, 233, 258, 268, 310, 311, 483], "sparsevaluegrid2": [258, 259, 263, 310, 311, 482, 483], "sparsevaluegrid3": [258, 259, 263, 310, 311], "sparsevaluegridgener": [268, 311], "sparsevaluegridsparsevaluegrid": 311, "spatial": [4, 25, 43, 96, 112, 114, 116, 120, 156, 182, 241, 258, 312, 313, 424, 487, 488, 533, 549], "spatial_hash": [24, 25, 26, 43, 44, 112, 113, 114, 115, 116, 117, 118, 119, 120, 156, 182, 206, 209, 220, 222, 224, 226, 233, 258, 490, 531, 532], "spatial_hash_function_": 120, "spatial_hashcal": 313, "spatial_hasher_": [26, 490], "spatial_hasher_typ": [26, 43, 44], "spatial_hashera": 43, "spatial_hashspatial_hash": 313, "spatial_resolution_": [487, 488], "spatial_resolution_i": [485, 490, 507, 511, 533], "spatial_resolution_theta": [485, 490, 507, 511, 533], "spatial_resolution_thetabeluga_ro": 534, "spatial_resolution_thetadoubl": 490, "spatial_resolution_thetaspati": 490, "spatial_resolution_x": [485, 490, 507, 511, 533], "spatial_resolution_xbeluga_ro": 534, "spatial_resolution_xdoubl": 490, "spatial_resolution_xspati": 490, "spatial_resolution_ybeluga_ro": 534, "spatial_resolution_ydoubl": 490, "spatial_resolution_yspati": 490, "spawn": 548, "speak": 92, "special": [3, 27, 40, 84, 86, 88, 90, 92, 112, 114, 116, 233, 252, 256, 257, 258, 265, 277, 312, 316, 360, 361, 365, 371, 373, 376, 377, 380, 383, 385, 399, 409, 430, 432, 433, 435, 443, 482, 491, 513, 525, 527, 531, 532, 538], "specif": [2, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 59, 98, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 234, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "specifi": [18, 19, 107, 119, 120, 178, 232, 234, 258, 269, 276, 277, 334, 390, 392, 399, 446, 478, 487, 512, 549], "speed": 6, "spiral": 104, "spread": 313, "sqrt": [32, 126, 247, 274, 439], "squared_dist": 247, "squared_max_dist": 247, "squared_weight_sum": 177, "squarednorm": [241, 247], "src": [5, 176, 177, 482, 483, 548, 549], "srv": [456, 457, 462, 463, 482, 483, 488], "ss": [16, 268], "stachniss": [42, 495, 545], "stack": 3, "staff": 0, "stamp": [518, 520], "stamp_messag": [518, 520, 522, 523], "stamp_messagemessag": 518, "stand": 1, "standalon": [487, 488], "standard": [2, 3, 19, 34, 38, 59, 81, 100, 120, 177, 234, 239, 241, 243, 258, 320, 322, 330, 334, 342, 438, 439, 485, 487, 488, 490, 529, 533, 535, 549], "start": [1, 61, 98, 258, 446, 548], "state": [4, 16, 18, 19, 21, 25, 26, 27, 32, 33, 34, 43, 55, 57, 67, 75, 77, 79, 86, 90, 94, 96, 97, 98, 102, 104, 112, 113, 119, 120, 126, 156, 176, 182, 187, 206, 219, 220, 222, 229, 230, 233, 234, 242, 243, 247, 255, 258, 259, 264, 265, 268, 274, 280, 281, 282, 283, 287, 288, 290, 291, 300, 301, 303, 312, 313, 315, 350, 354, 359, 369, 386, 401, 405, 406, 407, 424, 439, 442, 457, 462, 463, 466, 467, 482, 483, 488, 490, 496, 520, 531, 532, 549], "state_detail": [32, 34, 118, 120, 126, 206, 220, 233, 243, 247, 258, 268, 274, 281, 283, 287, 288, 291, 313, 315, 406, 407, 439, 532], "state_fn": [32, 34, 118, 120, 126, 206, 220, 243, 247, 258, 268, 274, 281, 283, 287, 288, 291, 313, 315, 407, 439, 532], "state_fncustom": [233, 288], "state_fninlin": 407, "state_t": [258, 259, 263, 280, 281, 368, 439, 520, 531, 532], "state_ttyp": [281, 439], "state_ttypenam": [281, 439, 532], "state_typ": [16, 21, 26, 32, 34, 43, 44, 55, 56, 57, 58, 67, 68, 75, 76, 77, 78, 90, 91, 94, 95, 102, 103, 126, 224, 226, 233, 243, 247, 258, 268, 274, 280, 281, 315, 386, 387, 439, 482, 483, 532], "state_type2d": [126, 274, 315], "state_typesophu": [32, 247, 274, 315], "state_typest": [32, 34, 243, 247, 268], "state_typestatetyp": [34, 126, 243], "state_typestd": [268, 281], "state_typeth": 281, "stateconstexpr": [32, 34, 120, 126, 243, 247, 268, 274, 281, 283, 288, 291, 313, 315, 439, 532], "statecustom": [32, 34, 120, 126, 243, 247, 268, 274, 281, 283, 288, 291, 313, 315, 439], "statehistogram": 532, "statesamplingfunct": [16, 67, 94, 102, 291, 350, 351, 352, 353], "statesamplingfunctiona": 350, "statesconstexpr": [120, 283, 303, 532], "statesdefinit": [120, 283, 303], "statesrang": [96, 258], "stateth": 112, "statetyp": [33, 34, 58, 68, 76, 125, 126, 186, 187, 189, 195, 197, 203, 206, 211, 217, 218, 220, 221, 224, 226, 227, 230, 233, 242, 243], "statetypetyp": [57, 67, 75], "stateweightingfunct": [21, 55, 57, 75, 77, 90], "static": [55, 77, 120, 126, 247, 253, 255, 257, 267, 268, 274, 276, 295, 309, 315, 336, 337, 376, 377, 380, 383, 384, 385, 392, 412, 444, 454, 457, 459, 462, 464, 500, 529, 535], "static_assert": [26, 41, 120, 126, 245, 253, 255, 267, 268, 276, 281, 291, 295, 301, 303, 311, 313, 439, 442, 446, 532], "static_cast": [38, 39, 41, 120, 124, 177, 236, 249, 268, 276, 303, 313, 439, 442, 444, 446, 517, 532, 541, 543, 549], "static_map": 487, "staticconstexpr": 380, "stationari": [27, 102, 161, 182, 233, 251, 258, 265, 314, 315, 485, 487, 488], "stationary_model": [102, 161, 182, 250, 251, 482, 483], "stationarymodel": [16, 103, 118, 187, 206, 220, 224, 226, 258, 314, 315, 482, 483, 490, 496], "stationarymodela": [233, 315], "stationarymodelinlin": 103, "statisfi": [234, 438], "statist": [42, 455], "statu": [459, 464, 465], "std": [2, 13, 15, 17, 26, 27, 30, 32, 34, 38, 40, 41, 43, 44, 45, 49, 50, 51, 52, 55, 57, 59, 63, 65, 66, 67, 71, 73, 75, 77, 79, 81, 82, 90, 92, 94, 98, 100, 102, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 124, 126, 149, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 183, 184, 186, 187, 189, 190, 193, 194, 195, 196, 198, 199, 206, 207, 208, 209, 210, 218, 220, 221, 222, 224, 225, 226, 228, 229, 233, 234, 236, 241, 243, 245, 247, 249, 252, 253, 255, 257, 258, 265, 267, 268, 270, 272, 274, 276, 278, 281, 286, 287, 288, 291, 295, 297, 301, 302, 303, 308, 309, 311, 312, 313, 315, 316, 317, 318, 336, 337, 338, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 362, 364, 365, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 401, 402, 406, 407, 409, 410, 411, 412, 413, 418, 419, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 442, 443, 444, 445, 446, 450, 452, 454, 455, 457, 459, 462, 463, 464, 465, 466, 467, 482, 483, 485, 490, 491, 496, 497, 498, 499, 500, 501, 513, 517, 518, 520, 525, 527, 529, 531, 532, 533, 535, 536, 537, 538, 542, 543, 549], "std_msg": 518, "std_srv": [456, 457, 458, 459, 462, 463, 464, 465, 482, 483, 487, 488], "std_warn_level_": 487, "stdexcept": [40, 41, 268], "stdhash": [430, 431], "stdnumeric_limit": 432, "stdtuple_el": [433, 434], "stdtuple_s": 435, "step": [4, 43, 104, 485, 487, 488, 496, 533], "step_": 38, "step_to": 38, "still": 532, "stl": [234, 291], "storag": [65, 107, 158, 182, 248, 272, 450], "store": [100, 177, 247, 311, 487, 549], "storeag": [500, 529], "str": 268, "strafe": [274, 340, 485, 487, 488], "strafe_noise_from_transl": [224, 229, 274, 340], "strafe_noise_from_translationbeluga": 341, "strafe_noise_from_translationdoubl": 274, "strafe_noise_from_translationtransl": 274, "strafe_param": 274, "strasdat": 177, "strategi": 42, "stream": [40, 41, 258, 308], "streamlin": 6, "streamprecis": 309, "strictli": [3, 71, 92, 236], "string": [485, 487, 488], "string_view": [457, 459, 462, 463, 464, 465, 485, 518, 520], "stringstream": 268, "strive": 3, "strong": [11, 258], "strongli": [26, 27, 92, 120, 155, 182, 233, 258, 265, 287, 288, 316, 317], "strongly_typed_numer": [92, 120, 155, 182, 287, 288, 430, 432], "struct": [26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 63, 92, 119, 120, 125, 126, 169, 178, 179, 232, 233, 238, 239, 242, 243, 246, 247, 252, 253, 258, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 280, 281, 286, 287, 288, 290, 291, 294, 295, 300, 301, 302, 303, 312, 313, 316, 317, 436, 437, 438, 439, 443, 444, 453, 454, 460, 478, 483, 489, 490, 491, 500, 512, 520, 528, 529, 531, 532, 549], "structur": [3, 15, 34, 65, 241, 243, 455, 514, 549], "subclass": 514, "subrang": 120, "subscrib": [6, 456, 457, 458, 459, 462, 464, 466, 482, 483, 485], "subscript": [71, 457, 462, 466, 483], "subsequ": 5, "subset": 100, "substanti": 1, "substitut": 274, "success": [255, 462, 464, 466], "sudo": 5, "suffici": 313, "suit": 455, "suitabl": [6, 520, 531, 549], "sum": [269, 346, 485, 487, 488, 533], "super": [232, 478, 512], "supercov": 59, "support": [1, 3, 5, 13, 39, 57, 67, 71, 75, 120, 126, 234, 253, 268, 281, 291, 295, 302, 350, 455, 482, 483, 487, 488, 490, 496, 548], "sure": [29, 306, 549], "surject": 53, "surpass": 399, "surpris": 3, "svg": [22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542], "swap": [38, 40, 41, 65, 66, 209, 224, 258, 259, 261, 548], "swapconstexpr": [38, 41], "swapvoid": 41, "symlink": 548, "symmetr": [79, 81, 126, 177, 255, 274], "symmetri": [38, 324], "synchron": [457, 459, 462, 464, 466, 483], "synthet": [6, 42, 495, 545], "system": [4, 5, 20, 42, 234, 247, 485, 488, 495, 544, 545, 548], "t": [2, 4, 5, 6, 16, 17, 19, 21, 27, 28, 29, 30, 38, 39, 40, 41, 43, 66, 80, 93, 100, 111, 117, 118, 120, 172, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 252, 253, 254, 255, 257, 258, 259, 265, 268, 280, 281, 288, 297, 303, 306, 307, 308, 309, 312, 313, 316, 317, 361, 362, 378, 379, 381, 382, 384, 387, 406, 407, 418, 419, 428, 429, 431, 434, 439, 443, 444, 445, 446, 449, 450, 473, 475, 477, 478, 488, 512, 513, 532, 549], "t1": 297, "t2": 297, "tabl": [320, 326, 334, 488], "tag": [38, 63], "tail": [39, 253], "tail_index_": 41, "take": [19, 71, 98, 234, 258, 295, 302, 303, 401, 406, 412, 414, 418, 422, 424, 428, 436, 438, 439, 445, 446, 549], "take_evenli": [27, 149, 182, 233, 234, 265, 422, 451, 452, 516, 517], "take_evenly_fn": [118, 206, 220, 423, 436, 437], "take_evenly_fnimplement": [233, 437], "take_evenly_fninlin": 423, "take_evenlyconstexpr": 437, "take_evenlydefinit": 437, "take_exactli": [26, 489, 490, 531, 532, 549], "take_whil": [37, 38, 296, 297, 438, 439], "take_while_kld": [26, 27, 149, 182, 233, 234, 265, 424, 451, 452, 490], "take_while_kld_fn": [118, 206, 220, 425, 438, 439], "take_while_kld_fnimplement": [233, 439], "take_while_kld_fninlin": 425, "take_while_kldconstexpr": 439, "take_while_klddefinit": 439, "taken": [258, 302], "tan": 532, "tangent": 258, "tani": 110, "target": [4, 5, 11, 71, 236, 258, 548, 549], "target_link_librari": 549, "target_s": 439, "tbf05": [487, 488, 545, 549], "tbuilt": 92, "technic": [344, 549], "techniqu": [3, 42, 495, 545, 549], "telement": 65, "teleop_twist_keyboard": 6, "teleoper": 6, "templ": [232, 478, 512], "templat": [2, 26, 27, 30, 32, 33, 34, 38, 39, 40, 41, 59, 63, 84, 88, 94, 96, 102, 104, 119, 120, 124, 126, 168, 169, 170, 171, 172, 173, 174, 176, 177, 183, 232, 233, 236, 242, 243, 245, 247, 249, 253, 254, 255, 256, 257, 258, 265, 267, 268, 270, 272, 274, 276, 278, 280, 281, 286, 288, 291, 295, 297, 298, 299, 301, 303, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 324, 344, 346, 348, 350, 352, 354, 356, 392, 394, 403, 406, 410, 412, 416, 418, 422, 424, 426, 428, 437, 439, 442, 443, 444, 445, 446, 450, 454, 455, 478, 482, 483, 490, 496, 512, 518, 519, 520, 527, 531, 532, 540, 541, 542, 543], "term": [1, 104, 253], "termin": [6, 548], "test": [5, 151, 182], "testingtest": 133, "textual": [237, 481, 515], "tf": [12, 126, 258, 267, 336, 337, 462, 464, 466], "tf2": [485, 514, 522, 523, 528, 529, 532, 540, 541, 542, 543], "tf2_eigen": [493, 494, 504, 506, 514, 531, 532, 543], "tf2_geometry_msg": [529, 541, 543], "tf2_ro": [456, 457, 458, 459, 462, 464, 466, 482, 483, 485], "tf2_sophu": [485, 493, 494, 504, 506, 514, 531, 532], "tf2tf2": [541, 543], "tf_broadcast": [485, 487, 488], "tf_broadcaster_": [457, 459, 462, 464, 466, 473, 477, 483], "tf_broadcaster_beluga_amcl": [463, 465, 467], "tf_broadcaster_std": [457, 459, 483], "tf_broadcaster_transform": [457, 459, 483], "tf_buffer_": [457, 459, 462, 464, 466, 473, 477, 483], "tf_buffer_beluga_amcl": [463, 465, 467], "tf_buffer_std": [457, 459, 483], "tf_buffer_transform": [457, 459, 483], "tf_listener_": [457, 459, 462, 464, 466, 473, 477, 483], "tf_listener_beluga_amcl": [463, 465, 467], "tf_listener_std": [457, 459, 483], "tf_listener_transform": [457, 459, 483], "than": [29, 47, 65, 77, 107, 119, 120, 258, 334, 416, 422, 436, 453, 485, 487, 488, 532, 533], "thei": [4, 13, 15, 17, 79, 120, 234, 247, 259, 453, 522, 532], "them": [2, 5, 65, 120, 312, 455, 532, 549], "therebi": 104, "therefor": 4, "theta": [112, 120, 245, 485, 487, 488, 543], "theta_clustering_resolut": [112, 113, 313], "theta_clustering_resolutionclust": 112, "thi": [1, 2, 3, 4, 6, 12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 493, 494, 496, 497, 498, 499, 500, 501, 512, 513, 514, 515, 516, 517, 518, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549], "thin": [487, 488, 498, 500, 514, 516, 520, 528], "thing": 241, "thoroughli": 548, "those": [1, 2, 107, 176, 241, 446, 549], "though": [1, 107, 548], "thousand": 6, "thread_loc": [126, 274, 315], "threadsaf": [26, 27, 40, 41, 65, 233, 258, 265], "three": [303, 418], "threshold": [119, 120, 126, 234, 274, 275, 276, 277, 326, 340, 342, 392, 393, 399, 487], "thresholdpercentag": 392, "through": [5, 120, 232, 253, 313, 478, 512, 527, 549], "throughout": 2, "throughput": 3, "throw": [41, 100, 255, 268], "thrun": [42, 495, 545], "thrun_recovery_probability_estim": [24, 25, 26, 104, 182], "thrunrecoveryprobabilityestim": [26, 105, 118, 206, 208, 210, 220, 222, 225, 258, 442, 490], "thrunrecoveryprobabilityestimatorconstexpr": 442, "thrunrecoveryprobabilityestimatorinlin": 105, "thrunrecoveryprobabilityestimatorrandom": [26, 233, 442], "thu": [5, 13, 15, 20, 55, 57, 75, 77, 90, 258], "tiancheng": 42, "tie": [34, 243], "tim": 313, "time": [3, 4, 26, 27, 37, 38, 61, 63, 65, 104, 112, 114, 116, 233, 234, 241, 258, 265, 295, 302, 313, 318, 446, 485, 487, 488, 500, 518, 520, 529, 549], "timelin": 11, "timer": [459, 462, 464, 466], "timer_": [457, 462, 466, 473, 477, 483], "timer_beluga_amcl": [463, 467], "timer_callback": [457, 462, 463, 466, 467, 473, 475, 483], "timer_callbackvoid": [457, 483], "timer_rclcpp": [457, 483], "timer_tim": [457, 483], "timerbas": [457, 462, 466, 483], "timerev": [459, 464, 465], "timestamp": [518, 520], "timestamptim": 520, "tnumer": 430, "to2d": [12, 126, 258, 259, 261], "to2dsophu": [12, 126], "to3d": [12, 126, 258, 259, 261], "to3dsophu": [12, 126], "to_cel": 268, "to_likelihood": 247, "to_the_cub": 247, "to_valu": 485, "to_vector": [210, 225, 253, 255, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "to_vectorstat": 253, "todo": [32, 247, 268, 490], "togeth": [342, 532], "tomsg": [519, 522, 523, 527, 532, 540, 541, 542, 543], "tomsgbeluga_ro": [532, 541, 543], "too": [51, 120, 177, 446, 488, 532], "tool": [3, 5, 548], "toolbox": 6, "toolkit": [1, 11], "top": [120, 169, 342, 455, 548], "topic": [6, 485], "topleftcorn": 177, "total": [104, 258, 269, 346, 549], "total_weight": [120, 171, 270, 442], "trace": [55, 77, 98, 99, 210, 225, 297], "traceauto": 297, "track": 258, "trade": 3, "trait": [3, 27, 36, 126, 151, 155, 164, 171, 182, 233, 252, 255, 258, 265, 270, 274, 280, 281, 288, 291, 301, 303, 315, 386, 439, 442, 443, 446, 447, 448, 500, 528, 529, 535], "transact": [42, 495, 545], "transform": [12, 14, 17, 26, 31, 32, 33, 34, 120, 126, 173, 174, 176, 177, 241, 242, 243, 244, 245, 246, 247, 258, 267, 270, 271, 272, 282, 283, 291, 298, 299, 301, 303, 336, 457, 459, 462, 464, 466, 483, 485, 490, 498, 517, 518, 519, 527, 542, 543, 549], "transform_": 255, "transform_broadcast": [456, 457, 458, 459, 482, 483], "transform_listen": [456, 457, 458, 459, 482, 483], "transform_reduc": [32, 34, 177, 243, 247, 268, 549], "transform_toler": [485, 487, 488], "transformbroadcast": [457, 459, 462, 464, 466, 483], "transformlisten": [457, 459, 462, 464, 466, 483], "transient": [6, 488], "transit": [234, 290, 457, 462, 466, 483], "translat": [12, 34, 86, 112, 126, 177, 243, 247, 253, 258, 267, 274, 278, 297, 307, 309, 313, 326, 336, 340, 399, 485, 487, 488, 529, 532, 533, 538, 543], "translation_noise_from_rot": [126, 225, 229, 274, 326, 340], "translation_noise_from_rotationbeluga": [327, 341], "translation_noise_from_rotationdoubl": [126, 274], "translation_noise_from_rotationtransl": [126, 274], "translation_noise_from_transl": [126, 225, 229, 274, 326, 340], "translation_noise_from_translationbeluga": [327, 341], "translation_noise_from_translationdoubl": [126, 274], "translation_noise_from_translationtransl": [126, 274], "translation_param": [126, 274], "translation_view": 177, "translations_view": 177, "translationtyp": 532, "transpos": [177, 255, 267, 268], "treat": [126, 274, 416], "triangl": 532, "triangle_list": 532, "trigger": [26, 150, 178, 179, 182, 234, 258, 275, 276, 277, 278, 285, 390, 392, 394, 399, 488], "trinari": [529, 535], "tro": 545, "troubleshoot": 6, "true": [6, 17, 19, 26, 27, 38, 41, 43, 51, 65, 71, 107, 169, 233, 258, 265, 272, 278, 288, 372, 374, 390, 396, 399, 437, 443, 444, 446, 485, 487, 488, 490, 532, 533, 549], "true_typ": [30, 233, 281, 288, 303, 444], "truncat": [232, 478, 512], "try": [2, 6, 22, 24, 29, 31, 33, 35, 37, 40, 45, 47, 49, 51, 53, 61, 100, 106, 109, 110, 119, 121, 123, 125, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 164, 165, 168, 170, 173, 176, 178, 180, 232, 235, 237, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 346, 348, 350, 352, 354, 356, 370, 371, 372, 373, 374, 396, 398, 401, 403, 409, 414, 416, 418, 420, 432, 435, 436, 438, 439, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 478, 481, 482, 489, 493, 498, 500, 512, 515, 516, 528, 531, 540, 542, 548, 549], "try_emplac": 120, "tthe": [79, 83, 258, 306, 308], "ttupl": 312, "tunderli": [92, 430, 432], "tune": 6, "tupl": [2, 26, 27, 43, 67, 94, 102, 106, 108, 109, 112, 114, 115, 118, 122, 125, 126, 153, 155, 173, 174, 182, 184, 186, 187, 189, 190, 194, 195, 196, 198, 206, 207, 208, 209, 210, 220, 221, 222, 224, 225, 226, 228, 233, 234, 245, 258, 265, 271, 272, 273, 274, 281, 287, 288, 312, 313, 314, 315, 360, 361, 363, 365, 370, 371, 372, 373, 374, 406, 408, 409, 410, 411, 428, 443, 444, 445, 446, 448, 453, 454, 455, 482, 483, 490, 496, 549], "tuple_el": [27, 40, 41, 118, 225, 226, 233, 265, 433, 434], "tuple_element_t": [361, 444], "tuple_index": [27, 118, 233, 258, 265, 409, 443, 444], "tuple_index_found": [27, 118, 233, 265, 443, 444], "tuple_index_foundconstexpr": 444, "tuple_index_help": [443, 444], "tuple_index_helperconstexpr": 444, "tuple_index_t": [258, 259, 263, 443, 444], "tuple_index_tconveni": 444, "tuple_index_ttypenam": 444, "tuple_index_v": [258, 259, 264, 443, 444], "tuple_index_vconstexpr": 444, "tuple_index_vconveni": 444, "tuple_indexmeta": 444, "tuple_s": [27, 40, 41, 118, 233, 265, 435, 444], "tuple_size_v": [288, 360, 406, 444], "tuple_trait": [125, 126, 155, 182, 273, 274, 280, 281, 287, 288, 314, 315, 360, 361, 363, 365, 370, 371, 372, 373, 374, 408, 409, 447, 448], "tuple_vector": [106, 107, 109, 121, 122, 153, 172, 182, 255], "tuplecontain": [107, 108, 118, 184, 186, 187, 189, 190, 194, 195, 196, 198, 207, 208, 209, 210, 221, 222, 224, 225, 226, 228, 233, 258, 445, 446], "tuplecontainerconstexpr": 446, "tuplecontainerprimari": 446, "tuplelik": [27, 118, 225, 226, 233, 258, 265, 288, 364, 373, 409, 443, 444], "tupletupl": [114, 173], "tuplevector": [2, 26, 43, 118, 233, 234, 258, 259, 261, 445, 446, 482, 483, 490], "tuplevectorshorthand": 446, "tuplevectortuplevector": 446, "turn": 549, "turtlebot": 548, "tutori": [548, 549], "tutorial_param": 549, "twice": [120, 437], "two": [2, 4, 6, 18, 27, 40, 41, 65, 75, 79, 177, 232, 233, 258, 265, 303, 326, 340, 360, 401, 418, 444, 446, 478, 489, 494, 496, 504, 506, 512, 549], "two_d_sampling_fn": 126, "two_epsilon": 439, "two_squared_sigma": 247, "txt": 549, "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 32, 33, 34, 36, 38, 39, 40, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 108, 109, 110, 115, 116, 118, 119, 120, 123, 124, 126, 151, 155, 160, 171, 176, 177, 180, 181, 182, 184, 186, 187, 189, 190, 194, 195, 196, 198, 206, 207, 208, 209, 210, 220, 221, 222, 224, 225, 226, 228, 233, 236, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 253, 254, 255, 257, 258, 265, 267, 268, 270, 271, 272, 274, 280, 281, 287, 288, 291, 298, 299, 301, 303, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 328, 332, 336, 360, 361, 362, 363, 364, 365, 368, 370, 371, 372, 374, 376, 377, 380, 383, 385, 386, 392, 396, 398, 399, 406, 408, 410, 412, 414, 428, 430, 432, 433, 434, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 453, 454, 464, 482, 490, 491, 494, 496, 498, 500, 504, 506, 513, 514, 516, 517, 518, 520, 525, 527, 528, 529, 531, 532, 538, 540, 541, 542, 543, 548], "type_trait": [26, 35, 36, 40, 41, 92, 125, 126, 151, 170, 171, 182, 235, 236, 267, 268, 269, 270, 273, 274, 286, 287, 288, 290, 291, 294, 295, 300, 301, 302, 303, 310, 311, 312, 313, 314, 315, 360, 361, 363, 365, 368, 370, 371, 372, 373, 374, 386, 408, 409, 430, 432, 438, 439, 442, 445, 446, 531, 532], "type_traitsdifferential_drive_model": 141, "type_traitseffective_sample_s": 137, "type_traitsnorm": 134, "type_traitssampl": 148, "typecommon": 444, "typedef": [19, 28, 33, 40, 107, 119, 125, 188, 238, 242, 258, 262, 266, 280, 287, 298, 310, 443, 445, 461, 474, 482, 492, 508], "typedefbeluga": [56, 58, 64, 66, 68, 72, 74, 76, 78, 80, 82, 91, 95, 101, 103, 108, 115, 117, 337, 362, 364, 378, 379, 381, 382, 384, 387], "typedefbeluga_amcl": 465, "typedefbeluga_ro": [497, 499], "typedefstd": 434, "typenam": [26, 38, 39, 40, 41, 43, 45, 47, 49, 51, 53, 61, 63, 65, 67, 71, 79, 81, 90, 93, 94, 98, 100, 102, 107, 110, 120, 124, 126, 172, 176, 177, 205, 206, 219, 220, 233, 236, 245, 249, 253, 254, 255, 258, 267, 268, 272, 274, 280, 281, 295, 297, 298, 299, 303, 310, 311, 313, 315, 316, 317, 324, 336, 360, 361, 371, 374, 376, 377, 380, 383, 385, 405, 412, 414, 420, 430, 432, 433, 435, 443, 444, 445, 446, 450, 482, 483, 520, 527, 531, 532, 538, 542, 543], "typereturn": 444, "typesbearing_sensor_model": 146, "typesel": 107, "typeslandmark_map": 147, "typestd": 444, "typet": 41, "typic": [2, 487, 488, 498, 514, 548], "u": [16, 27, 28, 41, 79, 80, 118, 183, 185, 188, 200, 211, 225, 226, 227, 229, 233, 255, 258, 265, 303, 361, 362, 418, 419, 443, 444, 473, 475, 507], "u_": 4, "u_t": [4, 549], "ubuntu": 5, "uij": 267, "uint32_t": [238, 239, 258, 313, 459, 464, 465], "uint64_t": 313, "uint8_t": [38, 51, 59, 272], "unary_fn": 291, "unaryexpr": 255, "uncertainti": [258, 549], "unchang": [290, 548], "unconfigur": [457, 462, 466, 483], "undef": 175, "undefin": [65, 71, 107], "under": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "underli": [41, 65, 77, 92, 100, 317, 430, 482, 500, 529], "underlying_hasher_": 313, "underlying_typ": 92, "underlying_type_t": 41, "underlying_typetag": 92, "understand": 549, "undocu": [232, 478, 512], "unexpect": [32, 320], "uniform": [27, 79, 81, 83, 84, 86, 88, 164, 177, 182, 233, 234, 256, 257, 258, 265, 293, 302, 416, 455, 487, 488, 549], "uniform_distribut": 234, "uniform_int_distribut": [257, 303], "uniform_real_distribut": 257, "uniformli": 86, "uniformrandombitgener": [19, 79, 81, 412, 414, 420], "union": [27, 460, 491], "unique_ptr": [457, 459, 462, 463, 464, 465, 466, 467, 483], "unit": [177, 532], "unit_complex": [177, 247, 297, 307, 309], "unit_quaternion": [177, 543], "unitari": [79, 255], "uniti": 532, "unitless": [26, 318], "unitx": 532, "unknown": [295, 529, 535], "unknown_space_occupancy_likelihood_cub": 247, "unknown_space_occupancy_prob": 247, "unless": [3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "unlik": [302, 453, 487], "unnecessarili": 446, "unnorm": [4, 549], "unordered_map": [119, 120, 268, 482, 483, 532], "unordered_set": [438, 439], "unpack": 312, "unreachable_sentinel_t": 303, "unsign": 313, "unsigned_typ": 313, "unsigned_valu": 313, "until": [65, 438, 446, 549], "unwrap": [3, 295, 303, 412, 418], "up": [1, 4, 5, 6, 120, 258, 548, 549], "updat": [4, 5, 26, 32, 34, 43, 44, 55, 57, 69, 75, 77, 102, 104, 211, 227, 234, 243, 247, 258, 290, 300, 318, 326, 340, 354, 442, 457, 459, 462, 464, 466, 483, 485, 487, 488, 490, 496, 497, 507, 509, 532, 533], "update_covariance_diagnost": [459, 464, 465, 473, 475], "update_covariance_diagnosticsvoid": 459, "update_map": [26, 32, 34, 43, 44, 55, 56, 57, 58, 75, 76, 77, 78, 211, 227, 243, 247, 490, 496, 497, 507, 509], "update_mapvoid": [26, 32, 34, 243, 247, 490], "update_min_a": [26, 227, 229, 318, 485, 487, 488, 490, 507, 511, 533], "update_min_abeluga": 319, "update_min_abeluga_ro": 534, "update_min_adoubl": [26, 490], "update_min_amin": 26, "update_min_arot": 490, "update_min_d": [26, 227, 229, 318, 485, 487, 488, 490, 507, 511, 533], "update_min_dbeluga": 319, "update_min_dbeluga_ro": 534, "update_min_ddoubl": [26, 490], "update_min_dmin": 26, "update_min_dtransl": 490, "update_policy_": [26, 490], "updateauto": [26, 490], "upgrad": 5, "upon": [487, 488], "upper": [258, 342, 438, 439, 485, 487, 488, 533], "upstream": 5, "url": 545, "urng": [16, 84, 85, 86, 87, 88, 89, 208, 209, 222, 224, 233, 257, 294, 295, 302, 303, 412, 413, 415, 416, 417, 418, 419, 421], "urnga": [412, 414, 420], "urngth": [84, 86, 88], "us": [2, 4, 5, 6, 12, 14, 15, 16, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 43, 51, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81, 90, 92, 94, 96, 100, 102, 104, 107, 112, 114, 116, 119, 120, 122, 124, 125, 126, 151, 169, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 232, 233, 234, 236, 238, 239, 241, 242, 243, 245, 246, 247, 249, 251, 253, 255, 257, 258, 265, 267, 268, 270, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 315, 317, 318, 320, 322, 330, 334, 336, 338, 342, 346, 348, 350, 354, 361, 365, 376, 377, 380, 383, 385, 386, 392, 401, 412, 420, 424, 433, 437, 439, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 454, 455, 457, 459, 464, 478, 482, 483, 485, 487, 488, 490, 494, 496, 498, 512, 517, 518, 527, 529, 532, 533, 541, 543, 549], "usa": [42, 495, 545], "usag": [39, 92], "use_composit": 6, "use_map_top": [487, 488], "user": [2, 3, 18, 29, 258, 269, 455, 491, 513, 525, 531, 538], "usual": 514, "uth": [79, 258], "util": [26, 33, 34, 37, 38, 40, 41, 71, 119, 120, 151, 176, 177, 182, 240, 241, 254, 255, 258, 287, 288, 290, 291, 294, 295, 296, 297, 302, 303, 312, 313, 360, 374, 410, 440, 443, 444, 449, 450, 453, 456, 457, 458, 459, 485, 489, 490, 504, 514, 528, 529, 531, 542, 543], "utilitycircular_arrai": 139, "v": [17, 28, 118, 185, 188, 200, 212, 226, 228, 253, 259, 303, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 418, 419, 502, 507, 532, 549], "v3": [26, 29, 30, 31, 32, 33, 34, 37, 38, 41, 65, 107, 119, 120, 168, 169, 170, 171, 173, 174, 176, 177, 234, 240, 241, 242, 243, 244, 245, 246, 247, 267, 269, 270, 271, 272, 275, 276, 280, 281, 282, 283, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 436, 437, 438, 439, 442, 445, 446, 453, 454, 489, 490, 516, 517, 531, 532, 549], "valid": [16, 18, 19, 21, 43, 120, 258, 268, 485, 487, 488], "valu": [13, 14, 15, 17, 19, 20, 27, 30, 32, 38, 40, 41, 47, 63, 65, 66, 69, 71, 79, 81, 92, 100, 107, 108, 110, 119, 120, 158, 168, 169, 173, 176, 177, 182, 183, 233, 234, 247, 258, 265, 268, 269, 272, 281, 288, 290, 294, 295, 302, 303, 306, 308, 310, 311, 312, 313, 320, 334, 338, 368, 369, 380, 412, 414, 439, 443, 444, 446, 449, 450, 487, 488, 491, 498, 500, 513, 517, 520, 525, 527, 528, 529, 531, 535, 536, 549], "value_": 317, "value_grid": [110, 132, 158, 182, 246, 247], "value_or": [32, 247, 295], "value_trait": [17, 51, 272, 500, 501, 507, 509, 529], "value_traitsstat": 529, "value_typ": [38, 41, 63, 64, 65, 66, 71, 72, 100, 107, 108, 226, 228, 236, 446], "value_typeiter": 38, "value_typestd": [236, 446], "value_typet": 41, "value_typevalu": [41, 236, 446], "value_typevector2": 38, "valuea": 258, "valuebeluga": 60, "valuegrid2": [111, 118, 189, 197, 201, 208, 209, 212, 213, 214, 222, 224, 228, 230, 233, 247, 258, 449, 450], "valuegrid2gener": 450, "valuegrid2valuegrid2": 450, "valueinput": 312, "valueth": [107, 312, 368], "valuetrait": [500, 502, 507, 509, 511, 528, 529, 536], "valuetraitsinlinestat": 536, "valuetraitsstat": 536, "valuetraitstrait": [513, 529], "vari": 1, "variabl": [28, 29, 79, 81, 173, 178, 188, 232, 258, 262, 266, 269, 274, 275, 277, 280, 282, 287, 290, 294, 300, 302, 406, 428, 436, 438, 443, 444, 453, 461, 474, 478, 492, 508, 512, 548], "varianc": [176, 177, 258, 549], "variant": [4, 38, 59, 60, 61, 62, 177, 191, 228, 443, 482, 483, 489, 490, 496], "variant_": 38, "variantbresenham": 61, "variantvariantbresenham": 38, "variat": 1, "vector": [2, 20, 26, 27, 31, 32, 33, 34, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 61, 73, 75, 77, 79, 82, 90, 96, 100, 101, 107, 109, 110, 111, 119, 120, 123, 124, 168, 169, 172, 177, 204, 206, 218, 220, 224, 226, 228, 233, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 253, 254, 255, 257, 258, 259, 263, 265, 267, 268, 271, 272, 299, 311, 328, 336, 338, 366, 367, 376, 377, 380, 383, 385, 445, 446, 449, 450, 455, 490, 500, 501, 528, 529, 549], "vector2": [37, 38, 62, 63, 64, 176, 177, 186, 189, 190, 195, 198, 202, 203, 206, 215, 217, 220, 221, 222, 226, 228, 233, 245, 258, 306, 307, 324, 325, 527, 532, 540, 541, 543], "vector22d": 61, "vector2d": [13, 15, 17, 45, 46, 49, 50, 51, 52, 61, 110, 111, 120, 124, 126, 249, 257, 267, 272, 274, 315, 500, 501, 529], "vector2i": [13, 17, 38, 45, 46, 49, 50, 51, 52, 59, 60, 110, 111, 124, 249, 268, 272, 297, 338, 482, 483, 500, 501], "vector2ipoint": 59, "vector2near": [306, 307], "vector2nearauto": 307, "vector3": [177, 306, 307, 543], "vector3d": [12, 34, 238, 239, 241, 243, 257, 258, 267, 490], "vector3i": [268, 338], "vector3near": [306, 307], "vector3nearauto": 307, "vector4": 177, "vector_typ": [79, 80, 81, 82, 226, 228, 233, 253, 255, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "vector_typeth": [253, 255], "vector_typetypenam": [253, 255], "vector_typevector": 255, "vectorshorthand": [172, 255, 446], "vectorstd": [172, 255, 446], "veloc": 549, "veri": [5, 19, 120, 241], "verifi": [258, 438, 439], "version": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 75, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 548, 549], "vertex_color": 532, "vertic": 532, "via": [43, 487, 488], "view": [2, 3, 14, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 118, 119, 120, 151, 168, 169, 170, 171, 176, 177, 182, 206, 208, 209, 216, 220, 222, 224, 229, 233, 234, 240, 241, 242, 243, 244, 245, 246, 247, 265, 267, 269, 270, 271, 272, 281, 290, 291, 296, 297, 298, 299, 300, 301, 344, 350, 352, 354, 356, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 442, 445, 446, 455, 489, 490, 516, 517, 531, 532, 549], "view_": [38, 63, 295, 303], "view_adaptor": [233, 295], "view_closur": [30, 302, 303, 344], "view_facad": [233, 303], "view_interfac": [38, 233], "viewseffective_sample_s": 138, "viewsinclud": 148, "viewsnorm": 135, "viewstuple_vector": 140, "vision": 1, "visit": [169, 490], "visual": [232, 478, 488, 512, 520, 531, 549], "visualization_msg": [456, 457, 462, 488, 518], "void": [26, 27, 30, 32, 34, 38, 40, 41, 43, 55, 57, 65, 69, 75, 77, 79, 104, 107, 113, 115, 117, 118, 120, 181, 206, 209, 220, 222, 224, 226, 233, 243, 247, 253, 255, 258, 265, 281, 288, 295, 303, 312, 313, 363, 370, 372, 375, 405, 408, 442, 444, 446, 457, 459, 462, 464, 466, 483, 485, 490, 496, 519, 527, 542, 543], "void_t": [27, 118, 233, 258, 265, 281, 288, 303, 443, 444], "volatil": 6, "w": [4, 5, 21, 28, 42, 118, 120, 185, 188, 200, 213, 226, 229, 230, 258, 259, 270, 301, 303, 360, 374, 406, 428, 495, 507, 532, 543, 545], "w_i": [487, 488, 533], "w_t": 4, "wa": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 232, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 462, 464, 466, 478, 487, 488, 496, 498, 500, 512, 533, 535, 537, 538], "wai": [92, 313], "wait": [487, 488], "wall": 549, "want": [5, 32, 486], "warn": 487, "warranti": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "we": [6, 30, 32, 34, 107, 109, 120, 243, 247, 258, 268, 295, 354, 446, 490, 532, 548, 549], "weight": [4, 18, 21, 26, 27, 32, 34, 43, 55, 57, 75, 77, 90, 96, 97, 104, 119, 120, 170, 171, 176, 177, 229, 230, 233, 234, 243, 247, 258, 259, 263, 264, 265, 268, 269, 270, 276, 280, 281, 282, 283, 287, 288, 290, 300, 301, 302, 303, 320, 334, 342, 346, 354, 358, 368, 386, 416, 417, 418, 419, 428, 429, 442, 455, 482, 483, 485, 487, 488, 490, 496, 520, 531, 532, 533, 549], "weight_cap_percentil": [120, 229, 230, 342], "weight_cap_percentilebeluga": 343, "weight_cap_percentileclust": 120, "weight_cap_percentiledoubl": 120, "weight_detail": [118, 120, 171, 177, 206, 220, 233, 258, 281, 283, 287, 288, 428, 429, 532], "weight_fn": [118, 120, 171, 177, 206, 220, 258, 281, 283, 287, 288, 429, 532], "weight_fncustom": [233, 288], "weight_fninlin": 429, "weight_t": [258, 259, 263, 280, 281, 520, 531, 532], "weight_ttyp": 281, "weight_ttypenam": [281, 532], "weight_typ": [21, 32, 34, 55, 56, 57, 58, 75, 76, 77, 78, 90, 91, 226, 230, 243, 247, 258, 268, 280, 281, 386, 387, 532], "weight_typedoubl": [32, 34, 243, 247, 268], "weight_typestd": 281, "weight_typeth": 281, "weight_typeweight": [32, 34, 243, 247, 268], "weightaverag": 120, "weightbeluga": 359, "weightconstexpr": [120, 171, 177, 281, 283, 288, 532], "weightcustom": [120, 171, 177, 281, 283, 288], "weightdoubl": 120, "weighted_average_quaternion": [176, 177], "weighted_average_quaternioneigen": 177, "weighted_mean": 177, "weighted_sampl": 177, "weighted_squared_devi": 177, "weighted_vari": 177, "weightnumer": [26, 483, 532], "weights_sum": 177, "weights_view": 177, "weightsa": 258, "weightsconstexpr": [120, 283, 303, 532], "weightsdefinit": [120, 283, 303], "weightspos": 258, "weightsrang": [96, 176, 177, 258], "weightsrangea": [176, 258], "weightsweight": 258, "weightt": [26, 44, 184, 193, 194, 199, 202, 207, 211, 215, 221, 227, 233], "weighttag": [26, 258, 287, 288, 483, 532], "weightttyp": 43, "weightweight": 26, "well": [2, 27, 233, 258, 265, 280, 281, 386, 455, 549], "were": [274, 487], "wg21": 313, "what": [18, 92, 104, 107, 258, 306, 532, 548], "wheel": 11, "when": [2, 3, 4, 6, 16, 26, 41, 43, 45, 47, 49, 51, 53, 57, 65, 75, 79, 107, 234, 247, 258, 268, 275, 302, 318, 334, 390, 406, 410, 428, 446, 485, 487, 488, 490, 533, 549], "where": [4, 18, 34, 119, 168, 169, 177, 178, 234, 243, 247, 258, 275, 277, 390, 422, 424, 446, 453, 454, 485, 487, 488, 490, 533, 548, 549], "wherea": 488, "wherev": 2, "whether": [13, 43, 318, 462, 464, 466, 485, 487, 488, 496, 533], "which": [2, 4, 5, 19, 20, 22, 24, 26, 27, 29, 31, 33, 35, 37, 40, 86, 96, 98, 119, 121, 123, 125, 168, 170, 173, 176, 178, 180, 183, 232, 233, 235, 238, 242, 246, 248, 250, 252, 254, 256, 258, 265, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 342, 371, 392, 412, 414, 436, 438, 443, 445, 447, 449, 451, 453, 478, 485, 487, 488, 489, 498, 512, 516, 528, 531, 532, 540, 542], "whichev": 90, "while": [2, 4, 41, 120, 169, 234, 438, 549], "whole": [241, 549], "whose": [27, 176, 233, 258, 265, 288, 342, 408, 443, 444, 520], "why": [32, 247], "wide": [1, 2, 3, 455], "width": [13, 45, 49, 51, 110, 111, 124, 213, 230, 247, 249, 450, 500, 501, 507, 509, 529], "width_": 450, "widthgrid": 110, "widthstd": [450, 529], "wiki": [177, 255, 532], "wikipedia": [177, 255, 532], "wild": 1, "window": [40, 258], "wise": [3, 486, 548], "wish": 549, "within": [84, 88, 120, 232, 257, 358, 478, 512], "without": [3, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 43, 100, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 487, 488, 490, 494, 517, 518, 529, 532, 541, 543], "wolfram": [42, 495, 545], "word": [2, 6, 79], "work": [2, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 234, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 462, 464, 466, 488, 496, 498, 500, 533, 535, 537, 538], "workflow": [5, 6], "world": [34, 73, 238, 239, 241, 243, 258, 548, 549], "world_in_sensor_transform": 241, "world_pose_typ": [34, 73, 74, 226, 230, 241], "world_pose_typesophu": 241, "world_pose_typetyp": 241, "world_to_likelihood_field_transform_": 247, "wors": 65, "worth": 6, "would": 19, "wrap": 514, "wrapper": [487, 488, 490, 491, 494, 498, 500, 504, 506, 513, 514, 516, 517, 518, 520, 525, 528, 529], "write": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 65, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 488, 490, 494, 517, 518, 529, 532, 541, 543, 549], "written": 549, "wrt": 176, "www": [12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 366, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "x": [4, 12, 13, 17, 19, 20, 32, 34, 38, 45, 46, 49, 50, 51, 52, 61, 110, 111, 112, 120, 124, 126, 177, 243, 245, 247, 249, 253, 257, 272, 274, 278, 307, 313, 485, 487, 488, 490, 500, 501, 527, 529, 532, 533, 541, 543], "x10": 247, "x_": [4, 38, 549], "x_0": [4, 549], "x_clustering_resolut": [112, 113, 313], "x_clustering_resolutionclust": 112, "x_distribution_": 257, "x_k": 549, "x_offset": 247, "x_t": [4, 549], "xa": 487, "xi": [13, 17, 19, 20, 45, 46, 49, 50, 51, 52, 110, 111, 124, 249, 272, 500, 501], "xigrid": [45, 51], "xml": 6, "xplane": [45, 51], "xspan_": 38, "xstep_": 38, "xx": 487, "xy": [177, 485, 487, 488], "xyaw": [485, 488], "y": [5, 12, 13, 17, 19, 32, 34, 38, 41, 45, 46, 49, 50, 51, 52, 61, 65, 110, 111, 112, 120, 124, 126, 177, 243, 245, 247, 249, 257, 272, 274, 278, 307, 313, 485, 487, 488, 490, 500, 501, 527, 529, 532, 533, 541, 543], "y_": 38, "y_clustering_resolut": [112, 113, 313], "y_clustering_resolutionclust": 112, "y_distribution_": 257, "y_offset": 247, "ya": 487, "yaw": [177, 485, 487, 488, 527], "yellow": [232, 478, 512], "yet": [1, 120, 532], "yi": [13, 17, 45, 46, 49, 50, 51, 52, 110, 111, 124, 249, 272, 500, 501], "yield": [71, 176, 236, 549], "yigrid": [45, 51], "you": [0, 5, 6, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 306, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543, 548, 549], "your": [5, 6, 548, 549], "your_typ": 92, "yplane": [45, 51], "yspan_": 38, "ystep_": 38, "yy": 487, "yyaw": [485, 488], "z": [12, 28, 32, 34, 118, 126, 185, 188, 229, 231, 243, 253, 257, 258, 307, 424, 425, 438, 439, 490, 532, 533, 543], "z_": [4, 549], "z_distribution_": 257, "z_hit": [32, 229, 231, 247, 320, 334, 488], "z_hitbeluga": [321, 335], "z_hitdoubl": [32, 247], "z_hitweight": [32, 247], "z_max": [32, 229, 231, 320, 488], "z_maxbeluga": 321, "z_maxdoubl": 32, "z_maxweight": 32, "z_mean": 32, "z_rand": [32, 229, 231, 320, 488], "z_randbeluga": 321, "z_randdoubl": 32, "z_random": [229, 231, 247, 334], "z_randombeluga": 335, "z_randomdoubl": 247, "z_randomweight": 247, "z_randweight": 32, "z_short": [32, 229, 231, 320, 488], "z_shortbeluga": 321, "z_shortdoubl": 32, "z_shortweight": 32, "z_t": [4, 549], "zero": [3, 12, 69, 79, 126, 177, 181, 243, 255, 258, 422, 436, 442, 488, 532], "zip": [27, 119, 120, 149, 176, 177, 182, 233, 234, 244, 245, 265, 267, 281, 410, 426, 445, 446, 451, 452, 531, 532], "zip_fn": [118, 206, 220, 427, 446, 453, 454], "zip_fnimplement": [233, 454], "zip_fninlin": 427, "zip_view": [268, 426, 454], "zip_with": [120, 258], "zip_with_view": 410, "zipconstexpr": [446, 454], "zipgiven": [446, 454], "zsee": 424, "zupper": 258, "\u00eatre": 1, "\u03b7": 4, "\u2124": 59}, "titles": ["Contact", "Rationale", "Architecture", "Design principles", "Key concepts", "Installation", "Quickstart", "Benchmarking Beluga", "Extending Beluga", "Profiling Beluga", "Using Beluga AMCL on an AMR", "Overview", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/3d_embedding.hpp Source File", "Beluga: Beluga named requirements: DenseGrid2", "Beluga: Beluga named requirements: LaserScan", "Beluga: Beluga named requirements: LinearGrid2", "Beluga: Beluga named requirements: MotionModel", "Beluga: Beluga named requirements: OccupancyGrid2d", "Beluga: Beluga named requirements: Particle", "Beluga: Beluga named requirements: RandomStateDistribution", "Beluga: Beluga named requirements: RegularGrid", "Beluga: Beluga named requirements: SensorModel", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File", "Beluga: Class List", "Classes", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File", "Beluga: Bibliography", "Beluga: beluga::Amcl&amp;lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseDenseGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLaserScan&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLinearGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseOccupancyGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseRegularGrid&amp;lt; Derived, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BeamSensorModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BearingSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i Class Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator Class Reference", "Beluga: Member List", "Beluga: beluga::CircularArray&amp;lt; T, N, F &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModel&amp;lt; StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::ExponentialFilter Class Reference", "Beluga: Member List", "Beluga: beluga::IndexingIterator&amp;lt; Indexable, Index &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LandmarkMap Class Reference", "Beluga: Member List", "Beluga: beluga::LandmarkSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistribution&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistributionParam&amp;lt; Vector, Matrix &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; T, Constraint &amp;gt; Class Template Reference", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, Eigen::AlignedBox2d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE3d, Eigen::AlignedBox3d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::NDTSensorModel&amp;lt; SparseGridT &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Numeric&amp;lt; T, PhantomType, typename &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::ParticleClusterizer Class Reference", "Beluga: Member List", "Beluga: beluga::Ray2d&amp;lt; OccupancyGrid, Algorithm &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::SparseValueGrid&amp;lt; MapType, NDim &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::StationaryModel Class Reference", "Beluga: Member List", "Beluga: beluga::ThrunRecoveryProbabilityEstimator Class Reference", "Beluga: Member List", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, T &amp;gt; Class Template Reference", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, std::tuple&amp;lt; Types... &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::TupleVector&amp;lt; T &amp;gt; Class Template Reference", "Beluga: beluga::ValueGrid2&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE2d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Tuple&amp;lt; Types... &amp;gt;, std::enable_if_t&amp;lt;(std::is_arithmetic_v&amp;lt; Types &amp;gt; &amp;amp;&amp;amp;...), void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; std::array&amp;lt; T, N &amp;gt;, std::enable_if_t&amp;lt; std::is_arithmetic_v&amp;lt; T &amp;gt;, void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: Class Index", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/cluster_based_estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; actions Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; containers Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; motion Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; policies Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; random Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; testing Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; raycasting Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; utility Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; data Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference", "Beluga: _doxygen Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/eigen_compatibility.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File", "Beluga: File List", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File", "Beluga: Class Members", "All", "Beluga: Class Members", "Beluga: Class Members", "Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Enumerations", "Beluga: Class Members - Enumerator", "Beluga: Class Members", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Related Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Typedefs", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Variables", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Graph Legend", "Beluga: Class Hierarchy", "Beluga: API Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File", "Beluga: Class Hierarchy", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File", "Beluga: beluga Namespace Reference", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace List", "Namespaces", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File", "Beluga: Related Pages", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File", "Beluga: beluga::AmclParams Struct Reference", "Beluga: Member List", "Beluga: beluga::BeamModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::BearingModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator::sentinel Struct Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkBearingDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkPositionDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::NDTCell&amp;lt; NDim, Scalar &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::NDTModelParam&amp;lt; NDim &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::ParticleClusterizerParam Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::assign_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::clusterizer_detail::ClusterCell&amp;lt; State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::common_tuple_type&amp;lt; T, U, Is &amp;gt; Struct Template Reference", "Beluga: beluga::common_tuple_type&amp;lt; T, U, std::index_sequence&amp;lt; I... &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; T, class &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::detail::CellHasher&amp;lt; N &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::detail::make_from_state_fn&amp;lt; Particle, State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::has_common_tuple_type&amp;lt; typename, typename, typename &amp;gt; Struct Template Reference", "Beluga: beluga::has_common_tuple_type&amp;lt; T, U, std::void_t&amp;lt; common_tuple_type_t&amp;lt; T, U &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::is_tuple_like&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Eigen::EigenBase&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO3Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::particle_traits&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_effective_size_drop_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy&amp;lt; PolicyFn &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy_base Struct Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::state_detail::state_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::views::detail::as_common_tuple_indirect_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_view&amp;lt; Range, Fn, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_view&amp;lt; Range, Distribution, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_evenly_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_while_kld_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::zip_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::weight_detail::weight_fn Struct Reference", "Beluga: Member List", "Beluga: std::hash&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::numeric_limits&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: std::tuple_element&amp;lt; I, beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::tuple_size&amp;lt; beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File", "Overview", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File", "Beluga AMCL: Class List", "Classes", "Beluga AMCL: beluga_amcl::AmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::AmclNodelet Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::NdtAmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: Class Index", "Beluga AMCL: _doxygen Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference", "Beluga AMCL: File List", "Beluga AMCL: Class Members", "Class Members", "Beluga AMCL: Class Members - Functions", "Beluga AMCL: Class Members - Typedefs", "Beluga AMCL: Class Members - Variables", "Beluga AMCL: Graph Legend", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: API Reference", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File", "Beluga AMCL: Related Pages", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File", "Overview", "ROS Reference", "ROS 2 Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File", "Beluga ROS: Class List", "Classes", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File", "Beluga ROS: Bibliography", "Beluga ROS: beluga_ros::Amcl Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::LaserScan Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid Class Reference", "Beluga ROS: Member List", "Beluga ROS: Class Index", "Beluga ROS: _doxygen Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include Directory Reference", "Beluga ROS: File List", "Beluga ROS: Class Members", "Class Members", "Beluga ROS: Class Members - Functions", "Beluga ROS: Class Members - Typedefs", "Beluga ROS: Class Members - Variables", "Beluga ROS: Graph Legend", "Beluga ROS: Class Hierarchy", "Beluga ROS: API Reference", "Beluga ROS: Class Hierarchy", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File", "Beluga ROS: Sophus Namespace Reference", "Beluga ROS: beluga_ros Namespace Reference", "Beluga ROS: beluga_ros::msg Namespace Reference", "Beluga ROS: Namespace Members", "Beluga ROS: Namespace Members", "Namespace Members", "Beluga ROS: Namespace List", "Namespaces", "Beluga ROS: tf2 Namespace Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File", "Beluga ROS: Related Pages", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File", "Beluga ROS: beluga_ros::AmclParams Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid::ValueTraits Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; T &amp;gt; Struct Template Reference", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga ROS: Member List", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File", "Overview", "Bibliography", "Features", "Releases", "Using Beluga with Nav2", "Primer on Particle Filtering with Beluga"], "titleterms": {"1": 549, "2": [488, 549], "3": 549, "3d_embed": 12, "4": 549, "5": 549, "6": 549, "7": 549, "_doxygen": [152, 469, 503], "abstract": 2, "action": [22, 23, 29, 30, 127, 134, 135, 159, 269, 270, 290, 291, 300, 301], "adapt": 2, "advertis": [487, 488], "algorithm": [24, 25, 26, 37, 38, 98, 119, 120, 136, 137, 138, 142, 144, 156, 167, 168, 169, 170, 171, 176, 177, 180, 181, 296, 297, 312, 313, 442], "alignedbox2d": 84, "alignedbox3d": 88, "all": 185, "almost_equal_to": 537, "amcl": [10, 43, 480, 489, 490, 496], "amcl_cor": 26, "amcl_nod": [456, 457], "amcl_nodelet": [458, 459], "amclnod": [462, 488], "amclnodelet": [464, 487], "amclparam": [318, 533], "amp": 114, "amr": 10, "an": 10, "architectur": 2, "arg": [365, 373, 409], "as_common_tuple_indirect_fn": 410, "assign": [29, 30], "assign_fn": 344, "awar": 3, "base": 2, "basedensegrid2": 45, "baselaserscan": 47, "baselineargrid2": 49, "baseoccupancygrid2": 51, "baseregulargrid": 53, "beam_model": [31, 32], "beammodelparam": 320, "beamsensormodel": 55, "bearing_sensor_model": [33, 34], "bearingmodelparam": 322, "bearingsensormodel": 57, "belief": 549, "beluga": [5, 6, 7, 8, 9, 10, 12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 470, 471, 480, 482, 483, 485, 489, 490, 493, 494, 504, 505, 514, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543, 548, 549], "beluga_amcl": [456, 457, 458, 459, 470, 471, 482, 483, 485, 487, 488], "beluga_demo": 548, "beluga_demo_nav2": 548, "beluga_ro": [489, 490, 493, 494, 504, 505, 516, 517, 518, 520, 528, 529, 531, 532, 540, 541, 542, 543], "benchmark": 7, "bibliographi": [42, 495, 545], "binari": 5, "bound": 3, "bresenham": [37, 38], "bresenham2i": 59, "broadcast": [487, 488], "build": 5, "call": 487, "carlo": 4, "cellhash": 366, "center": 3, "ciabatta": [39, 166], "circular_arrai": [40, 41], "circulararrai": [65, 433, 435], "class": [27, 28, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 118, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 363, 372, 408, 460, 461, 462, 464, 466, 468, 473, 474, 475, 476, 477, 479, 481, 491, 492, 496, 498, 500, 502, 507, 508, 509, 510, 511, 513, 515], "clone": [5, 548], "cluster_based_estim": [119, 120], "clustercel": 358, "common_tuple_typ": 360, "common_tuple_type_t": 371, "compat": [487, 488], "compil": 549, "concept": 4, "conclus": 548, "consist": 3, "constraint": 83, "contact": 0, "contain": [40, 41, 121, 122, 128, 139, 140, 153, 445, 446], "creat": 548, "crtp": 2, "data": [2, 123, 124, 145, 147, 158, 240, 241, 244, 245, 248, 249, 267, 271, 272, 298, 299, 310, 311, 449, 450], "decay_t": 365, "decay_tuple_lik": 363, "dense_grid": [123, 124], "densegrid2": 13, "depend": [5, 455], "deriv": [45, 47, 49, 51, 53], "design": 3, "detail": [163, 175, 289], "develop": 549, "differential_drive_model": [125, 126], "differentialdrivemodel": 67, "differentialdrivemodelparam": 326, "directori": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 469, 470, 471, 503, 504, 505], "distance_map": [168, 169], "distribut": [2, 5, 420], "easi": 3, "effective_sample_s": [170, 171], "eigen_compat": 172, "eigenbas": 380, "element": [173, 174], "enabl": [375, 405], "enumer": [191, 192], "epilogu": 175, "estim": [176, 177, 549], "evalu": 3, "every_n": [178, 179], "every_n_fn": 388, "every_n_polici": 390, "exampl": 548, "executionpolici": 43, "explan": 548, "exponential_filt": [180, 181], "exponentialfilt": 69, "extend": 8, "f": [65, 433, 435], "featur": [11, 455, 546], "file": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 472, 482, 483, 485, 489, 490, 493, 494, 506, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "filter": [487, 488, 549], "fn": 414, "focus": 3, "form": 2, "forward_lik": 183, "from": 5, "function": [2, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 223, 475, 509], "graph": [232, 478, 512], "gt": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 98, 100, 106, 107, 109, 110, 112, 114, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 336, 338, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 396, 398, 399, 401, 405, 408, 409, 414, 420, 430, 432, 433, 435, 537, 538], "has_common_tuple_typ": 370, "has_single_el": 372, "hierarchi": [233, 237, 479, 481, 513, 515], "home": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 470, 471, 482, 483, 485, 489, 490, 493, 494, 504, 505, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "hpp": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 482, 483, 485, 489, 490, 493, 494, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "i": [360, 361], "includ": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 470, 471, 482, 483, 485, 489, 490, 493, 494, 504, 505, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "index": [71, 118, 468, 502], "index_sequ": 361, "indexing_iter": [235, 236], "indexingiter": 71, "initi": [487, 488, 549], "instal": 5, "integ": 61, "interfac": [487, 488], "internalcontain": 106, "is_arithmetic_v": [114, 116], "is_tuple_lik": 374, "iter": 63, "kei": 4, "landmark": 549, "landmark_detection_typ": [238, 239], "landmark_map": [240, 241], "landmark_sensor_model": [242, 243], "landmarkbearingdetect": 328, "landmarkmap": [57, 73, 75], "landmarkmodelparam": 330, "landmarkpositiondetect": 332, "landmarksensormodel": 75, "laser_scan": [244, 245, 516, 517], "laserscan": [14, 498], "lazi": 3, "legend": [232, 478, 512], "like": 2, "likelihood_field_model": [246, 247], "likelihoodfieldmodel": 77, "likelihoodfieldmodelparam": 334, "line": 61, "linear_grid": [248, 249], "lineargrid2": 15, "list": [27, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 111, 113, 115, 117, 182, 265, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 362, 364, 367, 369, 378, 379, 381, 382, 384, 387, 389, 391, 393, 395, 397, 400, 402, 404, 407, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 434, 460, 463, 465, 467, 472, 491, 497, 499, 501, 506, 525, 534, 536, 539], "local": 4, "lt": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 90, 92, 98, 100, 106, 107, 109, 110, 114, 116, 336, 338, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 396, 398, 399, 401, 405, 408, 409, 414, 420, 430, 432, 433, 435, 537, 538], "make_from_state_fn": 368, "map": 549, "maptyp": 100, "matrix": 81, "member": [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 111, 113, 115, 117, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 259, 260, 261, 262, 263, 264, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 362, 364, 367, 369, 378, 379, 381, 382, 384, 387, 389, 391, 393, 395, 397, 400, 402, 404, 407, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 434, 463, 465, 467, 473, 474, 475, 476, 477, 497, 499, 501, 507, 508, 509, 510, 511, 522, 523, 524, 534, 536, 539], "memori": 3, "messag": 518, "misc": [487, 488], "model": [487, 488, 549], "mont": 4, "motion": [125, 126, 129, 141, 161, 250, 251, 273, 274, 314, 315, 487, 488], "motionmodel": [16, 43], "msg": 521, "multivariate_distribution_trait": [252, 253, 375], "multivariate_normal_distribut": [254, 255], "multivariate_uniform_distribut": [256, 257], "multivariatenormaldistribut": 79, "multivariatenormaldistributionparam": 81, "multivariateuniformdistribut": 83, "n": [65, 366, 433, 435], "namespac": [258, 259, 260, 261, 262, 263, 264, 265, 266, 519, 520, 521, 522, 523, 524, 525, 526, 527], "nav2": 548, "ndim": [53, 100, 336, 338], "ndt_amcl_nod": [482, 483], "ndt_cell": 267, "ndt_sensor_model": 268, "ndtamclnod": 466, "ndtcell": 336, "ndtmodelparam": 338, "ndtsensormodel": 90, "node": 488, "nodelet": 487, "normal": [269, 270], "normalize_base_fn": 346, "normalize_fn": 348, "note": [487, 488], "numer": [92, 430, 432], "observ": [487, 488], "occupancy_grid": [271, 272, 528, 529], "occupancygrid": [55, 77, 86, 98, 500], "occupancygrid2d": 17, "omnidirectional_drive_model": [273, 274], "omnidirectionaldrivemodel": 94, "omnidirectionaldrivemodelparam": 340, "on_effective_size_drop": [275, 276], "on_effective_size_drop_polici": 392, "on_mot": [277, 278], "on_motion_fn": 394, "on_motion_polici": 396, "on_motion_policy_bas": 398, "output": 6, "over": 6, "overview": [11, 455, 486, 544, 548, 549], "packag": 548, "page": [279, 484, 530], "paramet": [487, 488, 549], "particl": [18, 282, 283, 368, 487, 488, 549], "particle_cloud": [531, 532], "particle_trait": [280, 281, 386], "particlecluster": 96, "particleclusterizerparam": 342, "particletyp": 43, "perform": 3, "phantomtyp": [92, 430, 432], "polici": [130, 142, 150, 178, 179, 275, 276, 277, 278, 284, 285, 286, 401], "policy_bas": 403, "policyfn": 401, "pose": [396, 398, 487, 488], "predict": 549, "prerequisit": 6, "primer": 549, "primit": [287, 288], "principl": 3, "profil": 9, "prologu": 289, "propag": [290, 291], "propagate_base_fn": 350, "propagate_fn": 352, "publish": [487, 488], "quickstart": 6, "random": [131, 143, 164, 252, 253, 254, 255, 256, 257, 292, 293], "random_interspers": [294, 295], "random_intersperse_fn": 412, "random_intersperse_view": 414, "randomstatedistribut": 19, "randomstategener": 43, "rang": [2, 414, 420], "rational": 1, "ray2d": 98, "raycast": [37, 38, 136, 167, 296, 297], "re": 3, "record": 6, "refer": [22, 24, 29, 31, 33, 35, 37, 40, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 109, 110, 112, 114, 116, 119, 121, 123, 125, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 176, 178, 180, 235, 238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 269, 271, 273, 275, 277, 280, 282, 284, 287, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 436, 438, 440, 443, 445, 447, 449, 451, 453, 456, 458, 462, 464, 466, 469, 470, 471, 482, 487, 488, 489, 493, 496, 498, 500, 503, 504, 505, 516, 519, 520, 521, 527, 528, 531, 533, 535, 537, 538, 540, 542], "regular_grid": [298, 299], "regulargrid": 20, "relat": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 223, 279, 484, 530], "releas": 547, "repositori": 5, "requir": [548, 549], "resampl": 549, "reweight": [300, 301], "reweight_base_fn": 354, "reweight_fn": 356, "ro": [5, 487, 488, 514], "robot": 6, "ros2_common": 485, "run": [6, 548, 549], "runner": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 470, 471, 482, 483, 485, 489, 490, 493, 494, 504, 505, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "sampl": [302, 303], "sample_base_fn": 416, "sample_fn": 418, "sample_view": 420, "scalar": [336, 399, 538], "se2": [399, 538], "se2bas": 385, "se2d": [86, 112], "se3bas": 377, "sensor": [31, 32, 33, 34, 123, 124, 132, 143, 144, 145, 146, 147, 157, 158, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 267, 268, 271, 272, 298, 299, 304, 305, 310, 311, 449, 450], "sensormodel": [21, 43], "sentinel": 324, "servic": [487, 488], "simul": 6, "so2bas": 376, "so3bas": 383, "sophu": 519, "sophus_match": [306, 307], "sophus_print": [308, 309], "sourc": [5, 12, 23, 25, 26, 30, 32, 34, 36, 38, 39, 41, 120, 122, 124, 126, 169, 171, 172, 174, 175, 177, 179, 181, 183, 236, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 267, 268, 270, 272, 274, 276, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 437, 439, 441, 442, 444, 446, 448, 450, 452, 454, 457, 459, 483, 485, 490, 494, 517, 518, 529, 532, 541, 543], "sparse_value_grid": [310, 311], "sparsegridt": 90, "sparsevaluegrid": 100, "spatial_hash": [312, 313, 405], "state": [358, 368], "state_fn": 406, "statetyp": [57, 67, 75], "static": 3, "stationary_model": [314, 315], "stationarymodel": 102, "step": 549, "stl": [2, 3], "strongly_typed_numer": [316, 317], "struct": [318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 388, 390, 392, 394, 396, 398, 399, 401, 403, 405, 406, 408, 409, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 533, 535, 537, 538], "subscrib": [487, 488], "support": 11, "system": 549, "t": [65, 79, 83, 92, 106, 109, 110, 116, 360, 363, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 405, 408, 409, 430, 432, 433, 435, 537], "take_evenli": [436, 437], "take_evenly_fn": 422, "take_while_kld": [438, 439], "take_while_kld_fn": 424, "task": 549, "templat": [43, 45, 47, 49, 51, 53, 55, 57, 61, 65, 67, 71, 75, 77, 79, 81, 83, 86, 90, 92, 98, 100, 106, 107, 109, 110, 114, 116, 336, 338, 358, 360, 361, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 383, 385, 386, 396, 398, 399, 401, 405, 408, 409, 414, 420, 430, 432, 433, 435, 537, 538], "test": [133, 160, 306, 307, 308, 309, 440, 441], "tf2": 527, "tf2_eigen": [540, 541], "tf2_sophu": [542, 543], "thrun_recovery_probability_estim": 442, "thrunrecoveryprobabilityestim": 104, "topic": [487, 488], "transform": [487, 488], "tupl": 107, "tuple_index": 408, "tuple_index_found": [373, 409], "tuple_trait": [443, 444], "tuple_vector": [445, 446], "tuplecontain": 106, "tuplelik": [365, 372, 408], "tuplevector": 109, "type": [107, 114, 146, 147, 162, 238, 239], "type_trait": [134, 137, 141, 148, 155, 280, 281, 316, 317, 443, 444, 447, 448], "typedef": [226, 476, 510], "typenam": [92, 370], "u": [360, 371], "updat": 549, "urng": [414, 420], "us": [3, 10, 548], "util": [139, 154, 183, 235, 236], "ux": 3, "value_grid": [449, 450], "valuegrid2": 110, "valuetrait": 535, "variabl": [229, 477, 511], "vector": 81, "vector2": 61, "view": [135, 138, 140, 148, 149, 173, 174, 282, 283, 294, 295, 302, 303, 436, 437, 438, 439, 451, 452, 453, 454], "visual": 6, "void": [112, 114, 116], "void_t": 371, "weight_fn": 428, "weightt": 43, "work": [12, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 470, 471, 482, 483, 485, 489, 490, 493, 494, 504, 505, 516, 517, 518, 528, 529, 531, 532, 540, 541, 542, 543], "workspac": [5, 548], "zip": [453, 454], "zip_fn": 426}})