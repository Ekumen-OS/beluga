Search.setIndex({"alltitles": {"/home/runner/work/beluga/beluga/beluga/include Directory Reference": [[160, "home-runner-work-beluga-beluga-beluga-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; actions Relation": [[122, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-actions-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; containers Relation": [[123, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-containers-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; motion Relation": [[124, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-motion-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; policies Relation": [[125, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-policies-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; random Relation": [[126, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-random-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; sensor Relation": [[127, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-sensor-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga -&gt; testing Relation": [[128, "home-runner-work-beluga-beluga-beluga-include-beluga-gt-testing-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference": [[146, "home-runner-work-beluga-beluga-beluga-include-beluga-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; type_traits Relation": [[129, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions -&gt; views Relation": [[130, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference": [[154, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference": [[21, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File": [[22, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference": [[28, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-assign-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File": [[29, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-assign-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference": [[263, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-normalize-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File": [[264, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-normalize-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference": [[284, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-propagate-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File": [[285, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-propagate-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference": [[294, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-reweight-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File": [[295, "home-runner-work-beluga-beluga-beluga-include-beluga-actions-reweight-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; raycasting Relation": [[131, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-raycasting-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; type_traits Relation": [[132, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&gt; views Relation": [[133, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference": [[151, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference": [[23, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File": [[24, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File": [[25, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-amcl-core-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference": [[163, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-distance-map-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File": [[164, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-distance-map-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference": [[165, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-effective-sample-size-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File": [[166, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-effective-sample-size-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference": [[170, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-estimation-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File": [[171, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-estimation-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference": [[174, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-exponential-filter-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File": [[175, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-exponential-filter-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference": [[162, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference": [[290, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File": [[291, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference": [[36, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-bresenham-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File": [[37, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-raycasting-bresenham-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference": [[306, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-spatial-hash-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File": [[307, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-spatial-hash-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File": [[428, "home-runner-work-beluga-beluga-beluga-include-beluga-algorithm-thrun-recovery-probability-estimator-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference": [[34, "home-runner-work-beluga-beluga-beluga-include-beluga-beluga-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File": [[35, "home-runner-work-beluga-beluga-beluga-include-beluga-beluga-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; utility Relation": [[134, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-gt-utility-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers -&gt; views Relation": [[135, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-gt-views-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference": [[148, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference": [[116, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File": [[117, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference": [[39, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-circular-array-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File": [[40, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-circular-array-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference": [[431, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-tuple-vector-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File": [[432, "home-runner-work-beluga-beluga-beluga-include-beluga-containers-tuple-vector-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference": [[158, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File": [[169, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-epilogue-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File": [[283, "home-runner-work-beluga-beluga-beluga-include-beluga-detail-prologue-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion -&gt; type_traits Relation": [[136, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference": [[156, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference": [[244, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File": [[245, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference": [[120, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-differential-drive-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File": [[121, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-differential-drive-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference": [[267, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-omnidirectional-drive-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File": [[268, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-omnidirectional-drive-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference": [[308, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-stationary-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File": [[309, "home-runner-work-beluga-beluga-beluga-include-beluga-motion-stationary-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies -&gt; algorithm Relation": [[137, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-gt-algorithm-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference": [[145, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference": [[278, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File": [[279, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference": [[172, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-every-n-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File": [[173, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-every-n-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference": [[269, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-effective-size-drop-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File": [[270, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-effective-size-drop-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference": [[271, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-motion-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File": [[272, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-on-motion-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File": [[280, "home-runner-work-beluga-beluga-beluga-include-beluga-policies-policy-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference": [[281, "home-runner-work-beluga-beluga-beluga-include-beluga-primitives-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File": [[282, "home-runner-work-beluga-beluga-beluga-include-beluga-primitives-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random -&gt; sensor Relation": [[138, "home-runner-work-beluga-beluga-beluga-include-beluga-random-gt-sensor-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference": [[159, "home-runner-work-beluga-beluga-beluga-include-beluga-random-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference": [[286, "home-runner-work-beluga-beluga-beluga-include-beluga-random-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File": [[287, "home-runner-work-beluga-beluga-beluga-include-beluga-random-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference": [[246, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-distribution-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File": [[247, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-distribution-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference": [[248, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-normal-distribution-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File": [[249, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-normal-distribution-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference": [[250, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-uniform-distribution-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File": [[251, "home-runner-work-beluga-beluga-beluga-include-beluga-random-multivariate-uniform-distribution-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; algorithm Relation": [[139, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-algorithm-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; data Relation": [[140, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-data-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&gt; types Relation": [[141, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-gt-types-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference": [[152, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference": [[298, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File": [[299, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference": [[30, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-beam-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File": [[31, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-beam-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference": [[32, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-bearing-sensor-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File": [[33, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-bearing-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&gt; types Relation": [[142, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-gt-types-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference": [[153, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference": [[118, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-dense-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File": [[119, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-dense-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference": [[234, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-landmark-map-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File": [[235, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-landmark-map-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference": [[238, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-laser-scan-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File": [[239, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-laser-scan-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference": [[242, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-linear-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File": [[243, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-linear-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File": [[261, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-ndt-cell-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference": [[265, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-occupancy-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File": [[266, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-occupancy-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference": [[292, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-regular-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File": [[293, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-regular-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference": [[304, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-sparse-value-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File": [[305, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-sparse-value-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference": [[435, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-value-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File": [[436, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-data-value-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference": [[236, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-landmark-sensor-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File": [[237, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-landmark-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference": [[240, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-likelihood-field-model-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File": [[241, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-likelihood-field-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File": [[262, "home-runner-work-beluga-beluga-beluga-include-beluga-sensor-ndt-sensor-model-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference": [[155, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference": [[426, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File": [[427, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference": [[300, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-matchers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File": [[301, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-matchers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference": [[302, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-printers-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File": [[303, "home-runner-work-beluga-beluga-beluga-include-beluga-testing-sophus-printers-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference": [[150, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference": [[433, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File": [[434, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference": [[274, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-particle-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File": [[275, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-particle-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference": [[310, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-strongly-typed-numeric-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File": [[311, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-strongly-typed-numeric-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference": [[429, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-tuple-traits-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File": [[430, "home-runner-work-beluga-beluga-beluga-include-beluga-type-traits-tuple-traits-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference": [[157, "home-runner-work-beluga-beluga-beluga-include-beluga-types-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference": [[232, "home-runner-work-beluga-beluga-beluga-include-beluga-types-landmark-detection-types-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File": [[233, "home-runner-work-beluga-beluga-beluga-include-beluga-types-landmark-detection-types-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference": [[149, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File": [[177, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-forward-like-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference": [[229, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-indexing-iterator-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File": [[230, "home-runner-work-beluga-beluga-beluga-include-beluga-utility-indexing-iterator-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views -&gt; type_traits Relation": [[143, "home-runner-work-beluga-beluga-beluga-include-beluga-views-gt-type-traits-relation"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference": [[144, "home-runner-work-beluga-beluga-beluga-include-beluga-views-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference": [[437, "home-runner-work-beluga-beluga-beluga-include-beluga-views-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File": [[438, "home-runner-work-beluga-beluga-beluga-include-beluga-views-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference": [[167, "home-runner-work-beluga-beluga-beluga-include-beluga-views-elements-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File": [[168, "home-runner-work-beluga-beluga-beluga-include-beluga-views-elements-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference": [[276, "home-runner-work-beluga-beluga-beluga-include-beluga-views-particles-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File": [[277, "home-runner-work-beluga-beluga-beluga-include-beluga-views-particles-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference": [[288, "home-runner-work-beluga-beluga-beluga-include-beluga-views-random-intersperse-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File": [[289, "home-runner-work-beluga-beluga-beluga-include-beluga-views-random-intersperse-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference": [[296, "home-runner-work-beluga-beluga-beluga-include-beluga-views-sample-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File": [[297, "home-runner-work-beluga-beluga-beluga-include-beluga-views-sample-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference": [[422, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-evenly-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File": [[423, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-evenly-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference": [[424, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-while-kld-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File": [[425, "home-runner-work-beluga-beluga-beluga-include-beluga-views-take-while-kld-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference": [[439, "home-runner-work-beluga-beluga-beluga-include-beluga-views-zip-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File": [[440, "home-runner-work-beluga-beluga-beluga-include-beluga-views-zip-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference": [[161, "home-runner-work-beluga-beluga-beluga-include-ciabatta-directory-reference"]], "/home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File": [[38, "home-runner-work-beluga-beluga-beluga-include-ciabatta-ciabatta-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference": [[456, "home-runner-work-beluga-beluga-beluga-amcl-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference": [[457, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference": [[442, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-node-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File": [[443, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-node-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference": [[444, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-nodelet-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File": [[445, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-amcl-nodelet-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference": [[468, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ndt-amcl-node-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File": [[469, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ndt-amcl-node-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File": [[471, "home-runner-work-beluga-beluga-beluga-amcl-include-beluga-amcl-ros2-common-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include Directory Reference": [[491, "home-runner-work-beluga-beluga-beluga-ros-include-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference": [[490, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-directory-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference": [[475, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-amcl-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File": [[476, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-amcl-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference": [[479, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-beluga-ros-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File": [[480, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-beluga-ros-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference": [[502, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-laser-scan-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File": [[503, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-laser-scan-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File": [[504, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-messages-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference": [[514, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-occupancy-grid-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File": [[515, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-occupancy-grid-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference": [[517, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-particle-cloud-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File": [[518, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-particle-cloud-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference": [[526, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-eigen-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File": [[527, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-eigen-hpp-source-file"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference": [[528, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-sophus-hpp-file-reference"]], "/home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File": [[529, "home-runner-work-beluga-beluga-beluga-ros-include-beluga-ros-tf2-sophus-hpp-source-file"]], "Advertised services": [[473, "advertised-services"], [474, "advertised-services"]], "AlignedBox2d &gt; Class Reference": [[83, "alignedbox2d-gt-class-reference"]], "AlignedBox3d &gt; Class Reference": [[87, "alignedbox3d-gt-class-reference"]], "All": [[179, "all"]], "Amcl Class Reference": [[482, "amcl-class-reference"]], "Amcl&lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &gt; Class Template Reference": [[42, "amcl-lt-motionmodel-sensormodel-randomstategenerator-weightt-particletype-executionpolicy-gt-class-template-reference"]], "AmclNode Class Reference": [[448, "amclnode-class-reference"]], "AmclNodelet Class Reference": [[450, "amclnodelet-class-reference"]], "AmclParams Struct Reference": [[312, "amclparams-struct-reference"], [519, "amclparams-struct-reference"]], "Architecture": [[2, "architecture"]], "BaseDenseGrid2&lt; Derived &gt; Class Template Reference": [[44, "basedensegrid2-lt-derived-gt-class-template-reference"]], "BaseLaserScan&lt; Derived &gt; Class Template Reference": [[46, "baselaserscan-lt-derived-gt-class-template-reference"]], "BaseLinearGrid2&lt; Derived &gt; Class Template Reference": [[48, "baselineargrid2-lt-derived-gt-class-template-reference"]], "BaseOccupancyGrid2&lt; Derived &gt; Class Template Reference": [[50, "baseoccupancygrid2-lt-derived-gt-class-template-reference"]], "BaseRegularGrid2&lt; Derived &gt; Class Template Reference": [[52, "baseregulargrid2-lt-derived-gt-class-template-reference"]], "BeamModelParam Struct Reference": [[314, "beammodelparam-struct-reference"]], "BeamSensorModel&lt; OccupancyGrid &gt; Class Template Reference": [[54, "beamsensormodel-lt-occupancygrid-gt-class-template-reference"]], "BearingModelParam Struct Reference": [[316, "bearingmodelparam-struct-reference"]], "BearingSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[56, "bearingsensormodel-lt-landmarkmap-statetype-gt-class-template-reference"]], "Beluga": [[228, "beluga"]], "Beluga AMCL": [[466, "beluga-amcl"]], "Beluga ROS": [[500, "beluga-ros"]], "Benchmarking Beluga": [[7, "benchmarking-beluga"]], "Bibliography": [[41, "bibliography"], [481, "bibliography"], [531, "bibliography"]], "Bresenham2i Class Reference": [[58, "bresenham2i-class-reference"]], "Broadcasted transforms": [[473, "broadcasted-transforms"], [474, "broadcasted-transforms"]], "Build and source workspace": [[5, "build-and-source-workspace"]], "Building from source (with ROS)": [[5, "building-from-source-with-ros"]], "CRTP-based data adapters": [[2, "crtp-based-data-adapters"]], "Called services": [[473, "called-services"]], "CellHasher&lt; N &gt; Struct Template Reference": [[356, "cellhasher-lt-n-gt-struct-template-reference"]], "CircularArray&lt; T, N, F &gt; &gt; Struct Template Reference": [[419, "circulararray-lt-t-n-f-gt-gt-struct-template-reference"], [421, "circulararray-lt-t-n-f-gt-gt-struct-template-reference"]], "CircularArray&lt; T, N, F &gt; Class Template Reference": [[64, "circulararray-lt-t-n-f-gt-class-template-reference"]], "Class Hierarchy": [[227, "class-hierarchy"], [231, "class-hierarchy"], [465, "class-hierarchy"], [467, "class-hierarchy"], [499, "class-hierarchy"], [501, "class-hierarchy"]], "Class Index": [[115, "class-index"], [454, "class-index"], [488, "class-index"]], "Class List": [[26, "class-list"], [446, "class-list"], [477, "class-list"]], "Class Members": [[178, "class-members"], [180, "class-members"], [181, "class-members"], [182, "class-members"], [183, "class-members"], [184, "class-members"], [187, "class-members"], [208, "class-members"], [209, "class-members"], [210, "class-members"], [211, "class-members"], [212, "class-members"], [213, "class-members"], [214, "class-members"], [215, "class-members"], [216, "class-members"], [218, "class-members"], [219, "class-members"], [221, "class-members"], [222, "class-members"], [224, "class-members"], [225, "class-members"], [459, "class-members"], [460, "class-members"], [493, "class-members"], [494, "class-members"]], "Class Members - Enumerations": [[185, "class-members-enumerations"]], "Class Members - Enumerator": [[186, "class-members-enumerator"]], "Class Members - Functions": [[188, "class-members-functions"], [189, "class-members-functions"], [190, "class-members-functions"], [191, "class-members-functions"], [192, "class-members-functions"], [193, "class-members-functions"], [195, "class-members-functions"], [196, "class-members-functions"], [197, "class-members-functions"], [198, "class-members-functions"], [199, "class-members-functions"], [200, "class-members-functions"], [201, "class-members-functions"], [202, "class-members-functions"], [203, "class-members-functions"], [204, "class-members-functions"], [205, "class-members-functions"], [206, "class-members-functions"], [207, "class-members-functions"], [461, "class-members-functions"], [495, "class-members-functions"]], "Class Members - Related Functions": [[217, "class-members-related-functions"]], "Class Members - Typedefs": [[220, "class-members-typedefs"], [462, "class-members-typedefs"], [496, "class-members-typedefs"]], "Class Members - Variables": [[223, "class-members-variables"], [463, "class-members-variables"], [497, "class-members-variables"]], "Classes": [[27, "classes"], [447, "classes"], [478, "classes"]], "Clone Beluga repository": [[5, "clone-beluga-repository"]], "Compatibility Notes": [[473, "compatibility-notes"]], "Compatibility notes": [[474, "compatibility-notes"]], "Contact": [[0, "contact"]], "DenseGrid2": [[12, "densegrid2"]], "Dependencies": [[441, "dependencies"]], "Design principles": [[3, "design-principles"]], "DifferentialDriveModel Class Reference": [[66, "differentialdrivemodel-class-reference"]], "DifferentialDriveModelParam Struct Reference": [[320, "differentialdrivemodelparam-struct-reference"]], "Distribution as a range": [[2, "distribution-as-a-range"]], "Easy to (re)use": [[3, "easy-to-re-use"]], "EigenBase&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[367, "eigenbase-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "ExponentialFilter Class Reference": [[68, "exponentialfilter-class-reference"]], "Extending Beluga": [[8, "extending-beluga"]], "Features": [[11, "features"], [441, "features"], [532, "features"]], "File List": [[176, "file-list"], [458, "file-list"], [492, "file-list"]], "Functional forms": [[2, "functional-forms"]], "Functions": [[194, "functions"]], "Graph Legend": [[226, "graph-legend"], [464, "graph-legend"], [498, "graph-legend"]], "IndexingIterator&lt; Indexable, Index &gt; Class Template Reference": [[70, "indexingiterator-lt-indexable-index-gt-class-template-reference"]], "Initial Pose and Transform Broadcast Parameters": [[473, "initial-pose-and-transform-broadcast-parameters"], [474, "initial-pose-and-transform-broadcast-parameters"]], "Install ROS distribution": [[5, "install-ros-distribution"]], "Install binaries": [[5, "install-binaries"]], "Install dependencies": [[5, "install-dependencies"]], "Installation": [[5, "installation"]], "Interface Parameters": [[473, "interface-parameters"], [474, "interface-parameters"]], "Key concepts": [[4, "key-concepts"]], "LandmarkBearingDetection Struct Reference": [[322, "landmarkbearingdetection-struct-reference"]], "LandmarkMap Class Reference": [[72, "landmarkmap-class-reference"]], "LandmarkModelParam Struct Reference": [[324, "landmarkmodelparam-struct-reference"]], "LandmarkPositionDetection Struct Reference": [[326, "landmarkpositiondetection-struct-reference"]], "LandmarkSensorModel&lt; LandmarkMap, StateType &gt; Class Template Reference": [[74, "landmarksensormodel-lt-landmarkmap-statetype-gt-class-template-reference"]], "LaserScan": [[13, "laserscan"]], "LaserScan Class Reference": [[484, "laserscan-class-reference"]], "Lazy evaluated": [[3, "lazy-evaluated"]], "LikelihoodFieldModel&lt; OccupancyGrid &gt; Class Template Reference": [[76, "likelihoodfieldmodel-lt-occupancygrid-gt-class-template-reference"]], "LikelihoodFieldModelParam Struct Reference": [[328, "likelihoodfieldmodelparam-struct-reference"]], "Line&lt; Vector2, Integer &gt; Class Template Reference": [[60, "line-lt-vector2-integer-gt-class-template-reference"]], "LinearGrid2": [[14, "lineargrid2"]], "Member List": [[43, "member-list"], [45, "member-list"], [47, "member-list"], [49, "member-list"], [51, "member-list"], [53, "member-list"], [55, "member-list"], [57, "member-list"], [59, "member-list"], [61, "member-list"], [63, "member-list"], [65, "member-list"], [67, "member-list"], [69, "member-list"], [71, "member-list"], [73, "member-list"], [75, "member-list"], [77, "member-list"], [79, "member-list"], [81, "member-list"], [84, "member-list"], [86, "member-list"], [88, "member-list"], [90, "member-list"], [92, "member-list"], [94, "member-list"], [96, "member-list"], [98, "member-list"], [100, "member-list"], [102, "member-list"], [105, "member-list"], [108, "member-list"], [110, "member-list"], [112, "member-list"], [114, "member-list"], [313, "member-list"], [315, "member-list"], [317, "member-list"], [319, "member-list"], [321, "member-list"], [323, "member-list"], [325, "member-list"], [327, "member-list"], [329, "member-list"], [331, "member-list"], [333, "member-list"], [335, "member-list"], [337, "member-list"], [339, "member-list"], [341, "member-list"], [343, "member-list"], [345, "member-list"], [347, "member-list"], [349, "member-list"], [352, "member-list"], [354, "member-list"], [357, "member-list"], [359, "member-list"], [368, "member-list"], [369, "member-list"], [370, "member-list"], [373, "member-list"], [375, "member-list"], [377, "member-list"], [379, "member-list"], [381, "member-list"], [383, "member-list"], [386, "member-list"], [388, "member-list"], [390, "member-list"], [393, "member-list"], [397, "member-list"], [399, "member-list"], [401, "member-list"], [403, "member-list"], [405, "member-list"], [407, "member-list"], [409, "member-list"], [411, "member-list"], [413, "member-list"], [415, "member-list"], [417, "member-list"], [420, "member-list"], [449, "member-list"], [451, "member-list"], [453, "member-list"], [483, "member-list"], [485, "member-list"], [487, "member-list"], [520, "member-list"], [522, "member-list"], [525, "member-list"]], "Memory aware": [[3, "memory-aware"]], "Misc Parameters": [[473, "misc-parameters"], [474, "misc-parameters"]], "Monte Carlo Localization": [[4, "monte-carlo-localization"]], "Motion Model Parameters": [[473, "motion-model-parameters"], [474, "motion-model-parameters"]], "MotionModel": [[15, "motionmodel"]], "MultivariateNormalDistribution&lt; T &gt; Class Template Reference": [[78, "multivariatenormaldistribution-lt-t-gt-class-template-reference"]], "MultivariateNormalDistributionParam&lt; Vector, Matrix &gt; Class Template Reference": [[80, "multivariatenormaldistributionparam-lt-vector-matrix-gt-class-template-reference"]], "MultivariateUniformDistribution&lt; T, Constraint &gt; Class Template Reference": [[82, "multivariateuniformdistribution-lt-t-constraint-gt-class-template-reference"]], "NDTCell&lt; NDim, Scalar &gt; Struct Template Reference": [[330, "ndtcell-lt-ndim-scalar-gt-struct-template-reference"]], "NDTModelParam&lt; NDim &gt; Struct Template Reference": [[332, "ndtmodelparam-lt-ndim-gt-struct-template-reference"]], "NDTSensorModel&lt; SparseGridT &gt; Class Template Reference": [[89, "ndtsensormodel-lt-sparsegridt-gt-class-template-reference"]], "Namespace List": [[259, "namespace-list"], [511, "namespace-list"]], "Namespace Members": [[253, "namespace-members"], [254, "namespace-members"], [255, "namespace-members"], [256, "namespace-members"], [257, "namespace-members"], [258, "namespace-members"], [508, "namespace-members"], [509, "namespace-members"], [510, "namespace-members"]], "Namespaces": [[260, "namespaces"], [512, "namespaces"]], "NdtAmclNode Class Reference": [[452, "ndtamclnode-class-reference"]], "Nodelets": [[473, "nodelets"]], "Nodes": [[474, "nodes"]], "Numeric&lt; T, PhantomType &gt; &gt; Struct Template Reference": [[416, "numeric-lt-t-phantomtype-gt-gt-struct-template-reference"], [418, "numeric-lt-t-phantomtype-gt-gt-struct-template-reference"]], "Numeric&lt; T, PhantomType, typename &gt; Class Template Reference": [[91, "numeric-lt-t-phantomtype-typename-gt-class-template-reference"]], "Observation Model Parameters": [[473, "observation-model-parameters"], [474, "observation-model-parameters"]], "OccupancyGrid Class Reference": [[486, "occupancygrid-class-reference"]], "OccupancyGrid2d": [[16, "occupancygrid2d"]], "OmnidirectionalDriveModel Class Reference": [[93, "omnidirectionaldrivemodel-class-reference"]], "OmnidirectionalDriveModelParam Struct Reference": [[334, "omnidirectionaldrivemodelparam-struct-reference"]], "Overview": [[11, "overview"], [441, "overview"], [472, "overview"], [530, "overview"]], "Parameters": [[473, "parameters"], [474, "parameters"]], "Particle": [[17, "particle"]], "Particle Filter Parameters": [[473, "particle-filter-parameters"], [474, "particle-filter-parameters"]], "Performance focused": [[3, "performance-focused"]], "Prerequisites": [[6, "prerequisites"]], "Primer on Particle Filtering with Beluga": [[535, "primer-on-particle-filtering-with-beluga"]], "Profiling Beluga": [[9, "profiling-beluga"]], "Published topics": [[473, "published-topics"], [474, "published-topics"]], "Quickstart": [[6, "quickstart"]], "ROS 2 Reference": [[474, "ros-2-reference"]], "ROS Reference": [[473, "ros-reference"]], "RandomStateDistribution": [[18, "randomstatedistribution"]], "Rationale": [[1, "rationale"]], "Ray2d&lt; OccupancyGrid, Algorithm &gt; Class Template Reference": [[95, "ray2d-lt-occupancygrid-algorithm-gt-class-template-reference"]], "RegularGrid2": [[19, "regulargrid2"]], "Related Pages": [[273, "related-pages"], [470, "related-pages"], [516, "related-pages"]], "Releases": [[533, "releases"]], "Run Beluga in simulation": [[6, "run-beluga-in-simulation"]], "Run Beluga on a robot": [[6, "run-beluga-on-a-robot"]], "Run Beluga over a recording": [[6, "run-beluga-over-a-recording"]], "SE2&lt; Scalar &gt; &gt; Struct Template Reference": [[385, "se2-lt-scalar-gt-gt-struct-template-reference"], [524, "se2-lt-scalar-gt-gt-struct-template-reference"]], "SE2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[371, "se2base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "SE2d, OccupancyGrid &gt; Class Template Reference": [[85, "se2d-occupancygrid-gt-class-template-reference"]], "SE2d, void &gt; Class Reference": [[109, "se2d-void-gt-class-reference"]], "SO2Base&lt; T &gt;, T &gt; &gt; &gt; Struct Template Reference": [[366, "so2base-lt-t-gt-t-gt-gt-gt-struct-template-reference"]], "STL consistent": [[3, "stl-consistent"]], "STL-like abstractions": [[2, "stl-like-abstractions"]], "SensorModel": [[20, "sensormodel"]], "Sophus Namespace Reference": [[505, "sophus-namespace-reference"]], "SparseValueGrid&lt; MapType &gt; Class Template Reference": [[97, "sparsevaluegrid-lt-maptype-gt-class-template-reference"]], "Statically bound": [[3, "statically-bound"]], "StationaryModel Class Reference": [[99, "stationarymodel-class-reference"]], "Subscribed topics": [[473, "subscribed-topics"], [474, "subscribed-topics"]], "Subscribed transforms": [[473, "subscribed-transforms"], [474, "subscribed-transforms"]], "Support": [[11, "support"]], "ThrunRecoveryProbabilityEstimator Class Reference": [[101, "thrunrecoveryprobabilityestimator-class-reference"]], "TupleContainer&lt; InternalContainer, T &gt; Class Template Reference": [[103, "tuplecontainer-lt-internalcontainer-t-gt-class-template-reference"]], "TupleVector&lt; T &gt; Class Template Reference": [[106, "tuplevector-lt-t-gt-class-template-reference"]], "UX centered": [[3, "ux-centered"]], "Using Beluga AMCL on an AMR": [[10, "using-beluga-amcl-on-an-amr"]], "Using Beluga with Nav2": [[534, "using-beluga-with-nav2"]], "ValueGrid2&lt; T &gt; Class Template Reference": [[107, "valuegrid2-lt-t-gt-class-template-reference"]], "ValueTraits Struct Reference": [[521, "valuetraits-struct-reference"]], "Visualize Beluga output": [[6, "visualize-beluga-output"]], "_doxygen Directory Reference": [[147, "doxygen-directory-reference"], [455, "doxygen-directory-reference"], [489, "doxygen-directory-reference"]], "almost_equal_to&lt; T &gt; Struct Template Reference": [[523, "almost-equal-to-lt-t-gt-struct-template-reference"]], "as_common_tuple_indirect_fn Struct Reference": [[396, "as-common-tuple-indirect-fn-struct-reference"]], "assign_fn Struct Reference": [[336, "assign-fn-struct-reference"]], "beluga Namespace Reference": [[252, "beluga-namespace-reference"]], "beluga_amcl/AmclNodelet": [[473, "beluga-amcl-amclnodelet"]], "beluga_amcl::AmclNode": [[474, "beluga-amcl-amclnode"]], "beluga_ros Namespace Reference": [[506, "beluga-ros-namespace-reference"]], "common_tuple_type&lt; T, U, Is &gt; Struct Template Reference": [[350, "common-tuple-type-lt-t-u-is-gt-struct-template-reference"]], "decay_t&lt; TupleLike&lt; Args\u2026 &gt; &gt; &gt; &gt; &gt; Struct Template Reference": [[355, "decay-t-lt-tuplelike-lt-args-gt-gt-gt-gt-gt-struct-template-reference"]], "decay_tuple_like&lt; T, class &gt; Struct Template Reference": [[353, "decay-tuple-like-lt-t-class-gt-struct-template-reference"]], "every_n_fn Struct Reference": [[374, "every-n-fn-struct-reference"]], "every_n_policy Struct Reference": [[376, "every-n-policy-struct-reference"]], "has_common_tuple_type&lt; typename, typename, typename &gt; Struct Template Reference": [[360, "has-common-tuple-type-lt-typename-typename-typename-gt-struct-template-reference"]], "has_single_element&lt; T, TupleLike, class &gt; Struct Template Reference": [[362, "has-single-element-lt-t-tuplelike-class-gt-struct-template-reference"]], "index_sequence&lt; I\u2026 &gt; &gt; Struct Template Reference": [[351, "index-sequence-lt-i-gt-gt-struct-template-reference"]], "is_arithmetic_v&lt; T &gt;, void &gt; &gt; Class Template Reference": [[113, "is-arithmetic-v-lt-t-gt-void-gt-gt-class-template-reference"]], "is_arithmetic_v&lt; Types &gt; &amp;&amp;\u2026), void &gt; &gt; Class Template Reference": [[111, "is-arithmetic-v-lt-types-gt-amp-amp-void-gt-gt-class-template-reference"]], "is_tuple_like&lt; T &gt; Struct Template Reference": [[364, "is-tuple-like-lt-t-gt-struct-template-reference"]], "iterator Class Reference": [[62, "iterator-class-reference"]], "make_from_state_fn&lt; Particle, State &gt; Struct Template Reference": [[358, "make-from-state-fn-lt-particle-state-gt-struct-template-reference"]], "msg Namespace Reference": [[507, "msg-namespace-reference"]], "multivariate_distribution_traits&lt; T, Enable &gt; Struct Template Reference": [[365, "multivariate-distribution-traits-lt-t-enable-gt-struct-template-reference"]], "normalize_base_fn Struct Reference": [[338, "normalize-base-fn-struct-reference"]], "normalize_fn Struct Reference": [[340, "normalize-fn-struct-reference"]], "on_effective_size_drop_policy Struct Reference": [[378, "on-effective-size-drop-policy-struct-reference"]], "on_motion_fn Struct Reference": [[380, "on-motion-fn-struct-reference"]], "on_motion_policy&lt; Pose &gt; Struct Template Reference": [[382, "on-motion-policy-lt-pose-gt-struct-template-reference"]], "on_motion_policy_base&lt; Pose &gt; Struct Template Reference": [[384, "on-motion-policy-base-lt-pose-gt-struct-template-reference"]], "particle_traits&lt; T &gt; Struct Template Reference": [[372, "particle-traits-lt-t-gt-struct-template-reference"]], "policy&lt; PolicyFn &gt; Struct Template Reference": [[387, "policy-lt-policyfn-gt-struct-template-reference"]], "policy_base Struct Reference": [[389, "policy-base-struct-reference"]], "propagate_base_fn Struct Reference": [[342, "propagate-base-fn-struct-reference"]], "propagate_fn Struct Reference": [[344, "propagate-fn-struct-reference"]], "random_intersperse_fn Struct Reference": [[398, "random-intersperse-fn-struct-reference"]], "random_intersperse_view&lt; Range, Fn, URNG &gt; Struct Template Reference": [[400, "random-intersperse-view-lt-range-fn-urng-gt-struct-template-reference"]], "reweight_base_fn Struct Reference": [[346, "reweight-base-fn-struct-reference"]], "reweight_fn Struct Reference": [[348, "reweight-fn-struct-reference"]], "sample_base_fn Struct Reference": [[402, "sample-base-fn-struct-reference"]], "sample_fn Struct Reference": [[404, "sample-fn-struct-reference"]], "sample_view&lt; Range, Distribution, URNG &gt; Struct Template Reference": [[406, "sample-view-lt-range-distribution-urng-gt-struct-template-reference"]], "sentinel Struct Reference": [[318, "sentinel-struct-reference"]], "spatial_hash&lt; T, Enable &gt; Struct Template Reference": [[391, "spatial-hash-lt-t-enable-gt-struct-template-reference"]], "state_fn Struct Reference": [[392, "state-fn-struct-reference"]], "take_evenly_fn Struct Reference": [[408, "take-evenly-fn-struct-reference"]], "take_while_kld_fn Struct Reference": [[410, "take-while-kld-fn-struct-reference"]], "tf2 Namespace Reference": [[513, "tf2-namespace-reference"]], "tuple&lt; Types\u2026 &gt; &gt; Class Template Reference": [[104, "tuple-lt-types-gt-gt-class-template-reference"]], "tuple_index&lt; T, TupleLike, class &gt; Struct Template Reference": [[394, "tuple-index-lt-t-tuplelike-class-gt-struct-template-reference"]], "tuple_index_found&lt; T, Args\u2026 &gt;()&gt; &gt; Struct Template Reference": [[363, "tuple-index-found-lt-t-args-gt-gt-gt-struct-template-reference"], [395, "tuple-index-found-lt-t-args-gt-gt-gt-struct-template-reference"]], "void_t&lt; common_tuple_type_t&lt; T, U &gt; &gt; &gt; Struct Template Reference": [[361, "void-t-lt-common-tuple-type-t-lt-t-u-gt-gt-gt-struct-template-reference"]], "weight_fn Struct Reference": [[414, "weight-fn-struct-reference"]], "zip_fn Struct Reference": [[412, "zip-fn-struct-reference"]]}, "docnames": ["about/contact", "about/rationale", "concepts/architecture", "concepts/design-principles", "concepts/key-concepts", "getting-started/installation", "getting-started/quickstart", "guides/benchmarking-beluga", "guides/extending-beluga", "guides/profiling-beluga", "guides/using-beluga-amcl", "index", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGrid2Page", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/annotated", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/citelist", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1", "packages/beluga/docs/_doxygen/generated/reference/html/classes", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/files", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga/docs/_doxygen/generated/reference/html/index", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/inherits", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/pages", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source", "packages/beluga/docs/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source", "packages/beluga_amcl/docs/index", "packages/beluga_amcl/docs/ros-reference", "packages/beluga_amcl/docs/ros2-reference", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source", "packages/beluga_ros/docs/index", "resources/bibliography", "roadmap/features", "roadmap/releases", "tutorials/nav2-integration", "tutorials/particle-filtering"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["about/contact.md", "about/rationale.md", "concepts/architecture.md", "concepts/design-principles.md", "concepts/key-concepts.md", "getting-started/installation.md", "getting-started/quickstart.md", "guides/benchmarking-beluga.md", "guides/extending-beluga.md", "guides/profiling-beluga.md", "guides/using-beluga-amcl.md", "index.md", "packages/beluga/docs/_doxygen/generated/reference/html/DenseGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LaserScanPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/LinearGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/MotionModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/OccupancyGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ParticlePage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RandomStateDistributionPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/RegularGrid2Page.rst", "packages/beluga/docs/_doxygen/generated/reference/html/SensorModelPage.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/actions_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/algorithm_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/amcl__core_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/assign_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beam__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bearing__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/beluga_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/bresenham_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ciabatta_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/circular__array_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Amcl-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseDenseGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLaserScan-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseLinearGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseOccupancyGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BaseRegularGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BeamSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1BearingSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Bresenham2i_1_1Line_1_1iterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1CircularArray-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1DifferentialDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ExponentialFilter-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1IndexingIterator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkMap-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LandmarkSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1LikelihoodFieldModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistribution-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateNormalDistributionParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01Eigen_1_1AlignedBox2d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE2d_00_01OccupancyGrid_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1MultivariateUniformDistribution_3_01Sophus_1_1SE3d_00_01Eigen_1_1AlignedBox3d_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1NDTSensorModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Numeric-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1OmnidirectionalDriveModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1Ray2d-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1SparseValueGrid-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1StationaryModel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ThrunRecoveryProbabilityEstimator-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleContainer_3_01InternalContainer_00_01std_1_1tuple_3_01Types_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1TupleVector.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1ValueGrid2-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Sophus_1_1SE2d_00_01void_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_7c7412bd4d4b17eb2e661212dfcf682d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01Tuple_3_01Types_8_8_8_01_4_00_01std_1_1enable__if__t_3_07std_1_d633e0a7fa009222653d9c0b95a8689b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01st82aee1c4aa004416efdc2dd54a3ad958.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classbeluga_1_1spatial__hash_3_01std_1_1array_3_01T_00_01N_01_4_00_01std_1_1enable__if__t_3_01stba9d91ade2df69fd366eb7c564df40a1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/containers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dense__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/differential__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000003.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000006.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000008.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000009.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000010.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000002_000013.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000003_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000005.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000004_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000016.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000006_000017.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000008_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000009_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000010_000011.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000004.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000012.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000011_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000012_000015.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_000017_000014.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ae0216c5b903435324487dd13dfdff9.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_0ee0838bbed77bc71495b9458bcc4b6b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_1ad523cfdb7a3d7d09cddf672d6cd478.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_3245ff25b92019e7f89fc2115bc7867e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_500caef060b471cfdd05b62a42e3142c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_6311cd7a9afaa93eeee404de83766793.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_634c6b228f937c8a89fa81bc2f240134.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_7ddb7368080dbe1879dd7372dd1df3df.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_876c246173b27422a95ea0c3c06ba40d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8c67632ad66eb9bf379bf849f1aad5d2.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_8cfff6e4809896f1b09096e04b4d983e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a3553bb43d48af21167f3919d16bc6f3.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_a695b385a3d14b7fe3275ff1f0b9cead.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_b61f5b26177d4f0e7f42e2895ffd1c30.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_c03a81e29d2f9f088aa073fa974eabbc.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_eeee05555aca35b91744c960e0076d0e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/dir_fb5de34e8dcc24e05691267f91b0587f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/distance__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/effective__sample__size_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/elements_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/epilogue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/estimation_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/every__n_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/exponential__filter_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga/docs/_doxygen/generated/reference/html/forward__like_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_all.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_eval.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_d.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_e.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_f.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_functions.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_func_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_h.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_i.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_k.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_l.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_m.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_n.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_o.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_p.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_r.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_rela.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_s.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_t.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_u.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_v.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_w.rst", "packages/beluga/docs/_doxygen/generated/reference/html/functions_z.rst", "packages/beluga/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/indexing__iterator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__detection__types_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__map_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/landmark__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/likelihood__field__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/linear__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__distribution__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__normal__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/multivariate__uniform__distribution_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacebeluga.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_enum.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespacemembers_vars.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__cell_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/ndt__sensor__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/normalize_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/omnidirectional__drive__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__effective__size__drop_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/on__motion_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particle__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/particles_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policies_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/policy_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/primitives_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/prologue_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/propagate_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/random__intersperse_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/raycasting_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/regular__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/reweight_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sample_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sensor_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__matchers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sophus__printers_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/sparse__value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/spatial__hash_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/stationary__model_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/strongly__typed__numeric_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1AmclParams-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BeamModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1BearingModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1Bresenham2i_1_1Line_1_1iterator_1_1sentinel-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1DifferentialDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkBearingDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LandmarkPositionDetection-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1LikelihoodFieldModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTCell-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1NDTModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1OmnidirectionalDriveModelParam-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1assign__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1normalize__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1propagate__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1actions_1_1detail_1_1reweight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1common__tuple__type_3_01T_00_01U_00_01std_1_1index__sequence_3_01I_8_8_8_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3e4d97fe1d7c99b65756778192d27fe0a.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1decay__tuple__like_3_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_3ee802d0cdb58b24411f7d7c175ec0540.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1CellHasher-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1detail_1_1make__from__state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__common__tuple__type_3_01T_00_01U_00_01std_1_1void__t_3_01common__tuple__typ87797e8c898985f6b7323492f6753a83.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1has__single__element_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable74bb370853b4969c8155f7c3b3c0dd64.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1is__tuple__like.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is108ecb65e882d1fe2fc8b637bf46b34c.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is7335572249efb8242f8ba7b16eaa7821.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is789d3e70fc790b24150efc4abae3ee41.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is8392abcab316d155fa772ee9c35c6c7b.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1isce7b8f35afd806decbb40e1cebc9c5a6.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1multivariate__distribution__traits_3_01T_00_01std_1_1enable__if__t_3_01std_1_1ise7ac88d52952e6533296e162494fd0f1.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1particle__traits-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1every__n__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__effective__size__drop__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policies_1_1detail_1_1on__motion__policy__base_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1policy__base-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1spatial__hash.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1state__detail_1_1state__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1tuple__index_3_01T_00_01TupleLike_3_01Args_8_8_8_01_4_00_01std_1_1enable__if__t_8b6a44f3e1dec7206a1db1c3f8ee23de.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1as__common__tuple__indirect__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1random__intersperse__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__base__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1sample__view-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__evenly__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1take__while__kld__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1views_1_1detail_1_1zip__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structbeluga_1_1weight__detail_1_1weight__fn-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1hash_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1numeric__limits_3_01beluga_1_1Numeric_3_01T_00_01PhantomType_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__element_3_01I_00_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4-members.rst", "packages/beluga/docs/_doxygen/generated/reference/html/structstd_1_1tuple__size_3_01beluga_1_1CircularArray_3_01T_00_01N_00_01F_01_4_01_4.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__evenly_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/take__while__kld_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/testing_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/thrun__recovery__probability__estimator_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/tuple__vector_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/type__traits_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/value__grid_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/views_8hpp_source.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp.rst", "packages/beluga/docs/_doxygen/generated/reference/html/zip_8hpp_source.rst", "packages/beluga/docs/index.md", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/amcl__nodelet_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1AmclNodelet-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classbeluga__amcl_1_1NdtAmclNode-members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/dir_f707c9b3691f4881939017e70f463c1f.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ndt__amcl__node_8hpp_source.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_amcl/docs/_doxygen/generated/reference/html/ros2__common_8hpp_source.rst", "packages/beluga_amcl/docs/index.md", "packages/beluga_amcl/docs/ros-reference.md", "packages/beluga_amcl/docs/ros2-reference.md", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/amcl_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/annotated_classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/beluga__ros_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/citelist.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1Amcl-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1LaserScan-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classbeluga__ros_1_1OccupancyGrid-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/classes.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_2fab1df6832ac5fd5ad2dca443afcb3d.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_724afa0a6cc96469a92ffa22ab208279.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/dir_d44c64559bbebec7f509842c48db8b23.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/files.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_class_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_type.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/functions_vars.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/graph_legend.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/hierarchy.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/index.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/inherits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/laser__scan_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/messages_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaceSophus.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacebeluga__ros_1_1msg.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_func.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacemembers_namespace_members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespaces_namespaces.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/namespacetf2.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/occupancy__grid_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/pages.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/particle__cloud_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1AmclParams-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1OccupancyGrid_1_1ValueTraits-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/structbeluga__ros_1_1detail_1_1almost__equal__to_3_01Sophus_1_1SE2_3_01Scalar_01_4_01_4-members.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__eigen_8hpp_source.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp.rst", "packages/beluga_ros/docs/_doxygen/generated/reference/html/tf2__sophus_8hpp_source.rst", "packages/beluga_ros/docs/index.md", "resources/bibliography.md", "roadmap/features.md", "roadmap/releases.md", "tutorials/nav2-integration.md", "tutorials/particle-filtering.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [1, 3, 4, 5, 15, 20, 26, 27, 36, 37, 41, 58, 60, 62, 64, 66, 72, 91, 93, 97, 99, 101, 104, 105, 115, 144, 167, 176, 179, 182, 194, 203, 218, 220, 223, 226, 227, 228, 235, 237, 252, 253, 259, 261, 262, 268, 291, 293, 295, 300, 305, 330, 392, 414, 423, 431, 432, 438, 441, 459, 461, 463, 464, 466, 473, 474, 481, 493, 498, 500, 518, 531], "0": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 58, 64, 104, 111, 113, 117, 119, 121, 164, 165, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 316, 320, 324, 328, 330, 331, 332, 334, 336, 338, 340, 342, 344, 346, 348, 378, 392, 393, 398, 410, 414, 423, 424, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 474, 476, 480, 503, 504, 515, 518, 519, 521, 527, 529], "0003": 11, "001": [25, 312, 473, 476, 519], "01": [41, 121, 268, 320, 334, 481, 531], "02": 309, "05": [25, 31, 312, 314, 471, 473, 474, 476, 518, 519], "09023224677087": 252, "0f": 518, "0l": 262, "0u": 40, "0ul": 423, "0ull": 425, "0x00": [39, 40, 252], "0x01": [39, 40, 252], "0x02": [39, 40, 252], "0x04": [39, 40, 252], "0x9e3779b9": 262, "1": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "10": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 64, 104, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 474, 476, 480, 503, 504, 515, 518, 519, 527, 529, 531], "100": [29, 33, 37, 119, 121, 171, 235, 237, 241, 243, 249, 251, 262, 264, 266, 272, 275, 282, 285, 289, 291, 293, 295, 297, 307, 328, 432, 445, 469, 471, 473, 474, 476, 504, 515, 521, 529], "101": [29, 33, 37, 40, 121, 171, 230, 235, 237, 241, 243, 247, 249, 251, 262, 264, 266, 268, 272, 275, 280, 282, 285, 289, 291, 295, 307, 430, 432, 443, 471, 476, 515, 529], "102": [25, 29, 33, 37, 119, 121, 171, 230, 235, 237, 241, 243, 247, 249, 251, 262, 264, 266, 268, 270, 275, 280, 282, 285, 289, 291, 295, 297, 423, 432, 443, 445, 469, 471, 476, 504, 515, 529], "103": [29, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 243, 247, 249, 251, 262, 264, 266, 268, 272, 275, 282, 285, 289, 291, 295, 297, 307, 423, 432, 445, 469, 471, 476, 515, 518, 529], "104": [31, 33, 37, 40, 121, 171, 230, 235, 237, 243, 247, 249, 251, 262, 264, 268, 275, 280, 282, 285, 289, 291, 295, 297, 307, 423, 443, 469, 471, 515, 518, 529], "105": [25, 31, 33, 37, 121, 230, 235, 237, 241, 243, 247, 249, 251, 262, 264, 266, 268, 272, 275, 280, 282, 285, 289, 291, 295, 297, 307, 423, 430, 432, 443, 445, 469, 471, 476, 515, 518, 529], "106": [25, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 247, 249, 251, 268, 275, 282, 289, 291, 295, 297, 423, 430, 443, 445, 471, 476, 515, 518, 529], "107": [25, 31, 33, 37, 119, 121, 235, 237, 243, 249, 251, 262, 264, 268, 275, 280, 282, 285, 289, 291, 293, 295, 297, 307, 430, 443, 469, 471, 515, 518, 529], "108": [25, 31, 33, 37, 119, 121, 230, 235, 237, 241, 247, 249, 251, 262, 264, 268, 272, 275, 280, 282, 285, 289, 291, 293, 297, 307, 430, 432, 443, 445, 469, 471, 476, 504, 515, 518, 529], "109": [25, 31, 33, 37, 40, 119, 121, 230, 235, 237, 247, 249, 251, 262, 264, 268, 272, 275, 280, 282, 285, 289, 291, 293, 430, 432, 445, 471, 504, 515, 518, 529], "10u": 518, "11": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "110": [25, 31, 33, 37, 40, 119, 121, 230, 235, 237, 247, 249, 251, 262, 264, 268, 272, 275, 280, 282, 285, 289, 291, 293, 295, 297, 307, 430, 432, 443, 469, 471, 504, 515, 518, 529], "1109": 531, "111": [25, 31, 33, 37, 121, 230, 235, 237, 243, 247, 249, 251, 262, 264, 266, 268, 272, 275, 280, 282, 285, 291, 293, 297, 425, 430, 432, 443, 445, 469, 471, 504, 515, 518], "112": [25, 31, 33, 37, 40, 119, 121, 235, 237, 243, 247, 249, 251, 262, 264, 266, 268, 272, 280, 285, 289, 291, 297, 425, 430, 432, 443, 445, 471, 504, 518, 529], "113": [25, 31, 33, 37, 121, 230, 235, 237, 241, 243, 247, 249, 251, 264, 268, 272, 275, 282, 285, 289, 291, 293, 297, 425, 430, 432, 443, 469, 471, 504, 518], "114": [25, 31, 33, 121, 230, 235, 237, 241, 243, 247, 249, 251, 262, 264, 266, 268, 272, 280, 282, 285, 291, 297, 307, 425, 430, 432, 443, 445, 469, 471, 504, 518], "11400714819323198485llu": 307, "115": [25, 31, 33, 37, 121, 230, 235, 237, 241, 243, 247, 249, 251, 262, 264, 268, 272, 282, 289, 291, 295, 297, 307, 425, 430, 432, 445, 471, 476, 518], "116": [25, 31, 33, 37, 119, 121, 230, 235, 237, 241, 243, 249, 262, 268, 282, 285, 289, 291, 295, 297, 425, 430, 432, 443, 469, 471, 476, 504, 518], "117": [25, 31, 33, 37, 119, 121, 230, 235, 237, 241, 243, 249, 251, 262, 264, 268, 272, 282, 285, 289, 291, 295, 297, 307, 425, 430, 432, 445, 469, 471, 476, 518], "118": [25, 31, 33, 37, 121, 230, 235, 237, 241, 243, 249, 251, 262, 264, 268, 280, 282, 285, 289, 291, 295, 297, 425, 430, 432, 471, 476, 518, 529], "119": [25, 31, 33, 37, 119, 121, 230, 235, 237, 241, 243, 249, 251, 262, 264, 266, 268, 275, 280, 282, 285, 289, 291, 293, 295, 297, 425, 430, 432, 469, 471, 476, 518, 529], "12": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 446, 465, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "120": [25, 31, 33, 37, 121, 230, 235, 237, 241, 243, 249, 262, 264, 266, 268, 275, 280, 282, 285, 289, 293, 297, 425, 430, 432, 469, 471, 476, 518, 529], "121": [25, 31, 33, 121, 230, 235, 237, 241, 243, 249, 251, 264, 268, 272, 275, 280, 282, 285, 289, 293, 307, 425, 430, 432, 471, 476, 504, 518, 529], "122": [25, 31, 33, 37, 40, 121, 230, 235, 237, 241, 243, 249, 262, 266, 268, 272, 275, 280, 282, 285, 293, 297, 307, 425, 432, 469, 471, 476, 504, 518, 529], "123": [25, 31, 33, 37, 40, 121, 171, 235, 237, 241, 243, 249, 262, 264, 268, 272, 275, 280, 282, 285, 289, 307, 425, 430, 432, 458, 469, 471, 476, 477, 492, 504, 511, 518, 529], "12345": [26, 176, 227, 259, 499], "124": [25, 28, 30, 31, 32, 33, 36, 37, 39, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 118, 119, 120, 121, 163, 165, 167, 170, 171, 172, 174, 229, 230, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 246, 248, 249, 250, 252, 262, 263, 264, 265, 267, 268, 269, 271, 272, 274, 275, 276, 280, 281, 282, 284, 288, 290, 292, 293, 294, 296, 297, 300, 304, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 351, 355, 356, 358, 366, 367, 371, 372, 374, 376, 378, 380, 382, 385, 387, 389, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 419, 422, 424, 425, 429, 430, 431, 432, 435, 439, 443, 448, 450, 452, 468, 471, 475, 476, 482, 484, 486, 502, 504, 506, 514, 517, 519, 521, 524, 526, 528, 529], "125": [25, 31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 243, 249, 262, 264, 268, 272, 280, 289, 297, 307, 425, 430, 432, 443, 445, 469, 471, 476, 504, 518, 529], "126": [31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 243, 249, 251, 262, 264, 268, 280, 282, 285, 289, 307, 425, 430, 432, 445, 469, 471, 476, 504, 529], "127": [25, 31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 243, 249, 251, 262, 264, 268, 297, 307, 425, 430, 432, 443, 471, 476, 504, 529], "128": [25, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 243, 251, 262, 264, 266, 268, 280, 289, 293, 297, 307, 425, 430, 432, 445, 469, 471, 476, 504, 529], "129": [25, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 243, 249, 262, 266, 268, 280, 282, 293, 297, 425, 430, 432, 469, 471, 476, 504, 529], "13": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "130": [25, 31, 33, 37, 40, 121, 171, 235, 237, 241, 243, 251, 262, 264, 268, 280, 282, 293, 297, 307, 425, 430, 432, 471, 476, 504, 529], "131": [25, 31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 243, 262, 264, 266, 268, 280, 282, 285, 293, 297, 307, 425, 432, 469, 471, 476, 504], "132": [25, 31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 243, 262, 264, 268, 280, 282, 285, 293, 297, 307, 425, 430, 432, 469, 471, 476, 518, 529], "133": [25, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 243, 262, 268, 280, 282, 285, 293, 297, 425, 430, 432, 471, 476, 518], "134": [25, 31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 251, 264, 268, 282, 285, 293, 297, 307, 425, 430, 432, 443, 469, 471, 476, 518], "135": [25, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 251, 262, 264, 268, 282, 285, 293, 297, 307, 425, 432, 443, 445, 469, 471, 518], "136": [25, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 249, 251, 262, 264, 266, 268, 282, 293, 297, 425, 430, 432, 445, 471, 476, 518], "137": [25, 31, 33, 37, 40, 121, 171, 230, 235, 237, 241, 249, 251, 262, 264, 266, 268, 282, 297, 307, 425, 430, 432, 443, 469, 471, 476, 518], "138": [25, 31, 33, 37, 40, 121, 171, 235, 237, 241, 249, 251, 264, 266, 268, 282, 425, 430, 432, 443, 445, 469, 471, 529], "139": [31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 249, 262, 266, 268, 282, 289, 297, 430, 432, 445, 471, 476, 518, 529], "14": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "140": [25, 31, 33, 37, 40, 119, 121, 171, 235, 237, 249, 251, 264, 268, 282, 289, 425, 430, 432, 443, 469, 471, 476, 529], "141": [31, 33, 37, 40, 119, 121, 171, 235, 237, 241, 249, 262, 264, 266, 268, 289, 307, 430, 432, 443, 445, 469, 471, 476, 529], "142": [31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 264, 268, 282, 289, 307, 430, 432, 445, 471, 476, 529], "143": [31, 37, 40, 119, 121, 171, 230, 235, 237, 249, 262, 264, 268, 289, 443, 469, 471, 476, 529], "144": [25, 31, 33, 37, 40, 119, 121, 171, 235, 237, 249, 264, 268, 289, 307, 430, 432, 443, 445, 469, 471, 476, 529], "145": [25, 31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 262, 268, 282, 289, 430, 432, 471, 476, 529], "146": [25, 31, 33, 37, 40, 119, 121, 171, 235, 237, 241, 249, 262, 264, 266, 268, 282, 289, 297, 430, 432, 443, 445, 469, 471, 476, 518, 529], "147": [25, 31, 33, 37, 40, 119, 121, 171, 235, 237, 241, 249, 262, 264, 266, 268, 282, 289, 297, 432, 469, 471, 476, 518], "148": [25, 31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 262, 264, 266, 268, 282, 289, 297, 307, 425, 430, 432, 443, 445, 471, 518, 529], "149": [31, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 249, 251, 264, 266, 268, 282, 289, 297, 307, 425, 430, 443, 469, 471, 476, 518], "14th": [41, 481, 531], "15": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "150": [25, 31, 33, 37, 40, 119, 121, 171, 237, 241, 249, 251, 262, 264, 266, 268, 282, 289, 297, 307, 425, 430, 432, 445, 471, 518], "151": [25, 37, 40, 119, 121, 171, 230, 237, 241, 251, 262, 264, 266, 268, 282, 289, 297, 307, 425, 443, 471, 518], "152": [31, 33, 37, 40, 119, 121, 171, 237, 241, 249, 251, 264, 266, 268, 282, 289, 297, 307, 425, 430, 443, 445, 471, 476, 518], "153": [25, 31, 33, 37, 119, 171, 237, 241, 249, 251, 262, 266, 268, 282, 289, 297, 307, 425, 430, 471, 476, 518], "154": [33, 37, 40, 119, 171, 230, 237, 241, 251, 262, 268, 282, 289, 297, 307, 425, 430, 443, 445, 471, 476, 518, 529], "155": [31, 37, 119, 171, 230, 237, 241, 249, 251, 264, 266, 268, 282, 289, 297, 307, 425, 445, 471, 476, 518, 529], "156": [31, 33, 37, 171, 237, 241, 249, 251, 262, 268, 282, 289, 297, 425, 430, 432, 443, 471, 518, 529], "157": [31, 33, 37, 119, 171, 230, 237, 241, 251, 268, 282, 289, 297, 425, 430, 432, 445, 469, 471, 476, 518, 529], "158": [31, 33, 37, 171, 241, 249, 251, 268, 282, 289, 297, 425, 430, 432, 443, 469, 471, 476, 518, 529], "159": [31, 33, 37, 171, 237, 241, 249, 251, 268, 282, 297, 307, 425, 430, 432, 443, 445, 471, 518, 529], "16": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "160": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "161": [31, 33, 37, 119, 171, 230, 237, 241, 249, 251, 262, 266, 268, 282, 289, 307, 430, 432, 445, 471, 476, 518, 529], "162": [31, 40, 119, 171, 230, 237, 241, 251, 262, 264, 266, 289, 297, 430, 443, 469, 471, 476, 518, 529], "163": [31, 33, 37, 40, 119, 121, 171, 230, 237, 241, 262, 264, 266, 268, 275, 277, 282, 285, 289, 297, 307, 309, 425, 445, 471, 476, 518, 529], "164": [31, 37, 40, 119, 171, 237, 241, 249, 251, 262, 264, 266, 282, 289, 297, 430, 443, 469, 471, 476, 518, 529], "165": [25, 40, 119, 171, 230, 237, 241, 249, 251, 264, 266, 282, 297, 430, 443, 445, 469, 471, 518, 529], "166": [25, 37, 40, 119, 171, 241, 251, 262, 264, 282, 289, 297, 430, 445, 471, 476, 518, 529], "167": [25, 37, 40, 119, 171, 237, 241, 249, 251, 262, 266, 297, 443, 469, 471, 518, 529], "168": [25, 40, 119, 171, 230, 237, 241, 251, 266, 282, 297, 307, 430, 432, 445, 471, 518, 529], "169": [25, 37, 40, 171, 230, 237, 241, 251, 262, 266, 282, 307, 430, 432, 443, 469, 471, 518], "17": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 441, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529, 530], "170": [25, 37, 40, 171, 230, 241, 251, 262, 266, 282, 297, 307, 425, 430, 432, 445, 469, 471, 518, 529], "171": [25, 37, 40, 171, 230, 237, 241, 262, 266, 282, 307, 425, 430, 432, 443, 471, 518], "172": [25, 37, 40, 171, 237, 241, 249, 262, 266, 282, 297, 307, 425, 430, 445, 469, 471, 518], "173": [25, 37, 171, 230, 237, 241, 249, 266, 282, 297, 307, 425, 430, 432, 443, 471, 518], "174": [25, 37, 40, 237, 241, 262, 266, 282, 297, 425, 445, 469, 471, 518], "175": [25, 171, 237, 241, 249, 282, 289, 297, 307, 425, 430, 443, 469, 471, 518], "176": [25, 37, 40, 230, 237, 241, 262, 266, 282, 289, 297, 425, 430, 432, 443, 445, 469, 471, 518, 529], "177": [25, 37, 230, 241, 266, 282, 289, 297, 430, 432, 445, 471, 518, 529], "178": [25, 40, 241, 262, 266, 282, 289, 297, 432, 443, 469, 471, 476, 518, 529], "179": [25, 37, 40, 230, 241, 266, 282, 289, 307, 430, 432, 445, 471, 476, 518, 529], "18": [22, 25, 29, 31, 33, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 289, 291, 293, 295, 297, 305, 307, 309, 311, 423, 425, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 503, 504, 515, 518, 527, 529], "180": [25, 37, 241, 262, 266, 282, 289, 297, 307, 430, 443, 469, 471, 476, 518, 519, 529], "181": [25, 40, 241, 249, 262, 266, 282, 289, 297, 307, 432, 445, 471, 476, 518, 529], "182": [25, 37, 230, 241, 249, 266, 282, 289, 297, 430, 432, 443, 469, 471, 476, 518, 529], "183": [25, 37, 40, 230, 241, 249, 262, 266, 282, 289, 297, 307, 430, 432, 445, 471, 476, 518, 529], "184": [25, 37, 241, 266, 282, 289, 297, 307, 430, 432, 443, 445, 469, 471, 476, 518, 529], "185": [25, 37, 40, 230, 241, 249, 266, 282, 289, 297, 443, 471, 476, 518], "186": [25, 37, 40, 241, 266, 282, 289, 297, 307, 430, 432, 443, 445, 469, 471, 476, 518, 529], "187": [25, 37, 171, 241, 275, 282, 297, 430, 432, 443, 445, 469, 471, 476, 518], "188": [25, 37, 40, 171, 230, 241, 282, 297, 430, 443, 471, 476, 518], "189": [25, 37, 171, 230, 249, 262, 282, 297, 430, 432, 443, 445, 469, 471, 476, 518], "19": [22, 25, 29, 31, 33, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 289, 291, 293, 295, 297, 305, 307, 309, 311, 423, 425, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 503, 504, 515, 518, 527, 529], "190": [25, 37, 40, 171, 230, 249, 262, 282, 289, 297, 307, 430, 432, 471, 476, 518], "191": [25, 37, 171, 230, 249, 262, 282, 289, 297, 307, 430, 445, 469, 471, 476, 518], "192": [25, 37, 40, 171, 249, 262, 282, 289, 297, 307, 432, 471, 476, 518, 529], "193": [25, 37, 40, 171, 230, 262, 282, 289, 297, 307, 432, 445, 469, 471, 476, 518, 529], "194": [25, 37, 171, 230, 249, 282, 289, 297, 307, 445, 471, 476, 518, 529], "195": [25, 37, 40, 171, 230, 262, 282, 307, 432, 469, 471, 476, 518, 529], "196": [25, 37, 171, 230, 297, 307, 432, 445, 469, 471, 476, 518, 529], "197": [25, 37, 40, 171, 230, 282, 297, 307, 432, 469, 471, 476, 518, 529], "198": [25, 37, 171, 230, 249, 297, 307, 432, 445, 469, 471, 476, 518, 529], "199": [25, 37, 40, 171, 230, 249, 282, 297, 307, 432, 469, 471, 476, 518, 529], "1990": 1, "1_55_0": 356, "1e": [262, 518], "1ul": [25, 312, 423, 476, 519], "2": [4, 5, 6, 11, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 44, 50, 52, 54, 64, 66, 78, 80, 83, 89, 95, 109, 117, 119, 121, 159, 164, 166, 168, 169, 171, 173, 175, 176, 177, 227, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 250, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 302, 303, 305, 307, 309, 311, 312, 314, 320, 328, 332, 336, 338, 392, 398, 408, 410, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 441, 442, 443, 445, 446, 448, 452, 457, 458, 465, 466, 468, 469, 471, 472, 473, 476, 477, 480, 481, 482, 499, 500, 503, 504, 506, 507, 511, 513, 515, 517, 518, 519, 524, 526, 527, 529, 530], "20": [22, 25, 29, 31, 33, 37, 38, 40, 117, 119, 121, 144, 164, 166, 167, 168, 169, 171, 176, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 289, 291, 293, 295, 297, 305, 307, 309, 311, 423, 425, 428, 430, 432, 434, 436, 438, 440, 441, 443, 445, 469, 471, 476, 503, 504, 515, 518, 527, 529], "200": [25, 37, 40, 171, 230, 249, 262, 297, 307, 432, 445, 469, 471, 476, 518, 529], "2000": [11, 471, 474], "2000ul": [25, 312, 476, 519], "2001": [41, 481, 531], "2005": [41, 481, 531], "2006": 531, "2007": [41, 481, 531], "201": [25, 37, 171, 230, 249, 262, 297, 307, 432, 471, 476, 518, 529], "2015": 41, "2019": 38, "202": [25, 37, 40, 171, 230, 262, 282, 297, 432, 445, 471, 476, 518, 529], "2022": [24, 35, 121, 164, 168, 171, 175, 241, 245, 275, 299, 307, 309, 432, 434, 438, 443, 469, 515, 529], "2023": [31, 33, 37, 119, 121, 164, 168, 171, 175, 177, 233, 235, 237, 239, 241, 243, 245, 249, 266, 268, 277, 282, 287, 291, 293, 299, 301, 307, 309, 311, 423, 425, 430, 434, 436, 445, 503, 504, 515, 529], "2024": [22, 24, 25, 29, 35, 40, 117, 166, 169, 173, 177, 230, 247, 249, 251, 261, 262, 264, 270, 272, 275, 279, 280, 282, 283, 285, 289, 295, 297, 301, 303, 305, 425, 427, 428, 430, 432, 438, 440, 443, 445, 469, 471, 476, 480, 518, 527], "203": [37, 171, 249, 262, 297, 432, 471, 476, 518, 529], "204": [25, 37, 171, 262, 282, 297, 432, 445, 471, 476, 518, 529], "205": [25, 37, 171, 262, 282, 297, 432, 445, 471, 476, 518, 529], "206": [25, 171, 262, 282, 297, 432, 445, 471, 476, 518, 529], "207": [37, 171, 249, 262, 282, 297, 432, 445, 471, 476, 518], "208": [25, 37, 40, 171, 249, 262, 282, 297, 432, 445, 471, 476, 518, 529], "209": [25, 40, 171, 249, 282, 297, 432, 445, 471, 476, 518], "21": [22, 25, 29, 31, 33, 37, 38, 40, 119, 121, 164, 166, 168, 169, 171, 177, 230, 233, 235, 237, 239, 241, 243, 245, 249, 251, 261, 262, 264, 266, 268, 270, 275, 279, 280, 282, 283, 285, 289, 291, 293, 295, 297, 305, 307, 309, 423, 425, 428, 430, 432, 436, 438, 440, 443, 445, 469, 471, 476, 503, 504, 515, 518, 527, 529], "210": [25, 37, 40, 171, 249, 282, 432, 471, 476, 518], "211": [25, 40, 171, 249, 262, 282, 297, 432, 471, 476, 518], "212": [25, 40, 171, 249, 262, 282, 297, 432, 471, 476, 518], "213": [25, 40, 171, 249, 262, 282, 297, 432, 471, 476, 518, 529], "214": [25, 40, 171, 262, 282, 297, 471, 476, 518, 529], "215": [25, 37, 40, 171, 249, 262, 282, 297, 432, 471, 476, 518, 529], "216": [25, 37, 40, 249, 262, 297, 432, 471, 476, 518, 529], "217": [25, 37, 40, 171, 262, 282, 297, 432, 471, 476, 518, 529], "218": [25, 40, 262, 282, 297, 471, 476, 518, 529], "219": [25, 37, 40, 249, 262, 282, 297, 432, 471, 476, 518, 529], "22": [22, 25, 29, 31, 33, 37, 38, 40, 119, 121, 164, 166, 171, 233, 235, 237, 239, 241, 243, 249, 251, 261, 262, 264, 266, 268, 270, 279, 282, 283, 285, 289, 291, 293, 295, 297, 305, 307, 309, 423, 425, 428, 432, 436, 438, 443, 445, 469, 471, 476, 503, 504, 515, 518, 527, 529], "220": [25, 37, 40, 249, 262, 282, 471, 476, 518, 529], "221": [25, 40, 249, 262, 282, 471, 476, 518, 529], "222": [25, 37, 40, 249, 262, 282, 297, 432, 471, 476, 518, 529], "223": [25, 37, 40, 249, 262, 282, 432, 471, 476, 518, 529], "224": [25, 37, 249, 262, 282, 471, 476, 518, 529], "225": [25, 37, 40, 249, 262, 282, 432, 471, 476, 518, 529], "226": [25, 37, 262, 282, 432, 471, 476, 518, 529], "227": [25, 37, 249, 262, 282, 432, 471, 476, 518, 529], "228": [25, 37, 249, 262, 282, 471, 476, 518], "229": [25, 37, 262, 432, 471, 518, 529], "23": [24, 25, 31, 33, 37, 38, 40, 41, 119, 121, 164, 169, 171, 175, 233, 235, 237, 239, 241, 243, 251, 252, 261, 262, 264, 266, 268, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 303, 307, 309, 350, 423, 425, 427, 428, 432, 436, 438, 443, 445, 469, 471, 476, 481, 503, 504, 515, 518, 527, 529, 531], "230": [25, 37, 249, 282, 432, 471, 476, 518], "231": [25, 37, 40, 249, 432, 471, 476, 518], "232": [25, 40, 432, 471, 476, 518], "233": [25, 37, 40, 249, 282, 432, 471, 476, 518], "234": [25, 37, 40, 171, 282, 432, 471, 476, 518, 529], "235": [25, 40, 171, 282, 471, 476, 518, 529], "236": [25, 37, 40, 171, 282, 471, 476, 518, 529], "237": [25, 37, 40, 171, 282, 471, 476, 518, 529], "238": [40, 171, 249, 282, 471, 476, 518, 529], "239": [37, 40, 171, 249, 282, 471, 476, 518, 529], "24": [24, 25, 31, 33, 37, 38, 40, 119, 121, 164, 169, 171, 175, 233, 235, 237, 239, 241, 243, 251, 261, 262, 264, 266, 268, 280, 282, 285, 287, 289, 291, 293, 295, 297, 303, 307, 309, 425, 427, 428, 432, 438, 443, 445, 469, 471, 476, 503, 504, 515, 518, 527, 529], "240": [37, 40, 171, 262, 282, 297, 471, 476, 518, 529], "241": [40, 171, 249, 262, 282, 297, 471, 476, 518, 529], "242": [37, 40, 171, 262, 282, 297, 471, 476, 518, 529], "243": [37, 40, 171, 262, 282, 297, 471, 476, 518, 529], "244": [40, 171, 262, 282, 297, 471, 476, 518, 529], "245": [37, 40, 171, 262, 471, 476, 518, 529], "246": [37, 40, 262, 282, 471, 476, 518, 529], "247": [249, 262, 282, 471, 476, 518, 529], "248": [37, 40, 249, 262, 282, 471, 476, 518, 529], "249": [37, 249, 262, 282, 471, 476, 518, 529], "25": [24, 25, 31, 33, 37, 38, 40, 121, 169, 171, 173, 235, 237, 239, 241, 243, 251, 261, 262, 264, 266, 268, 280, 283, 285, 287, 289, 291, 293, 295, 297, 303, 307, 309, 311, 312, 425, 427, 428, 432, 438, 443, 445, 469, 471, 474, 476, 503, 504, 515, 518, 519, 527, 529], "250": [249, 262, 282, 471, 476, 518], "251": [37, 249, 262, 282, 471, 476, 518, 529], "252": [262, 282, 471, 476, 518, 529], "253": [40, 249, 262, 282, 471, 476, 518], "254": [40, 262, 282, 471, 518, 529], "255": [40, 262, 282, 471, 518, 529], "256": [40, 262, 282, 471, 518, 529], "257": [37, 40, 262, 282, 471, 518, 529], "258": [37, 262, 282, 471, 518, 529], "259": [37, 40, 262, 282, 471, 518], "26": [24, 25, 31, 33, 38, 40, 117, 121, 169, 171, 173, 175, 235, 237, 239, 241, 247, 251, 261, 262, 264, 266, 268, 272, 277, 280, 285, 289, 291, 295, 297, 301, 303, 307, 309, 311, 427, 428, 432, 434, 443, 445, 469, 471, 476, 504, 515, 518, 527, 529], "260": [37, 249, 262, 282, 471, 518, 529], "261": [37, 249, 262, 282, 471, 518, 529], "262": [37, 249, 262, 282, 471, 518, 529], "263": [37, 249, 262, 471, 529], "264": [37, 40, 166, 171, 249, 262, 275, 277, 282, 471, 518, 529], "265": [37, 40, 262, 282, 471], "2654435769u": 307, "266": [37, 40, 249, 262, 282, 471, 529], "267": [37, 40, 262, 282, 471, 529], "268": [37, 40, 262, 282, 471, 529], "269": [262, 471, 518, 529], "27": [24, 25, 31, 33, 38, 121, 168, 169, 171, 173, 175, 230, 235, 237, 239, 241, 247, 261, 262, 264, 266, 268, 272, 275, 277, 280, 285, 291, 295, 301, 303, 307, 309, 428, 430, 432, 440, 443, 445, 469, 471, 476, 504, 515, 518, 527, 529], "270": [40, 262, 471, 518, 529], "271": [262, 471, 518], "272": [262, 471, 518, 529], "273": [40, 249, 262, 471, 518, 529], "274": [40, 249, 262, 471, 518, 529], "275": [40, 249, 262, 471, 518, 529], "276": [40, 249, 262, 471, 518, 529], "277": [40, 262, 471, 518], "278": [40, 41, 249, 262, 471, 518, 529], "279": [40, 262, 471, 518, 529], "28": [22, 24, 25, 29, 31, 33, 35, 37, 40, 119, 121, 164, 166, 168, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 247, 249, 251, 261, 262, 266, 268, 270, 272, 275, 279, 280, 282, 285, 291, 293, 301, 303, 305, 307, 309, 311, 425, 428, 430, 432, 436, 440, 443, 445, 469, 471, 480, 504, 515, 518, 527, 529], "280": [262, 471, 518, 529], "281": [40, 262, 471, 518, 529], "28155156327703": 252, "282": [262, 471, 518, 529], "283": [262, 471, 518], "284": [40, 262, 471, 529], "285": [40, 249, 262, 471, 529], "286": [40, 249, 262, 471, 529], "287": [40, 249, 262, 471, 529], "288": [40, 41, 249, 262, 471, 529], "289": [40, 249, 262, 471, 529], "29": [24, 25, 29, 31, 33, 35, 38, 166, 171, 175, 235, 237, 241, 247, 249, 261, 262, 266, 270, 272, 280, 283, 291, 301, 303, 305, 423, 430, 436, 440, 443, 445, 469, 471, 480, 504, 515, 518, 527, 529], "290": [40, 249, 262, 471, 529], "291": [40, 249, 262, 471, 529], "292": [262, 471], "293": [40, 249, 262, 471], "294": [249, 471], "295": [249, 471], "296": [40, 249, 471], "297": [40, 249, 471], "298": [40, 249, 471], "2980539": 531, "2980632": 531, "299": [40, 249, 471], "2d": [6, 11, 26, 31, 32, 33, 36, 37, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 66, 74, 76, 83, 85, 89, 93, 95, 97, 99, 107, 118, 119, 171, 227, 228, 236, 237, 238, 239, 241, 242, 243, 250, 251, 252, 259, 261, 262, 265, 266, 290, 291, 292, 293, 304, 305, 324, 332, 435, 436, 442, 444, 448, 450, 452, 457, 458, 466, 468, 472, 473, 474, 475, 476, 477, 482, 484, 486, 490, 492, 499, 500, 502, 503, 504, 506, 511, 513, 514, 515], "2u": 425, "2x2": 171, "3": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 50, 64, 78, 87, 101, 117, 119, 121, 159, 164, 166, 168, 169, 171, 173, 175, 176, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 250, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 302, 303, 305, 307, 309, 311, 312, 328, 336, 371, 423, 424, 425, 427, 428, 430, 432, 434, 436, 438, 440, 441, 443, 445, 469, 471, 476, 480, 481, 503, 504, 506, 513, 515, 518, 519, 527, 529], "30": [24, 25, 31, 33, 35, 38, 119, 164, 173, 230, 233, 235, 237, 241, 247, 249, 261, 262, 270, 275, 277, 280, 282, 283, 297, 301, 303, 423, 430, 436, 440, 443, 445, 469, 471, 480, 504, 515, 518, 527, 529], "300": [40, 471], "301": [40, 471], "302": [40, 471], "303": [40, 471], "304": 471, "305": [40, 471], "306": 471, "307": 471, "308": [40, 471], "309": [40, 471], "31": [24, 25, 29, 33, 35, 37, 38, 119, 164, 166, 168, 233, 237, 241, 243, 247, 249, 261, 262, 270, 272, 275, 277, 280, 282, 283, 293, 301, 305, 423, 425, 438, 443, 445, 469, 471, 480, 503, 504, 515, 518, 527, 529], "310": [40, 471], "311": [40, 471], "312": [40, 471], "313": [40, 471], "314": [40, 471], "315": [40, 471], "316": 471, "317": [40, 471], "318": 471, "319": 471, "32": [29, 33, 35, 37, 38, 40, 41, 175, 177, 233, 235, 237, 243, 249, 251, 261, 262, 280, 289, 293, 297, 301, 303, 307, 423, 425, 430, 436, 440, 443, 445, 469, 471, 480, 503, 504, 515, 518, 529], "320": [40, 471], "321": [40, 471], "322": [40, 471], "323": [40, 471], "324": [40, 471], "325": [40, 471], "326": [40, 471], "32634787735669": 252, "327": 471, "328": [40, 471], "329": 471, "33": [25, 29, 33, 35, 38, 40, 121, 164, 173, 175, 177, 233, 235, 239, 247, 249, 251, 261, 262, 264, 268, 270, 275, 280, 289, 295, 297, 301, 307, 309, 425, 430, 432, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 529], "330": 471, "331": [40, 471], "332": [40, 471], "333": [40, 471], "334": [40, 471], "335": [40, 471], "336": [40, 471], "337": [40, 471], "338": 471, "339": [40, 471], "34": [29, 35, 37, 38, 41, 121, 173, 177, 233, 235, 239, 247, 249, 262, 264, 268, 272, 277, 280, 285, 289, 295, 297, 301, 307, 309, 423, 425, 430, 432, 440, 443, 445, 469, 471, 476, 480, 481, 503, 504, 515, 518, 529, 531], "340": 471, "341": 471, "342": [40, 471], "343": [40, 471], "344": [40, 471], "345": [40, 471], "346": [40, 471], "347": [40, 471], "348": [40, 471], "349": [40, 471], "35": [25, 29, 35, 37, 38, 40, 168, 175, 177, 233, 247, 249, 251, 261, 262, 264, 266, 270, 272, 275, 277, 280, 285, 289, 291, 295, 297, 301, 307, 428, 430, 436, 440, 443, 445, 469, 480, 503, 504, 515, 518, 529], "350": 471, "351": [40, 471], "352": 471, "353": 471, "354": [40, 471], "355": [40, 471], "356": [40, 471], "357": [40, 471], "358": [40, 471], "359": [40, 471], "36": [29, 31, 35, 38, 40, 121, 168, 171, 173, 175, 177, 233, 235, 247, 249, 261, 262, 264, 266, 268, 270, 272, 275, 277, 280, 285, 291, 295, 301, 307, 309, 423, 425, 430, 432, 436, 440, 443, 445, 469, 471, 476, 504, 513, 515, 518, 528, 529], "360": [40, 471], "361": [40, 471], "362": [40, 471], "363": [40, 471], "364": [40, 471], "365": 471, "366": [40, 471], "367": 471, "368": 471, "369": 471, "37": [25, 29, 31, 35, 37, 38, 40, 168, 171, 177, 230, 233, 235, 241, 249, 261, 262, 275, 277, 285, 289, 297, 301, 311, 425, 430, 432, 436, 440, 443, 445, 469, 503, 504, 515, 518], "370": 471, "371": 471, "372": [40, 471], "373": [40, 471], "374": [40, 471], "375": [40, 471], "376": [40, 471], "377": [40, 471], "378": [40, 471], "379": [40, 471], "38": [25, 29, 35, 37, 38, 40, 168, 175, 177, 230, 237, 241, 247, 249, 262, 264, 268, 270, 272, 277, 280, 282, 291, 295, 307, 311, 425, 428, 430, 432, 440, 443, 445, 469, 471, 476, 503, 504, 515, 518, 527, 529], "380": 471, "381": [40, 471], "382": 471, "383": 471, "384": [40, 471], "385": [40, 471], "386": 471, "387": [40, 471], "388": 471, "389": 471, "39": [25, 29, 31, 33, 35, 37, 38, 40, 121, 168, 171, 173, 177, 230, 233, 235, 237, 247, 251, 261, 262, 268, 275, 280, 285, 291, 293, 301, 303, 311, 425, 428, 432, 436, 440, 443, 445, 469, 476, 504, 527], "390": 471, "391": 471, "392": [40, 471], "393": [40, 471], "394": [40, 471], "395": [40, 471], "396": [40, 471], "397": [40, 471], "398": [40, 471], "399": [40, 471], "3d": [26, 32, 33, 56, 72, 74, 87, 89, 227, 228, 234, 235, 236, 237, 250, 251, 252, 259, 261, 262, 324, 484, 513], "3x3": [89, 252, 513, 528, 529], "4": [12, 14, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 44, 48, 50, 66, 76, 78, 107, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 320, 328, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 506, 513, 515, 518, 527, 529], "40": [29, 33, 38, 168, 173, 177, 233, 235, 241, 247, 249, 251, 262, 264, 275, 280, 295, 303, 425, 430, 432, 445, 469, 471, 504], "400": [40, 471], "401": [40, 471], "402": [40, 471], "403": 471, "404": [40, 471], "405": 471, "406": 471, "407": 471, "408": [40, 471], "409": [40, 471], "41": [25, 29, 37, 38, 40, 121, 168, 175, 177, 230, 233, 237, 247, 249, 251, 261, 272, 275, 285, 303, 309, 311, 425, 428, 430, 440, 445, 469, 476, 504, 527], "410": 471, "411": [40, 471], "415": 40, "416": 40, "418": 40, "419": 40, "42": [29, 31, 33, 37, 38, 173, 175, 177, 230, 233, 235, 268, 270, 272, 280, 303, 309, 430, 440, 445, 469, 471, 476, 504], "421": 40, "422": 40, "424": 40, "425": [40, 41], "427": 40, "428": 40, "43": [25, 29, 33, 38, 40, 175, 177, 233, 241, 247, 249, 251, 261, 272, 275, 280, 291, 303, 305, 311, 440, 445, 469, 504, 529], "430": 40, "436": 40, "437": 40, "438": 40, "439": 40, "44": [31, 33, 37, 38, 40, 175, 177, 230, 235, 237, 247, 249, 251, 262, 268, 270, 275, 289, 291, 301, 303, 305, 307, 309, 430, 436, 440, 445, 469, 471, 476, 504, 515, 518, 529], "440": 40, "441": 40, "442": 40, "443": 40, "444": 40, "445": 40, "446": 40, "447": 40, "448": 40, "449": 40, "45": [25, 29, 33, 38, 121, 166, 175, 177, 233, 235, 237, 241, 251, 261, 262, 270, 272, 275, 280, 289, 291, 301, 303, 305, 307, 423, 428, 436, 440, 443, 445, 469, 471, 476, 504, 515, 518, 527], "450": 40, "451": 40, "452": 40, "453": 40, "454": 40, "456": 40, "46": [29, 31, 33, 38, 40, 41, 166, 175, 177, 230, 233, 237, 247, 249, 261, 270, 289, 297, 301, 303, 307, 309, 311, 423, 428, 436, 440, 443, 445, 469, 481, 504, 518, 527, 529, 531], "460": 40, "461": 40, "462": 40, "463": 40, "464": 40, "465": 40, "466": 40, "468": 40, "47": [25, 29, 38, 40, 121, 166, 173, 175, 177, 233, 237, 247, 249, 251, 262, 264, 270, 275, 280, 289, 291, 297, 301, 303, 305, 307, 309, 423, 428, 436, 469, 471, 476, 504, 515, 518, 527], "472": 40, "473": 40, "474": 40, "475": 40, "476": 40, "477": 40, "478": 40, "479": 40, "48": [31, 33, 38, 40, 166, 173, 175, 177, 230, 233, 237, 262, 264, 268, 270, 275, 280, 289, 297, 301, 303, 307, 311, 423, 428, 430, 436, 440, 443, 469, 471, 515, 527], "480": 40, "481": 40, "483": 40, "486": 40, "487": 40, "488": 40, "489": 40, "49": [25, 29, 38, 40, 166, 173, 175, 177, 233, 235, 241, 247, 249, 261, 262, 264, 270, 272, 275, 280, 282, 289, 301, 303, 305, 307, 309, 423, 428, 430, 432, 443, 469, 471, 503, 504, 518, 527], "490": 40, "492": 40, "495": 40, "496": 40, "497": 40, "498": 40, "499": 40, "4b": 11, "4d": 171, "5": [6, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 54, 66, 74, 76, 78, 101, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 314, 320, 324, 328, 378, 398, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 474, 476, 480, 503, 504, 513, 515, 518, 519, 527, 529], "50": [31, 37, 38, 40, 166, 173, 175, 177, 230, 233, 235, 237, 239, 247, 249, 251, 261, 262, 264, 268, 270, 272, 275, 280, 289, 297, 301, 303, 307, 311, 423, 428, 430, 432, 436, 443, 469, 471, 503, 504, 515, 527], "500": [471, 474], "5000": 473, "500ul": [25, 312, 476, 519], "501": 40, "504": 40, "505": 40, "506": 40, "507": 40, "508": 40, "51": [25, 29, 37, 38, 40, 121, 166, 171, 173, 175, 177, 230, 233, 235, 241, 251, 261, 262, 264, 272, 275, 280, 285, 289, 291, 295, 297, 303, 305, 307, 311, 423, 432, 436, 440, 443, 469, 471, 476, 503, 504, 527], "510": 40, "513": 40, "514": 40, "515": 40, "516": 40, "517": 40, "519": 40, "52": [29, 31, 37, 38, 166, 171, 173, 175, 177, 233, 247, 249, 251, 261, 262, 264, 270, 275, 285, 289, 291, 295, 301, 303, 307, 311, 423, 428, 430, 440, 445, 469, 471, 476, 503, 504, 518, 527], "522": 40, "523": [37, 40], "523598": 473, "524": 40, "525": 40, "526": 40, "527": 40, "528": 40, "529": 40, "53": [25, 29, 38, 40, 121, 164, 166, 171, 173, 175, 230, 241, 247, 261, 262, 264, 270, 272, 275, 280, 285, 289, 291, 295, 297, 303, 305, 307, 311, 423, 430, 432, 436, 440, 443, 445, 469, 471, 503, 504, 515, 518, 527], "530": 40, "532": 40, "533": 40, "534": 40, "536": 40, "537": 40, "538": 40, "539": 40, "54": [25, 29, 31, 37, 38, 40, 164, 166, 171, 173, 230, 235, 241, 251, 261, 262, 264, 270, 275, 280, 285, 295, 305, 307, 311, 423, 430, 432, 436, 440, 443, 471, 476, 503, 504, 518, 527], "540": 40, "541": 40, "542": 40, "543": 40, "55": [25, 29, 37, 38, 40, 164, 166, 171, 173, 235, 241, 243, 247, 261, 262, 264, 268, 270, 275, 280, 285, 289, 291, 295, 303, 307, 311, 423, 440, 443, 445, 471, 476, 503, 504, 515, 518, 527, 529], "5555": 531, "56": [25, 29, 31, 38, 40, 164, 166, 171, 173, 230, 247, 262, 264, 270, 275, 280, 282, 285, 289, 295, 305, 307, 309, 311, 423, 428, 430, 432, 436, 440, 443, 445, 471, 503, 504, 518, 529], "57": [25, 29, 31, 37, 38, 40, 121, 164, 166, 171, 230, 241, 249, 261, 264, 268, 270, 275, 280, 282, 285, 295, 301, 307, 309, 311, 423, 428, 432, 436, 440, 445, 471, 476, 503, 504, 515, 518, 529], "58": [29, 31, 38, 40, 164, 166, 171, 173, 230, 239, 247, 249, 261, 262, 264, 270, 275, 280, 285, 289, 295, 297, 301, 307, 309, 311, 423, 428, 443, 445, 471, 476, 503, 504, 518, 529], "59": [29, 33, 37, 38, 121, 164, 166, 171, 239, 247, 249, 251, 261, 262, 264, 275, 280, 282, 285, 293, 295, 297, 301, 307, 309, 311, 423, 428, 432, 436, 440, 443, 445, 469, 471, 503, 504, 515, 518, 529], "6": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 54, 74, 76, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 314, 320, 324, 328, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 476, 480, 503, 504, 515, 518, 527, 529], "60": [29, 31, 33, 37, 38, 40, 164, 166, 171, 173, 230, 235, 237, 239, 241, 247, 251, 261, 262, 264, 270, 275, 280, 282, 285, 295, 297, 301, 303, 305, 307, 309, 314, 423, 428, 430, 432, 436, 445, 469, 471, 473, 474, 503, 504, 515, 518, 529], "61": [29, 33, 38, 164, 171, 173, 230, 235, 241, 249, 251, 261, 262, 264, 268, 272, 275, 280, 282, 285, 295, 297, 301, 303, 305, 307, 309, 311, 423, 430, 440, 443, 471, 476, 503, 504, 518, 529], "62": [29, 37, 38, 164, 166, 171, 173, 230, 235, 237, 239, 241, 247, 251, 262, 264, 272, 275, 282, 285, 291, 295, 297, 299, 301, 303, 305, 307, 309, 423, 428, 430, 432, 436, 440, 443, 445, 469, 471, 476, 503, 504, 515, 518, 529], "63": [29, 33, 37, 38, 121, 164, 166, 171, 173, 235, 237, 239, 243, 247, 251, 261, 262, 264, 268, 272, 275, 280, 285, 291, 295, 297, 299, 301, 303, 305, 307, 309, 423, 430, 432, 436, 440, 445, 469, 471, 504, 515, 518, 529], "64": [25, 29, 37, 38, 121, 164, 166, 171, 173, 230, 235, 237, 239, 241, 243, 251, 261, 262, 264, 266, 270, 272, 275, 280, 282, 285, 289, 291, 295, 297, 299, 301, 303, 307, 309, 423, 430, 436, 440, 443, 469, 471, 503, 504, 518, 529], "64485362793663": 252, "65": [29, 33, 38, 164, 166, 171, 230, 235, 239, 243, 247, 251, 261, 262, 264, 270, 272, 275, 280, 282, 285, 289, 291, 293, 295, 297, 299, 305, 307, 309, 311, 423, 430, 432, 436, 440, 443, 445, 471, 476, 503, 504, 515, 518, 529], "66": [37, 38, 119, 121, 164, 166, 171, 173, 230, 235, 237, 239, 245, 247, 251, 261, 262, 264, 270, 272, 275, 280, 282, 285, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 428, 430, 436, 440, 445, 469, 471, 476, 504, 515, 518, 529], "67": [29, 33, 37, 38, 121, 164, 166, 171, 230, 235, 239, 243, 249, 251, 261, 262, 264, 270, 272, 275, 280, 282, 285, 289, 291, 293, 295, 297, 299, 307, 309, 311, 423, 428, 430, 436, 440, 443, 469, 471, 503, 504, 529], "68": [38, 121, 164, 166, 171, 230, 235, 237, 239, 243, 247, 249, 251, 261, 262, 264, 268, 270, 272, 275, 282, 285, 289, 291, 295, 297, 299, 305, 307, 309, 423, 428, 436, 440, 443, 445, 469, 471, 503, 504, 515, 518], "69": [33, 37, 38, 164, 166, 171, 230, 235, 239, 243, 247, 249, 251, 261, 262, 264, 268, 272, 275, 280, 282, 285, 289, 291, 293, 295, 297, 305, 307, 311, 423, 428, 430, 436, 445, 471, 503, 504, 515, 518, 529], "6x6": [513, 528, 529], "7": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "70": [25, 37, 38, 41, 121, 164, 171, 173, 235, 237, 243, 251, 262, 264, 272, 275, 280, 282, 285, 289, 291, 295, 297, 307, 423, 428, 430, 432, 436, 440, 443, 469, 471, 476, 503, 504, 515, 518], "71": [33, 38, 164, 171, 173, 230, 235, 239, 243, 247, 249, 251, 261, 262, 264, 268, 272, 275, 280, 282, 285, 289, 291, 297, 301, 303, 305, 307, 423, 428, 432, 436, 443, 445, 469, 471, 476, 503, 504], "713": [41, 481, 531], "72": [33, 37, 38, 164, 171, 173, 230, 235, 237, 243, 247, 251, 261, 262, 264, 268, 272, 275, 280, 282, 285, 289, 291, 295, 297, 301, 303, 305, 307, 423, 425, 428, 430, 436, 445, 469, 471, 503, 504, 518], "720": [41, 481, 531], "73": [25, 37, 38, 119, 164, 171, 173, 230, 235, 243, 251, 261, 262, 264, 268, 275, 280, 282, 285, 289, 295, 301, 303, 307, 311, 423, 425, 428, 430, 432, 436, 443, 445, 469, 471, 503, 504, 518], "74": [25, 31, 33, 38, 164, 171, 173, 230, 235, 237, 243, 247, 251, 261, 262, 272, 275, 280, 282, 285, 289, 291, 295, 297, 301, 303, 305, 307, 311, 423, 425, 428, 430, 432, 440, 443, 469, 471, 476, 504, 515], "75": [25, 31, 37, 38, 40, 121, 164, 171, 230, 235, 237, 239, 247, 249, 261, 262, 264, 266, 268, 275, 280, 282, 285, 287, 289, 295, 297, 301, 303, 305, 307, 423, 425, 428, 430, 440, 445, 469, 471, 476, 503, 504, 515, 518], "76": [25, 31, 37, 38, 40, 121, 164, 171, 235, 239, 243, 249, 251, 261, 275, 280, 282, 285, 289, 293, 295, 303, 305, 307, 311, 423, 425, 428, 432, 440, 443, 445, 469, 471, 503, 504, 515], "77": [25, 38, 40, 164, 171, 230, 235, 237, 239, 241, 247, 249, 251, 261, 272, 275, 280, 282, 285, 289, 293, 295, 297, 301, 303, 305, 423, 425, 428, 430, 440, 443, 469, 471, 476, 503, 504], "78": [25, 31, 37, 38, 121, 164, 171, 230, 235, 239, 241, 247, 249, 251, 261, 264, 268, 272, 282, 285, 289, 293, 295, 297, 303, 305, 425, 428, 430, 440, 445, 469, 471, 476, 503, 504, 515, 529], "79": [25, 29, 33, 37, 38, 40, 164, 171, 230, 235, 239, 241, 243, 262, 264, 268, 272, 275, 280, 282, 285, 289, 291, 293, 295, 305, 307, 423, 425, 428, 430, 432, 443, 445, 471, 503, 504, 515, 518, 529], "8": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 101, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "80": [25, 29, 31, 33, 38, 121, 164, 171, 230, 235, 239, 243, 247, 249, 251, 261, 262, 264, 272, 275, 280, 282, 285, 291, 293, 295, 297, 305, 311, 425, 428, 432, 443, 469, 471, 476, 504, 518, 529], "81": [25, 29, 33, 37, 38, 40, 119, 121, 164, 171, 230, 235, 239, 241, 243, 247, 251, 262, 264, 268, 272, 275, 280, 282, 289, 291, 293, 295, 297, 305, 311, 425, 428, 430, 443, 445, 469, 471, 476, 503, 504, 515, 518, 529], "82": [25, 29, 31, 33, 37, 38, 119, 164, 171, 230, 235, 237, 239, 243, 247, 251, 261, 262, 264, 272, 280, 282, 285, 289, 291, 293, 297, 301, 311, 425, 428, 430, 432, 445, 469, 471, 503, 504, 515, 529], "83": [25, 29, 38, 40, 119, 121, 164, 171, 235, 237, 239, 241, 247, 262, 264, 268, 275, 280, 282, 285, 291, 293, 295, 301, 305, 311, 425, 428, 430, 432, 443, 469, 471, 476, 504, 518, 529], "84": [25, 29, 31, 33, 37, 38, 121, 164, 171, 230, 235, 237, 239, 243, 247, 249, 251, 261, 262, 264, 266, 268, 272, 275, 280, 282, 285, 289, 291, 293, 295, 297, 301, 305, 311, 425, 428, 432, 443, 445, 469, 471, 476, 503, 504, 515, 518, 529], "85": [25, 29, 37, 38, 40, 119, 164, 230, 235, 239, 241, 249, 251, 262, 264, 266, 272, 282, 285, 289, 291, 293, 295, 297, 301, 305, 311, 425, 428, 430, 432, 445, 469, 471, 476, 503, 504, 515, 518, 529], "86": [25, 29, 31, 37, 38, 41, 121, 164, 230, 235, 237, 239, 247, 261, 262, 264, 266, 268, 272, 275, 280, 282, 285, 291, 293, 295, 301, 305, 423, 425, 428, 430, 432, 443, 469, 471, 503, 504, 518, 529], "87": [25, 31, 37, 38, 40, 164, 171, 230, 235, 239, 241, 247, 249, 251, 261, 262, 264, 268, 272, 282, 285, 289, 291, 293, 295, 297, 301, 307, 423, 425, 428, 430, 443, 445, 469, 471, 503, 504, 515, 518, 529], "88": [25, 37, 38, 164, 230, 235, 239, 243, 251, 261, 262, 264, 266, 272, 282, 285, 289, 291, 295, 297, 301, 305, 307, 423, 425, 428, 432, 445, 469, 471, 476, 503, 504, 515, 518, 529], "889486": 531, "89": [25, 29, 31, 33, 37, 38, 40, 41, 119, 164, 235, 239, 241, 243, 247, 251, 261, 262, 264, 266, 268, 272, 282, 285, 291, 293, 297, 305, 307, 423, 425, 428, 430, 432, 443, 471, 476, 503, 504, 518, 529], "9": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "90": [25, 33, 37, 38, 119, 121, 164, 230, 235, 239, 241, 243, 247, 251, 261, 262, 264, 272, 282, 285, 289, 295, 297, 301, 305, 307, 423, 425, 428, 430, 443, 445, 469, 471, 503, 504, 515, 518], "900": 252, "91": [25, 33, 37, 38, 40, 119, 121, 164, 230, 237, 239, 243, 251, 262, 264, 266, 272, 282, 285, 289, 291, 295, 297, 301, 305, 307, 423, 425, 428, 430, 432, 445, 469, 471, 476, 503, 504, 515, 518, 529], "92": [25, 33, 37, 40, 119, 164, 230, 237, 239, 241, 243, 247, 262, 264, 272, 275, 295, 297, 301, 305, 307, 423, 425, 428, 430, 432, 443, 469, 471, 476, 503, 504, 518], "93": [25, 33, 37, 38, 119, 121, 164, 230, 237, 239, 243, 247, 251, 262, 264, 268, 272, 275, 282, 285, 289, 297, 301, 305, 307, 425, 428, 430, 443, 445, 471, 503, 504, 515, 518], "94": [25, 33, 37, 38, 40, 119, 164, 230, 237, 243, 249, 262, 264, 268, 272, 275, 285, 289, 295, 297, 301, 305, 307, 428, 432, 469, 471, 476, 503, 504, 515, 518], "95": [31, 33, 37, 40, 164, 230, 237, 247, 249, 262, 264, 272, 275, 282, 285, 289, 293, 295, 301, 305, 307, 423, 425, 428, 430, 432, 443, 469, 471, 476, 503, 504, 518], "950": 252, "96": [25, 31, 33, 37, 119, 164, 171, 230, 235, 237, 243, 247, 249, 262, 266, 268, 272, 275, 285, 289, 293, 295, 297, 301, 305, 307, 428, 430, 443, 445, 471, 476, 503, 504, 515], "9658": [26, 227, 259], "9660": [26, 176, 259, 446, 458, 465, 477, 492, 499, 511], "9670": [28, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 167, 172, 252, 263, 269, 271, 276, 284, 288, 294, 296, 300, 302, 306, 320, 328, 330, 332, 334, 336, 338, 342, 346, 358, 367, 376, 378, 380, 385, 387, 392, 396, 398, 400, 402, 406, 408, 410, 414, 416, 422, 424, 429, 439, 448, 450, 452, 482, 484, 486, 506, 513, 517, 524], "97": [33, 37, 40, 164, 171, 230, 235, 237, 249, 262, 264, 266, 272, 275, 285, 289, 291, 293, 295, 297, 301, 305, 307, 425, 432, 445, 469, 471, 476, 504, 515, 518, 529], "972": 518, "9780262201629": 531, "98": [31, 33, 37, 121, 171, 230, 235, 237, 247, 249, 251, 262, 264, 266, 272, 275, 282, 285, 289, 291, 293, 295, 305, 430, 432, 443, 469, 471, 476, 504, 515, 529], "99": [29, 33, 37, 40, 119, 121, 171, 230, 235, 237, 241, 247, 249, 251, 262, 264, 266, 272, 275, 285, 289, 291, 297, 305, 307, 430, 443, 445, 469, 471, 473, 474, 504, 515, 529], "990": 252, "999": [252, 424, 425], "A": [4, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 70, 99, 115, 226, 227, 228, 229, 235, 252, 274, 308, 387, 441, 454, 464, 473, 474, 488, 498, 500], "AND": [39, 40, 252, 280, 389], "AS": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "And": 336, "As": 3, "But": [1, 289], "For": [0, 3, 4, 5, 99, 249, 346], "If": [0, 5, 29, 42, 64, 104, 252, 263, 289, 387, 402, 408, 410, 422, 425, 432, 448, 450, 452, 482, 513, 518], "In": [4, 6, 28, 41, 78, 97, 481, 518, 531], "It": [1, 4, 42, 44, 46, 48, 50, 52, 54, 64, 70, 76, 91, 97, 99, 101, 104, 228, 252, 300, 330, 432, 466, 471, 472, 473, 474, 482, 500, 519], "Its": [64, 252, 396, 397, 440, 441], "NOT": [280, 389], "No": [64, 264, 448, 450], "Not": [241, 289], "OF": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "OR": [22, 24, 25, 29, 31, 33, 35, 37, 38, 39, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 389, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "On": 6, "Ones": 249, "That": [64, 95], "The": [2, 3, 4, 6, 17, 18, 28, 30, 32, 33, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 118, 120, 163, 164, 165, 167, 170, 172, 174, 226, 229, 232, 234, 236, 237, 238, 240, 242, 246, 248, 250, 252, 262, 263, 265, 267, 269, 271, 274, 276, 281, 284, 288, 289, 290, 292, 294, 296, 300, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 422, 424, 429, 431, 432, 435, 439, 441, 448, 450, 452, 464, 471, 473, 474, 475, 479, 482, 484, 486, 498, 502, 506, 513, 514, 517, 519, 521, 523, 524], "Then": [5, 15, 20], "There": [1, 6, 432, 518], "These": [2, 12, 16, 294], "To": [2, 3, 4, 268, 296], "Will": [109, 336], "_": [423, 474], "_angular_resolut": [518, 524, 525], "_angular_resolutionresolut": 524, "_linear_resolut": [518, 524, 525], "_linear_resolutionresolut": 524, "_model": 4, "_t": 4, "aa": 473, "ab": [121, 264, 268, 272, 428, 518], "abil": 101, "abl": [4, 21, 23, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "abort": [448, 450, 452], "about": [249, 518], "abov": [4, 91, 104, 226, 300, 425, 432, 464, 498], "absolut": 300, "abstract": [3, 35, 118, 119, 146, 153, 176, 241, 242, 243, 251, 265, 266, 275, 277, 281, 292, 305, 436], "academ": [0, 1], "accept": [91, 104, 300], "access": [3, 12, 14, 26, 28, 31, 33, 35, 40, 64, 70, 121, 146, 149, 163, 164, 166, 170, 171, 176, 226, 227, 229, 230, 237, 241, 252, 259, 262, 268, 275, 277, 281, 282, 285, 289, 297, 307, 309, 392, 406, 414, 425, 445, 450, 464, 498], "accord": [18, 31, 42, 252, 261, 330, 474, 482], "accordingli": [42, 482], "account": 252, "accumul": [165, 166, 170, 171, 263, 264, 346, 428], "acquir": 6, "action": [2, 3, 15, 25, 34, 35, 42, 66, 67, 93, 94, 99, 115, 121, 145, 146, 172, 173, 176, 200, 214, 217, 227, 228, 268, 269, 270, 271, 272, 279, 309, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 376, 380, 385, 441, 476, 518], "action_closur": [29, 263, 264, 336], "actioncontrol": [66, 93], "actionsact": 122, "actionsinclud": [129, 130], "activ": [443, 448, 452, 469, 471, 474], "actual": [104, 473, 474], "ad": [16, 101, 252, 471, 473, 474, 519], "adapt": [11, 25, 26, 28, 41, 42, 227, 252, 259, 289, 312, 396, 398, 400, 406, 424, 439, 440, 441, 475, 476, 477, 480, 481, 482, 490, 492, 499, 500, 506, 511, 519, 531], "adaptor": [22, 26, 28, 29, 144, 154, 167, 176, 227, 228, 259, 263, 264, 276, 284, 285, 288, 289, 294, 295, 296, 297, 336, 338, 340, 342, 344, 346, 348, 398, 400, 404, 408, 410, 412, 422, 423, 424, 425, 432, 438, 439, 440, 441], "adaptor_bas": 289, "add": [38, 99, 104, 432, 518], "addit": [19, 33, 237, 252, 404, 486], "addition": 64, "addressof": [70, 230, 289, 297], "adjust": [42, 482], "adl": [17, 252, 392, 414, 505, 511, 518, 528, 529], "adopt": [1, 2, 3, 5], "advanc": [40, 289, 432], "advantag": 4, "affect": 3, "afford": [3, 14, 472], "after": [2, 4, 42, 64, 70, 101, 171, 228, 230, 296, 402, 473, 474, 482], "again": [31, 235, 473, 474, 476, 519], "against": [78, 80, 235, 300], "agent": [41, 481, 531], "aggreg": [3, 40, 64, 473, 474], "agnost": [473, 474], "agre": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "aid": 500, "aka": [16, 58], "algebra": 441, "algorithm": [3, 4, 6, 26, 29, 30, 31, 34, 35, 42, 58, 60, 62, 68, 96, 101, 109, 111, 113, 146, 176, 181, 190, 202, 204, 216, 219, 227, 234, 235, 240, 241, 252, 259, 263, 264, 269, 270, 271, 272, 284, 285, 289, 294, 295, 296, 297, 312, 318, 336, 338, 340, 342, 344, 346, 348, 382, 391, 398, 402, 408, 410, 412, 423, 425, 431, 432, 440, 441, 442, 444, 457, 458, 468, 469, 475, 480, 482, 490, 492, 500, 517, 518], "algorithm_": 291, "algorithma": 95, "algorithmbeam_model": 139, "algorithminclud": [131, 132, 133], "algorithmon_effective_size_drop": 137, "algorithmrai": 95, "alia": [39, 104, 252, 262, 275, 429, 430, 445, 450], "alias": 307, "align": [83, 87], "alignedbox2d": [26, 84, 115, 198, 200, 212, 214, 227, 250, 251, 252, 259], "alignedbox3d": [26, 88, 115, 198, 200, 212, 214, 227, 232, 233, 235, 250, 251, 252, 259], "alik": 5, "all": [4, 5, 6, 19, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 146, 171, 176, 178, 180, 181, 182, 183, 184, 187, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 226, 227, 228, 236, 237, 240, 241, 244, 252, 253, 256, 259, 260, 262, 273, 274, 275, 286, 289, 290, 291, 297, 298, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 425, 426, 432, 433, 439, 440, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 464, 468, 470, 478, 479, 482, 483, 484, 485, 486, 487, 490, 492, 493, 494, 498, 506, 508, 510, 511, 512, 516, 518, 519, 520, 521, 522, 524, 525], "alloc": [3, 26, 64, 104, 106, 227, 249, 252, 259, 431, 432], "allocator_typ": [40, 64, 65, 104, 105, 178, 220, 432], "allocator_typealloc": [40, 432], "allocator_typevoid": [40, 432], "allof": 301, "allow": [13, 24, 26, 91, 151, 170, 176, 227, 252, 259, 263, 306, 307, 391, 441, 471, 473, 474, 476, 484, 519], "almost_equal_to": [488, 493, 495, 497, 499, 517, 518, 524, 525], "almost_equal_toalmost_equal_to": 518, "almost_equal_tostd": 518, "alon": [517, 518], "along": [12, 95, 291, 476, 519], "alpha": [68, 69, 175, 517, 518], "alpha1": [320, 334, 471, 474], "alpha2": [320, 334, 471, 474], "alpha3": [320, 334, 471, 474], "alpha4": [320, 334, 471, 474], "alpha5": [334, 471, 474], "alpha_": 175, "alpha_fast": [25, 101, 102, 178, 223, 312, 428, 476, 493, 497, 519], "alpha_fastbeluga": 313, "alpha_fastbeluga_ro": 520, "alpha_fastdecai": 101, "alpha_fastdoubl": [25, 476], "alpha_fastexponenti": 476, "alpha_fastus": 25, "alpha_slow": [25, 101, 102, 178, 223, 312, 428, 476, 493, 497, 519], "alpha_slowbeluga": 313, "alpha_slowbeluga_ro": 520, "alpha_slowdecai": 101, "alpha_slowdoubl": [25, 476], "alpha_slowexponenti": 476, "alpha_slowus": 25, "alphabet": [227, 465, 499], "alphahuetorgba": [517, 518], "alphahuetorgbabeluga_ro": 518, "alphath": 68, "alreadi": [6, 33, 237, 241, 252, 283], "also": [15, 16, 18, 20, 42, 54, 76, 296, 320, 334, 342, 448, 450, 452, 473, 474, 482], "altern": [5, 6, 17], "alwai": [28, 40, 252, 387, 408, 419, 422, 439], "always_reset_initial_pos": [473, 474], "amcl": [1, 6, 11, 25, 26, 31, 43, 115, 178, 187, 188, 193, 196, 201, 205, 209, 215, 221, 227, 241, 252, 259, 312, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 477, 479, 480, 483, 488, 490, 492, 493, 495, 496, 499, 500, 503, 504, 506, 511, 515, 518, 519], "amcl_cor": [42, 176, 312, 468, 469], "amcl_nod": [448, 457, 458, 473, 474], "amcl_nodelet": [450, 457, 458], "amcl_pos": 473, "amclamcl": [25, 476], "amclconfig": [444, 445, 450, 451], "amclconfigserv": [445, 450, 451, 459, 462], "amclconfigserverdynamic_reconfigur": 445, "amclconfigservertyp": 445, "amcldefinit": 476, "amclimplement": 25, "amclinlin": 483, "amclnod": [442, 443, 449, 454, 459, 461, 463, 466], "amclnode2d": [443, 465], "amclnodeamclnod": 443, "amclnodeexplicit": 449, "amclnodelet": [444, 445, 451, 454, 459, 461, 462, 463, 466], "amclnodelet2d": [445, 465], "amclnodeletmutableprotect": 451, "amclnodeletprotect": 451, "amclnodeletprotectedstat": 451, "amclnodeprotect": 449, "amclnodeprotectedstat": 449, "amclparam": [25, 42, 43, 115, 178, 210, 212, 216, 218, 221, 223, 252, 313, 475, 476, 482, 483, 488, 493, 497, 506, 520], "amclparamsstruct": [25, 227, 476, 499], "american": 41, "amount": [306, 387], "amp": [25, 26, 29, 31, 33, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 119, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 177, 200, 203, 214, 216, 217, 218, 220, 227, 230, 235, 237, 239, 241, 243, 247, 248, 249, 250, 251, 252, 253, 255, 259, 261, 262, 264, 266, 268, 270, 272, 280, 282, 283, 285, 289, 291, 293, 295, 297, 300, 301, 302, 303, 305, 306, 307, 309, 311, 318, 319, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 363, 366, 367, 368, 369, 370, 371, 376, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 425, 428, 429, 430, 431, 432, 436, 440, 443, 445, 448, 449, 450, 451, 452, 453, 469, 471, 476, 482, 483, 484, 486, 487, 503, 504, 505, 506, 513, 515, 517, 518, 524, 525, 526, 527, 528, 529], "amplitud": 241, "an": [2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 31, 33, 35, 37, 38, 39, 40, 42, 52, 54, 60, 64, 68, 70, 76, 78, 89, 91, 93, 95, 101, 104, 111, 113, 117, 119, 121, 145, 151, 156, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 226, 227, 228, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 296, 297, 299, 300, 301, 303, 305, 307, 309, 311, 328, 334, 336, 338, 340, 351, 356, 374, 376, 380, 392, 406, 408, 414, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 436, 438, 440, 443, 445, 448, 450, 452, 464, 469, 471, 473, 474, 476, 480, 482, 498, 503, 504, 505, 513, 515, 517, 518, 521, 526, 527, 528, 529], "analyz": 40, "andino": [6, 11], "andom_interspers": [289, 398], "angl": [13, 33, 46, 237, 239, 252, 271, 385, 484, 485, 493, 495, 503], "angle_incr": 503, "angle_min": 503, "anglesauto": 503, "angular": [25, 312], "angular_clustering_resolut": [109, 110, 307], "angular_clustering_resolutionclust": 109, "angular_resolut": [493, 497, 506, 517, 518, 524], "angular_resolutionangular": 506, "angular_resolutionbeluga_ro": 525, "angular_resolutionconst": 518, "angular_resolutionresolut": 518, "ani": [2, 4, 6, 18, 22, 24, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 42, 70, 95, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 227, 229, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 259, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 387, 402, 404, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 448, 450, 452, 469, 471, 473, 474, 476, 480, 503, 504, 515, 518, 527, 529], "anoth": [15, 40, 64, 70, 78, 226, 230, 249, 464, 498], "any_polici": [25, 252, 253, 257, 280, 476], "any_view": 25, "anyth": 1, "apach": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "apertur": [33, 237], "api": [2, 25, 27, 34, 97, 146, 176, 179, 182, 194, 228, 256, 260, 447, 460, 466, 478, 479, 480, 490, 492, 494, 500, 510, 512, 518, 526, 528], "append": [28, 104], "appli": [3, 42, 167, 228, 237, 338, 342, 346, 387, 432, 473, 474, 482], "applic": [1, 3, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 441, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "approach": 6, "appropri": [2, 3, 252], "approxim": [2, 4, 252, 473, 474, 519], "apt": 5, "ar": [1, 2, 4, 5, 6, 12, 14, 16, 17, 18, 26, 28, 33, 40, 42, 50, 54, 56, 64, 74, 76, 78, 80, 89, 95, 99, 104, 171, 226, 228, 237, 252, 262, 285, 294, 332, 342, 408, 419, 422, 423, 432, 439, 446, 464, 473, 474, 477, 482, 498, 518, 531], "arg": [5, 26, 33, 38, 56, 115, 219, 220, 227, 252, 259, 280, 354, 387, 388, 429, 430], "argument": [6, 18, 38, 42, 91, 95, 104, 252, 264, 285, 295, 296, 297, 300, 338, 340, 342, 344, 346, 348, 387, 398, 400, 404], "arithmet": [18, 20, 26, 36, 37, 58, 91, 227, 252, 259], "around": [89, 99, 241, 296, 328, 473, 474, 476, 519], "arra": [40, 64], "arrai": [25, 26, 37, 39, 40, 64, 111, 113, 114, 115, 117, 148, 167, 176, 200, 203, 214, 216, 218, 220, 227, 228, 249, 252, 259, 262, 306, 307, 419, 421, 430, 441, 486, 506, 513, 515, 528, 529], "arrayarrai": 113, "arrow": [62, 226, 464, 474, 498, 518], "arrow_bodi": 518, "arrow_body_bas": 518, "arrow_head": 518, "arrow_head_bas": 518, "arrow_head_left_corn": 518, "arrow_head_right_corn": 518, "arrow_head_tip": 518, "as_common_tuple_indirect_fn": [115, 200, 214, 397, 439, 440], "as_common_tuple_indirect_fninlin": 397, "as_common_tuple_indirect_fnutil": [227, 440], "as_const": 177, "asdiagon": 249, "assert": [241, 251, 262, 297, 305, 428, 436, 440, 503], "assert_that": 300, "assign": [4, 21, 22, 25, 26, 31, 33, 37, 38, 40, 58, 64, 78, 104, 105, 119, 121, 154, 164, 166, 171, 175, 176, 177, 178, 188, 227, 228, 230, 233, 235, 237, 239, 241, 243, 247, 249, 251, 259, 261, 262, 266, 268, 275, 280, 282, 291, 293, 305, 307, 309, 311, 336, 425, 428, 430, 432, 436, 476, 506, 517, 518], "assign_fn": [28, 29, 115, 200, 214, 217, 337], "assign_fnfriend": 337, "assign_fnimplement": [29, 227], "assign_fninlin": 337, "assign_particle_cloud": [506, 508, 509, 517, 518], "assign_particle_cloudbeluga_ro": 518, "assign_rang": [104, 105, 178, 188, 432], "assign_rangeconstexpr": 432, "assignconstexpr": [29, 432], "assigndefinit": 29, "assoaci": [31, 314], "associ": [31, 41, 78, 97, 249, 305, 314], "assum": [6, 33, 237, 252, 296, 297, 330, 392, 402, 410, 425, 473, 474, 517, 521], "atan": 518, "atan2": [33, 121, 237, 268], "atconstexpr": 40, "attach": [473, 474], "attribut": [284, 312, 314, 316, 320, 322, 324, 326, 328, 330, 332, 334, 367, 378, 398, 448, 450, 452, 519, 521, 524], "auto": [25, 29, 31, 33, 37, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 66, 74, 76, 80, 89, 93, 95, 97, 99, 104, 107, 119, 121, 163, 164, 165, 166, 167, 168, 171, 173, 177, 235, 237, 239, 241, 243, 249, 252, 262, 264, 266, 268, 270, 272, 275, 276, 277, 280, 282, 285, 289, 291, 293, 295, 297, 300, 301, 303, 305, 307, 309, 336, 338, 340, 342, 344, 346, 348, 358, 374, 378, 380, 387, 389, 392, 396, 398, 402, 404, 408, 410, 412, 414, 423, 424, 425, 429, 430, 432, 440, 443, 445, 448, 450, 452, 469, 471, 476, 482, 484, 486, 503, 504, 515, 518, 529], "autocovari": 171, "automat": 252, "autonom": [41, 481, 531], "autostart": [471, 474], "autostart_callback": [443, 448, 449, 452, 453, 459, 461, 469], "autostart_callbackvoid": [443, 469], "autostart_delai": [471, 474], "autostart_timer_": [443, 448, 452, 459, 463, 469], "autostart_timer_beluga_amcl": [449, 453], "autostart_timer_rclcpp": [443, 469], "autostart_timer_tim": [443, 469], "auxiliar": [157, 232], "avail": [6, 64, 85, 252, 473, 474], "averag": [101, 171, 252, 471, 473, 474, 476, 519], "average_weight": 428, "avoid": [3, 40, 101, 307, 430, 471, 473, 474, 476, 519], "awfulli": 293, "axi": [12, 44, 50, 52, 83, 87, 109, 111, 113, 243, 307, 471, 476, 519], "a\u017eman": 38, "b": [27, 37, 38, 39, 40, 115, 179, 180, 182, 189, 194, 223, 235, 252, 253, 459, 463, 518, 524, 525], "ba": 476, "back": [40, 64, 65, 180, 189, 252, 432], "back_insert": 432, "backconstexpr": 40, "backward": [121, 268], "bad": [432, 473, 474, 519], "bag": 6, "bare": 3, "base": [4, 25, 26, 32, 38, 42, 44, 46, 48, 50, 52, 85, 101, 109, 118, 119, 145, 172, 176, 227, 228, 236, 238, 239, 242, 243, 251, 252, 259, 265, 266, 268, 269, 270, 271, 272, 279, 280, 284, 288, 292, 293, 305, 351, 380, 382, 385, 389, 424, 425, 428, 430, 432, 436, 441, 471, 472, 473, 474, 476, 482, 517, 518], "base_footprint": [471, 473, 474], "base_frame_id": [471, 473, 474], "base_pose_in_odom": [476, 482, 483], "base_pose_in_odombas": 482, "basedensegrid2": [45, 48, 49, 50, 51, 107, 108, 115, 118, 119, 181, 183, 190, 191, 199, 213, 227, 243, 252, 486, 487, 499], "basedensegrid2dens": [119, 243], "baselaserscan": [2, 47, 115, 201, 215, 227, 238, 239, 252, 484, 485, 499, 500, 503], "baselaserscanlas": 239, "baselineargrid2": [49, 50, 51, 107, 108, 115, 181, 183, 190, 191, 196, 199, 209, 213, 227, 242, 243, 252, 266, 436, 486, 487, 499], "baselineargrid2linear": [243, 266, 436], "baseoccupancygrid2": [2, 51, 115, 181, 185, 187, 190, 193, 200, 214, 227, 250, 251, 252, 265, 266, 486, 487, 499, 500, 515], "baseoccupancygrid2occup": [251, 266], "baseregulargrid2": [44, 45, 48, 49, 50, 51, 53, 97, 98, 107, 108, 115, 119, 181, 190, 227, 252, 292, 293, 305, 486, 487, 499], "baseregulargrid2regularli": [119, 293, 305], "bash": 5, "basi": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 441, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "basic": [72, 234, 252], "bay": 4, "bayesian": [1, 4, 41], "beam": [13, 30, 31, 54, 74, 152, 176, 227, 228, 237, 252, 299, 314, 441, 471, 473, 474, 484], "beam_bear": 31, "beam_max_rang": [31, 180, 223, 314], "beam_max_rangebeluga": 315, "beam_max_rangedoubl": 31, "beam_max_rangemaximum": 31, "beam_model": [54, 152, 176, 298, 299, 314], "beam_skip_dist": 474, "beam_skip_error_threshold": 474, "beam_skip_threshold": 474, "beammodelparam": [30, 31, 54, 74, 115, 180, 211, 218, 223, 225, 252, 315], "beammodelparamparamet": [31, 227], "beamsensormodel": [20, 26, 30, 31, 55, 76, 115, 180, 189, 200, 205, 212, 214, 215, 218, 220, 221, 224, 227, 228, 252, 259, 314, 476, 482], "beamsensormodelbeam": 31, "beamsensormodelbeamsensormodel": 31, "bear": [26, 31, 32, 33, 56, 72, 74, 95, 96, 152, 176, 227, 228, 232, 233, 235, 237, 252, 259, 291, 299, 316, 322, 324, 326, 441], "bearing_error": [33, 237], "bearing_error_prob": [33, 237], "bearing_sensor_model": [56, 152, 176, 298, 299, 316], "bearingdirect": 95, "bearingmodelparam": [32, 33, 56, 115, 218, 223, 252, 317], "bearingmodelparamparamet": [33, 227], "bearingsensormodel": [20, 26, 32, 33, 57, 115, 180, 189, 200, 205, 212, 214, 215, 218, 220, 221, 224, 227, 228, 252, 259, 316], "bearingsensormodel2d": [32, 33, 252, 253, 257], "bearingsensormodel3d": [32, 33, 252, 253, 257], "bearingsensormodelbearingsensormodel": 33, "bearingsensormodelgener": 33, "becam": 1, "becaus": [1, 28, 54, 76, 104, 226, 237, 241, 262, 293, 423, 464, 484, 498, 518], "becom": 1, "been": [3, 74, 272, 382, 385, 474], "befor": [5, 70, 230, 300, 429, 432, 471, 473, 474, 476, 518, 519], "begin": [4, 37, 40, 60, 61, 64, 65, 104, 105, 171, 180, 189, 235, 264, 285, 295, 297, 432], "begin_adaptor": 289, "begin_cursor": 297, "beginauto": 37, "beginconstexpr": [40, 432], "behav": [39, 252], "behavior": [54, 64, 70, 104], "being": [4, 18, 33, 64, 235, 252, 328, 424, 425], "bel": 4, "belief": [4, 252], "belong": [253, 508], "below": [228, 252, 269, 474], "beluga": [0, 1, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 147, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 253, 254, 255, 256, 257, 258, 259, 260, 273, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 441, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 467, 470, 472, 473, 474, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 519, 520, 521, 522, 523, 524, 525, 530], "beluga_actions_assign_hpp": 29, "beluga_actions_hpp": 22, "beluga_actions_normalize_hpp": 264, "beluga_actions_propagate_hpp": 285, "beluga_actions_reweight_hpp": 295, "beluga_algorithm_amcl_core_hpp": 25, "beluga_algorithm_distance_map_hpp": 164, "beluga_algorithm_effective_sample_size_hpp": 166, "beluga_algorithm_estimation_hpp": 171, "beluga_algorithm_exponential_filter_hpp": 175, "beluga_algorithm_hpp": 24, "beluga_algorithm_raycasting_bresenham_hpp": 37, "beluga_algorithm_raycasting_hpp": 291, "beluga_algorithm_spatial_hash_hpp": 307, "beluga_algorithm_thrun_recovery_probability_estimator_hpp": 428, "beluga_amcl": [448, 449, 450, 451, 452, 453, 454, 458, 459, 461, 462, 463, 466], "beluga_amcl_amcl_node_hpp": 443, "beluga_amcl_amcl_nodelet_hpp": 445, "beluga_amcl_ndt_amcl_node_hpp": 469, "beluga_amcl_ros2_common_hpp": 471, "beluga_amclamclnod": [448, 449], "beluga_amclamclnodelet": [450, 451], "beluga_amclndtamclnod": [452, 453], "beluga_beluga_hpp": 35, "beluga_containers_circular_array_hpp": 40, "beluga_containers_hpp": 117, "beluga_containers_tuple_vector_hpp": 432, "beluga_exampl": [5, 6], "beluga_motion_differential_drive_model_hpp": 121, "beluga_motion_hpp": 245, "beluga_motion_omnidirectional_drive_model_hpp": 268, "beluga_motion_stationary_model_hpp": 309, "beluga_policies_every_n_hpp": 173, "beluga_policies_hpp": 279, "beluga_policies_on_effective_size_drop_hpp": 270, "beluga_policies_on_motion_hpp": 272, "beluga_policies_policy_hpp": 280, "beluga_primitives_hpp": 282, "beluga_prologue_includ": [169, 283], "beluga_random_hpp": 287, "beluga_random_multivariate_distribution_traits_hpp": 247, "beluga_random_multivariate_normal_distribution_hpp": 249, "beluga_random_multivariate_uniform_distribution_hpp": 251, "beluga_ro": [2, 442, 443, 444, 445, 448, 449, 450, 451, 468, 469, 471, 482, 483, 484, 485, 486, 487, 488, 492, 493, 495, 496, 497, 500, 505, 507, 508, 509, 513, 519, 520, 521, 522, 523, 524, 525], "beluga_ros_amcl_hpp": 476, "beluga_ros_beluga_ros_hpp": 480, "beluga_ros_laser_scan_hpp": 503, "beluga_ros_messages_hpp": 504, "beluga_ros_occupancy_grid_hpp": 515, "beluga_ros_particle_cloud_hpp": 518, "beluga_ros_tf2_eigen_hpp": 527, "beluga_ros_tf2_sophus_hpp": 529, "beluga_ros_vers": [504, 515, 527, 529], "beluga_rosamcl": [482, 483], "beluga_rosamclparam": [519, 520], "beluga_rosdetailalmost_equal_to": [523, 524, 525], "beluga_roslaserscan": [484, 485], "beluga_rosmsg": 507, "beluga_rosoccupancygrid": [486, 487], "beluga_rosoccupancygridvaluetrait": [521, 522], "beluga_rosth": [476, 503, 504, 515, 518], "beluga_sensor_beam_model_hpp": 31, "beluga_sensor_bearing_sensor_model_hpp": 33, "beluga_sensor_data_dense_grid_hpp": 119, "beluga_sensor_data_landmark_map_hpp": 235, "beluga_sensor_data_laser_scan_hpp": 239, "beluga_sensor_data_linear_grid_hpp": 243, "beluga_sensor_data_ndt_cell_hpp": 261, "beluga_sensor_data_occupancy_grid_hpp": 266, "beluga_sensor_data_regular_grid_hpp": 293, "beluga_sensor_data_sparse_value_grid_hpp": 305, "beluga_sensor_data_value_grid_hpp": 436, "beluga_sensor_hpp": 299, "beluga_sensor_landmark_sensor_model_hpp": 237, "beluga_sensor_likelihood_field_model_hpp": 241, "beluga_sensor_ndt_sensor_model_hpp": 262, "beluga_testing_hpp": 427, "beluga_testing_sophus_matchers_hpp": 301, "beluga_testing_sophus_printers_hpp": 303, "beluga_type_traits_hpp": 434, "beluga_type_traits_particle_traits_hpp": 275, "beluga_type_traits_strongly_typed_numeric_hpp": 311, "beluga_type_traits_tuple_traits_hpp": 430, "beluga_types_landmark_detection_types_hpp": 233, "beluga_utility_forward_like_hpp": 177, "beluga_utility_indexing_iterator_hpp": 230, "beluga_views_elements_hpp": 168, "beluga_views_hpp": 438, "beluga_views_particles_hpp": 277, "beluga_views_random_intersperse_hpp": 289, "beluga_views_sample_hpp": 297, "beluga_views_take_evenly_hpp": 423, "beluga_views_take_while_kld_hpp": 425, "beluga_views_zip_hpp": 440, "belugaactionsdetailassign_fn": [336, 337], "belugaactionsdetailnormalize_base_fn": [338, 339], "belugaactionsdetailnormalize_fn": [340, 341], "belugaactionsdetailpropagate_base_fn": [342, 343], "belugaactionsdetailpropagate_fn": [344, 345], "belugaactionsdetailreweight_base_fn": [346, 347], "belugaactionsdetailreweight_fn": [348, 349], "belugaamcl": [42, 43], "belugaamclparam": [312, 313], "belugabasedensegrid2": [44, 45], "belugabaselaserscan": [46, 47], "belugabaselineargrid2": [48, 49], "belugabaseoccupancygrid2": [50, 51], "belugabaseregulargrid2": [52, 53], "belugabeammodelparam": [314, 315], "belugabeamsensormodel": [54, 55], "belugabearingmodelparam": [316, 317], "belugabearingsensormodel": [56, 57], "belugabresenham2i": [58, 59], "belugabresenham2ilin": [60, 61], "belugabresenham2ilineiter": [62, 63], "belugabresenham2ilineiteratorsentinel": [318, 319], "belugacirculararrai": [64, 65], "belugacommon_tuple_typ": [350, 351, 352], "belugadecay_tuple_lik": [353, 354, 355], "belugadetailcellhash": [356, 357], "belugadetailmake_from_state_fn": [358, 359], "belugadifferentialdrivemodel": [66, 67], "belugadifferentialdrivemodelparam": [320, 321], "belugaexponentialfilt": [68, 69], "belugahas_common_tuple_typ": [360, 361], "belugahas_single_el": [362, 363], "belugainclud": [122, 123, 124, 125, 126, 127, 128], "belugaindexingiter": [70, 71], "belugais_tuple_lik": 364, "belugalandmarkbearingdetect": [322, 323], "belugalandmarkmap": [72, 73], "belugalandmarkmodelparam": [324, 325], "belugalandmarkpositiondetect": [326, 327], "belugalandmarksensormodel": [74, 75], "belugalikelihoodfieldmodel": [76, 77], "belugalikelihoodfieldmodelparam": [328, 329], "belugamultivariate_distribution_trait": [365, 366, 367, 368, 369, 370, 371], "belugamultivariatenormaldistribut": [78, 79], "belugamultivariatenormaldistributionparam": [80, 81], "belugamultivariateuniformdistribut": [82, 83, 84, 85, 86, 87, 88], "belugandtcel": [330, 331], "belugandtmodelparam": [332, 333], "belugandtsensormodel": [89, 90], "beluganumer": [91, 92], "belugaomnidirectionaldrivemodel": [93, 94], "belugaomnidirectionaldrivemodelparam": [334, 335], "belugaparticle_trait": [372, 373], "belugapolici": [387, 388], "belugapoliciesdetailevery_n_fn": [374, 375], "belugapoliciesdetailevery_n_polici": [376, 377], "belugapoliciesdetailon_effective_size_drop_polici": [378, 379], "belugapoliciesdetailon_motion_fn": [380, 381], "belugapoliciesdetailon_motion_polici": [382, 383], "belugapoliciesdetailon_motion_policy_bas": [384, 385, 386], "belugapolicy_bas": [389, 390], "belugaray2d": [95, 96], "belugasparsevaluegrid": [97, 98], "belugaspatial_hash": [109, 110, 111, 112, 113, 114, 391], "belugastate_detailstate_fn": [392, 393], "belugastationarymodel": [99, 100], "belugath": [25, 31, 33, 37, 40, 119, 121, 164, 166, 171, 175, 177, 230, 233, 235, 237, 239, 241, 243, 247, 249, 251, 261, 262, 266, 268, 275, 280, 282, 291, 293, 305, 307, 309, 311, 425, 428, 430, 432, 436], "belugathrunrecoveryprobabilityestim": [101, 102], "belugatuple_index": [394, 395], "belugatuplecontain": [103, 104, 105], "belugatuplevector": 106, "belugavaluegrid2": [107, 108], "belugaviewsdetailas_common_tuple_indirect_fn": [396, 397], "belugaviewsdetailrandom_intersperse_fn": [398, 399], "belugaviewsdetailrandom_intersperse_view": [400, 401], "belugaviewsdetailsample_base_fn": [402, 403], "belugaviewsdetailsample_fn": [404, 405], "belugaviewsdetailsample_view": [406, 407], "belugaviewsdetailtake_evenly_fn": [408, 409], "belugaviewsdetailtake_while_kld_fn": [410, 411], "belugaviewsdetailzip_fn": [412, 413], "belugaweight_detailweight_fn": [414, 415], "benchmark_likelihood_field_model": 241, "bernoulli_distribut": 289, "best": [5, 6, 441], "better": [76, 104], "between": [25, 33, 64, 70, 101, 226, 228, 230, 237, 252, 288, 307, 312, 320, 334, 398, 464, 471, 473, 474, 476, 498, 519], "bibliographi": [273, 516], "bin_weight": 518, "binari": 3, "bind": [270, 378], "bind_back": [28, 29, 264, 270, 285, 288, 289, 295, 297, 423, 425], "bit": [78, 80, 306, 307], "bitset": [306, 307], "bitwis": [39, 40, 252], "black": [226, 464, 498], "blackwel": [41, 481, 531], "blob": 104, "blue": [226, 464, 498], "bodi": [1, 518], "bolic": 41, "bond": [442, 443, 448, 452, 468, 469, 471, 474], "bond_": [443, 448, 452, 459, 463, 469], "bond_beluga_amcl": [449, 453], "bond_nod": [443, 469], "bond_std": [443, 469], "bondcpp": [442, 443, 468, 469, 471], "book": 531, "bool": [16, 25, 29, 37, 39, 40, 44, 48, 50, 62, 64, 70, 78, 80, 104, 107, 119, 164, 173, 177, 230, 249, 252, 266, 270, 272, 275, 280, 282, 289, 297, 312, 318, 376, 378, 382, 385, 387, 388, 429, 430, 432, 443, 445, 448, 450, 452, 469, 476, 486, 515, 518, 519, 521, 524], "boolean": [50, 228, 266, 387, 473, 474], "boost": 356, "bootstrap": [4, 11], "border": [226, 464, 498], "borrow": [54, 56, 74, 76, 89], "both": [6, 17, 26, 31, 32, 33, 56, 60, 64, 74, 91, 171, 227, 228, 236, 237, 241, 252, 259, 261, 324, 330, 387, 439, 472, 473, 517, 518], "bound": [26, 54, 56, 74, 76, 83, 87, 89, 227, 250, 251, 252, 259, 342, 445, 450], "boundari": [72, 73, 226, 232, 235, 252, 464, 498], "boundarieslimit": 72, "box": [3, 83, 84, 87, 88, 226, 251, 464, 498], "boxth": [83, 87], "bresenham": [58, 60, 62, 162, 176, 227, 252, 290, 291, 318], "bresenham2i": [36, 37, 59, 60, 61, 62, 63, 95, 115, 180, 183, 184, 185, 186, 189, 192, 196, 197, 200, 209, 210, 211, 214, 215, 216, 220, 222, 227, 252, 291, 318, 319], "bresenham2ibresenham": [37, 227], "bresenham2ibresenham2i": 37, "bresenham2iinlin": 59, "bresenham2iinlineexplicit": 59, "bridg": 2, "brief": [26, 176, 259, 446, 458, 477, 492, 511], "bright": [474, 518], "broadcast": [443, 445, 448, 450, 452, 469], "broader": 4, "browser": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "bucket": [425, 471, 473, 474, 476, 519], "buffer": [442, 443, 444, 445, 448, 450, 452, 468, 469], "build": [1, 6, 472], "built": [441, 473, 474], "burgard": [41, 481, 531], "burn": 3, "c": [2, 27, 40, 115, 144, 167, 176, 179, 181, 182, 190, 194, 220, 223, 228, 252, 253, 350, 423, 430, 438, 441, 459, 461, 463, 530], "cach": [3, 104], "cache1": [422, 423], "calcul": [4, 24, 26, 31, 33, 56, 89, 109, 111, 113, 151, 163, 165, 166, 170, 171, 176, 227, 235, 237, 241, 252, 259, 270, 306, 307, 328, 378, 391, 473, 474], "calculate_covari": [170, 171, 252, 253, 255], "calculate_covariancesophu": 171, "calculate_weighted_sample_covari": 171, "call": [16, 25, 28, 42, 145, 172, 173, 176, 228, 279, 280, 376, 387, 410, 432, 513], "callab": 252, "callabl": [15, 20, 42, 66, 68, 93, 95, 99, 174, 227, 252, 296, 306, 342, 346, 391, 398, 400, 410, 424, 425], "callback": [443, 445, 448, 450, 452, 469], "callbackreturn": [443, 448, 452, 469], "calmost_equal_to": [477, 511], "calmost_equal_tostd": [477, 511], "cambridg": [41, 481, 531], "camcl": [477, 511], "camclimplement": [26, 259], "camclnode2d": 446, "camclnodelet2d": 446, "camclparamsstruct": [26, 259, 477, 511], "can": [1, 2, 3, 4, 5, 6, 12, 17, 19, 25, 28, 33, 42, 54, 56, 64, 70, 72, 74, 76, 104, 106, 228, 237, 252, 263, 269, 270, 284, 294, 296, 300, 336, 346, 387, 392, 410, 414, 429, 432, 473, 474, 518], "candid": 518, "cannot": [40, 261], "canon": 513, "capabl": 42, "capac": [104, 105, 181, 190, 432], "capacityconstexpr": 432, "caption": 4, "cardin": 289, "care": [3, 296], "carlo": [1, 2, 11, 25, 26, 42, 227, 252, 259, 312, 441, 475, 476, 477, 480, 482, 490, 492, 499, 506, 511, 519], "cartesian": [31, 46, 239], "cartograph": 6, "cas_common_tuple_indirect_fnutil": [26, 259], "case": [1, 3, 6, 28, 31, 33, 64, 101, 171, 237, 252, 314, 432, 474, 518], "cassert": 262, "cassign_fnimplement": [26, 259], "cast": [31, 95, 96, 181, 190, 262, 291], "castabl": [95, 227, 252, 290], "caststd": 291, "categori": [33, 37, 62, 70, 72, 181, 223, 232, 233, 235, 237, 252, 322, 326], "categorybeluga": [323, 327], "categorycategori": 233, "categorylandmarkcategori": 233, "catkin_make_isol": 5, "caus": 4, "cbasedensegrid2dens": [26, 259], "cbaselaserscanlas": [26, 259], "cbaselineargrid2linear": [26, 259], "cbaseoccupancygrid2occup": [26, 259], "cbaseregulargrid2regularli": [26, 259], "cbeammodelparamparamet": [26, 259], "cbeamsensormodelbeam": [26, 259], "cbearingmodelparamparamet": [26, 259], "cbearingsensormodelgener": [26, 259], "cbegin": [31, 33, 40, 64, 65, 181, 190, 237, 241, 262], "cbeginconstexpr": 40, "cbeluga": [227, 499], "cbeluga_amcl": 465, "cbeluga_ro": 499, "cbresenham2ibresenham": [26, 259], "ccellhash": [26, 259], "cciabatta": 227, "ccirculararrayan": [26, 259], "ccommon_tuple_typ": [26, 259], "ccommon_tuple_typemeta": [26, 259], "cdecay_tuple_lik": [26, 259], "cdecay_tuple_likemeta": [26, 259], "cdecltyp": 227, "cdetail": 227, "cdifferentialdrivemodelparamparamet": [26, 259], "cdifferentialdrivemodelsampl": [26, 259], "ceil": 425, "cell": [12, 14, 16, 19, 26, 36, 37, 44, 45, 48, 49, 50, 51, 52, 53, 60, 62, 85, 89, 95, 97, 98, 107, 108, 119, 163, 164, 227, 241, 243, 252, 259, 261, 262, 266, 291, 293, 305, 330, 331, 332, 436, 486, 487, 515, 521], "cell_at": 19, "cell_grid": 262, "cell_index": [97, 98, 305], "cell_is_valid": 291, "cell_near": [44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 119, 181, 190, 262, 266, 291, 293, 305, 486, 487], "cell_neareigen": [293, 305], "cell_posit": 291, "cellhash": [115, 200, 214, 227, 262, 357, 468, 469], "cellhasherdefinit": 262, "cells_data": [89, 90, 262], "cells_data_": 262, "cells_dataset": 262, "cells_dataspars": 89, "cells_matrix": 262, "cellsrang": [50, 52], "cend": [31, 33, 40, 64, 65, 181, 190, 237, 241, 262], "cendconstexpr": 40, "center": [99, 171, 241, 262, 328], "centroid": [48, 52, 95], "certain": [228, 269], "cevery_n_fnimplement": [26, 259], "cevery_n_policyimplement": [26, 259], "cexponentialfiltercal": [26, 259], "chain_inherit": 38, "chang": [264, 474], "changelog": 38, "chapter": [54, 66, 74, 76, 101, 320, 328], "character": 252, "charg": [473, 474], "chas_common_tuple_typ": [26, 259], "chas_common_tuple_typemeta": [26, 259], "chas_single_el": [26, 259], "chas_single_elementmeta": [26, 259], "chash": [26, 259], "cheap": 296, "cheapli": 387, "check": [5, 12, 26, 39, 40, 44, 48, 50, 70, 104, 107, 227, 252, 259, 360, 382, 384, 385, 429, 430, 515, 521], "checks_": 37, "choic": 5, "chrome": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "ciabatta": [176, 238, 239, 292, 293], "ciabatta_ciabatta_hpp": 38, "ciabatta_top": [38, 227, 239, 293], "cindexingiteratora": [26, 259], "circl": 171, "circuit": [280, 389], "circular": [25, 26, 39, 40, 64, 117, 148, 171, 176, 227, 228, 252, 259, 419, 421], "circular_arrai": [25, 37, 64, 116, 117, 148, 176, 419, 421], "circulararrai": [26, 37, 39, 40, 65, 115, 178, 180, 181, 183, 184, 187, 188, 189, 190, 191, 192, 193, 198, 200, 201, 202, 203, 209, 212, 214, 215, 216, 218, 219, 220, 222, 227, 228, 252, 259, 420, 476], "circulararrayan": [25, 40], "circulararraycirculararrai": 40, "circulararrayfeatureflag": [39, 40, 64, 252, 253, 254, 419, 421], "circulararrayfeatureflagscirculararrayfeatureflagsfeatur": 40, "circularli": [78, 249], "cis_tuple_likemeta": [26, 259], "cite": 249, "citeratorbresenham": [26, 259], "clamp": 428, "clandmarkbearingdetectionlandmark": [26, 259], "clandmarkmapbas": [26, 259], "clandmarkmodelparamparamet": [26, 259], "clandmarkpositiondetectionlandmark": [26, 259], "clandmarksensormodelgener": [26, 259], "claserscanthin": [477, 511], "class": [2, 3, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 118, 119, 120, 121, 163, 164, 165, 166, 170, 171, 172, 174, 175, 177, 226, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 280, 281, 282, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 336, 338, 340, 342, 344, 346, 348, 355, 358, 363, 365, 366, 367, 371, 372, 378, 380, 382, 384, 385, 387, 389, 391, 392, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 422, 423, 424, 425, 428, 429, 430, 431, 432, 435, 436, 439, 440, 442, 443, 444, 445, 464, 468, 469, 475, 476, 487, 498, 502, 503, 504, 505, 506, 513, 514, 515, 517, 518, 523, 526, 527, 528, 529], "classif": 41, "clear": [40, 64, 65, 104, 105, 181, 190, 432, 518], "clearconstexpr": 432, "clearvoid": 40, "client": [445, 450], "clikelihoodfieldmodellikelihood": [26, 259], "clikelihoodfieldmodelparamparamet": [26, 259], "clinebresenham": [26, 259], "close": [1, 33, 54, 171], "closest": 237, "closur": [28, 29, 173, 228, 264, 272, 285, 289, 295, 297, 336, 338, 340, 342, 344, 346, 348, 374, 380, 398, 404, 408, 410, 423, 425], "cloud": [31, 54, 76, 89, 241, 262, 443, 445, 448, 450, 452, 469, 480, 490, 492, 500, 506, 517, 518], "cluster": [252, 253, 257, 281, 282], "clustertag": [252, 281, 282], "clutter": 54, "cmake": 5, "cmake_from_state_fnfunct": [26, 259], "cmath": [30, 31, 32, 33, 236, 237, 238, 239, 240, 241, 292, 293, 306, 307, 424, 425, 514, 515, 517, 518], "cmultivariate_distribution_trait": [26, 259], "cmultivariate_distribution_traitsforward": [26, 259], "cmultivariatenormaldistributionmultivari": [26, 259], "cmultivariatenormaldistributionparammultivari": [26, 259], "cmultivariateuniformdistribut": [26, 259], "cmultivariateuniformdistributionprimari": [26, 259], "cndtamclnode2d": 446, "cndtcellrepresent": [26, 259], "cndtmodelparamparamet": [26, 259], "cndtsensormodelndt": [26, 259], "cnodelet": 465, "cnormalize_base_fnimplement": [26, 259], "cnormalize_fnimplement": [26, 259], "cnumeric_limit": [26, 227, 259], "cnumerichelp": [26, 259], "co": [239, 529], "coccupancygridthin": [477, 511], "code": [1, 3, 11, 21, 23, 28, 30, 32, 34, 36, 39, 116, 118, 120, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 165, 167, 170, 172, 174, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 356, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 457, 468, 475, 479, 490, 502, 514, 517, 526, 528], "coeff": 529, "coeffici": [171, 303], "coeffref": [171, 529], "cognit": 3, "coincid": 474, "col": [262, 302, 303], "colcon": 5, "collabor": [0, 44, 46, 48, 50, 52, 60, 97, 106, 107, 340, 344, 348, 360, 361, 362, 363, 364, 382, 387, 395, 400, 404, 406, 418, 421, 448, 450, 452, 484, 486], "collect": [2, 4], "color": [474, 517, 518], "color_rgba": 504, "colorrgba": [504, 517, 518], "colsatcompiletim": [247, 249, 367], "colsth": 302, "column": [247, 249, 302], "colwis": 262, "com": [0, 5, 31, 104, 241, 252, 350, 364, 392, 414, 518, 531], "combin": [39, 40, 241, 252, 328, 441, 468, 469, 518], "come": [2, 5, 7, 8, 9, 10, 532, 533, 534, 535], "command": 6, "comment": [226, 464, 498], "commerci": 0, "common": [4, 26, 170, 171, 227, 252, 259, 261, 262, 263, 264, 274, 284, 285, 294, 295, 296, 297, 350, 351, 360, 361, 372, 425, 429, 430, 432], "common_tupl": [104, 432, 440], "common_tuple_typ": [26, 115, 219, 220, 227, 252, 259, 351, 352, 429, 430], "common_tuple_type_t": [26, 66, 93, 99, 115, 121, 227, 252, 253, 257, 259, 268, 309, 429, 430], "common_tuple_type_tconveni": 430, "common_tuple_type_ttypenam": 430, "common_tuple_typemeta": 430, "common_typ": 350, "common_type_t": [289, 351, 430], "common_types_t": 350, "commun": [473, 474], "comnidirectionaldrivemodelparamparamet": [26, 259], "comnidirectionaldrivemodelsampl": [26, 259], "compar": [4, 78, 80, 164, 252, 300, 429, 432, 524], "compat": [6, 78, 228, 249, 441, 466, 472, 500, 506, 507], "compil": [3, 64, 289, 307], "complet": [4, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 101, 102, 105, 108, 110, 112, 114, 227, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 352, 354, 357, 359, 368, 369, 370, 373, 375, 377, 379, 381, 383, 386, 388, 390, 393, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 420, 449, 451, 453, 465, 483, 485, 487, 499, 520, 522, 525], "complex": [3, 4, 64, 171, 307], "complianc": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "compliant": 42, "compon": [2, 74, 171, 228, 466, 500], "compos": [3, 25, 38, 228, 264, 275, 285, 289, 295, 338, 340, 342, 344, 346, 348, 387, 398, 408, 410, 423, 425, 441, 442, 443, 446, 448, 452, 465, 466, 468, 469, 473, 474, 476], "composit": [29, 336], "comput": [3, 4, 12, 14, 26, 31, 40, 42, 44, 48, 50, 52, 54, 56, 58, 66, 70, 74, 76, 85, 93, 95, 97, 99, 101, 107, 170, 171, 227, 241, 252, 259, 262, 294, 332, 346, 350, 410, 430], "computation": [54, 76, 262], "compute_free_st": 251, "compute_offset": 297, "con_effective_size_drop_policyimplement": [26, 259], "con_motion_fnimplement": [26, 259], "con_motion_policy_bas": [26, 259], "con_motion_policy_baseprimari": [26, 259], "con_motion_policybas": [26, 259], "concept": [1, 2, 3, 25, 104, 118, 153, 228, 235, 242, 265, 269, 270, 292, 296], "concret": 38, "condens": 474, "condit": [4, 15, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 42, 54, 56, 66, 74, 76, 89, 93, 99, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 228, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 378, 387, 423, 424, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "conditional_t": [89, 262, 332], "confer": [41, 481, 531], "config": [445, 450, 451], "config_": [445, 450, 459, 463], "config_beluga_amcl": [445, 451], "config_callback": [445, 450, 451, 459, 461], "config_callbackvoid": 445, "config_curr": 445, "config_server_": [445, 450, 459, 463], "config_server_beluga_amcl": [445, 451], "config_server_std": 445, "configur": [33, 42, 54, 56, 66, 74, 76, 89, 93, 121, 237, 241, 262, 268, 441, 443, 445, 448, 450, 452, 469, 471, 473, 474, 482], "configured_": [445, 450, 459, 463], "configured_beluga_amcl": 451, "configured_bool": 445, "configured_flag": 445, "confus": 307, "conjunction_v": [275, 282, 392, 414], "connect": [12, 14, 44, 48, 50, 107, 119, 243, 443, 445, 448, 450, 452, 469], "consid": [5, 25, 64, 226, 235, 271, 312, 464, 471, 473, 474, 484, 498], "consist": [4, 16, 25, 170, 171, 228, 252, 422], "const": [12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 29, 31, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 164, 166, 170, 171, 173, 200, 214, 230, 235, 237, 239, 241, 243, 247, 248, 249, 250, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 280, 282, 285, 289, 291, 293, 295, 297, 300, 301, 302, 303, 305, 306, 307, 309, 311, 318, 319, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 366, 367, 368, 369, 370, 371, 374, 378, 380, 382, 383, 385, 386, 387, 392, 393, 396, 397, 398, 402, 404, 408, 410, 412, 414, 415, 423, 425, 428, 429, 430, 431, 432, 436, 440, 443, 445, 448, 449, 450, 451, 452, 453, 468, 469, 476, 482, 483, 484, 486, 487, 503, 505, 513, 515, 518, 524, 525, 526, 527, 528, 529], "const_": 275, "const_iter": [40, 64, 65, 181, 220], "const_iteratorconst": 40, "const_iteratorindexingiter": 40, "const_point": [40, 64, 65, 181, 220], "const_pointerconst": 40, "const_refer": [40, 64, 65, 181, 220], "const_referenceconst": 40, "const_reverse_iter": [40, 64, 65, 181, 220], "const_reverse_iteratorconst": 40, "const_reverse_iteratorstd": 40, "constant": [39, 40, 64, 121, 241, 252, 268, 471, 476, 519], "constarrow": 37, "constbeluga": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 73, 75, 77, 79, 81, 90, 94, 96, 98, 100, 105, 108, 110, 112, 114, 319, 331, 339, 341, 343, 345, 347, 349, 357, 359, 375, 379, 381, 399, 403, 405, 409, 411, 413, 485, 487], "constbeluga_amcl": 453, "constbeluga_ro": [483, 485, 487, 525], "constcalcul": 307, "constcast": 291, "constcheck": [119, 266], "constcompar": [249, 518], "constcomput": [37, 119, 121, 243, 266, 268, 291, 293, 305, 309], "constdefinit": [261, 262], "constderefer": 37, "constequ": 37, "constexpr": [25, 28, 29, 33, 38, 39, 40, 64, 68, 85, 91, 101, 104, 111, 113, 167, 168, 172, 173, 175, 177, 237, 247, 249, 251, 252, 261, 262, 263, 264, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 284, 285, 288, 289, 294, 295, 296, 297, 306, 307, 311, 330, 336, 338, 340, 342, 344, 346, 348, 358, 366, 367, 371, 374, 376, 378, 380, 382, 385, 387, 389, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 422, 423, 424, 425, 428, 429, 430, 432, 439, 440, 471, 515, 518, 521], "constexprnoexcept": [252, 429], "constfind": [33, 235, 237], "constgener": 249, "constget": [119, 243, 266, 305, 436, 469, 503, 515], "consthash": 262, "constinequ": 37, "constoverload": [173, 264, 270, 272, 285, 289, 295, 297, 423, 425, 440], "constptr": [445, 450, 451, 504], "constrain": 74, "constraint": [227, 251], "constraintth": 82, "constretriev": 266, "constreturn": [25, 31, 33, 37, 40, 235, 237, 241, 249, 262, 275, 432, 476], "construct": [18, 25, 26, 30, 31, 32, 33, 37, 40, 42, 54, 56, 58, 60, 62, 64, 66, 68, 70, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 104, 107, 109, 111, 113, 120, 121, 171, 227, 230, 236, 237, 240, 241, 249, 251, 252, 259, 262, 267, 268, 289, 297, 305, 307, 314, 316, 320, 324, 328, 332, 334, 400, 406, 431, 432, 436, 518, 524], "constructor": [18, 33, 37, 38, 40, 42, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 101, 104, 107, 109, 111, 113, 121, 173, 230, 235, 237, 241, 262, 268, 272, 280, 289, 297, 307, 311, 376, 385, 387, 400, 406, 432, 443, 448, 452, 469, 476, 482, 484, 486, 524], "constsampl": 297, "constsentinel": 37, "constsharedptr": [443, 448, 449, 452, 453, 469, 504], "constview": 239, "contain": [2, 3, 6, 12, 14, 25, 26, 28, 34, 35, 42, 44, 45, 48, 49, 50, 51, 64, 66, 70, 93, 97, 99, 101, 103, 104, 106, 107, 108, 111, 113, 119, 146, 149, 176, 181, 190, 226, 227, 228, 229, 230, 252, 259, 291, 305, 312, 378, 410, 419, 421, 437, 441, 464, 475, 476, 477, 482, 486, 487, 498, 499, 506, 511, 519], "containerscontain": 123, "containersinclud": [134, 135], "containsbool": 119, "content": 78, "contigu": [14, 64, 153, 176, 228, 242, 266, 288, 436], "continu": [262, 473, 474], "contribut": 5, "control": [3, 4, 15, 66, 67, 93, 94, 99, 100, 121, 268, 309], "control_act": [25, 42, 43], "control_action_typ": [93, 99], "control_action_window_": [25, 476], "control_actioncontrol": 42, "control_typ": [15, 66, 67, 93, 94, 99, 100, 121, 181, 220, 268, 309], "control_typecurr": [121, 268, 309], "control_typestd": [121, 268, 309], "controla": [66, 93, 99], "conveni": [39, 40, 91, 104, 252, 300, 429, 432], "converg": [101, 474], "convers": [3, 28, 29, 30, 31, 32, 33, 91, 104, 236, 237, 240, 241, 280, 387, 473, 474, 480, 490, 492, 500, 505, 511, 513, 518, 526, 527, 528, 529], "convert": [15, 28, 29, 31, 228, 235, 237, 247, 296, 307, 366, 367, 371, 471, 505, 513, 518, 526, 527, 528, 529], "convini": 468, "coordin": [12, 14, 16, 19, 44, 46, 48, 50, 52, 85, 97, 98, 107, 109, 239, 241, 243, 266, 293, 305, 307, 471, 473, 474, 518, 524], "coordinates_at": [14, 16, 19, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 181, 190, 241, 243, 266, 291, 293, 486, 487], "coordinates_atauto": 266, "coordinates_ateigen": [243, 293], "coordinates_for": [16, 19, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 181, 190, 251, 266, 293, 486, 487], "coordinates_forauto": [266, 293], "copi": [3, 22, 24, 25, 28, 29, 31, 33, 35, 37, 38, 40, 58, 60, 70, 78, 104, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 296, 297, 299, 301, 303, 305, 307, 309, 311, 396, 423, 425, 427, 428, 430, 431, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "copied_s": 432, "coplanar": 484, "copy_tag": [396, 397, 440], "copyabl": [107, 387], "copyassign": 18, "copyconstruct": 18, "copyright": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "core": [3, 36, 37, 40, 118, 119, 232, 233, 242, 243, 246, 247, 261, 262, 265, 266, 292, 293, 296, 304, 305, 468, 469, 526, 527], "correct": [4, 31, 248, 249, 252, 432, 443, 445, 448, 450, 452, 469, 473], "correl": 249, "correspond": [5, 12, 13, 16, 18, 50, 74, 78, 249, 263, 473, 474, 515, 521], "cos_apertur": [33, 237], "cos_theta": 241, "could": 289, "couldn": 262, "count": [104, 105, 172, 173, 228, 374, 375, 376, 377, 408, 409, 422, 423, 425, 432], "count_": 173, "count_if": [170, 171], "counter": 376, "counterpart": 472, "countnew": 104, "countnumb": 408, "countsiz": 104, "countth": 376, "cov": [261, 262], "covari": [25, 42, 43, 78, 79, 80, 81, 99, 170, 171, 181, 223, 247, 249, 252, 261, 262, 330, 366, 367, 371, 441, 443, 445, 448, 450, 452, 469, 471, 473, 474, 476, 482, 483, 513, 528, 529], "covariance_": 474, "covariance_i": 471, "covariance_matrix": 171, "covariance_typ": [78, 79, 181, 220, 227, 247, 248, 249, 252, 366, 367, 368, 369, 370, 371], "covariance_typeth": [247, 249], "covariance_typetypenam": [247, 249], "covariance_x": 471, "covariance_xi": 471, "covariance_xyaw": 471, "covariance_yaw": 471, "covariance_yyaw": 471, "covariancebeluga": 331, "covariancecovari": 261, "covarianceeigen": 261, "covarianceeigentorowmajor": [508, 509, 513, 528, 529], "covarianceeigentorowmajorarrai": 529, "covariancer": [78, 80], "covariancerowmajortoeigen": [508, 509, 513, 528, 529], "covariancerowmajortoeigensophu": 529, "covariances_dataset": 262, "covariancet": [25, 42, 43], "covariancettyp": 42, "cover": 3, "cp": [15, 17, 20], "cparticle_traitscommon": [26, 259], "cpo": [392, 414], "cpolicy_baseimplement": [26, 259], "cpolicyfn": 227, "cpolicyforward": [26, 259], "cpp": [241, 252, 350, 364, 392, 414], "cpprefer": [252, 350, 364, 392, 414], "cpropagate_base_fnimplement": [26, 259], "cpropagate_fnimplement": [26, 259], "crandom_intersperse_fnimplement": [26, 259], "crandom_intersperse_viewimplement": [26, 259], "crang": 227, "cray2dcast": [26, 259], "crbegin": [40, 64, 65, 181, 190], "crbeginconstexpr": 40, "crclcpp_lifecycl": 465, "creat": [17, 18, 26, 91, 171, 173, 227, 235, 252, 259, 272, 274, 275, 282, 297, 310, 311, 328, 336, 358, 374, 380, 473, 474, 476, 519], "create_timer_ro": 471, "crend": [40, 64, 65, 181, 190], "crendconstexpr": 40, "creweight_base_fnimplement": [26, 259], "creweight_fnimplement": [26, 259], "critic": 293, "cross": [33, 171, 237], "crtp": 38, "csample_base_fnimplement": [26, 259], "csample_fnimplement": [26, 259], "csample_viewimplement": [26, 259], "csentinelpast": [26, 259], "csparsevaluegridgener": [26, 259], "cspatial_hash": [26, 259], "cspatial_hashcal": [26, 259], "cstate_fncustom": [26, 259], "cstate_typ": 227, "cstationarymodela": [26, 259], "cstd": 227, "cstdint": [36, 37, 39, 40, 229, 230, 232, 233, 234, 235, 242, 243, 262, 265, 266, 306, 307, 435, 436], "ctake_evenly_fnimplement": [26, 259], "ctake_while_kld_fnimplement": [26, 259], "cthrunrecoveryprobabilityestimatorrandom": [26, 259], "ctuple_el": [26, 259], "ctuple_index": [26, 259], "ctuple_indexmeta": [26, 259], "ctuple_s": [26, 259], "ctuplecontain": [26, 259], "ctuplecontainerprimari": [26, 259], "ctuplevectorshorthand": [26, 259], "cube": 241, "cup": 4, "curious": 2, "current": [1, 4, 25, 40, 42, 64, 66, 70, 93, 99, 104, 228, 230, 272, 284, 294, 346, 376, 385, 386, 432, 441, 443, 445, 448, 450, 452, 469, 471, 473, 474, 476, 482, 519], "current_": 173, "current_orient": [121, 268], "current_point_": 37, "currentth": 385, "curri": 38, "cursor": [70, 71, 230, 297], "cursor_": 230, "custom": [17, 25, 42, 252, 281, 392, 414, 476, 482, 513], "cvaluegrid2gener": [26, 259], "cvaluetraitstrait": [477, 511], "cweight_fncustom": [26, 259], "cwisesqrt": 249, "cycl": [3, 252], "cyril": [41, 481, 531], "czip_fnimplement": [26, 259], "d": [0, 1, 6, 18, 27, 31, 41, 115, 179, 182, 183, 191, 194, 220, 223, 253, 459, 463, 481, 493, 531], "d1": [89, 183, 223, 261, 262, 330, 331, 332], "d1beluga": 333, "d1doubl": 262, "d1scale": 262, "d2": [89, 183, 223, 261, 262, 330, 331, 332], "d2beluga": 333, "d2doubl": 262, "d2scale": 262, "dark": [226, 464, 498], "dash": [226, 464, 498], "data": [3, 6, 12, 14, 16, 26, 31, 33, 40, 41, 42, 44, 46, 48, 50, 52, 64, 65, 72, 97, 98, 107, 108, 171, 176, 183, 191, 227, 232, 233, 237, 240, 241, 250, 251, 252, 259, 262, 320, 322, 326, 328, 330, 332, 334, 367, 468, 469, 473, 474, 482, 484, 486, 487, 493, 495, 500, 502, 503, 514, 515], "data_": [40, 305, 436], "data_at": [12, 14, 44, 45, 48, 49, 50, 51, 97, 98, 107, 108, 119, 183, 191, 243, 262, 266, 305, 486, 487], "data_atauto": [119, 243, 266], "data_atstd": 305, "data_near": [12, 44, 45, 48, 49, 50, 51, 97, 98, 107, 108, 119, 183, 191, 241, 305, 486, 487], "data_nearauto": 119, "data_nearstd": 305, "dataaggreg": 64, "dataconst": [305, 436, 515], "dataconstexpr": 40, "datagrid": [97, 107], "datainclud": 142, "datalikelihood_field_model": 140, "dataset": 262, "datatyp": [26, 33, 72, 153, 176, 227, 234, 235, 237, 252, 259], "date": [5, 471, 473, 474], "dbuild_test": 5, "debug": [261, 330], "decai": [26, 227, 252, 259, 353, 429, 430, 471, 473, 474, 476, 519], "decay_t": [26, 29, 115, 219, 220, 227, 252, 259, 264, 275, 282, 285, 295, 338, 340, 342, 344, 346, 348, 350, 351, 354, 363, 372, 392, 395, 414, 429, 430], "decay_tuple_lik": [26, 115, 219, 220, 227, 252, 259, 275, 354, 355, 429, 430], "decay_tuple_like_t": [252, 253, 257, 275, 429, 430, 431, 432], "decay_tuple_like_tconveni": [275, 430], "decay_tuple_like_ttypenam": [275, 430], "decay_tuple_likemeta": 430, "decid": [228, 471, 473, 474, 476, 519], "declar": [18, 25, 26, 227, 247, 249, 252, 259, 264, 270, 280, 285, 295, 365, 387], "declare_common_param": 471, "declare_paramet": 471, "decltyp": [25, 29, 37, 38, 70, 164, 167, 168, 227, 230, 239, 252, 275, 282, 285, 289, 297, 372, 392, 414, 429, 430, 432, 476, 518], "declval": [70, 230, 275, 282, 289, 297, 372], "decreas": 518, "decrement": [70, 230], "dedu": 58, "deduc": [248, 249, 252], "deduct": [106, 248, 249, 250, 251, 252, 431, 432], "default": [6, 18, 26, 37, 38, 40, 58, 60, 62, 64, 70, 78, 80, 91, 95, 97, 104, 106, 109, 227, 230, 249, 252, 259, 263, 264, 269, 280, 284, 285, 289, 291, 294, 295, 297, 305, 307, 311, 338, 340, 342, 344, 348, 378, 387, 398, 400, 406, 410, 424, 425, 431, 432, 445, 450, 451, 473, 474, 476, 482], "default_config_": [445, 450, 459, 463], "default_config_beluga_amcl": [445, 451], "default_config_default": 445, "default_random_engin": [289, 297, 398, 400, 406], "defaultbeluga": [59, 61, 63, 65, 71, 79, 81, 92, 98, 105, 110, 388, 401, 407], "defaultconstruct": [37, 249, 305], "defaultdefault": [37, 40, 230, 280, 289, 297, 307, 311, 432], "defer": 38, "defin": [2, 4, 13, 16, 17, 19, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 44, 46, 48, 50, 52, 61, 65, 70, 79, 95, 106, 117, 119, 121, 145, 164, 166, 168, 171, 172, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 269, 270, 271, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 340, 344, 348, 392, 414, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 449, 451, 453, 469, 471, 476, 480, 503, 504, 513, 515, 518, 527, 529], "definit": [25, 29, 31, 33, 37, 40, 119, 121, 164, 166, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 280, 282, 285, 289, 291, 293, 295, 297, 301, 305, 307, 309, 311, 423, 425, 428, 430, 432, 436, 440, 443, 445, 469, 476, 503, 504, 515, 518, 527, 529], "degeneraci": [42, 482], "degrad": [54, 252], "degre": [3, 518], "delai": [471, 474], "delet": [38, 289], "delta": [121, 249, 268, 272], "delta_bear": 268, "delta_rot_hat": 268, "denot": [226, 464, 498], "dens": [12, 14, 44, 118, 153, 176, 227, 243, 252], "dense_grid": [44, 153, 176, 242, 243], "densegrid2": [14, 44, 273], "densiti": [18, 518], "dep": 5, "depend": [21, 23, 28, 30, 32, 33, 34, 36, 39, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 468, 469, 475, 479, 502, 514, 517, 526, 528], "depict": 474, "depriv": 471, "depth": 6, "derefer": [62, 70, 423, 439], "deriv": [26, 45, 47, 49, 51, 53, 107, 108, 118, 119, 181, 183, 185, 187, 190, 191, 193, 196, 199, 200, 201, 209, 213, 214, 215, 227, 238, 239, 242, 243, 246, 250, 251, 252, 259, 265, 266, 292, 293, 366, 367, 371], "derivedconcret": [44, 46, 48, 50, 52], "describ": [44, 46, 48, 50, 52, 74, 228, 473, 474], "descript": [21, 23, 26, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 116, 118, 120, 163, 165, 167, 170, 172, 174, 176, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 259, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 446, 448, 450, 452, 458, 468, 471, 475, 477, 479, 482, 484, 486, 492, 502, 505, 506, 507, 511, 513, 514, 517, 519, 521, 523, 524, 526, 528], "descriptor": 471, "design": [172, 269, 271], "desir": 269, "destroi": 235, "destructor": [42, 54, 56, 60, 64, 66, 68, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 101, 104, 107, 109, 111, 113, 376, 385, 400, 406, 482, 484, 486, 524], "detail": [21, 23, 25, 26, 28, 29, 30, 32, 34, 36, 38, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 115, 116, 118, 120, 163, 165, 167, 170, 172, 173, 174, 176, 184, 192, 200, 202, 203, 210, 214, 216, 217, 218, 223, 227, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 274, 275, 276, 278, 280, 281, 284, 285, 286, 288, 289, 290, 292, 294, 295, 296, 297, 298, 300, 302, 304, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 437, 439, 440, 442, 444, 446, 448, 450, 452, 458, 465, 468, 469, 475, 476, 477, 479, 482, 484, 486, 488, 492, 493, 495, 497, 499, 502, 504, 505, 506, 507, 511, 513, 514, 517, 518, 519, 521, 523, 524, 525, 526, 528], "detect": [26, 32, 33, 56, 57, 72, 74, 75, 121, 227, 228, 232, 233, 235, 236, 237, 252, 259, 268, 271, 272, 320, 322, 326, 334, 378, 382, 385], "detection_bearing_in_robot": 237, "detection_bearing_in_sensor": [33, 72, 73, 183, 223, 233, 235, 322], "detection_bearing_in_sensorbear": 233, "detection_bearing_in_sensorbeluga": 323, "detection_bearing_in_sensorlandmarkbearing3": 233, "detection_bearing_in_sensorth": 72, "detection_categori": [33, 72, 73, 235, 237], "detection_categoryth": 72, "detection_position_in_robot": [183, 223, 233, 235, 237, 326], "detection_position_in_robotbeluga": 327, "detection_position_in_robotdetect": 233, "detection_position_in_robotlandmarkposition3": 233, "detection_position_in_world": [72, 73, 235, 237], "detection_position_in_worldth": 72, "detection_range_in_robot": 237, "detection_weight": [33, 237], "detections2d": 74, "detectionslandmark": 56, "determin": 252, "develop": [5, 6], "deviat": [31, 33, 170, 171, 237, 241, 252, 314, 316, 324, 328, 473, 474], "diagnosic_updater_": [445, 450, 459, 463], "diagnosic_updater_beluga_amcl": 451, "diagnosic_updater_diagnost": 445, "diagnosic_updater_diagnostic_updat": 445, "diagnost": [445, 450, 473], "diagnostic_updat": [444, 445, 450, 451], "diagnosticarrai": 473, "diagnostics_msg": 473, "diagnosticstatuswrapp": [445, 450, 451], "diagram": [44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 448, 450, 452, 484, 486], "dictat": [473, 474], "did": [33, 237, 518], "dieter": [41, 481, 531], "diff": 473, "differ": [18, 37, 40, 62, 64, 70, 89, 91, 104, 230, 300, 307, 432, 518], "difference_typ": [37, 40, 62, 63, 64, 65, 70, 71, 104, 105, 183, 220, 230, 432], "difference_typediffer": 432, "difference_typeiter": 37, "difference_types": 40, "difference_typesign": 230, "difference_typestd": [37, 40, 230, 432], "differenti": [26, 66, 120, 121, 156, 176, 227, 228, 245, 252, 259, 441, 471], "differential_dr": [471, 473, 474], "differential_drive_model": [66, 156, 176, 244, 245, 320, 468, 469], "differentialdrivemodel": [2, 15, 26, 67, 115, 120, 121, 181, 183, 191, 200, 214, 215, 218, 220, 227, 228, 252, 259, 320, 468, 469, 476, 482], "differentialdrivemodeldifferentialdrivemodel": 121, "differentialdrivemodelinlin": 67, "differentialdrivemodelinlineexplicit": 67, "differentialdrivemodelparam": [66, 115, 120, 121, 183, 216, 219, 223, 252, 321], "differentialdrivemodelparamparamet": [121, 227], "differentialdrivemodelsampl": [121, 227], "differentialmotionmodel": [471, 474], "digit": 307, "dim": [262, 474, 518], "dimens": [261, 330], "dimension": [24, 26, 78, 151, 176, 227, 252, 259, 261, 262, 306, 330, 356, 475, 480, 482, 490, 492], "dims_out": 262, "direct": [64, 95, 291], "directional_statist": 171, "directli": [18, 21, 23, 28, 30, 32, 34, 36, 39, 101, 116, 118, 120, 163, 165, 167, 170, 172, 174, 229, 232, 236, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 422, 424, 429, 431, 433, 435, 437, 439, 475, 502, 513, 514, 517, 526, 528], "dirti": 31, "discard": [4, 46], "discret": [4, 18, 26, 32, 74, 152, 176, 227, 228, 236, 237, 252, 259, 299, 473, 474, 486, 515], "discrete_distribut": 297, "dispers": 171, "distanc": [24, 25, 40, 64, 70, 95, 121, 151, 163, 164, 176, 230, 235, 241, 252, 268, 271, 291, 312, 320, 328, 334, 385, 424, 432, 473, 474], "distance_funct": [163, 164, 241, 252], "distance_functiongiven": 252, "distance_map": [23, 24, 151, 176, 240, 241], "distance_threshold": [121, 183, 223, 268, 320, 334], "distance_thresholdbeluga": [321, 335], "distance_thresholddist": [121, 268], "distance_thresholddoubl": [121, 268], "distance_to": 289, "distance_vari": [121, 268], "distancefunct": [163, 164, 241, 252], "distancefunctiona": 252, "distancetyp": [164, 252], "distri": 476, "distribut": [3, 4, 11, 15, 18, 22, 24, 25, 26, 29, 31, 33, 35, 37, 38, 40, 42, 43, 78, 80, 81, 82, 83, 85, 87, 117, 119, 121, 146, 159, 164, 166, 168, 169, 171, 173, 175, 176, 177, 203, 218, 227, 228, 230, 233, 235, 237, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 259, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 286, 287, 289, 291, 293, 295, 296, 297, 299, 301, 303, 305, 307, 309, 311, 314, 330, 398, 402, 403, 404, 405, 407, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 441, 443, 445, 469, 471, 473, 474, 476, 480, 482, 483, 503, 504, 506, 515, 517, 518, 519, 527, 529], "distribution_": [249, 251, 289, 297], "distribution_typ": 18, "distributiona": [80, 406], "distributionparam": [121, 268], "distributionth": 406, "distrubut": 252, "div_hashed_valu": 307, "divers": [2, 4, 42, 473, 474, 476, 482, 519], "divid": [19, 107, 228, 263, 471], "djuric": 41, "do": [64, 291, 473, 474], "do_beamskip": 474, "doc": [307, 356], "document": [5, 22, 24, 28, 29, 31, 33, 35, 37, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 117, 119, 121, 164, 166, 167, 168, 171, 172, 173, 175, 176, 178, 180, 181, 183, 184, 187, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 226, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 253, 259, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 282, 284, 285, 287, 288, 289, 291, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 309, 311, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 422, 423, 424, 425, 427, 429, 430, 432, 434, 436, 438, 439, 440, 443, 445, 448, 450, 452, 458, 459, 464, 469, 470, 476, 480, 482, 484, 486, 492, 493, 498, 503, 506, 508, 511, 513, 515, 516, 517, 518, 519, 521, 523, 524, 527, 529], "doe": [2, 4, 18, 40, 64, 104, 226, 252, 296, 387, 464, 474, 498], "doesn": [38, 78, 97, 262, 474], "doi": 531, "don": [6, 28, 275, 291, 432], "dontaligncol": 303, "dot": [4, 33, 235, 237], "dot_product_a": 235, "dot_product_b": 235, "doubl": [12, 16, 19, 25, 31, 33, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 68, 69, 74, 76, 89, 91, 95, 96, 97, 98, 101, 102, 107, 108, 109, 110, 111, 113, 119, 121, 171, 175, 227, 237, 241, 251, 252, 261, 262, 264, 266, 268, 270, 281, 282, 289, 291, 293, 305, 306, 307, 312, 314, 316, 320, 324, 328, 330, 331, 332, 334, 338, 339, 340, 341, 378, 379, 398, 399, 400, 401, 410, 411, 424, 425, 428, 436, 469, 471, 476, 484, 486, 487, 503, 515, 518, 519, 527, 529], "doublenear": 301, "doubt": 5, "down": 3, "doxygen": [226, 464, 498], "draw": [4, 26, 36, 37, 58, 60, 62, 227, 252, 259, 296], "drawing_values_from_the_distribut": 249, "drift": [473, 474], "drive": [26, 66, 93, 120, 121, 156, 176, 227, 228, 245, 252, 259, 267, 268, 441, 471], "drop": [228, 269, 378], "due": 54, "durabl": 6, "dure": [4, 28, 101, 448, 450, 452], "dx_": 4, "dxspan_": 37, "dynam": [4, 262], "dynamic_reconfigur": [444, 445, 450], "dyspan_": 37, "e": [3, 15, 27, 64, 70, 91, 104, 111, 113, 115, 179, 182, 184, 192, 194, 230, 233, 252, 253, 300, 301, 322, 326, 459, 463, 493], "each": [4, 12, 18, 54, 104, 111, 113, 163, 164, 167, 170, 171, 178, 180, 181, 183, 184, 187, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 228, 241, 252, 263, 276, 289, 306, 307, 346, 398, 400, 410, 425, 432, 459, 471, 473, 474, 493, 518, 519], "eagerli": [28, 228, 336], "earli": 3, "easili": 4, "ecosystem": 472, "eff": [473, 474, 519], "effect": [4, 18, 24, 25, 28, 40, 64, 145, 151, 165, 176, 228, 252, 269, 270, 279, 471, 473, 474, 519], "effective_s": [40, 64, 65, 184, 192], "effective_sample_s": [23, 24, 151, 176, 252, 253, 255, 269, 270], "effective_sample_sizeauto": [166, 270], "effective_sizeconstexpr": 40, "effici": [2, 28, 35, 116, 146, 176, 252], "effort": 6, "eigen": [3, 12, 14, 16, 19, 26, 33, 36, 37, 44, 45, 48, 49, 50, 51, 52, 53, 58, 78, 83, 84, 87, 88, 89, 97, 98, 107, 108, 115, 118, 119, 121, 155, 171, 176, 181, 187, 193, 198, 200, 204, 212, 214, 216, 218, 219, 220, 222, 223, 227, 232, 233, 237, 241, 242, 243, 246, 247, 249, 250, 251, 252, 259, 261, 262, 265, 266, 268, 291, 292, 293, 300, 302, 303, 304, 305, 309, 330, 332, 356, 357, 366, 367, 370, 371, 427, 441, 443, 445, 448, 449, 450, 451, 452, 453, 468, 469, 480, 486, 487, 490, 492, 500, 513, 515, 518, 526, 527, 528, 529], "eigen3": [232, 233], "eigenbas": [26, 115, 181, 187, 193, 204, 212, 216, 218, 219, 220, 222, 223, 227, 246, 247, 249, 252, 259, 370], "eigenvalu": 249, "eigenvector": 249, "either": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 104, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 387, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 474, 476, 480, 503, 504, 515, 518, 527, 529], "ekumen": [0, 5, 22, 24, 25, 29, 31, 33, 35, 37, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "ekumenlab": 0, "elem": 262, "element": [26, 28, 64, 104, 144, 170, 171, 176, 227, 228, 252, 253, 255, 259, 282, 288, 300, 301, 302, 306, 362, 385, 392, 394, 398, 406, 408, 410, 414, 415, 422, 423, 424, 425, 429, 430, 432, 437, 438, 439, 440, 513], "elementconstexpr": [282, 430], "elementsconstexpr": 168, "elementsdefinit": 168, "elev": 241, "elif": [504, 515, 527, 529], "els": [25, 31, 33, 40, 171, 177, 230, 237, 249, 262, 264, 275, 285, 289, 297, 307, 425, 430, 432, 504, 515, 527, 529], "embed": [12, 14, 16, 19], "emit": 473, "emphas": 228, "emplace_back": [119, 262, 518], "empti": [4, 25, 40, 64, 65, 104, 105, 164, 184, 192, 251, 408, 422, 432, 442, 443, 444, 445, 448, 449, 450, 451, 468, 469, 473, 474, 476, 518], "emptyconstexpr": [40, 432], "en": [171, 249, 252, 350, 364, 392, 414, 518], "enabl": [29, 40, 64, 227, 247, 252, 297, 306, 307, 336, 387, 448, 450, 452, 473, 474, 476, 505, 511, 518, 519, 528, 529], "enable_borrowed_rang": [169, 283], "enable_if_t": [26, 29, 40, 64, 91, 111, 112, 113, 114, 115, 165, 166, 170, 171, 181, 187, 193, 200, 203, 204, 212, 214, 216, 218, 219, 220, 222, 223, 227, 246, 247, 252, 259, 264, 275, 280, 282, 285, 295, 306, 307, 311, 336, 338, 340, 342, 344, 346, 348, 350, 354, 355, 363, 366, 367, 368, 369, 370, 371, 387, 388, 392, 395, 410, 414, 425, 429, 430, 431, 432, 506, 517, 518], "enable_safe_rang": 283, "enable_tf_broadcast_": [443, 445, 448, 450, 452, 459, 463, 469], "enable_tf_broadcast_beluga_amcl": [449, 451, 453], "enable_tf_broadcast_bool": [443, 445, 469], "enable_tf_broadcast_wheth": [443, 445, 469], "encourag": 2, "end": [4, 26, 36, 37, 40, 60, 61, 62, 64, 65, 95, 104, 105, 171, 184, 192, 227, 235, 241, 259, 264, 285, 295, 297, 305, 318, 432, 518], "end_cursor": 297, "endauto": 37, "endconstexpr": [40, 432], "endfor": 4, "endif": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "enforc": 2, "engin": [83, 84, 85, 86, 87, 88, 251, 289, 297, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "engine_": [289, 297], "engineth": [83, 85, 87, 398, 400, 406], "enhanc": 101, "enough": 4, "ensur": [5, 423, 518], "entri": 97, "enum": [37, 39, 40, 50, 51, 58, 59, 252, 266, 486, 487], "enumcastoutofrang": 40, "enumer": [27, 39, 58, 163, 164, 182, 252, 256, 260, 265, 266, 422, 423], "enumeratorkrolloveronwrit": 252, "enumeratorkstandard": 58, "environ": [54, 76, 252], "epilogu": 176, "epsilon": [171, 252, 264, 410, 411, 424, 425, 428], "epsilonmaximum": 252, "epsilonse": 410, "equal": [18, 37, 62, 64, 70, 78, 80, 230, 252, 318, 358, 402, 477, 499, 511, 518, 523, 524], "equal_to": [477, 499, 511, 517, 518, 523, 524], "equalitycompar": 18, "equat": 4, "equip": 6, "equival": [64, 252, 350, 439, 474, 477, 499, 500, 511, 517, 518, 523, 524], "eras": 252, "erasur": 3, "erf": 31, "ericniebl": 104, "error": [33, 72, 169, 235, 237, 252, 261, 283, 300, 316, 324, 448, 450, 452, 471, 473, 474, 476, 504, 515, 519, 527, 529], "error_": 37, "ess": [24, 25, 145, 151, 165, 166, 176, 228, 252, 269, 270, 279, 378], "estim": [4, 6, 23, 24, 25, 26, 42, 66, 93, 99, 101, 121, 151, 176, 227, 252, 253, 255, 259, 268, 309, 428, 441, 443, 445, 448, 449, 450, 451, 452, 453, 469, 471, 473, 474, 476, 482, 518, 519], "estimatea": [448, 450, 452], "estimated_pos": 171, "estimatestd": [25, 171, 476], "estimation_typ": [25, 42, 43], "eta_hit": 31, "eta_short": 31, "eth": 300, "eugen": 58, "ev": [445, 450, 451], "eval": 171, "evalu": [28, 42, 228, 387, 482], "even": [1, 3, 6, 74, 432], "evenli": [19, 107, 228, 422, 471, 473, 474], "eventu": 6, "everi": [18, 25, 145, 172, 173, 176, 228, 252, 279, 284, 376], "every_n": [25, 145, 176, 228, 278, 279, 374, 376, 476], "every_n_fn": [25, 26, 115, 172, 173, 200, 214, 227, 259, 375, 476], "every_n_fnimplement": [173, 227], "every_n_fninlin": 375, "every_n_polici": [26, 115, 172, 173, 184, 192, 200, 214, 227, 259, 377], "every_n_policyconstexpr": 173, "every_n_policyimplement": [173, 227], "every_n_policyinlin": 377, "every_n_policyinlineexplicit": 377, "every_nconstexpr": [25, 173, 476], "every_npolici": [25, 173], "evolv": 228, "exact": [85, 432], "exactli": [104, 423], "exampl": [1, 2, 6, 226, 252, 464, 498], "except": [6, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 42, 64, 78, 80, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 448, 450, 452, 469, 471, 476, 480, 482, 503, 504, 515, 518, 527, 529], "exec": 5, "execut": [25, 26, 42, 43, 227, 259, 263, 264, 284, 285, 294, 295, 338, 340, 342, 344, 346, 348, 441, 443, 445, 448, 450, 452, 468, 469, 471, 473, 474, 476, 482, 483], "execution_polici": [25, 42, 43, 471, 473, 474, 476, 482, 483], "execution_policy_": [25, 476], "execution_policy_vari": [443, 445, 448, 450, 476, 482, 483, 493, 496], "execution_policy_variantbeluga_amcl": [449, 451], "execution_policy_variantexecut": 476, "execution_policy_variantget": [443, 445], "execution_policy_variantstd": 476, "execution_policypolici": 42, "execution_policyvari": 482, "executionpolici": [25, 43, 178, 187, 188, 193, 196, 201, 205, 209, 215, 221, 227, 264, 285, 295, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 468, 469], "executionpolicyan": [338, 342, 346], "executionpolicyexecut": 42, "executionpolicyvari": [452, 468, 469], "executionpolicyvariantbeluga_amcl": 453, "executionpolicyvariantget": 469, "executionpolicyvariantstd": 469, "executionpolicyvariantsupport": 469, "exercis": 3, "exhibit": 64, "exist": [1, 26, 64, 97, 104, 227, 252, 259, 262, 297, 338, 342, 346, 360, 361, 406, 424, 429, 430, 473, 474], "exp": [31, 33, 237, 241, 247, 261], "expect": [2, 31, 72, 171, 314, 432, 473, 474, 518], "expect_that": 300, "expens": [54, 235], "experi": 54, "explain": [226, 464, 498], "explicit": [31, 33, 37, 38, 40, 71, 121, 173, 175, 230, 237, 241, 249, 251, 268, 280, 289, 291, 297, 305, 307, 432, 436, 443, 469, 503, 515, 518], "exploit": 171, "explor": [228, 466, 500], "exponenti": [24, 26, 68, 151, 174, 175, 176, 227, 252, 259, 428, 471, 473, 474, 519], "exponential_filt": [23, 24, 68, 151, 176, 428], "exponentialfilt": [69, 115, 174, 175, 184, 192, 200, 202, 214, 216, 252, 428], "exponentialfiltercal": [175, 227, 428], "exponentialfilterconstexpr": 175, "exponentialfilterinlin": 69, "exponentialfilterinlineexplicit": 69, "express": [17, 18, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 336, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "extend": [2, 3, 74, 104, 228, 262], "extens": [505, 511, 513, 518, 526, 527, 528, 529], "extent": 12, "extern": [33, 233, 235, 237, 392, 414, 474, 499], "extra": [101, 432], "extract": [367, 402, 505, 528, 529], "extrapol": [64, 252], "extrins": [473, 474], "f": [15, 16, 20, 26, 27, 37, 39, 40, 65, 115, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 209, 212, 214, 215, 216, 218, 219, 220, 222, 227, 252, 253, 259, 420, 493], "face": 2, "factor": [4, 68, 171, 228, 263, 264, 338, 339, 340, 341], "factorth": 338, "fail": [249, 474], "fall": 252, "fals": [25, 37, 40, 64, 78, 80, 164, 252, 266, 307, 312, 376, 378, 385, 423, 440, 443, 445, 448, 450, 452, 469, 471, 473, 474, 476, 519], "false_typ": [29, 227, 275, 282, 297, 430], "famili": 4, "far_end_cel": 291, "far_end_pose_in_local_fram": 291, "farrai": 64, "fast": [432, 471, 473, 474, 476, 519], "fast_averag": 428, "fast_filter_": 428, "favor": 3, "feasibl": 262, "featur": [1, 39, 40, 56, 64, 252, 466, 472, 474], "few": [1, 2, 4, 6, 64, 241], "fewer": 1, "fibonacci": 307, "field": [26, 76, 152, 176, 227, 228, 240, 241, 252, 259, 299, 441, 474], "fifo": 64, "figur": 252, "file": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 448, 450, 452, 457, 482, 484, 486, 490, 519, 521, 523, 524], "filesystem": 262, "fill": [40, 64, 65, 187, 193, 226, 464, 498, 529], "fillvoid": 40, "filter": [4, 11, 24, 25, 26, 41, 42, 68, 74, 101, 151, 170, 174, 175, 176, 227, 228, 234, 235, 238, 239, 252, 259, 265, 266, 312, 422, 423, 424, 428, 443, 445, 448, 450, 452, 469, 471, 476, 481, 482, 484, 500, 503, 518, 519, 531], "filter_funct": 423, "final": [311, 443, 448, 452, 469], "find": [6, 33, 72, 97, 235, 237, 262, 305, 429, 430], "find_closest_bearing_landmark": [33, 72, 73, 187, 193, 235], "find_closest_bearing_landmarkstd": [33, 235], "find_nearest_landmark": [72, 73, 187, 193, 235, 237], "find_nearest_landmarkstd": [235, 237], "finder": [26, 30, 31, 54, 76, 89, 152, 176, 227, 228, 240, 241, 252, 259, 262, 299], "finit": [12, 289], "firefox": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "first": [1, 5, 6, 31, 37, 40, 60, 64, 65, 95, 104, 105, 164, 241, 280, 392, 408, 422, 432, 445, 450, 473, 474], "first_": 297, "first_map_onli": [473, 474], "first_rot": [121, 268], "first_rotation_param": 121, "firstiter": 64, "fit": [40, 64, 226, 464, 498], "fit_point": 262, "fix": [37, 62, 64, 518], "flag": [39, 40, 42, 64, 252, 450, 473, 482], "flatland": 6, "flip": 3, "flipped_rot": [121, 268], "float": [252, 261, 330, 473, 474, 503, 517, 518], "floating_point_rang": 471, "floor": [293, 306, 307], "floor_and_fibo_hash": [306, 307], "floor_and_fibo_hashconstexpr": 307, "flow": 3, "fmod": 518, "fn": [15, 20, 29, 202, 216, 227, 280, 285, 288, 289, 336, 337, 342, 343, 344, 345, 387, 388, 389, 390, 398, 399, 401], "fn_": 289, "fn_return_": 289, "fna": [342, 398, 400], "fnfn": 398, "fnthe": 400, "focu": 11, "follow": [4, 5, 6, 15, 17, 18, 20, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 226, 268, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 432, 441, 448, 450, 452, 464, 482, 484, 486, 498, 519, 521, 523, 524], "footprint": [33, 237], "forc": [25, 42, 473, 474, 476, 482], "force_upd": [25, 42, 43, 187, 193, 476, 482, 483, 493, 495], "force_update_": [25, 476], "force_updatevoid": [25, 476], "foremost": 6, "form": [171, 252], "format": 303, "formula": [31, 241, 473, 474], "fortun": 6, "forward": [70, 121, 167, 168, 177, 227, 230, 252, 264, 268, 270, 280, 282, 285, 289, 295, 297, 311, 365, 387, 392, 393, 398, 400, 414, 415, 416, 425, 430, 440, 518], "forward_iter": [37, 62], "forward_iterator_tag": [37, 62], "forward_lik": [176, 252, 253, 255, 281, 282], "forward_likeconstexpr": 177, "forwhich": [226, 464, 498], "found": [1, 17, 72, 392, 414, 429, 430, 473, 474], "fox": [41, 481, 531], "fox01": [473, 474, 531], "fr": 58, "fraction": 252, "frame": [13, 16, 33, 46, 50, 51, 54, 56, 72, 74, 76, 89, 95, 185, 187, 232, 233, 235, 237, 239, 251, 252, 266, 316, 322, 326, 330, 471, 473, 474, 482, 484, 486, 487, 503, 504, 506, 515], "frame_id": [473, 474, 504, 506], "frame_idfram": 506, "frameframecoordin": 266, "frameplan": 50, "framework": 1, "free": [16, 17, 50, 58, 85, 95, 266, 515, 521], "free_at": [16, 50, 51, 187, 193, 266, 291, 486, 487], "free_atbool": 266, "free_cel": [16, 50, 51, 187, 193, 251, 266, 486, 487], "free_cellsauto": 266, "free_near": [16, 50, 51, 187, 193, 266, 486, 487], "free_nearbool": 266, "free_states_": 251, "friend": [29, 37, 40, 60, 61, 65, 70, 71, 79, 230, 249, 261, 280, 289, 297, 330, 331, 336, 389], "from": [3, 4, 13, 16, 18, 24, 26, 31, 37, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 121, 151, 163, 167, 171, 176, 226, 227, 228, 230, 237, 241, 246, 247, 249, 252, 259, 264, 268, 274, 275, 285, 288, 289, 295, 296, 297, 300, 306, 307, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 424, 431, 432, 441, 443, 445, 448, 450, 452, 464, 469, 471, 473, 474, 476, 482, 484, 486, 498, 505, 518, 519, 521, 523, 524, 528, 529], "from_valu": 471, "from_vector": [187, 193, 247, 249, 366, 367, 368, 369, 370, 371], "from_vectorstat": 247, "frommsg": [505, 508, 509, 513, 528, 529], "frommsgvoid": 529, "front": [40, 64, 65, 187, 193, 252], "frontconstexpr": 40, "full": [3, 40, 64, 65, 95, 187, 193, 252, 474], "fullconstexpr": 40, "fulli": [6, 252], "function": [3, 4, 6, 17, 18, 26, 27, 28, 29, 31, 33, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 121, 163, 165, 170, 173, 182, 227, 228, 237, 241, 248, 250, 252, 256, 259, 260, 262, 268, 270, 272, 274, 275, 280, 282, 284, 288, 289, 293, 294, 297, 300, 302, 306, 309, 310, 311, 318, 330, 336, 338, 340, 342, 344, 346, 348, 350, 353, 356, 358, 360, 362, 364, 366, 367, 371, 374, 376, 378, 380, 382, 385, 387, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 424, 429, 430, 431, 432, 447, 448, 450, 452, 460, 468, 469, 478, 482, 484, 486, 494, 500, 505, 506, 510, 511, 512, 513, 517, 518, 521, 524, 526, 528, 529], "functor": [2, 518, 524], "further": [11, 54, 76, 95], "furthermor": [3, 6], "futur": [18, 471, 473, 474], "g": [3, 12, 14, 16, 18, 19, 37, 39, 40, 64, 65, 104, 252, 253, 459, 461, 463, 518], "g1": 18, "g2": 18, "gap": 2, "gaussian": [31, 99, 241, 314, 328, 473, 474], "ga\u0161per": 38, "gen": [121, 268, 289, 309], "gener": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "generatoran": [78, 80], "generatorth": [78, 80], "gentle2009computationalstatist": 249, "geometri": [232, 233, 250, 251], "geometry_msg": [442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 468, 469, 471, 473, 474, 504, 505, 528, 529], "get": [4, 39, 40, 44, 48, 50, 97, 107, 111, 167, 168, 235, 252, 253, 255, 266, 282, 289, 297, 307, 330, 392, 393, 430, 432, 443, 445, 448, 450, 452, 469, 473, 474, 484, 486, 515], "get_default_neighbors_kernel": [262, 332], "get_execution_polici": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "get_execution_policyauto": 469, "get_execution_policystat": [443, 445], "get_initial_estim": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "get_initial_estimateauto": [443, 445, 469], "get_map_client_": [445, 450, 459, 463], "get_map_client_beluga_amcl": 451, "get_map_client_map": 445, "get_map_client_ro": 445, "get_motion_model": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "get_motion_modelauto": [443, 445, 469], "get_random_engin": [285, 289, 297, 398, 399, 400, 401, 406, 407], "get_random_state_gener": 25, "get_sensor_model": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "get_sensor_modelauto": [443, 445], "get_sensor_modelbeluga": 469, "getconstexpr": 40, "getmap": [444, 445, 473], "getsimpleextentdim": 262, "getspac": 262, "getyaw": [515, 529], "giorgio": [41, 481, 531], "git": 5, "github": [5, 31, 104, 241, 518], "given": [4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 33, 39, 40, 42, 44, 48, 50, 52, 64, 66, 68, 70, 72, 78, 93, 95, 97, 99, 107, 109, 111, 113, 121, 165, 166, 170, 171, 175, 227, 228, 230, 235, 237, 243, 249, 252, 259, 263, 266, 268, 270, 274, 275, 288, 291, 293, 294, 296, 297, 305, 307, 309, 342, 346, 350, 358, 410, 422, 425, 430, 439, 443, 445, 448, 450, 452, 469, 476, 482, 506, 515, 521], "global": [13, 16, 443, 445, 448, 450, 471, 473, 474], "global_frame_id": [471, 473, 474], "global_loc": 473, "global_localization_callback": [443, 445, 448, 449, 450, 451, 459, 461], "global_localization_callbackbool": 445, "global_localization_callbackvoid": 443, "global_localization_server_": [443, 445, 448, 450, 459, 463], "global_localization_server_beluga_amcl": [449, 451], "global_localization_server_glob": [443, 445], "global_localization_server_rclcpp": 443, "global_localization_server_ro": 445, "glpuga": [31, 241], "gmock": [300, 301], "go": [21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 465, 467, 468, 469, 475, 476, 479, 480, 499, 501, 502, 503, 514, 515, 517, 518, 526, 527, 528, 529], "goe": 2, "golden": 307, "good": [1, 4, 31, 252, 314], "googl": 531, "googletest": 300, "govern": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "grai": [226, 464, 498], "graph": [21, 23, 28, 30, 32, 34, 36, 39, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 468, 475, 479, 502, 514, 517, 526, 528], "graphic": [227, 465, 499], "great": 3, "greater": [46, 64, 104, 408, 422], "green": [226, 464, 498], "grid": [12, 14, 16, 19, 26, 31, 41, 44, 48, 50, 52, 54, 55, 76, 77, 85, 86, 89, 95, 96, 97, 107, 118, 119, 153, 176, 227, 241, 242, 243, 250, 251, 252, 259, 261, 262, 265, 266, 291, 292, 293, 304, 305, 435, 436, 441, 443, 445, 448, 450, 452, 469, 473, 474, 477, 481, 482, 486, 487, 499, 511, 514, 515, 521, 531], "grid_": [31, 291, 515], "gridgrid": 95, "gridnew": 76, "gridoccup": [54, 76, 486], "gridth": 85, "grisetti": [41, 481, 531], "ground": 1, "group": [109, 171, 307, 441], "gsb07": [473, 474, 531], "gt": [21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 49, 51, 53, 55, 57, 58, 61, 62, 63, 65, 66, 68, 71, 72, 75, 77, 79, 81, 84, 86, 88, 90, 92, 93, 96, 98, 99, 101, 105, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 320, 322, 324, 326, 328, 331, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 357, 359, 368, 369, 370, 373, 374, 376, 378, 380, 383, 386, 388, 389, 390, 392, 393, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 410, 412, 414, 415, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 464, 468, 469, 471, 475, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 493, 495, 497, 498, 499, 502, 503, 504, 505, 506, 511, 513, 514, 515, 517, 518, 519, 521, 525, 526, 527, 528, 529], "gtest": [155, 176, 300, 427], "guard": [169, 283], "guid": [106, 248, 249, 250, 251, 252, 431, 432], "guidelin": 432, "h": [27, 38, 115, 179, 182, 194, 195, 208, 253, 262, 300, 301, 442, 443, 444, 445, 459, 461, 468, 469, 471, 493, 504, 513, 514, 515, 527, 528, 529], "h5": 262, "h5cpp": [262, 468, 469], "h5f_acc_rdonli": 262, "h5file": 262, "ha": [1, 18, 74, 104, 177, 249, 252, 272, 382, 385], "hack": 31, "half": [269, 471, 473, 474, 519], "handl": 171, "handle_map_with_default_initial_pos": [445, 450, 451, 459, 461], "handle_map_with_default_initial_posevoid": 445, "happen": [25, 312, 471, 473, 474, 476, 518, 519], "hardwar": 6, "has_common_tuple_typ": [26, 115, 227, 252, 259, 361, 429, 430], "has_common_tuple_type_v": [252, 253, 258, 429, 430], "has_common_tuple_type_vconstexpr": 430, "has_common_tuple_type_vconveni": 430, "has_common_tuple_typemeta": 430, "has_member_st": [282, 392], "has_member_state_v": 282, "has_member_variable_st": [282, 392], "has_member_variable_state_v": 282, "has_member_variable_weight": [282, 414], "has_member_variable_weight_v": 282, "has_member_weight": [282, 414], "has_member_weight_v": 282, "has_non_member_st": [282, 392], "has_non_member_state_v": 282, "has_non_member_weight": [282, 414], "has_non_member_weight_v": 282, "has_single_el": [26, 115, 227, 252, 259, 282, 363, 414, 429, 430], "has_single_element_v": [252, 253, 258, 429, 430], "has_single_element_vconstexpr": 430, "has_single_element_vconveni": 430, "has_single_elementmeta": [282, 430], "has_stat": 275, "has_state_v": 275, "has_valu": [262, 266], "has_weight": 275, "has_weight_v": 275, "hash": [24, 26, 42, 91, 109, 111, 113, 115, 151, 176, 200, 214, 227, 252, 259, 262, 306, 307, 310, 311, 356, 391, 410, 416, 417, 425], "hash_combin": 356, "hash_impl": [306, 307], "hash_implconstexpr": 307, "hasher": [42, 109, 111, 113, 307, 410, 411, 425], "hashera": 410, "hasherhash": 410, "hasn": 474, "have": [3, 4, 6, 12, 17, 18, 64, 70, 74, 104, 171, 226, 235, 252, 358, 387, 402, 432, 464, 498], "hawksbil": 11, "hdf5": [262, 471], "head": [40, 247, 518], "head_index": 40, "header": [169, 283, 300, 473, 474, 504, 506], "heading_rot": [121, 268], "heavili": 3, "height": [12, 44, 48, 50, 107, 108, 119, 195, 208, 237, 243, 436, 486, 487, 493, 495, 515], "height_": 436, "heightstd": [436, 515], "help": [429, 471, 473, 474, 476, 519, 530], "helper": [91, 150, 176, 227, 252, 282, 310, 445, 450], "here": [2, 26, 31, 104, 176, 178, 180, 181, 183, 184, 187, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 252, 253, 259, 273, 328, 446, 458, 459, 470, 477, 492, 493, 508, 511, 516], "hidden": [29, 226, 336, 464, 498], "hierarchi": [27, 447, 478], "high": 4, "higher": [2, 3, 89, 328], "histogram": 518, "histori": 6, "hit": [6, 31, 54, 74, 76, 89, 95, 241, 262, 314, 328, 473, 474], "hold": 12, "home": [6, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 448, 450, 452, 482, 484, 486, 519, 521, 523, 524], "homogen": [40, 419], "how": [5, 25, 226, 228, 252, 312, 320, 334, 464, 471, 473, 474, 498], "howev": [4, 64], "hpp": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 176, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 448, 450, 452, 457, 458, 482, 484, 486, 490, 492, 500, 519, 521, 523, 524], "hppaction": 122, "hppassign": 122, "hppauxiliar": [33, 176, 235, 237], "hppbeam_model": 127, "hppbearing_sensor_model": 127, "hppbresenham": 131, "hppcircular_arrai": 123, "hppconcept": [119, 176, 241, 243, 251, 266, 305, 436], "hppcontain": 123, "hppdata": [127, 138, 141], "hppdefin": [176, 279], "hppdifferential_drive_model": 124, "hppdistance_map": 139, "hppeffective_sample_s": 137, "hppevery_n": 125, "hppgener": [480, 492], "hppimplement": [22, 24, 31, 35, 40, 117, 121, 166, 176, 241, 245, 249, 261, 262, 264, 268, 270, 275, 277, 282, 285, 287, 291, 295, 297, 299, 309, 423, 425, 427, 428, 432, 434, 438, 476, 480, 492], "hppinclud": [25, 35, 176, 432, 492], "hppindexing_iter": 134, "hpplandmark": 176, "hpplandmark_detection_typ": [141, 142], "hpplandmark_sensor_model": [127, 141], "hpplikelihood_field_model": [127, 139, 140], "hppmessag": [480, 492, 518], "hppmotion": 124, "hppmultivariate_normal_distribut": 126, "hppmultivariate_uniform_distribut": 126, "hppndt_sensor_model": 140, "hppnormal": 122, "hppoccupancy_grid": 140, "hppomnidirectional_drive_model": [124, 136], "hppon_effective_size_drop": 125, "hppon_mot": 125, "hppparticl": [130, 133], "hppparticle_trait": [129, 132, 143], "hpppolici": 125, "hpppropag": [122, 129, 130], "hpprandom": [126, 127], "hppraycast": 139, "hppreweight": [122, 129, 130], "hppro": 458, "hppsensor": 127, "hppsophus_match": 128, "hppsophus_print": 128, "hppsparse_value_grid": 140, "hppstationary_model": [124, 136], "hpptake_while_kld": 143, "hpptest": 128, "hppthrun_recovery_probability_estim": [132, 133], "hpptuple_trait": 136, "hpptuple_vector": 123, "hpputil": [480, 492], "hppvalue_grid": 140, "hppzip": 135, "hsize_t": 262, "hsl_and_hsv": 518, "hsv_to_rgb_altern": 518, "html": [307, 356], "http": [5, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 58, 104, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 350, 356, 364, 392, 414, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529, 531], "hue": [517, 518], "humbl": 11, "hypot": 31, "i": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 194, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 356, 357, 359, 360, 361, 362, 363, 364, 368, 369, 370, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 482, 483, 484, 485, 486, 487, 490, 492, 493, 498, 499, 500, 501, 502, 503, 504, 508, 511, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530], "id": [235, 306, 307, 432, 473, 474, 504, 506, 518, 531], "idea": 296, "ident": 18, "identif": 237, "identifi": [37, 52, 423, 529], "idiom": [2, 3], "idsindex": 306, "ie": [58, 97, 107, 153, 176, 242, 266, 305, 436, 473, 474, 486, 513, 515, 518, 528, 529], "ieee": [41, 481, 531], "ifdef": 283, "ifndef": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "ignor": [99, 237, 473, 474], "ill": 252, "imag": 56, "implement": [1, 2, 3, 4, 17, 21, 25, 26, 28, 29, 30, 32, 36, 38, 39, 40, 41, 42, 60, 64, 68, 78, 95, 97, 101, 104, 116, 118, 119, 120, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 165, 167, 170, 172, 174, 175, 176, 227, 228, 229, 236, 238, 240, 241, 242, 243, 246, 248, 250, 251, 252, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 278, 281, 284, 285, 288, 289, 290, 292, 294, 295, 296, 300, 302, 304, 305, 306, 308, 310, 312, 336, 338, 340, 342, 344, 346, 348, 364, 374, 376, 378, 380, 382, 389, 398, 400, 402, 404, 406, 408, 410, 412, 422, 423, 424, 425, 428, 429, 431, 432, 435, 436, 437, 439, 440, 441, 473, 474, 475, 476, 477, 480, 482, 490, 492, 499, 500, 502, 506, 511, 514, 519], "impli": [22, 24, 25, 28, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "implicit": [91, 249], "import": [4, 54, 56, 74, 76, 89, 241, 252, 284, 294, 346, 473, 474], "improv": [41, 481, 531], "imput": 41, "ina": 513, "inact": [443, 448, 452, 469], "inc": [22, 24, 25, 29, 31, 33, 35, 37, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "includ": [4, 12, 14, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 176, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 441, 448, 449, 450, 451, 452, 453, 458, 482, 483, 484, 485, 486, 487, 492, 519, 520, 521, 522, 523, 524, 525], "includebeluga": [21, 22, 23, 24, 34, 35, 116, 117, 122, 123, 124, 125, 126, 127, 128, 146, 244, 245, 278, 279, 281, 282, 286, 287, 298, 299, 426, 427, 433, 434, 437, 438], "includebeluga_amcl": [442, 443, 444, 445, 457, 468, 469, 471], "includebeluga_ro": [475, 476, 479, 480, 490, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "includebelugaact": [28, 29, 129, 130, 154, 263, 264, 284, 285, 294, 295], "includebelugaalgorithm": [25, 131, 132, 133, 151, 163, 164, 165, 166, 170, 171, 174, 175, 290, 291, 306, 307, 428], "includebelugaalgorithmraycast": [36, 37, 162], "includebelugacontain": [39, 40, 134, 135, 148, 431, 432], "includebelugadetail": [158, 169, 283], "includebelugamot": [120, 121, 136, 156, 267, 268, 308, 309], "includebelugapolici": [137, 145, 172, 173, 269, 270, 271, 272, 280], "includebelugarandom": [138, 159, 246, 247, 248, 249, 250, 251], "includebelugasensor": [30, 31, 32, 33, 139, 140, 141, 152, 236, 237, 240, 241, 262], "includebelugasensordata": [118, 119, 142, 153, 234, 235, 238, 239, 242, 243, 261, 265, 266, 292, 293, 304, 305, 435, 436], "includebelugatest": [155, 300, 301, 302, 303], "includebelugatyp": [157, 232, 233], "includebelugatype_trait": [150, 274, 275, 310, 311, 429, 430], "includebelugautil": [149, 177, 229, 230], "includebelugaview": [143, 144, 167, 168, 276, 277, 288, 289, 296, 297, 422, 423, 424, 425, 439, 440], "includeciabatta": [38, 161], "inclus": 101, "incorpor": 4, "incorrect": 101, "increment": [70, 230, 376], "independ": [74, 249, 296], "index": [12, 14, 16, 26, 27, 40, 44, 48, 49, 50, 51, 64, 65, 71, 97, 107, 108, 111, 113, 149, 164, 176, 183, 196, 200, 209, 214, 215, 216, 217, 220, 222, 227, 229, 230, 241, 243, 252, 259, 262, 266, 394, 423, 429, 430, 447, 478, 486, 487], "index_at": [12, 44, 48, 49, 50, 51, 107, 108, 119, 196, 209, 243, 266, 486, 487], "index_atstd": 243, "index_sequ": [26, 115, 219, 220, 227, 252, 259, 306, 307, 352, 429, 430, 432], "index_sequenceunus": 306, "indexable_": 230, "indexablecontain": 70, "indexcontain": 70, "indexgrid": [48, 50], "indexing_iter": [39, 40, 70, 149, 176], "indexingiter": [40, 64, 71, 115, 183, 196, 200, 209, 214, 215, 216, 217, 220, 222, 227, 229, 230, 252], "indexingiteratora": [40, 230], "indexingiteratorindexingiter": 230, "indexpair": 164, "indic": [14, 16, 48, 50, 64, 111, 113, 266, 296, 471, 473, 474], "indirect": 28, "indirectli": [21, 23, 28, 30, 32, 34, 36, 39, 116, 118, 120, 163, 165, 167, 170, 172, 174, 229, 232, 236, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 422, 424, 429, 431, 433, 435, 437, 439, 475, 502, 514, 517, 526, 528], "indistinguish": 18, "individu": [54, 402], "industri": 1, "inequ": [37, 62, 318], "infer": 1, "infin": 171, "infinit": [18, 171, 289, 296, 297], "inflat": [473, 474], "info": [249, 515], "inform": [4, 25, 33, 41, 42, 237, 249, 252, 307, 346, 367, 476, 481, 482, 518, 531], "inher": 54, "inherit": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 114, 226, 227, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 357, 359, 360, 361, 362, 363, 364, 368, 369, 370, 373, 375, 377, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 393, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 413, 415, 417, 418, 420, 421, 448, 449, 450, 451, 452, 453, 464, 465, 483, 484, 485, 486, 487, 498, 499, 520, 522, 525], "init": [104, 105, 432], "initi": [4, 25, 42, 43, 64, 104, 167, 196, 209, 332, 367, 432, 443, 445, 448, 450, 452, 469, 471, 476, 482, 483, 493, 495], "initial_cov_": 473, "initial_pos": [471, 473, 474], "initial_pose_": 473, "initial_pose_callback": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "initial_pose_callbackvoid": [443, 445, 469], "initial_pose_sub_": [443, 445, 448, 450, 452, 459, 463, 469], "initial_pose_sub_beluga_amcl": [449, 451, 453], "initial_pose_sub_pos": [443, 445, 469], "initial_pose_sub_rclcpp": [443, 469], "initial_pose_sub_ro": 445, "initial_pose_top": [471, 473, 474], "initialize_from_estim": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "initialize_from_estimatebool": [443, 445, 469], "initialize_from_map": [443, 445, 448, 449, 450, 451, 459, 461, 476, 482, 483, 493, 495], "initialize_from_mapbool": [443, 445], "initialize_from_mapvoid": 476, "initializer_list": [104, 105, 432], "initializevoid": [25, 476], "initialpos": [471, 473, 474], "inject": [52, 101], "inlin": [29, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 105, 108, 109, 110, 112, 114, 168, 173, 252, 262, 264, 270, 272, 275, 277, 280, 282, 285, 289, 295, 297, 300, 301, 330, 331, 357, 359, 383, 386, 388, 401, 407, 416, 417, 423, 425, 430, 440, 471, 482, 504, 506, 513, 517, 518, 525, 527, 529], "inlineconstexpr": [28, 64, 101, 104, 111, 113, 167, 172, 252, 263, 269, 271, 276, 284, 288, 294, 296, 338, 342, 346, 358, 376, 378, 380, 385, 387, 396, 398, 400, 406, 408, 410, 422, 424, 439], "inlineconstexprnoexcept": [64, 68, 91, 101, 392, 414], "inlineconstexprprotect": 402, "inlineexplicit": [54, 55, 56, 57, 60, 61, 64, 65, 66, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 93, 96, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 388, 484, 486, 524, 525], "inlineexplicitconstexpr": [85, 104, 376], "inlineexplicitconstexprnoexcept": 68, "inlineexplicitnoexcept": 95, "inlinenoexcept": [64, 70, 78], "inlinestat": [368, 369, 370], "input": [4, 28, 29, 68, 69, 99, 175, 252, 276, 296, 336, 338, 342, 346, 402, 410, 423, 424, 429, 430, 432], "input_iter": [252, 431, 432], "input_rang": [297, 425, 432], "inputnext": 68, "insert": [25, 228, 288, 289, 312, 398, 400, 425, 432, 518], "insert_iter": [431, 432], "insid": [262, 332], "instal": 6, "instanc": [12, 13, 14, 15, 16, 17, 19, 20, 25, 26, 30, 31, 32, 33, 42, 54, 56, 64, 66, 74, 76, 78, 80, 89, 93, 97, 120, 121, 167, 226, 227, 236, 237, 240, 241, 249, 252, 259, 262, 267, 268, 314, 316, 320, 324, 328, 330, 332, 334, 342, 346, 398, 410, 416, 443, 445, 448, 450, 452, 464, 469, 498, 513], "instanti": [44, 46, 48, 50, 52, 226, 443, 445, 448, 450, 452, 464, 469, 498], "instead": [5, 21, 23, 28, 30, 31, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 78, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 235, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 472, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "int": [4, 12, 16, 19, 29, 37, 44, 45, 48, 49, 50, 51, 52, 53, 62, 63, 70, 71, 97, 98, 107, 108, 119, 165, 166, 226, 230, 243, 247, 252, 261, 262, 264, 266, 282, 285, 293, 295, 302, 303, 330, 332, 336, 338, 340, 342, 344, 346, 348, 356, 357, 367, 392, 410, 414, 425, 464, 471, 486, 487, 498, 503], "int64_t": 262, "int8_t": [39, 40, 252, 515, 521, 522], "integ": [14, 19, 26, 36, 37, 58, 61, 62, 63, 64, 180, 183, 184, 189, 192, 196, 197, 200, 209, 211, 214, 215, 216, 220, 222, 227, 252, 259, 262, 306, 307, 318, 319, 356, 473, 474], "integer_rang": 471, "integerinteg": 60, "integr": [2, 11, 70, 422, 442, 444, 457, 458, 468, 500, 530], "integral_const": [40, 227, 307, 430], "intellig": [41, 481, 531], "intend": [1, 5], "intens": 76, "interchang": 2, "interfac": [3, 26, 35, 38, 104, 146, 153, 176, 227, 228, 238, 252, 259, 298, 431, 446, 472, 477, 480, 490, 492, 500, 517], "intern": [18, 25, 41, 78, 101, 104, 249, 376, 428, 481, 531], "internalcontain": [26, 104, 105, 115, 178, 180, 181, 183, 184, 188, 189, 190, 192, 201, 202, 203, 204, 215, 216, 218, 219, 220, 222, 227, 252, 259, 431, 432], "internalcontainercontain": 104, "interpret": [226, 252, 464, 477, 486, 498, 499, 511, 514, 515, 521], "interspers": 289, "interv": [25, 64, 312, 441, 473, 474, 518], "inth": 513, "intrins": 314, "inv_resolut": 293, "invalid": [42, 78, 80, 249, 482, 504, 515, 527, 529], "invalid_argu": 262, "invers": [121, 235, 237, 241, 261, 268, 272, 291], "invert": [38, 518], "investig": [31, 241], "invis": [226, 464, 498], "invoc": 18, "invok": [29, 64, 78, 336, 410, 425], "invoke_result_t": [25, 164], "involv": 28, "io": 262, "ioformat": 303, "iostream": [302, 303], "iota": [502, 503], "iresult": 306, "iron": 11, "irwini": 11, "is_adding_const": 177, "is_arithmetic_v": [26, 91, 112, 114, 115, 170, 171, 200, 203, 214, 216, 218, 220, 227, 252, 259, 306, 307, 311], "is_base_of_v": [26, 115, 181, 187, 193, 204, 212, 216, 218, 219, 220, 222, 223, 227, 246, 247, 249, 252, 259, 366, 367, 368, 369, 370, 371], "is_complet": [227, 430], "is_const_v": 177, "is_directori": 262, "is_execution_policy_v": [264, 285, 295, 338, 340, 342, 344, 346, 348], "is_floating_point_v": [239, 261], "is_fre": [16, 266, 493, 495, 515, 521, 522], "is_freestat": 515, "is_invocable_r_v": [280, 387, 388, 425], "is_invocable_v": [25, 285, 289], "is_lvalue_reference_v": [177, 297], "is_nothrow_swappable_v": [40, 64, 65], "is_obstacl": 164, "is_occupi": [16, 266, 493, 495, 515, 521, 522], "is_occupiedstat": 515, "is_particl": 275, "is_particle_range_v": [165, 166, 252, 264, 275, 285, 295, 297, 425, 428], "is_particle_v": 275, "is_random_distribut": 297, "is_random_distribution_v": 297, "is_range_closur": 29, "is_range_closure_v": [29, 336], "is_same_v": [25, 29, 33, 40, 64, 170, 171, 237, 252, 262, 297, 305, 307, 430, 506, 517, 518], "is_tuple_lik": [115, 227, 252, 282, 392, 414, 429, 430], "is_tuple_like_v": [26, 115, 219, 220, 227, 252, 253, 258, 259, 275, 354, 355, 363, 395, 429, 430], "is_tuple_like_vconstexpr": 430, "is_tuple_like_vconveni": 430, "is_tuple_likemeta": [282, 430], "is_unknown": [493, 495, 515, 521, 522], "is_unknownstat": 515, "isapprox": 249, "isbn": 531, "isnan": 239, "issu": [6, 31, 241], "it_": 297, "iter": [25, 26, 36, 37, 39, 40, 42, 60, 61, 63, 64, 65, 70, 71, 104, 115, 149, 176, 183, 196, 200, 209, 214, 215, 216, 220, 222, 227, 229, 230, 252, 259, 289, 296, 312, 318, 319, 398, 400, 423, 431, 432, 439, 476, 482], "iter_mov": [396, 397, 440], "iter_reference_t": [396, 397, 440], "iter_rvalue_reference_t": [396, 397, 440], "iter_value_t": [252, 396, 397, 431, 432, 440], "iter_zip_with": 440, "iterator_categori": [37, 62, 63, 70, 71, 209, 220, 230], "iterator_categorycategori": 230, "iterator_categoryiter": 37, "iterator_categorystd": [37, 230], "iterator_t": [289, 297], "iterator_trait": [40, 64], "iteratorbresenham": [37, 227], "iteratorindexingiter": 40, "iteratorinlin": 63, "iteratorinlineexplicit": 63, "iteratoriter": [37, 40], "ith": [39, 40, 252], "itr": 305, "its": [3, 25, 26, 33, 40, 64, 70, 72, 170, 171, 227, 230, 235, 252, 259, 353, 387, 396, 397, 430, 440, 443, 445, 448, 450, 452, 469, 472], "itself": [2, 3, 29, 164, 443, 448, 452, 469, 471, 474, 506], "j": 252, "journal": 41, "jtc1": 307, "jtsmeaaaqbaj": 531, "jump": [473, 474], "just": [6, 336], "k": [27, 179, 182, 210, 220, 223, 253, 425, 493], "k_i": 471, "kalman": 4, "karrowbodylength": 518, "karrowheadlength": 518, "karrowheadwidth": 518, "karrowlength": 518, "kb": 518, "kbit": 307, "kdefaultangularresolut": 518, "kdefaultkldz": [252, 410, 411, 424, 425], "kdefaultkldzconstexpr": 425, "kdefaultkldzdefault": 425, "kdefaultlinearresolut": 518, "kdefaultneighborkernel2d": 262, "kdefaultneighborkernel3d": 262, "kdefaultprob": [210, 223, 289, 398, 399], "kdefaultprobabilitybeluga": 399, "kdefaultprobabilitydefault": 289, "kdefaultprobabilitystat": 289, "kdefaultthreshold": [210, 223, 270, 378, 379], "kdefaultthresholdbeluga": 379, "kdefaultthresholddefault": 270, "kdefaultthresholdstat": 270, "kdifferentialmodelnam": 471, "keep": [3, 6, 252, 474], "kei": [2, 6, 97, 305], "kept": [64, 104], "kernel": [262, 332], "kextrapolateonread": [39, 40, 252], "key_typ": [97, 98, 210, 220, 262, 305], "key_typekei": 305, "key_typetypenam": 305, "keyword": 38, "kfib": 307, "kflippingrot": 121, "kfreevalu": [493, 497, 515, 521], "kfreevaluebeluga_ro": 522, "kfreevaluefre": 515, "kfreevaluestat": 515, "kg": 518, "kglobal": [50, 251, 266], "kind": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "kindex": 430, "klayoutrevers": [39, 40, 64, 252], "kld": [25, 41, 228, 252, 312, 424, 425, 441, 471, 473, 474, 476, 481, 519, 531], "kld_condit": [252, 253, 255, 410, 424, 425], "kld_conditionauto": 425, "kld_epsilon": [25, 210, 223, 312, 476, 493, 497, 519], "kld_epsilonbeluga": 313, "kld_epsilonbeluga_ro": 520, "kld_epsilondoubl": [25, 476], "kld_epsilonmaximum": 476, "kld_epsilonus": 25, "kld_z": [25, 210, 223, 312, 476, 493, 497, 519], "kld_zbeluga": 313, "kld_zbeluga_ro": 520, "kld_zdoubl": [25, 476], "kld_zupper": 476, "kld_zuse": 25, "klocal": [50, 266], "kmatch": 430, "kminpointspercel": 262, "kminvari": 262, "kmodifi": [37, 58, 59, 186, 210], "kmodifieddefinit": 37, "knav2differentialmodelnam": 471, "knav2omnidirectionalmodelnam": 471, "knone": [39, 40, 64, 252], "know": [289, 432], "known": [2, 56, 74, 320, 334, 441, 443, 445, 448, 450, 452, 469, 473, 474], "koccupiedvalu": [493, 497, 515, 521], "koccupiedvaluebeluga_ro": 522, "koccupiedvalueoccupi": 515, "koccupiedvaluestat": 515, "komnidirectionalmodelnam": 471, "kr": 518, "krolloveronwrit": [39, 40, 252], "ksinglelin": 303, "kstandard": [37, 58, 59, 186, 210], "kstandardstandard": 37, "kstationarymodelnam": 471, "ktupleindexambigu": 430, "ktupleindexnotfound": 430, "kullback": [252, 424], "kunknownvalu": [493, 497, 515, 521], "kunknownvaluebeluga_ro": 522, "kunknownvaluestat": 515, "kunknownvalueunknown": 515, "l": [13, 27, 115, 179, 182, 194, 197, 211, 220, 223, 235, 253, 459, 461, 463, 488, 493], "l2": [89, 330], "l262": 104, "label": [226, 464, 498], "lack": 54, "lambda": 2, "lambda_short": [31, 211, 223, 314, 474], "lambda_shortbeluga": 315, "lambda_shortdoubl": 31, "lambda_shortintrins": 31, "landmark": [26, 32, 33, 56, 72, 73, 74, 152, 153, 157, 176, 227, 228, 232, 233, 234, 235, 236, 237, 252, 259, 299, 322, 326, 441], "landmark_a_bearing_in_sensor": 235, "landmark_a_position_in_world": 235, "landmark_b_bearing_in_sensor": 235, "landmark_b_distance_in_world_squar": 235, "landmark_b_position_in_world": 235, "landmark_b_squared_in_world_squar": 235, "landmark_bearing_in_robot": 237, "landmark_bearing_in_sensor": 33, "landmark_detection_typ": [32, 33, 157, 176, 234, 235, 236, 237, 322, 326], "landmark_in_robot_posit": 237, "landmark_map": [33, 56, 57, 72, 74, 75, 141, 153, 176, 237], "landmark_map_": [33, 237], "landmark_mapmap": [56, 74], "landmark_position_in_sensor": 235, "landmark_position_in_world": 237, "landmark_range_in_robot": 237, "landmark_sensor_model": [74, 152, 176, 298, 299, 324], "landmarkbearing3": [33, 72, 73, 232, 233, 235, 252, 253, 257, 322], "landmarkbearing3bear": [233, 235], "landmarkbearing3eigen": [233, 235], "landmarkbearingdetect": [33, 56, 115, 181, 183, 223, 232, 233, 252, 323], "landmarkbearingdetectionlandmark": [227, 233], "landmarkcategori": [33, 72, 73, 232, 233, 235, 237, 252, 253, 257, 322, 326], "landmarkcategorytyp": [233, 235], "landmarkcategoryuint32_t": [233, 235], "landmarkmap": [32, 33, 57, 73, 75, 115, 180, 187, 189, 193, 197, 198, 200, 205, 211, 212, 214, 215, 218, 220, 221, 224, 227, 234, 235, 236, 237, 252], "landmarkmapbas": [33, 227, 235, 237], "landmarkmapboundari": [72, 73, 232, 233, 235, 252, 253, 257], "landmarkmapboundariesboundari": [233, 235], "landmarkmapboundarieseigen": [233, 235], "landmarkmapclass": [56, 74], "landmarkmapinlin": 73, "landmarkmaplandmarkmap": 235, "landmarkmodelparam": [74, 115, 218, 223, 236, 237, 252, 325], "landmarkmodelparamparamet": [227, 237], "landmarkposition3": [72, 73, 232, 233, 235, 237, 252, 253, 257, 326], "landmarkposition3eigen": [233, 235], "landmarkposition3posit": [233, 235], "landmarkpositiondetect": [72, 74, 115, 181, 183, 223, 232, 233, 235, 237, 252, 327], "landmarkpositiondetectionlandmark": [227, 233], "landmarks_": 235, "landmarks_set_position_data": [72, 73, 211, 220, 235], "landmarks_set_position_datastd": 235, "landmarks_set_position_datavector": 235, "landmarksensormodel": [20, 26, 75, 115, 197, 200, 205, 211, 212, 214, 215, 218, 220, 221, 224, 227, 228, 236, 237, 252, 259, 324], "landmarksensormodel2d": [236, 237, 252, 253, 257], "landmarksensormodel3d": [236, 237, 252, 253, 257], "landmarksensormodelgener": 237, "landmarksensormodellandmarksensormodel": 237, "landmarkslist": 72, "lang": 40, "languag": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "laps": [473, 474], "larg": [1, 4, 235, 432, 474], "larger": 3, "laser": [46, 153, 176, 227, 238, 241, 252, 328, 443, 445, 448, 450, 452, 469, 471, 473, 474, 484, 503], "laser_callback": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "laser_callbackvoid": [443, 445, 469], "laser_lambda_short": 473, "laser_likelihood_max_dist": [473, 474], "laser_max_rang": [471, 473, 474], "laser_min_rang": [471, 473, 474], "laser_model_typ": [473, 474], "laser_scan": [46, 153, 176, 442, 443, 445, 450, 451, 468, 469, 475, 476, 479, 480, 482, 483, 484, 490, 492, 504], "laser_scan_connection_": [443, 445, 448, 450, 452, 459, 463, 469], "laser_scan_connection_beluga_amcl": [449, 451, 453], "laser_scan_connection_connect": [443, 445, 469], "laser_scan_connection_message_filt": [443, 445, 469], "laser_scan_filter_": [443, 445, 448, 450, 452, 459, 463, 469], "laser_scan_filter_beluga_amcl": [449, 451, 453], "laser_scan_filter_std": [443, 445, 469], "laser_scan_filter_transform": [443, 445, 469], "laser_scan_sub_": [443, 445, 448, 450, 452, 459, 463, 469], "laser_scan_sub_beluga_amcl": [449, 451, 453], "laser_scan_sub_las": [443, 445, 469], "laser_scan_sub_message_filt": 445, "laser_scan_sub_std": [443, 469], "laser_scanlas": 482, "laser_sigma_hit": 473, "laser_z_hit": 473, "laser_z_max": 473, "laser_z_rand": 473, "laser_z_short": 473, "laserscan": [2, 46, 273, 443, 444, 445, 448, 449, 450, 451, 452, 453, 469, 473, 474, 476, 477, 480, 482, 483, 485, 488, 490, 492, 493, 495, 496, 499, 500, 502, 503, 504, 506, 511], "laserscanconstsharedptr": [484, 485, 503, 504], "laserscaninlin": 485, "laserscaninlineexplicit": 485, "laserscanlaserscan": 503, "laserscanthin": [476, 499, 503, 504], "last": [6, 40, 64, 65, 104, 105, 252, 320, 334, 408, 422, 432, 448, 450, 452, 473, 474, 476, 519], "last_in": 432, "last_known_estimate_": [443, 445, 448, 450, 452, 459, 463, 469], "last_known_estimate_beluga_amcl": [449, 451, 453], "last_known_estimate_last": [443, 445, 469], "last_known_estimate_std": [443, 445, 469], "last_known_map_": [445, 450, 459, 463], "last_known_map_beluga_amcl": 451, "last_known_map_last": 445, "last_known_map_nav_msg": 445, "last_known_odom_transform_in_map_": [443, 445, 448, 450, 452, 459, 463, 469], "last_known_odom_transform_in_map_beluga_amcl": [449, 451, 453], "last_known_odom_transform_in_map_last": [443, 445, 469], "last_known_odom_transform_in_map_std": [443, 445, 469], "last_out": 432, "lastsentinel": 64, "latch": 474, "later": 293, "latest_pose_": 272, "launch": 6, "law": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "layer": [101, 506, 507, 511], "layout": [3, 14, 40, 64, 252], "lazili": [167, 228, 276, 387], "lead": 289, "least": [5, 167, 306, 474, 518], "left": [280, 284, 389, 390], "left_hash": 307, "legend": [44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 448, 450, 452, 484, 486], "leibler": [252, 424], "length": [3, 19], "length_error": 40, "length_errorif": 64, "less": [28, 76, 104, 252, 471, 473, 474, 519], "let": 31, "level": [26, 176, 227, 259, 445, 446, 450, 451, 458, 465, 477, 492, 499, 511], "leverag": [2, 472], "lflag": [39, 40, 252], "li": 41, "lib": 356, "librari": [2, 3, 33, 35, 97, 146, 176, 228, 233, 235, 237, 275, 277, 281, 300, 356, 441, 466, 500, 530], "licens": [1, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "lidar": [6, 31, 54, 74, 76, 89, 241, 262, 473, 474, 484, 500], "lie": [262, 332, 441, 474], "lifecycl": [442, 443, 446, 448, 452, 465, 466, 468, 469, 474], "lifecycle_nod": [442, 443, 468, 469], "lifecyclenod": [443, 448, 452, 465, 469, 471], "lifecyclenodeinterfac": [443, 469], "lifecyclepublish": [443, 448, 452, 469], "lifetim": [54, 56, 74, 76, 89, 518], "lifo": 64, "like": [3, 6, 26, 36, 39, 40, 66, 70, 93, 99, 104, 121, 150, 162, 176, 227, 228, 252, 259, 268, 275, 282, 289, 291, 309, 350, 353, 361, 362, 364, 392, 414, 429, 430, 431, 434, 474, 518], "likelihood": [2, 31, 76, 89, 152, 176, 227, 228, 240, 241, 252, 262, 294, 299, 330, 332, 441, 474], "likelihood_at": [89, 90, 197, 211, 261, 262, 330, 331], "likelihood_atdoubl": [261, 262], "likelihood_data": 241, "likelihood_field": [76, 77, 197, 211, 241, 473, 474], "likelihood_field_": 241, "likelihood_field_model": [76, 127, 152, 176, 298, 299, 328], "likelihood_fieldconst": 241, "likelihoodfieldmodel": [2, 20, 26, 77, 115, 197, 200, 205, 211, 212, 214, 215, 218, 220, 221, 224, 227, 228, 240, 241, 252, 259, 328, 476, 482], "likelihoodfieldmodellikelihood": 241, "likelihoodfieldmodellikelihoodfieldmodel": 241, "likelihoodfieldmodelparam": [76, 115, 212, 218, 223, 225, 240, 241, 252, 329], "likelihoodfieldmodelparamparamet": [227, 241], "limit": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 70, 82, 85, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 306, 307, 309, 310, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 474, 476, 480, 503, 504, 515, 518, 519, 527, 529], "limited_rang": 432, "line": [26, 36, 37, 58, 61, 62, 63, 115, 180, 183, 184, 189, 192, 196, 197, 200, 209, 211, 214, 215, 216, 220, 222, 227, 252, 259, 318, 319, 518], "line_list": 518, "linear": [14, 16, 26, 48, 107, 153, 171, 176, 227, 242, 252, 259, 266, 435, 436, 441], "linear_clustering_resolut": [109, 110, 307], "linear_clustering_resolutionclust": 109, "linear_grid": [48, 153, 176, 265, 266, 435, 436], "linear_resolut": [493, 497, 506, 517, 518, 524], "linear_resolutionbeluga_ro": 525, "linear_resolutionconst": 518, "linear_resolutionlinear": 506, "linear_resolutionresolut": 518, "lineargrid2": [16, 48, 273], "linearli": 518, "linebresenham": 37, "linelin": 37, "link": [178, 180, 181, 183, 184, 187, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 253, 300, 459, 493, 508], "linux": 11, "list": [5, 27, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 178, 180, 181, 183, 184, 187, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 227, 253, 260, 273, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 351, 355, 356, 358, 366, 367, 371, 372, 374, 376, 378, 380, 382, 385, 387, 389, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 419, 447, 448, 450, 452, 459, 465, 470, 478, 482, 484, 486, 493, 499, 508, 512, 516, 518, 519, 521, 524], "listen": [443, 445, 448, 450, 452, 469], "literatur": [262, 332], "littl": 1, "ll": 237, "llvm": [169, 283], "load": [3, 471, 474], "load_from_hdf5_2d": 262, "local": [1, 3, 5, 6, 11, 13, 16, 25, 26, 31, 42, 104, 227, 241, 252, 259, 312, 441, 471, 473, 474, 475, 476, 477, 480, 482, 484, 490, 492, 499, 506, 511, 519], "localization_launch": 6, "localization_map": 6, "localization_params_fil": 6, "locat": 235, "log": [33, 121, 171, 237, 247, 268, 272, 307, 448, 450, 452, 518, 529], "logic": [3, 280, 389], "long": [1, 18, 101], "longer": 3, "longitudin": 334, "longstand": 472, "look": [26, 104, 227, 228, 252, 259, 431], "lookup": 252, "loss": [3, 473, 474, 476, 519], "lot": 432, "low": [4, 432], "lower": [46, 471, 473, 474, 519], "lsquo": 42, "lt": [21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 49, 51, 53, 55, 57, 58, 61, 62, 63, 65, 66, 68, 71, 72, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 96, 98, 99, 101, 105, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 320, 322, 324, 326, 328, 331, 333, 334, 336, 338, 340, 342, 344, 346, 348, 352, 354, 357, 359, 368, 369, 370, 373, 374, 376, 378, 380, 383, 386, 388, 389, 390, 392, 393, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 410, 412, 414, 415, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 464, 468, 469, 471, 475, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 493, 495, 497, 498, 499, 502, 503, 504, 505, 506, 511, 513, 514, 515, 517, 518, 519, 521, 525, 526, 527, 528, 529], "lvalu": [18, 28, 39, 40, 60, 252], "m": [20, 27, 40, 41, 64, 65, 97, 115, 179, 182, 194, 198, 212, 220, 223, 253, 459, 461, 463, 493], "m0": 423, "m1": 423, "m_pi": 31, "m_usedclass": [226, 464, 498], "ma": [41, 481, 531], "macro": [38, 300], "magazin": 41, "mai": [5, 6, 22, 24, 25, 28, 29, 31, 33, 35, 37, 38, 40, 64, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "main": [18, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 118, 119, 120, 121, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 259, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 280, 281, 282, 284, 288, 290, 291, 292, 293, 294, 296, 300, 304, 305, 306, 307, 308, 309, 310, 311, 422, 424, 425, 428, 429, 430, 431, 432, 435, 436, 439, 475, 476, 477, 479, 502, 503, 504, 506, 511, 514, 515, 517, 518], "maintain": [42, 482], "major": [474, 486, 513, 515, 528, 529], "make": [3, 28, 31, 64, 241, 252, 296, 300, 358, 517, 518], "make_action_closur": [29, 264, 285, 295], "make_from_st": [25, 252, 253, 258, 274, 275, 297, 476], "make_from_state_fn": [115, 200, 214, 227, 252, 274, 275, 297, 359], "make_from_state_fnfunct": 275, "make_from_statea": [275, 297], "make_from_stateconstexpr": [275, 297], "make_index_sequ": [307, 350, 430, 432], "make_likelihood_field": 241, "make_opt": [243, 291], "make_origin_transform": 515, "make_pair": 476, "make_particle_filt": [443, 445, 448, 449, 450, 451, 452, 453, 459, 461, 469], "make_particle_filterauto": [443, 445, 469], "make_polici": [173, 252, 253, 258, 270, 272, 280], "make_policy_fn": [173, 252, 270, 272, 280], "make_policyconstexpr": [173, 270, 272, 280], "make_policymak": [173, 270, 272, 280], "make_signed_t": [70, 230, 307], "make_subrang": 432, "make_transform": 249, "make_tupl": 307, "make_unsigned_t": 307, "make_view_closur": [289, 297, 423, 425], "man": 293, "manag": [5, 56, 74, 443, 448, 452, 469, 473, 474], "mani": [1, 2, 3, 25, 312, 471, 473, 474], "manual": [25, 42, 476, 482], "map": [6, 25, 26, 31, 33, 41, 42, 43, 54, 55, 56, 57, 64, 72, 74, 75, 76, 89, 97, 153, 163, 164, 171, 176, 227, 232, 233, 234, 235, 237, 241, 252, 259, 262, 328, 332, 443, 445, 448, 450, 451, 452, 468, 469, 471, 473, 474, 476, 481, 482, 483, 517, 518, 531], "map_boundaries_": 235, "map_callback": [443, 445, 448, 449, 450, 451, 459, 461], "map_callbackvoid": [443, 445], "map_distribution_": 476, "map_limit": [72, 73, 198, 212, 235], "map_limitslandmarkmapboundari": 235, "map_path": 471, "map_servic": 473, "map_sub_": [443, 445, 448, 450, 459, 463], "map_sub_beluga_amcl": [449, 451], "map_sub_occup": [443, 445], "map_sub_rclcpp": 443, "map_sub_ro": 445, "map_timer_": [445, 450, 459, 463], "map_timer_beluga_amcl": 451, "map_timer_callback": [445, 450, 451, 459, 461], "map_timer_callbackvoid": 445, "map_timer_ro": 445, "map_timer_tim": 445, "map_top": [473, 474], "map_typ": [25, 31, 33, 42, 43, 54, 55, 56, 57, 74, 75, 76, 77, 89, 90, 97, 98, 212, 220, 237, 241, 262, 305], "map_typemap": [31, 241, 262], "map_typemaptyp": 305, "map_typeoccupancygrid": [31, 241], "map_typesparsegridt": 262, "map_typeunderli": 305, "map_yaml_path": 6, "mapnew": 54, "mapoccup": 482, "mapped_typ": [89, 97, 98, 212, 220, 262, 305], "mapped_typetypenam": 305, "mapped_typevalu": 305, "maptyp": [98, 183, 191, 202, 203, 210, 212, 216, 218, 220, 227, 304, 305], "maptypeassoci": 97, "margin": 4, "marker": [443, 448, 504, 506, 517, 518], "marker_arrai": [442, 443, 504], "markerarrai": [443, 448, 474, 504, 506, 517, 518], "mask": [39, 40, 252], "match": [3, 4, 33, 54, 64, 66, 85, 93, 99, 111, 113, 121, 237, 268, 309, 429, 430, 474, 506], "matcher": [155, 176, 300, 301, 427], "mathrm": 4, "matric": [302, 441], "matrix": [78, 81, 89, 171, 198, 200, 212, 214, 218, 220, 222, 227, 247, 248, 249, 252, 261, 262, 302, 303, 330, 356, 357, 366, 367, 371, 468, 469, 513, 518, 526, 527, 528, 529], "matrix2": [170, 171, 252], "matrix2xd": [261, 262], "matrix2xi": 262, "matrix3": [25, 170, 171, 252, 476, 513, 528, 529], "matrix3d": [443, 445, 448, 449, 450, 451, 452, 453, 469, 476, 482, 483], "matrix3xd": 261, "matrix_s": [212, 223, 247, 367], "matrix_sizebeluga": 370, "matrix_typ": [80, 81, 212, 220, 249], "matrix_typematrix": 249, "matrix_typeth": 249, "max": [31, 251, 262, 297, 300, 314, 410, 411, 425, 471, 473, 474, 484, 485, 503, 518], "max_beam": [471, 473, 474, 484, 485, 503], "max_beams_": 503, "max_beamsmaximum": 484, "max_bin_weight": 518, "max_el": [294, 295], "max_laser_dist": [212, 223, 241, 328], "max_laser_distancebeluga": 329, "max_laser_distancedoubl": 241, "max_laser_distancemaximum": 241, "max_obstacle_dist": [212, 223, 241, 328], "max_obstacle_distancebeluga": 329, "max_obstacle_distancedoubl": 241, "max_obstacle_distancemaximum": 241, "max_particl": [25, 212, 223, 312, 471, 473, 474, 476, 493, 497, 519], "max_particlesbeluga": 313, "max_particlesbeluga_ro": 520, "max_particlesmaximum": [25, 476], "max_particlesstd": [25, 476], "max_rang": [13, 46, 95, 96, 239, 291, 484, 485, 493, 495, 503], "max_range_": [291, 503], "max_rangeauto": 503, "max_rangemaximum": [95, 484], "max_siz": [40, 64, 65, 198, 212], "max_sizeconstexpr": 40, "maxim": 235, "maximum": [13, 40, 64, 252, 312, 314, 328, 471, 473, 474, 484, 503, 519], "maxmaximum": 410, "maybe_ndt": 262, "maybe_unus": [99, 100, 306, 307, 309], "mcl": [1, 11, 441, 500], "mean": [12, 14, 16, 25, 78, 79, 80, 81, 170, 171, 212, 223, 226, 249, 252, 261, 262, 330, 441, 464, 473, 474, 498], "mean_": 249, "mean_pose_vector": 171, "meana": 80, "meanan": 78, "meanbeluga": 331, "meaneigen": 261, "meanin": 104, "meanmean": 261, "means_dataset": 262, "means_matrix": 262, "meanth": 252, "measur": [4, 20, 25, 31, 42, 43, 54, 56, 74, 76, 89, 90, 95, 228, 261, 262, 294, 330, 331, 332, 473, 474, 476, 484, 503], "measurement_cel": 262, "measurement_typ": [20, 25, 31, 33, 42, 43, 54, 55, 56, 57, 74, 75, 76, 77, 89, 90, 212, 220, 237, 241, 262], "measurement_typemeasur": [31, 33, 237, 241, 262], "measurement_typestd": [31, 33, 237, 241, 262], "measurementmeasur": 42, "mechan": [25, 252, 312], "meet": [78, 80], "member": [17, 18, 26, 27, 35, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 146, 176, 227, 252, 259, 260, 275, 277, 281, 289, 297, 300, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 351, 353, 355, 356, 358, 366, 367, 371, 372, 374, 376, 378, 380, 382, 385, 387, 389, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 419, 430, 432, 447, 448, 450, 452, 473, 474, 478, 482, 484, 486, 512, 519, 521, 524], "memori": [12, 14, 64, 252, 442, 443, 444, 445, 514, 515, 517, 518], "merit": 252, "messag": [445, 448, 450, 451, 452, 473, 474, 476, 477, 484, 486, 490, 492, 499, 500, 502, 503, 505, 506, 507, 511, 513, 514, 515, 517, 518, 526, 527, 528, 529], "message_filt": [442, 443, 444, 445, 448, 450, 452, 468, 469], "messagea": 506, "messagefilt": [443, 445, 448, 450, 452, 469], "messagemark": 506, "messagemessag": 506, "messageparticl": 506, "meta": [227, 252, 350, 353, 360, 362, 364, 394, 429], "metaprogram": 3, "meter": [13, 25, 95, 97, 109, 305, 312, 471, 473, 474, 484, 486, 506, 515, 518, 524], "method": [1, 4, 41, 42, 60, 76, 104, 249, 252, 392, 414, 429, 430, 445, 450, 482], "metric": [25, 145, 176, 269, 270, 279], "might": 31, "migrat": [4, 472], "min": [40, 121, 235, 241, 251, 252, 268, 291, 297, 312, 410, 411, 424, 425, 484, 485, 503, 518], "min_angl": [272, 380, 381, 385, 386], "min_angle_": 272, "min_angleth": 385, "min_dist": [272, 380, 381, 385, 386], "min_distance_": 272, "min_distanceth": 385, "min_el": 235, "min_likelihood": 89, "min_particl": [25, 212, 223, 312, 471, 473, 474, 476, 493, 497, 519], "min_particlesbeluga": 313, "min_particlesbeluga_ro": 520, "min_particlesminimum": [25, 476], "min_particlesstd": [25, 476], "min_rang": [13, 46, 239, 484, 485, 493, 495, 503], "min_range_": 503, "min_rangeauto": 503, "min_rangeminimum": 484, "min_scale_factor": 518, "minim": [3, 33, 72, 235], "minimization_funct": 235, "minimum": [3, 13, 252, 312, 385, 424, 471, 473, 474, 484, 503, 519], "minimum_likelihood": [212, 223, 262, 332], "minimum_likelihoodbeluga": 333, "minimum_likelihooddoubl": 262, "minimum_likelihoodlikelihood": 262, "minminimum": [252, 410], "miodrag": 41, "misc": 440, "mismatch": 4, "miss": [31, 41, 314], "mit": [41, 481, 531], "mix": 3, "mixin": 38, "mixin_bas": 38, "mixin_impl": 38, "mixtur": [473, 474], "mkdir": 5, "mm": 518, "mobil": [472, 473, 474], "modal": 4, "model": [2, 4, 11, 15, 16, 20, 26, 30, 31, 32, 33, 35, 42, 54, 56, 64, 66, 74, 76, 89, 93, 99, 120, 121, 146, 152, 156, 157, 176, 227, 228, 232, 235, 236, 237, 240, 241, 244, 245, 252, 259, 262, 267, 268, 294, 295, 296, 298, 299, 308, 309, 346, 347, 348, 349, 441, 443, 445, 448, 450, 452, 468, 469, 471, 476, 482], "modela": 346, "modern": [2, 40, 430], "modifi": [58, 70, 230], "modified_": 37, "modul": 441, "modular": 441, "monocular": 56, "mont": [1, 2, 11, 25, 26, 42, 227, 252, 259, 312, 441, 475, 476, 477, 480, 482, 490, 492, 499, 506, 511, 519], "more": [21, 23, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 116, 118, 120, 163, 165, 167, 170, 171, 172, 174, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 249, 250, 252, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 468, 475, 479, 482, 484, 486, 502, 505, 506, 507, 513, 514, 517, 519, 521, 523, 524, 526, 528], "most": [1, 3, 33, 64, 443, 448, 452, 469, 474, 518], "mostderiv": 38, "mostli": [261, 330], "motion": [4, 11, 15, 25, 26, 34, 35, 42, 66, 74, 93, 99, 145, 146, 176, 227, 228, 252, 259, 271, 272, 279, 320, 334, 380, 382, 384, 385, 441, 443, 445, 448, 450, 452, 468, 469, 471, 476, 482], "motion_model": [25, 42, 43, 476, 482, 483], "motion_model_": [25, 476], "motion_model_vari": [443, 445, 448, 450, 476, 482, 483, 493, 496], "motion_model_variantbeluga_amcl": [449, 451], "motion_model_variantget": [443, 445], "motion_model_variantmot": 476, "motion_model_variantstd": 476, "motion_modelmot": 42, "motion_modelvari": 482, "motioninclud": 136, "motionmodel": [2, 25, 43, 66, 93, 99, 178, 187, 188, 193, 196, 201, 205, 209, 215, 221, 227, 273, 468, 469], "motionmodelclass": 42, "motionmodelvari": [452, 468, 469], "motionmodelvariantbeluga_amcl": 453, "motionmodelvariantget": 469, "motionmodelvariantstd": 469, "motionmodelvariantsupport": 469, "motionmot": 124, "movabl": 20, "move": [25, 28, 29, 31, 33, 37, 40, 58, 64, 78, 166, 177, 230, 235, 237, 241, 249, 262, 264, 272, 275, 280, 285, 289, 291, 295, 296, 297, 305, 396, 425, 432, 436, 440, 476, 503, 515], "move_tag": [396, 397, 440], "movement": [471, 476, 519], "msg": [442, 443, 448, 449, 452, 453, 468, 469, 471, 474, 484, 485, 486, 487, 503, 504, 505, 506, 513, 515, 517, 518, 526, 527, 528, 529], "msgthe": 513, "mt19937": 297, "mth": [228, 432, 439, 440], "much": [3, 320, 334, 432], "multi": 78, "multimod": 4, "multinomi": [228, 296, 441], "multipl": [4, 235, 291, 294, 376, 432, 518], "multipli": [33, 171, 237, 346], "multivari": [26, 78, 80, 82, 83, 85, 87, 159, 176, 227, 228, 246, 248, 249, 250, 251, 252, 259, 287, 441], "multivariate_distribution_trait": [26, 78, 115, 159, 176, 181, 187, 193, 204, 212, 216, 218, 219, 220, 222, 223, 227, 248, 249, 252, 259, 366, 367, 368, 369, 370, 371], "multivariate_distribution_traitsforward": [247, 249], "multivariate_normal_distribut": [25, 78, 80, 159, 176, 286, 287], "multivariate_uniform_distribut": [82, 83, 85, 87, 127, 159, 176, 286, 287], "multivariatenormaldistribut": [2, 18, 25, 79, 115, 181, 198, 200, 201, 202, 212, 214, 215, 216, 218, 220, 222, 227, 228, 248, 249, 252, 253, 255, 476], "multivariatenormaldistributionmultivari": [25, 249], "multivariatenormaldistributionmultivariatenormaldistribut": 249, "multivariatenormaldistributionparam": [78, 81, 115, 198, 200, 212, 214, 218, 220, 222, 227, 248, 249, 252], "multivariatenormaldistributionparammultivari": 249, "multivariatenormaldistributionparammultivariatenormaldistributionparam": 249, "multivariateuniformdistribut": [83, 84, 85, 86, 87, 88, 115, 198, 200, 212, 214, 227, 228, 250, 251, 252, 253, 255, 476], "multivariateuniformdistributionconstexpr": 251, "multivariateuniformdistributionmultivariateuniformdistribut": 251, "multivariateuniformdistributionprimari": 251, "mundan": 1, "must": [3, 6, 18, 42, 44, 46, 48, 50, 52, 54, 60, 64, 70, 76, 78, 80, 97, 107, 252, 296, 392, 414, 473, 474, 513], "mutabl": [17, 280, 297, 425, 445], "mutat": [3, 60], "mutex": [444, 445, 450], "mutex_": [445, 450, 459, 463], "mutex_beluga_amcl": 451, "mutex_mutex": 445, "mutex_std": 445, "n": [4, 24, 25, 26, 27, 31, 37, 39, 40, 65, 113, 114, 115, 145, 151, 167, 168, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 209, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 227, 228, 235, 252, 253, 259, 261, 262, 279, 306, 307, 330, 357, 376, 420, 432, 439, 440, 454, 459, 461, 463, 518], "n_": [473, 474, 519], "n_eff": 471, "naction": [26, 259], "nahuel": 476, "name": [12, 13, 14, 15, 16, 17, 18, 19, 20, 37, 42, 44, 46, 48, 50, 52, 54, 56, 66, 74, 76, 78, 89, 93, 99, 150, 166, 176, 228, 264, 273, 274, 285, 295, 297, 342, 423, 425, 428, 434, 443, 445, 448, 450, 452, 469, 471, 473, 474, 506, 529], "namebeluga": [51, 59, 487], "namespac": [17, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 392, 414, 422, 423, 424, 425, 428, 429, 430, 431, 432, 435, 436, 439, 440, 443, 445, 469, 471, 475, 476, 477, 479, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "nan": 46, "native_doubl": 262, "native_int": 262, "natur": [2, 3, 41, 481, 531], "nav": 474, "nav2": [268, 466, 473, 474, 500], "nav2_amcl": [471, 472, 474], "nav_msg": [442, 443, 444, 445, 448, 449, 450, 451, 473, 474, 476, 477, 480, 486, 490, 492, 499, 500, 504, 506, 511, 514, 515], "navig": [473, 474], "nbeluga": 511, "nbeluga_amcl": 446, "nbeluga_rosth": [477, 511], "nbelugath": [26, 259], "nbsp": [28, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 167, 172, 252, 263, 269, 271, 276, 284, 288, 294, 296, 300, 302, 306, 320, 328, 330, 332, 334, 336, 338, 342, 346, 358, 367, 376, 378, 380, 385, 387, 392, 396, 398, 400, 402, 406, 408, 410, 414, 416, 422, 424, 429, 439, 448, 450, 452, 482, 484, 486, 506, 513, 517, 524], "ncovari": 261, "ndash": [41, 481], "ndetail": [26, 259, 477, 511], "ndim": [181, 183, 197, 211, 212, 213, 214, 217, 218, 220, 223, 227, 261, 262, 331, 333], "ndt": [26, 89, 227, 252, 259, 261, 262, 330, 446, 452, 457, 458, 465, 468, 469], "ndt_amcl_nod": [452, 457, 458], "ndt_cell": [176, 262, 330, 331, 468, 469], "ndt_cell_typ": [89, 90, 213, 220, 262], "ndt_cell_typendt": 262, "ndt_cell_typetypenam": 262, "ndt_sensor_model": [89, 127, 176, 298, 299, 332, 356, 468, 469], "ndtamcl": [468, 469], "ndtamclnod": [453, 454, 459, 461, 463, 468, 469], "ndtamclnode2d": [465, 469], "ndtamclnodeexplicit": 453, "ndtamclnodendtamclnod": 469, "ndtamclnodeprotect": 453, "ndtamclvari": [452, 453, 468, 469], "ndtamclvariantal": 469, "ndtamclvariantstd": 469, "ndtcell": [115, 181, 197, 211, 212, 213, 214, 217, 218, 220, 223, 227, 252, 261, 262, 331], "ndtcell2d": [252, 253, 257, 261, 262, 468, 469], "ndtcell2dconveni": 262, "ndtcell2dndtcel": 262, "ndtcell2f": [252, 253, 257, 261], "ndtcell3d": [252, 253, 257, 261], "ndtcell3f": [252, 253, 257, 261], "ndtcellrepresent": [261, 262], "ndtmaprepresent": [452, 468, 469], "ndtmaprepresentationt": 262, "ndtmodelparam": [89, 115, 183, 212, 213, 223, 227, 252, 262, 333], "ndtmodelparam2d": [252, 253, 257, 262], "ndtmodelparam3d": [252, 253, 257, 262], "ndtmodelparamparamet": 262, "ndtsensormodel": [26, 90, 115, 197, 199, 200, 211, 212, 213, 214, 215, 218, 220, 224, 227, 252, 259, 262, 332, 452, 468, 469], "ndtsensormodelndt": 262, "ndtsensormodelndtsensormodel": 262, "nearest": [16, 44, 48, 50, 52, 72, 97, 107, 119, 163, 164, 235, 237, 241, 252, 266, 293, 305], "nearest_obstacle_distance_map": [163, 164, 241, 252, 253, 255], "nearest_obstacle_distance_mapauto": [164, 241], "nearest_obstacle_index": 164, "necessari": [3, 5, 6, 42, 262, 471, 473, 474, 482, 519], "necessarili": 64, "need": [0, 2, 3, 18, 29, 54, 104, 106, 172, 235, 252, 271, 289, 297, 396, 423, 441, 471, 473, 474, 513], "neg": 249, "negat": [282, 392, 414], "neigen": 259, "neighbor": [44, 48, 252, 332], "neighborhood": [12, 14, 44, 48, 50, 107, 119, 241, 243], "neighborhood4": [12, 14, 44, 45, 48, 49, 50, 51, 107, 108, 119, 199, 213, 241, 243, 486, 487], "neighborhood4auto": [119, 243], "neighbors_funct": [163, 164, 241, 252], "neighbors_functiongiven": 252, "neighbors_kernel": [213, 223, 262, 332], "neighbors_kernelbeluga": 333, "neighbors_kernelneighbor": 262, "neighbors_kernelstd": 262, "neighborsfunct": [163, 164, 241, 252], "neighborsfunctiona": 252, "neighborst": 252, "nelement": 167, "neural": [41, 481, 531], "never": 1, "new": [4, 18, 31, 33, 38, 54, 56, 74, 76, 80, 91, 104, 171, 228, 237, 241, 249, 252, 275, 336, 346, 358, 402, 432, 439, 440, 441], "new_cap": [104, 105, 432], "new_capnew": 104, "newer": 252, "next": [25, 42, 78, 249, 289, 297, 476, 482], "ninjemi": 11, "nio": 259, "nip": [41, 481, 531], "nmaximum": 64, "nmsgcompat": 511, "nnumber": 306, "node": [31, 442, 443, 446, 448, 452, 465, 466, 468, 469, 471, 473], "node_interfac": [443, 469], "nodelet": [444, 445, 446, 450, 465, 466], "nodeopt": [443, 448, 449, 452, 453, 469], "nodiscard": [25, 31, 33, 37, 38, 40, 119, 121, 175, 177, 230, 235, 237, 239, 241, 243, 247, 249, 251, 261, 262, 266, 268, 289, 291, 293, 297, 305, 309, 432, 436, 476, 503, 515], "noetic": 11, "noexcept": [37, 39, 40, 58, 59, 64, 65, 68, 70, 78, 91, 92, 95, 101, 104, 175, 177, 230, 249, 252, 282, 289, 291, 297, 311, 392, 393, 396, 397, 414, 415, 428, 429, 430, 432, 440, 476], "noexceptbeluga": [59, 65, 69, 71, 79, 92, 96, 102, 105, 393, 415], "noexceptcheck": 230, "noexceptclear": [40, 432], "noexceptcomput": 230, "noexceptconstruct": [175, 291], "noexceptconstructor": 428, "noexceptderefer": 230, "noexceptforward": 230, "noexceptget": 40, "noexcepthelp": 430, "noexceptmov": 249, "noexceptpop": 40, "noexceptpost": 230, "noexceptpr": 230, "noexceptreset": [25, 175, 428], "noexceptreturn": [40, 177, 282, 430, 432], "noexceptrewind": 230, "noexceptupd": 175, "nois": [31, 99, 121, 241, 268, 314, 320, 328, 334, 471, 473, 474], "noisi": [31, 314], "nolint": [37, 40, 169, 177, 249, 283, 303, 311, 423, 430, 440, 529], "nomin": 64, "nomotion_update_callback": [443, 445, 448, 449, 450, 451, 459, 461], "nomotion_update_callbackbool": 445, "nomotion_update_callbackvoid": 443, "nomotion_update_server_": [443, 445, 448, 450, 459, 463], "nomotion_update_server_beluga_amcl": [449, 451], "nomotion_update_server_no": [443, 445], "nomotion_update_server_rclcpp": 443, "nomotion_update_server_ro": 445, "non": [0, 1, 25, 26, 39, 40, 50, 64, 76, 95, 171, 227, 252, 259, 261, 280, 296, 389, 392, 414], "none": [64, 263], "nonneg": [473, 474], "norm": [33, 121, 171, 237, 268, 291], "normal": [4, 21, 22, 25, 26, 31, 33, 78, 80, 154, 159, 171, 176, 227, 228, 235, 237, 248, 249, 252, 259, 261, 287, 330, 338, 340, 424, 425, 441, 471, 473, 474, 476, 519], "normal_distribut": [2, 80, 81, 121, 228, 249, 268, 309], "normalize_and_squar": 166, "normalize_base_fn": [115, 200, 214, 263, 264, 339, 340, 341], "normalize_base_fnimplement": [227, 264], "normalize_base_fninlin": [339, 341], "normalize_fn": [115, 200, 214, 263, 264, 341], "normalize_fnimplement": [227, 264], "normalize_fninlin": 341, "normalizeconstexpr": 264, "normalized_weight": [166, 170, 171, 252], "normalized_weights_view": 171, "normalized_weightsrang": 252, "normalizedefinit": 264, "note": [17, 50, 52, 64, 262, 484], "notethi": [54, 56, 74, 76], "noth": 104, "notic": [33, 171, 237], "now": [5, 307], "nowher": [70, 230], "npolici": [26, 259], "nsophu": 259, "nsophussophu": 511, "nstate_detail": [26, 259], "nstd": [26, 259], "ntest": 259, "ntf2tf2": 511, "nth": 228, "nullari": 289, "nullopt": [25, 42, 44, 48, 72, 97, 119, 235, 243, 291, 305, 452, 469, 476, 482], "nullptr": [230, 262, 452, 469, 503], "num_dim": [89, 213, 223, 261, 262, 330], "num_dimbeluga": 331, "num_dimnumb": 261, "num_dimstat": 261, "number": [4, 11, 25, 83, 85, 87, 97, 107, 171, 226, 228, 235, 252, 269, 302, 305, 307, 312, 330, 342, 398, 400, 402, 406, 424, 436, 464, 471, 473, 474, 476, 484, 498, 518, 519], "number_of_non_zero_weight": 171, "numer": [26, 92, 115, 150, 165, 166, 170, 171, 176, 199, 200, 213, 214, 227, 252, 259, 263, 264, 281, 282, 310, 311, 417, 428, 441, 469], "numeric_limit": [26, 91, 115, 171, 227, 259, 264, 307, 310, 311, 418, 425, 428, 471, 484, 485, 503], "numericconstexpr": 311, "numerichelp": [282, 311], "nview": [26, 259], "nweight_detail": [26, 259], "o": [5, 27, 31, 64, 115, 179, 182, 194, 200, 214, 235, 241, 252, 253, 261, 302, 303, 330, 331, 432, 459, 461, 480, 488, 490, 492, 493, 500, 517], "object": [17, 18, 22, 26, 28, 29, 31, 33, 78, 80, 91, 121, 144, 154, 166, 167, 171, 172, 173, 176, 227, 228, 235, 237, 241, 249, 252, 259, 262, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 284, 285, 288, 289, 294, 295, 296, 297, 307, 309, 336, 338, 340, 342, 344, 346, 348, 358, 374, 378, 380, 387, 389, 392, 396, 398, 400, 404, 406, 408, 410, 412, 414, 422, 423, 424, 425, 429, 430, 432, 438, 439, 440], "observ": 1, "obstacl": [16, 24, 31, 50, 151, 163, 164, 176, 241, 252, 266, 314, 328, 473, 474], "obstacle_data": [16, 50, 51, 200, 214, 241, 266, 486, 487], "obstacle_dataauto": 266, "obstacle_map": [163, 164, 241, 252], "obstacle_mapa": 252, "obtain": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 228, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 276, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "occup": [16, 26, 31, 50, 54, 76, 85, 95, 153, 176, 227, 241, 250, 251, 252, 259, 265, 441, 443, 445, 448, 450, 452, 469, 473, 474, 477, 486, 499, 511, 514, 515, 521], "occupancy_grid": [50, 127, 138, 153, 176, 240, 241, 250, 251, 442, 443, 475, 476, 479, 480, 486, 490, 492, 504, 521], "occupancygrid": [2, 26, 30, 31, 55, 77, 86, 96, 115, 180, 181, 189, 190, 197, 198, 200, 202, 204, 205, 211, 212, 214, 215, 216, 218, 219, 220, 221, 224, 227, 240, 241, 250, 251, 252, 259, 290, 291, 443, 444, 445, 448, 449, 450, 451, 473, 474, 476, 477, 480, 482, 483, 487, 488, 490, 492, 493, 495, 497, 499, 500, 504, 506, 511, 514, 515, 521, 522], "occupancygrid2d": [2, 50, 54, 76, 273], "occupancygrida": [85, 95], "occupancygridconstsharedptr": [486, 487, 504, 515], "occupancygridinlin": 487, "occupancygridinlineexplicit": 487, "occupancygridinlinestat": 487, "occupancygridoccupancygrid": 515, "occupancygridthin": [476, 499, 504, 515], "occupancygridtyp": [54, 76], "occupi": [16, 515, 521], "occur": [448, 450, 452], "odom": [443, 445, 448, 450, 452, 469, 471, 473, 474], "odom_alpha1": 473, "odom_alpha2": 473, "odom_alpha3": 473, "odom_alpha4": 473, "odom_alpha5": 473, "odom_frame_id": [471, 473, 474], "odometri": [6, 26, 66, 93, 99, 120, 121, 156, 176, 227, 228, 245, 252, 259, 267, 268, 309, 320, 334, 471, 473, 474, 482], "off": [5, 101], "offici": 5, "offset": [70, 71, 230, 241, 262], "often": 3, "old": 262, "older": [252, 473], "oldest": 64, "omit": 6, "omni": 473, "omni_motion_model": 268, "omnidirect": [26, 93, 156, 176, 227, 228, 245, 252, 259, 267, 268, 441, 471], "omnidirectional_dr": [471, 473, 474], "omnidirectional_drive_model": [93, 156, 176, 244, 245, 334, 468, 469], "omnidirectionaldrivemodel": [15, 26, 94, 115, 181, 200, 214, 215, 218, 220, 227, 228, 252, 259, 267, 268, 334, 468, 469, 476, 482], "omnidirectionaldrivemodelinlin": 94, "omnidirectionaldrivemodelinlineexplicit": 94, "omnidirectionaldrivemodelomnidirectionaldrivemodel": 268, "omnidirectionaldrivemodelparam": [93, 115, 183, 216, 218, 219, 223, 252, 267, 268, 335], "omnidirectionaldrivemodelparamparamet": [227, 268], "omnidirectionaldrivemodelsampl": [227, 268], "omnimotionmodel": [471, 474], "on_activ": [443, 448, 449, 452, 453, 459, 461, 469], "on_activatecallbackreturn": [443, 469], "on_cleanup": [443, 448, 449, 452, 453, 459, 461, 469], "on_cleanupcallbackreturn": [443, 469], "on_configur": [443, 448, 449, 452, 453, 459, 461, 469], "on_configurecallbackreturn": [443, 469], "on_deactiv": [443, 448, 449, 452, 453, 459, 461, 469], "on_deactivatecallbackreturn": [443, 469], "on_effective_size_drop": [25, 145, 176, 228, 278, 279, 378, 476], "on_effective_size_drop_polici": [25, 26, 115, 200, 210, 214, 223, 227, 259, 269, 270, 379], "on_effective_size_drop_policyimplement": [227, 270], "on_effective_size_drop_policyinlin": 379, "on_effective_size_drop_policystat": 379, "on_effective_size_dropconstexpr": [25, 270], "on_effective_size_droppolici": [25, 270], "on_mot": [25, 145, 176, 228, 278, 279, 380, 382, 384, 385, 476], "on_motion_fn": [25, 26, 115, 200, 214, 227, 259, 271, 272, 381, 476], "on_motion_fnimplement": [227, 272], "on_motion_fninlin": 381, "on_motion_polici": [26, 115, 200, 214, 227, 259, 271, 272, 383], "on_motion_policy_bas": [26, 115, 200, 214, 227, 259, 271, 272, 385, 386], "on_motion_policy_baseconstexpr": 272, "on_motion_policy_baseprimari": 272, "on_motion_policybas": 272, "on_motionconstexpr": [25, 272, 476], "on_motionpolici": [25, 272], "on_shutdown": [443, 448, 449, 452, 453, 459, 461, 469], "on_shutdowncallbackreturn": [443, 469], "onc": [6, 28, 423, 476], "one": [6, 26, 36, 37, 60, 62, 78, 85, 104, 227, 252, 259, 297, 387, 404, 473, 474, 518], "oner": 3, "ones": 441, "oninit": [445, 450, 451, 459, 461], "oninitvoid": 445, "onli": [5, 37, 56, 62, 64, 70, 91, 99, 104, 235, 252, 262, 296, 300, 306, 471, 473, 474, 518, 519], "op": [64, 336], "opac": 518, "open": [6, 11, 307, 441], "opendataset": 262, "oper": [2, 29, 31, 33, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 109, 110, 111, 112, 113, 114, 121, 173, 175, 200, 214, 217, 228, 230, 237, 241, 249, 251, 252, 253, 255, 261, 262, 264, 268, 270, 272, 275, 280, 282, 285, 289, 295, 297, 302, 303, 307, 309, 311, 318, 319, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 359, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 396, 397, 398, 399, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 425, 428, 440, 477, 484, 493, 495, 499, 511, 518, 523, 524, 525], "opera": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "opt": [5, 28], "opt_landmark_bearing_in_sensor": 33, "opt_landmark_position_in_world": 237, "optim": [3, 26, 36, 37, 58, 227, 235, 252, 259, 432], "optin": 40, "option": [12, 14, 25, 33, 42, 43, 64, 72, 95, 97, 118, 119, 120, 121, 235, 237, 242, 243, 267, 268, 272, 288, 289, 290, 291, 304, 305, 308, 309, 442, 443, 445, 448, 449, 450, 451, 452, 453, 468, 469, 475, 476, 482, 483], "order": [2, 28, 38, 264, 285, 295, 338, 340, 342, 344, 346, 348, 471], "org": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 356, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "organ": 228, "orient": [171, 515, 518, 529], "origin": [13, 16, 50, 95, 241, 266, 275, 291, 476, 484, 485, 486, 487, 493, 495, 503, 515], "origin_": [503, 515], "originconst": [503, 515], "originlas": 484, "osan": 302, "ostream": [261, 302, 303, 330, 331], "other": [2, 4, 18, 37, 40, 42, 62, 63, 64, 65, 70, 71, 78, 79, 80, 81, 226, 228, 230, 249, 264, 284, 285, 289, 295, 318, 319, 338, 340, 342, 344, 346, 348, 387, 398, 408, 410, 423, 425, 429, 439, 464, 473, 474, 498, 518], "otheranoth": 78, "otherdistribut": 78, "otherparamet": 80, "otherwis": [40, 44, 48, 64, 78, 80, 104, 376, 378, 385, 448, 450, 452], "our": 6, "out": [1, 3, 6, 40, 42, 506, 513, 527, 528, 529], "out_of_rang": [40, 97], "out_of_rangeif": 64, "outa": 513, "output": [26, 68, 175, 227, 252, 259, 302, 396, 428, 439, 440], "output_": 175, "outth": 513, "over": [3, 4, 19, 101, 104, 228, 235, 422, 473, 474, 480, 490, 492, 500, 517], "overhead": 3, "overload": [17, 29, 37, 39, 40, 58, 62, 91, 104, 173, 228, 252, 261, 264, 280, 282, 285, 295, 300, 318, 330, 336, 338, 340, 342, 344, 346, 348, 374, 376, 378, 380, 387, 392, 396, 398, 404, 408, 410, 412, 414, 432, 440, 480, 490, 492, 500, 505, 511, 513, 518, 526, 527, 528, 529], "overrid": [443, 445, 448, 449, 450, 451, 452, 453, 469], "overridebeluga_amcl": [449, 451, 453], "overridecallback": [443, 445, 469], "overwrit": [64, 252], "overwritten": 252, "ow": 3, "own": 16, "p": [4, 5, 12, 16, 17, 18, 19, 27, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 115, 119, 179, 182, 194, 201, 215, 220, 252, 266, 293, 424, 425, 459, 461, 463, 471, 473, 474, 476, 486, 487, 493, 519], "p0": [37, 58, 59, 60, 61], "p0_": 37, "p0line": 60, "p0start": 58, "p1": [37, 58, 59, 60, 61], "p1_": 37, "p1end": 58, "p1line": 60, "p2593r1": 307, "packag": [5, 472], "page": [26, 41, 226, 227, 252, 259, 274, 275, 372, 464, 481, 498], "pair": [25, 31, 40, 42, 54, 64, 70, 76, 97, 170, 171, 241, 252, 305, 423, 439, 443, 445, 448, 449, 450, 451, 452, 453, 469, 476, 482, 483], "paper": 307, "par": [471, 473, 474], "parallel": [441, 473, 474], "parallel_polici": [25, 468, 469, 476, 482], "param": [18, 25, 31, 33, 42, 43, 54, 55, 56, 57, 66, 67, 74, 75, 76, 77, 78, 79, 89, 90, 93, 94, 121, 201, 215, 237, 241, 243, 249, 262, 268, 476, 482, 483], "param_typ": [18, 31, 33, 54, 55, 56, 57, 66, 67, 74, 75, 76, 77, 78, 79, 89, 90, 93, 94, 121, 215, 220, 237, 241, 249, 262, 268], "param_typebearingmodelparam": 33, "param_typedifferentialdrivemodelparam": 121, "param_typelandmarkmodelparam": 237, "param_typelikelihoodfieldmodelparam": 241, "param_typemultivariatenormaldistributionparam": 249, "param_typendtmodelparam": 262, "param_typeomnidirectionaldrivemodelparam": 268, "param_typeparamet": [33, 121, 237, 241, 262, 268], "param_typeth": 249, "paramconst": 249, "paramet": [6, 18, 25, 26, 30, 31, 32, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 120, 167, 226, 227, 236, 240, 248, 249, 252, 259, 261, 262, 267, 268, 296, 300, 302, 306, 312, 314, 316, 320, 324, 328, 332, 334, 338, 342, 346, 358, 376, 378, 382, 384, 385, 398, 400, 406, 408, 410, 416, 418, 443, 445, 448, 450, 452, 464, 469, 471, 475, 476, 477, 482, 484, 486, 498, 499, 506, 511, 513, 519, 524], "parameter": 296, "parameterdescriptor": 471, "parametervalu": 471, "parametr": [18, 443, 445, 448, 450, 452, 469], "params_": [25, 31, 33, 89, 121, 237, 241, 249, 262, 268, 476], "params_path": 6, "paramsdistribut": 78, "paramsnew": 78, "paramsparamet": [42, 54, 56, 66, 74, 76, 89, 93, 482], "paramsth": 78, "paramvoid": 249, "parent": 164, "part": [4, 25, 171, 252, 312], "partial": [3, 468], "particl": [4, 11, 15, 20, 24, 25, 26, 31, 33, 41, 42, 43, 54, 56, 66, 74, 76, 89, 93, 99, 101, 121, 144, 150, 151, 165, 166, 170, 171, 176, 200, 201, 214, 215, 227, 228, 237, 241, 252, 259, 262, 263, 264, 268, 269, 273, 274, 275, 281, 282, 284, 285, 294, 295, 296, 297, 306, 307, 309, 312, 342, 346, 359, 372, 378, 391, 392, 402, 410, 414, 424, 425, 428, 434, 437, 438, 441, 443, 445, 448, 450, 452, 468, 469, 471, 476, 480, 481, 482, 483, 490, 492, 493, 495, 500, 506, 517, 518, 519, 531], "particle_cloud": [6, 474, 479, 480, 490, 492, 500, 523, 524], "particle_cloud_pub_": [443, 445, 448, 450, 452, 459, 463, 469], "particle_cloud_pub_beluga_amcl": [449, 451, 453], "particle_cloud_pub_particl": [443, 445, 469], "particle_cloud_pub_rclcpp_lifecycl": [443, 469], "particle_cloud_pub_ro": 445, "particle_cloud_timer_": [445, 450, 459, 463], "particle_cloud_timer_beluga_amcl": 451, "particle_cloud_timer_callback": [445, 450, 451, 459, 461], "particle_cloud_timer_callbackvoid": 445, "particle_cloud_timer_ro": 445, "particle_cloud_timer_tim": 445, "particle_filter_": [443, 445, 448, 450, 452, 459, 463, 469], "particle_filter_beluga_amcl": [449, 451, 453], "particle_filter_particl": [443, 445, 469], "particle_filter_std": [443, 445, 469], "particle_mark": 474, "particle_markers_pub_": [443, 448, 459, 463], "particle_markers_pub_beluga_amcl": 449, "particle_markers_pub_particl": 443, "particle_markers_pub_rclcpp_lifecycl": 443, "particle_trait": [115, 150, 165, 166, 176, 218, 220, 224, 227, 252, 263, 264, 284, 285, 294, 295, 296, 297, 358, 373, 424, 425, 428, 433, 434, 518], "particle_traitscommon": 275, "particle_typ": [25, 227, 476, 482, 483, 493, 496], "particle_typestd": 476, "particle_typeweight": 476, "particlecloud": 473, "particlefilt": [15, 20], "particles_": [25, 227, 476], "particlesa": 506, "particlesconst": [25, 476], "particlesdistribut": 506, "particlespos": 506, "particleth": 252, "particletyp": [25, 43, 178, 187, 188, 193, 196, 201, 205, 209, 215, 221, 227], "particletypeful": 42, "particular": [97, 474], "particularli": [320, 328], "pass": [387, 396], "past": [36, 37, 40, 60, 62, 64, 70, 318], "path": [5, 262, 471, 472], "path_to_hdf5_fil": 262, "pattern": [2, 91], "per": [109, 307, 443, 445, 448, 450, 452, 469, 518], "percentag": [270, 378, 474], "percept": [241, 328], "perfect_odometri": 6, "perform": [4, 6, 11, 42, 54, 76, 95, 104, 172, 241, 252, 268, 271, 293, 471, 482], "period": [172, 443, 445, 448, 450, 452, 469, 474], "permiss": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "petar": 41, "pf_err": [471, 473, 474], "pf_z": [471, 473, 474], "phantom": 91, "phantomtyp": [26, 92, 115, 199, 200, 213, 214, 227, 259, 310, 311, 417], "phantomtypeempti": 91, "phantomtypephantom": [416, 418], "physic": 54, "pi": [11, 12, 16, 19, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 119, 121, 241, 243, 266, 268, 293, 471, 473, 474, 476, 486, 487, 519], "pictur": 6, "pigrid": [44, 48, 50, 52], "pipelin": [423, 468], "pkg": [5, 6], "place": [3, 70, 121, 230, 268, 320, 334], "plai": 6, "plainmatrix": [247, 367], "plane": [33, 44, 48, 50, 52, 97, 107, 237, 243, 266, 293, 305, 484], "platform": [11, 262, 473, 474], "pleas": 0, "plenti": [2, 6], "plu": [31, 166, 171, 241, 262], "plugin": 474, "point": [17, 25, 26, 31, 33, 37, 40, 46, 54, 55, 58, 60, 64, 70, 74, 76, 77, 89, 90, 121, 166, 171, 226, 227, 230, 237, 239, 241, 252, 259, 261, 262, 268, 275, 277, 281, 282, 285, 307, 309, 312, 330, 392, 414, 425, 464, 498, 504, 513, 518, 526, 527, 529], "pointer": [37, 40, 62, 63, 64, 65, 70, 71, 215, 220, 230], "pointerdecltyp": 230, "pointerpoint": 37, "pointervalu": [40, 230], "pointervalue_typ": 40, "pointervector2": 37, "points2d": [54, 76, 89], "points_in_cartesian_coordin": [46, 47, 201, 215, 239, 476, 484, 485], "points_in_cartesian_coordinatesauto": 239, "points_in_cel": 262, "points_in_polar_coordin": [46, 47, 201, 215, 239, 484, 485], "points_in_polar_coordinatesauto": 239, "points_view": 262, "polar": [46, 239], "polici": [2, 11, 25, 26, 34, 35, 42, 115, 146, 176, 184, 192, 200, 201, 210, 214, 215, 223, 227, 228, 252, 259, 263, 264, 284, 285, 294, 295, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 441, 443, 445, 448, 450, 452, 468, 469, 471, 473, 474, 476, 482], "policiesinclud": 137, "policiespolici": 125, "policy_bas": [115, 214, 217, 252, 280, 390], "policy_basefriend": 390, "policy_baseimplement": [227, 280], "policyconstexpr": 280, "policyfn": [200, 201, 214, 215, 227, 280, 388], "policyforward": [25, 264, 270, 280, 285, 295], "policypolici": 280, "policyth": [338, 342, 346], "polymorph": 3, "poor": 293, "pop": [64, 164], "pop_back": [40, 64, 65, 201, 215], "pop_backstd": 40, "pop_front": [40, 64, 65, 201, 215], "pop_frontstd": 40, "popul": [296, 471, 473, 474, 476, 519], "popular": [1, 6], "port": 474, "portion": 19, "pose": [6, 25, 33, 42, 43, 66, 72, 83, 85, 87, 93, 99, 121, 170, 171, 200, 214, 227, 233, 235, 237, 251, 252, 268, 271, 272, 309, 316, 326, 383, 385, 441, 443, 445, 448, 450, 452, 469, 471, 476, 482, 483, 504, 505, 506, 513, 515, 517, 518, 519, 528, 529], "pose_arrai": [442, 443, 468, 469, 504], "pose_pub_": [443, 445, 448, 450, 452, 459, 463, 469], "pose_pub_beluga_amcl": [449, 451, 453], "pose_pub_estim": [443, 445, 469], "pose_pub_rclcpp_lifecycl": [443, 469], "pose_pub_ro": 445, "pose_stamp": 471, "pose_to_weighted_eigen_vector": 171, "pose_with_covariance_stamp": [442, 443, 468, 469], "posearrai": [443, 448, 452, 469, 473, 474, 504, 506, 517, 518], "posesa": 252, "posespos": 252, "poseth": [252, 382, 384], "posewithcovariancestamp": [443, 444, 445, 448, 449, 450, 451, 452, 453, 469, 473, 474], "posit": [64, 70, 74, 230, 232, 235, 237, 252, 266, 307, 441, 515, 529], "possibl": [2, 4, 15, 16, 20, 410, 425], "possibli": [12, 13, 14, 15, 16, 17, 18, 19, 20, 42, 97, 228, 252, 282, 387, 429, 430], "post": [37, 62, 70, 471, 473, 474], "posterior": [4, 252, 342], "potenti": 70, "power": [2, 6], "pplane": [44, 50, 52], "practic": 289, "practition": 1, "pre": [70, 76, 330], "precalcul": 33, "precis": 518, "precomput": 85, "predic": [2, 228, 387], "predict": 4, "predtyp": 262, "prefigur": 4, "prefix": [6, 37, 62], "presenc": [39, 40, 252], "present": [97, 262, 305, 332], "preserv": 2, "press": [41, 481, 531], "prev": [272, 289, 385, 386], "prev_error_": 37, "prevent": [31, 42, 471, 482], "previou": [4, 66, 93, 99, 121, 268, 309, 385], "previous": 252, "previous_orient": [121, 268], "previous_pos": [121, 268], "prevth": 385, "primari": [82, 103, 227, 252, 384], "primarili": 11, "primit": [25, 31, 33, 34, 35, 121, 146, 163, 164, 166, 170, 171, 176, 237, 241, 262, 268, 274, 275, 276, 277, 285, 307, 309, 311, 392, 414, 425, 468, 469, 517, 518], "print": 302, "printer": [155, 176, 302, 427], "prior": [4, 342, 423], "priority_queu": 164, "privat": [25, 31, 33, 37, 40, 121, 173, 175, 226, 230, 235, 237, 241, 249, 251, 262, 268, 272, 289, 291, 297, 305, 307, 311, 428, 432, 436, 464, 476, 498, 503, 515], "privatebas": [226, 464, 498], "prob": 518, "probabilist": [6, 41, 54, 66, 74, 76, 101, 228, 237, 314, 320, 324, 328, 481, 531], "probabilityth": [398, 400], "probabl": [2, 4, 16, 18, 25, 26, 33, 101, 227, 228, 237, 241, 252, 259, 288, 289, 328, 398, 399, 400, 401, 402, 428, 471, 473, 474, 476, 518, 519], "problem": [41, 262], "proceed": [5, 41, 481, 531], "process": [4, 41, 42, 448, 450, 452, 471, 473, 474, 481, 531], "produc": [28, 42, 228], "product": 235, "profession": 0, "program": [2, 3, 252], "proj": 425, "project": [5, 33, 58, 235, 237, 472], "prologu": [169, 176], "proof": [1, 235], "propag": [2, 4, 15, 21, 22, 25, 26, 154, 176, 227, 228, 259, 275, 342, 344, 476], "propagate_base_fn": [115, 200, 214, 284, 285, 343, 344, 345], "propagate_base_fnimplement": [227, 285], "propagate_base_fninlin": [343, 345], "propagate_fn": [115, 200, 214, 284, 285, 345], "propagate_fnimplement": [227, 285], "propagate_fninlin": 345, "propagateconstexpr": 285, "propagatedefinit": 285, "properti": [177, 252, 301], "proport": [252, 518], "propos": [4, 6], "protect": [226, 297, 402, 404, 443, 445, 448, 450, 452, 464, 469, 498], "protectedbas": [226, 464, 498], "protocol": 364, "prototyp": 252, "provid": [3, 17, 38, 42, 70, 76, 78, 80, 85, 91, 104, 241, 251, 252, 300, 385, 432, 441, 466, 472, 473, 474, 482, 500, 518], "provis": 6, "proxi": 518, "ptrdiff_t": [37, 40, 62, 64, 104, 171, 432], "public": [25, 31, 33, 37, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 107, 109, 111, 113, 119, 121, 173, 175, 226, 230, 235, 237, 239, 241, 243, 249, 251, 262, 264, 266, 268, 272, 275, 280, 285, 289, 291, 293, 295, 297, 305, 307, 309, 311, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 351, 355, 356, 358, 366, 367, 371, 372, 374, 376, 378, 380, 382, 385, 387, 392, 396, 398, 400, 404, 406, 408, 410, 412, 414, 416, 419, 428, 432, 436, 443, 445, 448, 452, 464, 469, 476, 482, 484, 486, 498, 503, 515, 519, 521, 524], "publicbas": [226, 464, 498], "publish": [6, 443, 445, 448, 450, 452, 469, 471, 518], "pull": 518, "punish": 432, "pure": 6, "purpl": [226, 464, 474, 498, 518], "purpos": [1, 261, 330], "push": [39, 40, 64, 164, 252], "push_back": [40, 64, 65, 104, 105, 201, 215, 243, 252, 262, 432, 518], "push_back_impl": 432, "push_backconstexpr": 432, "push_backstd": 40, "push_front": [40, 64, 65, 201, 215, 252], "push_frontstd": 40, "put": 2, "py": 6, "pz": 31, "q": 4, "qo": [6, 474], "qualiti": [1, 11], "quantil": [252, 424, 425, 471, 473, 474, 476, 519], "quaternion": 529, "queri": 237, "queue": [163, 164], "quickmcl": [31, 241], "quit": [6, 432], "quot": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "r": [0, 5, 16, 19, 27, 104, 105, 115, 179, 182, 194, 202, 216, 220, 223, 253, 275, 300, 301, 432, 493, 518], "r1": 291, "radian": [13, 25, 109, 312, 385, 471, 506, 518, 524], "rai": [26, 31, 54, 76, 95, 227, 241, 252, 259, 290, 291, 328], "rainbow": 518, "raison": 1, "ramiro": [31, 262], "random": [3, 12, 14, 18, 25, 26, 30, 31, 32, 33, 34, 35, 40, 42, 70, 78, 80, 82, 83, 85, 87, 101, 120, 121, 146, 149, 176, 227, 229, 230, 236, 237, 240, 241, 252, 259, 267, 268, 284, 285, 288, 289, 296, 297, 308, 309, 312, 314, 328, 342, 365, 366, 367, 371, 398, 400, 402, 404, 406, 468, 469, 471, 473, 474, 519], "random_access_iterator_tag": [70, 230], "random_access_rang": [296, 297], "random_interspers": [25, 26, 144, 176, 227, 228, 259, 398, 400, 437, 438, 476], "random_intersperse_fn": [115, 200, 210, 214, 223, 288, 289, 399], "random_intersperse_fnimplement": [227, 289], "random_intersperse_fninlin": 399, "random_intersperse_fnstat": 399, "random_intersperse_view": [115, 202, 216, 227, 288, 289, 401], "random_intersperse_viewconstexpr": 289, "random_intersperse_viewimplement": 289, "random_intersperse_viewrandom_intersperse_view": 289, "random_intersperseconstexpr": 289, "random_interspersedefinit": 289, "random_probability_estimator_": [25, 476], "random_st": [25, 476], "random_state_gener": [25, 42, 43], "random_state_generator_": 25, "random_state_generator_typ": 25, "random_state_generatora": 42, "random_state_prob": [25, 476], "randominclud": 138, "randomli": [296, 424], "randomnumberdistribut": [18, 406], "randomrandom": 126, "randomstatedistribut": [78, 273], "randomstategener": [25, 43, 178, 187, 188, 193, 196, 201, 205, 209, 215, 221, 227, 468, 469], "randomstategeneratora": 42, "randomstategeneratorstd": 469, "randomstategeneratortyp": 469, "rang": [3, 12, 13, 14, 16, 19, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 60, 62, 64, 74, 76, 82, 85, 89, 95, 97, 98, 101, 102, 104, 105, 107, 108, 144, 146, 152, 154, 163, 164, 165, 166, 167, 168, 170, 171, 176, 202, 203, 216, 218, 227, 228, 234, 235, 236, 237, 238, 239, 240, 241, 251, 252, 259, 261, 262, 263, 264, 265, 266, 269, 270, 274, 275, 276, 277, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 314, 318, 324, 328, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 378, 379, 392, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 422, 423, 424, 425, 428, 431, 432, 438, 439, 440, 441, 471, 473, 474, 475, 476, 484, 485, 486, 487, 493, 495, 502, 503, 506, 517, 518], "range_": 297, "range_access": [289, 297], "range_difference_t": 297, "range_error": 237, "range_error_prob": 237, "range_max": 503, "range_min": 503, "range_v3_major": [169, 283], "range_v3_minor": [169, 283], "range_value_t": [170, 171, 239, 252, 275, 285, 289, 297, 425, 506, 517, 518], "rangea": [101, 252, 398, 400, 406, 408], "rangean": [338, 342, 346, 410], "ranger": 11, "rangerang": 252, "ranges_value_t": 396, "rangesauto": 503, "rangesourc": [408, 410], "rangesv3": 3, "rangeth": [252, 378, 398, 400, 406], "rao": [41, 481, 531], "rarr": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "raspberri": 11, "rate": [101, 471, 473, 474, 476, 519], "rather": [64, 252, 402], "ratio": [101, 307, 518], "raw_difference_typ": 230, "ray2d": [31, 96, 115, 181, 190, 202, 204, 216, 219, 227, 252, 290, 291], "ray2dcast": [31, 291], "ray2dray2d": 291, "raycast": [23, 24, 30, 31, 58, 60, 62, 95, 151, 176, 318], "raycastingraycast": 131, "raytrac": [36, 54, 162, 176, 291], "rbegin": [40, 64, 65, 202, 216], "rbeginconstexpr": 40, "rcl_interfac": 471, "rclcpp": [443, 448, 449, 452, 453, 469, 471, 504], "rclcpp_lifecycl": [442, 443, 448, 449, 452, 453, 468, 469, 471], "re": [1, 31, 38, 76, 171, 264, 285, 295, 338, 340, 342, 344, 346, 348, 443, 445, 448, 449, 450, 452, 469, 473, 474], "reach": [40, 64, 252, 432], "react": 252, "read": [4, 31, 54, 64, 262, 289, 297, 314, 473, 474], "read_onli": 471, "readabl": [3, 37, 40, 423, 529], "readi": 500, "real": [78, 97, 305], "receiv": 471, "recommend": [6, 101], "recov": [33, 101, 471, 473, 474, 476, 519], "recoveri": [25, 312], "recovery_alpha_fast": [471, 473, 474], "recovery_alpha_slow": [471, 473, 474], "recur": 2, "recurs": 4, "red": [226, 464, 474, 498, 518], "reduc": 471, "ref": [289, 297, 476], "refer": [11, 14, 17, 25, 27, 33, 37, 40, 63, 65, 71, 177, 179, 182, 194, 216, 220, 228, 230, 233, 235, 237, 241, 256, 260, 282, 289, 297, 430, 440, 447, 460, 466, 476, 478, 494, 500, 510, 512, 515], "reference_typ": [104, 105, 216, 220, 432], "reference_typerang": 432, "reference_typerefer": 432, "reference_wrapp": [289, 297, 398, 399, 404, 405], "referencedecltyp": 230, "referencefin": 91, "referencerefer": 37, "referencevalu": [40, 230], "referencevalue_typ": 40, "referencevector2": 37, "regardless": 95, "region": [4, 26, 83, 87, 227, 250, 251, 252, 259], "regular": [2, 12, 16, 19, 26, 52, 97, 119, 153, 176, 227, 252, 259, 261, 262, 292, 304, 305], "regular_grid": [52, 118, 119, 153, 176, 304, 305], "regulargrid2": [12, 52, 273], "regularli": [3, 52, 227, 252, 292], "reinitialize_global_loc": 474, "reinterpret_cast": 262, "rel": [1, 56, 235, 320, 334, 473, 474], "relat": [0, 6, 27, 144, 166, 176, 182, 226, 264, 276, 285, 295, 297, 336, 428, 438, 441, 464, 498], "relationfil": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "relev": 64, "reli": [2, 3, 56, 76, 252], "reliabl": [6, 474], "reloc": [443, 445, 448, 450], "remain": 432, "remap": 474, "rememb": 5, "remov": [38, 432, 476], "remove_cv_t": [70, 230], "remove_reference_t": [70, 177, 230], "rend": [40, 64, 65, 202, 216], "rendconstexpr": 40, "renorm": 171, "rep": 11, "repeat": [18, 64, 445, 450], "repeat_n": [170, 171], "replac": [4, 104, 144, 176, 293, 296, 432, 438], "replic": 518, "report": 484, "repres": [4, 15, 16, 20, 42, 54, 72, 76, 78, 80, 89, 97, 111, 113, 226, 232, 233, 235, 252, 307, 402, 448, 450, 452, 464, 474, 498, 518], "represent": [31, 54, 56, 74, 76, 89, 171, 227, 241, 247, 252, 262, 330, 366, 367, 371, 468], "reproduc": 3, "req": [443, 448, 449], "request": [443, 445, 448, 449, 450, 451, 473, 474], "request_head": [443, 448, 449], "request_nomotion_upd": [473, 474], "requir": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 62, 64, 66, 74, 76, 78, 80, 89, 93, 99, 117, 119, 121, 150, 164, 166, 168, 169, 171, 173, 175, 176, 177, 227, 228, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 259, 261, 262, 264, 266, 268, 270, 272, 273, 274, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 296, 297, 299, 301, 303, 305, 307, 309, 311, 318, 342, 372, 398, 400, 406, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 474, 476, 480, 482, 503, 504, 506, 515, 518, 519, 527, 529], "resampl": [4, 11, 25, 41, 42, 101, 228, 252, 296, 312, 378, 402, 441, 471, 473, 474, 476, 482, 518, 519], "resample_interv": [25, 216, 223, 312, 471, 473, 474, 476, 493, 497, 519], "resample_intervalbeluga": 313, "resample_intervalbeluga_ro": 520, "resample_intervalfilt": 25, "resample_intervalnumb": 476, "resample_intervalstd": [25, 476], "resample_policy_": [25, 476], "research": [0, 1], "reserv": [104, 105, 202, 216, 262, 432, 518], "reserveconstexpr": 432, "reset": [18, 25, 68, 69, 78, 79, 101, 102, 175, 202, 216, 249, 289, 428, 473, 474, 476], "resetconstexpr": [25, 175, 428, 476], "resetvoid": 249, "resiz": [104, 105, 202, 216, 432, 471], "resizeconstexpr": 432, "resolut": [19, 44, 48, 50, 52, 97, 98, 107, 108, 109, 111, 112, 113, 114, 202, 216, 241, 262, 293, 305, 306, 307, 436, 471, 473, 474, 476, 477, 486, 487, 493, 495, 499, 505, 506, 511, 513, 515, 517, 518, 519, 524, 526, 527, 528, 529], "resolution_": [305, 307, 436], "resolution_dataset": 262, "resolution_in_each_axis_t": [111, 112, 113, 114, 216, 220, 307], "resolution_in_each_axis_tstd": 307, "resolution_in_each_axis_ttyp": 307, "resolutiondoubl": [305, 436, 515], "resolutiongrid": [97, 107], "resolutionstd": [111, 113], "resolutionth": 306, "respect": [2, 4, 64], "respons": [443, 445, 448, 449, 450, 451], "rest": [1, 38, 474], "restor": 473, "restore_default": 473, "result": [3, 4, 18, 28, 29, 38, 78, 82, 91, 119, 171, 226, 243, 247, 248, 249, 252, 289, 306, 336, 366, 367, 371, 387, 425, 464, 473, 474, 476, 498], "result_typ": [18, 78, 79, 216, 220, 247, 248, 249, 252, 289, 297, 366, 367, 368, 369, 370, 371], "result_typesophu": 247, "result_typeth": [247, 249], "result_typetypenam": [247, 249], "ret": 262, "retri": 474, "retriev": [12, 50], "return": [12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 31, 33, 37, 38, 40, 42, 54, 56, 60, 64, 72, 74, 76, 78, 89, 95, 97, 104, 119, 121, 163, 164, 166, 167, 168, 170, 171, 173, 175, 177, 227, 228, 230, 235, 237, 239, 241, 243, 247, 249, 251, 252, 259, 261, 262, 264, 266, 268, 270, 272, 274, 275, 280, 282, 285, 289, 291, 293, 295, 297, 301, 303, 305, 306, 307, 309, 311, 338, 340, 342, 344, 346, 348, 355, 358, 362, 364, 376, 382, 385, 394, 396, 398, 400, 408, 410, 422, 423, 424, 425, 428, 429, 430, 432, 436, 439, 440, 448, 450, 452, 476, 482, 503, 504, 515, 518, 527, 529], "returnsa": [54, 56, 66, 74, 76, 83, 85, 87, 89, 93, 99, 252, 513], "returnsan": [42, 482], "returnscel": [44, 48], "returnsdist": 95, "returnsful": 95, "returnsgrid": 52, "returnsplan": [48, 50, 52], "returnsrang": [44, 48, 50, 52], "returnssize_t": 416, "returnssubtend": 58, "returnsth": [72, 78, 80, 101, 109, 111, 113, 252, 306, 358, 513], "returnstru": [78, 80, 376, 378, 385, 448, 450, 452], "reus": [1, 2], "reusabl": [2, 3, 441, 466], "revers": [40, 64, 252], "reverse_iter": [40, 64, 65, 216, 220], "reverse_iteratorrevers": 40, "reverse_iteratorstd": 40, "reversed_": 37, "revisit": 262, "reweight": [20, 21, 22, 25, 26, 154, 176, 227, 228, 259, 346, 348, 476], "reweight_base_fn": [115, 200, 214, 294, 295, 347, 348, 349], "reweight_base_fnimplement": [227, 295], "reweight_base_fninlin": [347, 349], "reweight_fn": [115, 200, 214, 294, 295, 349], "reweight_fnimplement": [227, 295], "reweight_fninlin": 349, "reweightconstexpr": 295, "reweightdefinit": 295, "rewind": 70, "rflag": [39, 40, 252], "rgba": [517, 518], "rh": 261, "ridlei": 11, "right": [280, 389, 390], "right_hash": 307, "rigidli": [473, 474], "rmw_request_id_t": [443, 448, 449], "ro": [1, 6, 11, 31, 442, 443, 444, 445, 446, 448, 450, 451, 452, 457, 465, 466, 468, 469, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "robot": [1, 11, 33, 41, 54, 66, 74, 76, 101, 233, 237, 314, 316, 320, 324, 326, 328, 441, 471, 472, 473, 474, 481, 531], "robot_model_typ": [471, 473, 474], "robot_pose_in_world": [33, 237], "robust": 101, "roll": [11, 39, 252], "rollingwindow": [25, 39, 40, 252, 253, 257, 476], "rollov": 64, "ros2": [6, 518], "ros2_common": 458, "ros_distro": 5, "rosdep": 5, "roslaunch": 6, "rospack": 6, "rosrun": 6, "rotat": [85, 109, 121, 171, 252, 268, 306, 307, 320, 334, 385, 471, 473, 474, 515, 518, 519, 524, 529], "rotation_noise_from_rot": [121, 216, 223, 268, 320, 334], "rotation_noise_from_rotationbeluga": [321, 335], "rotation_noise_from_rotationdoubl": [121, 268], "rotation_noise_from_rotationrot": [121, 268], "rotation_noise_from_transl": [121, 216, 223, 268, 320, 334], "rotation_noise_from_translationbeluga": [321, 335], "rotation_noise_from_translationdoubl": [121, 268], "rotation_noise_from_translationrot": [121, 268], "rotation_param": 268, "rotation_vari": [121, 268], "rotz": [33, 237], "roughli": [227, 465, 499], "routin": 241, "row": [247, 249, 302, 303, 486, 513, 515, 528, 529], "rowsatcompiletim": [247, 249, 367], "rowsth": 302, "rowwis": 262, "rsquo": 42, "rtabmap": 6, "rule": 4, "run": 11, "runner": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 448, 450, 452, 482, 484, 486, 519, 521, 523, 524], "runtim": [3, 241, 476, 482], "runtime_error": 249, "runtime_errorif": [42, 78, 80, 482], "rvalu": [28, 39, 60, 252, 285], "rviz": [6, 518], "rviz2": 6, "safari": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "safeti": 91, "same": [17, 46, 64, 70, 78, 95, 97, 235, 252, 262, 268, 306, 330, 387, 473, 474], "same_category_landmarks_view": 235, "sampl": [2, 3, 4, 15, 24, 25, 26, 33, 41, 66, 82, 85, 93, 99, 101, 120, 121, 144, 145, 151, 165, 171, 176, 227, 228, 252, 259, 262, 267, 268, 269, 270, 279, 284, 309, 312, 342, 402, 404, 406, 410, 424, 437, 438, 473, 474, 476, 481, 506, 517, 518, 531], "sample_base_fn": [115, 203, 218, 296, 297, 403, 404], "sample_base_fnimplement": [227, 297], "sample_base_fninlineprotect": [403, 405], "sample_count": 171, "sample_fn": [115, 200, 214, 296, 297, 405], "sample_fnimplement": [227, 297], "sample_fninlin": 405, "sample_from_distribut": [203, 218, 297, 402, 403, 404, 405], "sample_from_distributionconstexpr": 297, "sample_from_rang": [203, 218, 297, 402, 403, 404, 405], "sample_from_rangeconstexpr": 297, "sample_mean_and_covari": 171, "sample_view": [115, 203, 218, 227, 296, 297, 407], "sample_viewconstexpr": 297, "sample_viewimplement": 297, "sample_viewsample_view": 297, "sampleconstexpr": 297, "sampledefinit": 297, "sampleuniform": 251, "satisfi": [12, 13, 14, 15, 16, 17, 18, 19, 20, 42, 44, 46, 48, 50, 52, 54, 56, 66, 74, 76, 89, 93, 99, 104, 228, 252, 342, 387, 398, 400, 406, 424, 425, 506], "satur": 517, "save": [241, 445, 450], "save_pose_r": 473, "save_pose_timer_": [445, 450, 459, 463], "save_pose_timer_beluga_amcl": 451, "save_pose_timer_callback": [445, 450, 451, 459, 461], "save_pose_timer_callbackvoid": 445, "save_pose_timer_ro": 445, "save_pose_timer_tim": 445, "sc22": 307, "scalar": [13, 25, 26, 37, 60, 62, 78, 80, 115, 170, 171, 181, 197, 200, 211, 212, 213, 214, 217, 218, 220, 223, 227, 239, 247, 249, 252, 259, 261, 262, 271, 272, 300, 301, 302, 303, 306, 318, 331, 366, 367, 371, 380, 381, 386, 476, 477, 484, 485, 488, 493, 495, 496, 497, 499, 503, 505, 506, 511, 513, 517, 518, 525, 526, 527, 528, 529], "scalar_typ": [78, 79, 80, 81, 89, 218, 220, 247, 249, 261, 262, 330, 331, 366, 367, 368, 369, 370, 371], "scalar_typeflo": 261, "scalar_typescalar": 261, "scalar_typeth": [247, 249], "scalar_typetypenam": [247, 249], "scalara": 252, "scalardoubl": 503, "scalarrang": 503, "scalarsa": 252, "scalarsrang": 252, "scalarth": [252, 300, 302, 385], "scale": [89, 262, 330, 332, 474, 518], "scale_factor": 518, "scaled_i": 293, "scaled_x": 293, "scan": [26, 46, 153, 176, 227, 238, 239, 252, 259, 443, 445, 448, 450, 452, 469, 471, 473, 474, 482, 484, 485, 503], "scan_": 503, "scan_frame_id": [473, 474], "scan_top": [471, 473, 474], "scanlas": 484, "scatter": 1, "scenario": [172, 269, 271], "se": [83, 87, 159, 176, 250, 251, 287, 441, 476, 477, 482, 499, 511, 517, 524], "se2": [25, 26, 30, 31, 32, 33, 89, 115, 120, 121, 170, 171, 200, 214, 227, 236, 237, 240, 241, 246, 247, 250, 251, 252, 259, 261, 262, 267, 268, 271, 272, 290, 291, 300, 301, 302, 303, 306, 307, 308, 309, 330, 331, 371, 380, 386, 444, 445, 468, 469, 471, 476, 477, 488, 493, 495, 497, 499, 505, 506, 511, 513, 514, 515, 517, 518, 525, 528, 529], "se2bas": [26, 115, 181, 187, 193, 204, 216, 218, 219, 220, 222, 227, 246, 247, 252, 259, 369], "se2d": [16, 26, 31, 32, 33, 54, 66, 76, 83, 84, 86, 93, 95, 96, 99, 110, 115, 121, 198, 200, 203, 212, 214, 218, 227, 236, 237, 241, 250, 251, 252, 259, 268, 291, 306, 307, 309, 443, 445, 448, 449, 450, 451, 452, 453, 469, 476, 482, 483, 486, 515], "se2near": [300, 301], "se2nearauto": 301, "se3": [32, 33, 89, 234, 235, 250, 251, 252, 261, 262, 330, 331, 502, 503, 505, 506, 513, 517, 518, 528, 529], "se3d": [13, 26, 32, 33, 72, 87, 88, 115, 198, 200, 212, 214, 227, 235, 236, 237, 250, 251, 252, 259, 316, 484, 485, 503], "search": 235, "sec": 518, "second": [31, 104, 164, 241, 280, 305, 387, 471, 473, 474], "second_rot": [121, 268], "second_rotation_param": 121, "section": [252, 324], "see": [11, 15, 18, 20, 22, 24, 25, 26, 29, 31, 33, 35, 37, 38, 40, 54, 56, 58, 66, 74, 76, 89, 93, 95, 101, 104, 117, 119, 121, 150, 164, 166, 168, 169, 171, 173, 175, 176, 177, 227, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 259, 261, 262, 264, 266, 268, 270, 272, 274, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 314, 320, 324, 328, 350, 356, 364, 372, 392, 414, 423, 424, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "seed": 262, "seem": [252, 262], "seen": [1, 518], "select": [25, 312, 430, 441, 473, 474, 476, 482, 519], "selective_resampl": [25, 218, 223, 312, 471, 473, 474, 476, 493, 497, 519], "selective_resamplingbeluga": 313, "selective_resamplingbeluga_ro": 520, "selective_resamplingbool": [25, 476], "selective_resamplingwheth": [25, 476], "self": [38, 119, 239, 243, 266, 293, 305], "self_typ": 38, "selfadjointeigensolv": 249, "semant": 18, "semiregular_box_t": 289, "sensor": [4, 11, 13, 20, 25, 26, 34, 35, 42, 44, 46, 48, 50, 52, 54, 56, 72, 74, 76, 89, 97, 107, 146, 176, 227, 228, 232, 233, 250, 251, 252, 259, 294, 314, 316, 322, 324, 328, 330, 332, 346, 356, 441, 443, 445, 448, 450, 452, 468, 469, 474, 476, 482, 502, 503, 514, 515], "sensor_model": [25, 42, 43, 476, 482, 483], "sensor_model_": [25, 476], "sensor_model_vari": [443, 445, 448, 450, 476, 482, 483, 493, 496], "sensor_model_variantbeluga_amcl": [449, 451], "sensor_model_variantget": [443, 445], "sensor_model_variantsensor": 476, "sensor_model_variantstd": 476, "sensor_modelsensor": 42, "sensor_modelvari": 482, "sensor_msg": [442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 468, 469, 473, 474, 476, 477, 480, 484, 490, 492, 499, 500, 502, 503, 504, 506, 511], "sensor_pose_in_robot": [33, 218, 223, 316], "sensor_pose_in_robotbeluga": 317, "sensor_pose_in_robotpos": 33, "sensor_pose_in_robotsophu": 33, "sensor_pose_in_world": [33, 72, 73, 235], "sensor_pose_in_worldth": 72, "sensorinclud": [139, 140, 141], "sensormodel": [2, 25, 43, 54, 56, 74, 76, 89, 178, 187, 188, 193, 196, 201, 205, 209, 215, 221, 227, 273], "sensormodelclass": 42, "sensormultivariate_uniform_distribut": 138, "sensorsensor": 127, "sentinel": [26, 36, 37, 40, 60, 62, 63, 64, 65, 115, 200, 214, 227, 259, 319], "sentinel_for": [37, 318], "sentinelinlin": 319, "sentinelpast": [37, 227], "separ": [6, 303], "seq": [25, 42, 43, 264, 285, 295, 471, 473, 474, 476, 482, 483], "sequenc": [4, 18, 78, 474], "sequenced_polici": [25, 42, 468, 469, 476, 482], "sequences_": 432, "sequenti": [41, 441, 473, 474], "seri": [41, 481, 531], "server": [443, 444, 445, 448, 450, 473, 474], "servic": [0, 443, 445, 448, 450], "servicecli": [445, 450], "serviceserv": [445, 450], "set": [4, 6, 18, 25, 26, 42, 54, 78, 80, 89, 101, 227, 228, 248, 249, 252, 259, 268, 424, 441, 443, 445, 448, 450, 452, 469, 471, 473, 474, 476, 482, 518], "set_initial_pos": [471, 473, 474], "set_map": 473, "set_map_callback": [445, 450, 451, 459, 461], "set_map_callbackbool": 445, "set_map_server_": [445, 450, 459, 463], "set_map_server_beluga_amcl": 451, "set_map_server_map": 445, "set_map_server_ro": 445, "setmap": [444, 445, 450, 451, 473], "setup": 5, "sever": 432, "shape": 2, "share": 6, "shared_ptr": [443, 448, 449], "sharedptr": [443, 448, 449, 452, 453, 469], "shift": 306, "short": [31, 101, 280, 314, 389, 473, 474], "shorthand": [106, 227, 252, 431], "should": [17, 97, 235, 247, 249, 261, 376, 378, 385, 387, 424, 471, 473, 474], "should_interspers": 289, "show": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "shown": [4, 226, 464, 498], "shutdown": [473, 474], "side": [3, 19], "sigma_bear": [33, 218, 223, 237, 316, 324], "sigma_bearingbeluga": [317, 325], "sigma_bearingdoubl": [33, 237], "sigma_bearingstandard": [33, 237], "sigma_hit": [31, 218, 223, 241, 314, 328, 474], "sigma_hitbeluga": [315, 329], "sigma_hitdoubl": [31, 241], "sigma_hitstandard": [31, 241], "sigma_rang": [218, 223, 237, 324], "sigma_rangebeluga": 325, "sigma_rangedoubl": 237, "sigma_rangestandard": 237, "sign": 70, "signal": 41, "signed_typ": 307, "signed_valu": 307, "signific": 306, "similar": [18, 177, 252], "simpl": [3, 472], "simplest": 6, "simpli": 1, "simplifi": [2, 268], "sin": [239, 529], "sin_apertur": [33, 237], "sin_theta": 241, "sinc": [4, 40, 252, 402, 419], "singl": [26, 39, 40, 227, 252, 259, 282, 362, 429, 430, 473, 474, 518], "size": [19, 24, 25, 40, 64, 65, 70, 97, 98, 104, 105, 107, 108, 145, 151, 164, 165, 171, 176, 203, 218, 228, 243, 251, 252, 262, 269, 270, 279, 296, 297, 305, 367, 406, 408, 422, 423, 425, 428, 432, 436, 486, 487, 493, 495, 503, 506, 515, 517, 518], "size_": 40, "size_t": [12, 14, 16, 25, 37, 39, 40, 48, 49, 50, 51, 64, 97, 104, 107, 108, 109, 111, 113, 164, 167, 168, 173, 241, 243, 251, 252, 262, 266, 281, 282, 305, 306, 307, 311, 312, 351, 356, 374, 375, 376, 377, 408, 409, 410, 411, 416, 419, 421, 423, 424, 425, 428, 429, 430, 432, 436, 476, 484, 485, 486, 487, 503, 506, 513, 515, 517, 518, 519, 528, 529], "size_typ": [40, 64, 65, 70, 104, 105, 218, 220, 230, 432], "size_types": [40, 432], "size_typestd": [40, 432], "sizeconstexpr": [40, 432], "sized_rang": [270, 296, 297, 428, 432, 518], "sizeof": [111, 306, 307, 430, 432], "sizesampl": 506, "sizestd": [305, 436, 515], "skip": 474, "slam": 6, "slow": [293, 471, 473, 474, 476, 519], "slow_averag": 428, "slow_filter_": 428, "slower": [241, 291], "small": 474, "smooth": [54, 68, 76], "so": [1, 16, 17, 33, 38, 106, 237, 252, 296, 307, 387, 392, 414, 429, 432, 518], "so2": [30, 31, 33, 85, 120, 121, 171, 236, 237, 240, 241, 247, 261, 262, 267, 268, 272, 290, 291, 300, 301, 302, 303, 307, 308, 309, 366, 514, 515, 518, 529], "so2bas": [26, 115, 181, 187, 193, 204, 216, 218, 219, 220, 222, 227, 246, 247, 252, 259, 368], "so2d": [31, 95, 96, 121, 251, 268, 291, 309, 515], "so2near": [300, 301], "so2nearauto": 301, "so3": 529, "so3d": [33, 237, 251], "softwar": [2, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "solut": [6, 441], "solver": [249, 441], "some": [3, 12, 15, 20, 99, 252, 285], "someth": 518, "soon": [5, 7, 8, 9, 10, 532, 533, 534, 535], "sophu": [3, 13, 16, 25, 26, 30, 31, 32, 33, 54, 66, 72, 76, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 99, 109, 110, 115, 120, 121, 155, 170, 171, 176, 181, 187, 193, 198, 200, 203, 204, 212, 214, 216, 218, 219, 220, 222, 227, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 250, 251, 252, 259, 261, 262, 267, 268, 271, 272, 290, 291, 300, 301, 302, 303, 306, 307, 308, 309, 316, 330, 331, 366, 368, 369, 371, 385, 386, 427, 441, 443, 444, 445, 448, 449, 450, 451, 452, 453, 468, 469, 471, 476, 477, 480, 482, 483, 484, 485, 486, 488, 490, 492, 493, 495, 497, 499, 500, 502, 503, 506, 508, 509, 511, 513, 514, 515, 517, 518, 519, 524, 525, 528, 529], "sophus_match": [155, 176, 426, 427], "sophus_print": [155, 176, 426, 427], "sophussophu": [518, 529], "sort": [2, 227, 465, 499], "sourc": [6, 11, 21, 23, 28, 30, 32, 34, 36, 39, 95, 116, 118, 120, 163, 165, 167, 170, 172, 174, 228, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 398, 422, 424, 426, 429, 431, 433, 435, 437, 439, 441, 442, 444, 468, 475, 479, 502, 514, 517, 526, 528], "source_cell_": 291, "source_pos": [95, 96, 291], "source_pose_in_local_frame_": 291, "source_posepos": 95, "source_posit": 291, "space": [12, 13, 14, 16, 19, 26, 52, 58, 60, 83, 85, 87, 119, 159, 176, 227, 228, 250, 251, 252, 259, 271, 272, 287, 292, 293, 305, 380, 385, 422, 441, 471, 473, 474], "spare": 3, "spars": [26, 89, 97, 153, 176, 227, 252, 259, 261, 262, 304, 305], "sparse_value_grid": [97, 127, 153, 176, 261, 262, 468, 469], "sparsegridt": [90, 197, 199, 200, 211, 212, 213, 214, 215, 218, 220, 224, 227, 262], "sparsegridttyp": 89, "sparsevaluegrid": [89, 98, 115, 183, 191, 202, 203, 210, 212, 216, 218, 220, 227, 252, 262, 304, 305, 468, 469], "sparsevaluegridgener": [262, 305], "sparsevaluegridsparsevaluegrid": 305, "spatial": [4, 24, 42, 109, 111, 113, 151, 176, 235, 252, 306, 307, 410, 473, 474, 519], "spatial_hash": [23, 24, 25, 42, 43, 109, 110, 111, 112, 113, 114, 115, 151, 176, 200, 203, 214, 216, 218, 220, 227, 252, 476, 517, 518], "spatial_hashcal": 307, "spatial_hasher_": [25, 476], "spatial_hasher_typ": [25, 42, 43], "spatial_hashera": 42, "spatial_hashspatial_hash": 307, "spatial_resolution_": [473, 474], "spatial_resolution_i": [471, 476, 493, 497, 519], "spatial_resolution_theta": [471, 476, 493, 497, 519], "spatial_resolution_thetabeluga_ro": 520, "spatial_resolution_thetadoubl": 476, "spatial_resolution_thetaspati": 476, "spatial_resolution_x": [471, 476, 493, 497, 519], "spatial_resolution_xbeluga_ro": 520, "spatial_resolution_xdoubl": 476, "spatial_resolution_xspati": 476, "spatial_resolution_ybeluga_ro": 520, "spatial_resolution_ydoubl": 476, "spatial_resolution_yspati": 476, "speak": 91, "special": [3, 26, 39, 83, 85, 87, 89, 91, 109, 111, 113, 227, 246, 250, 251, 252, 259, 271, 306, 310, 350, 351, 355, 361, 363, 366, 367, 371, 385, 395, 416, 418, 419, 421, 429, 468, 477, 499, 511, 513, 517, 518, 524], "specif": [2, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 58, 95, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 228, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "specifi": [17, 18, 104, 172, 226, 228, 252, 263, 270, 271, 328, 376, 378, 385, 432, 464, 473, 498], "speed": 6, "spiral": 101, "spread": 307, "sqrt": [31, 121, 171, 241, 268, 425], "squared_dist": 241, "squared_max_dist": 241, "squared_weight_sum": 171, "squarednorm": [235, 241], "src": [5, 468, 469], "srv": [442, 443, 448, 449, 468, 469, 474], "ss": [15, 262], "stachniss": [41, 481, 531], "stack": 3, "staff": 0, "stamp": [504, 506], "stamp_messag": [504, 506, 508, 509], "stamp_messagemessag": 504, "stand": 1, "standalon": [473, 474], "standard": [2, 3, 18, 33, 37, 58, 80, 97, 170, 171, 228, 233, 235, 237, 252, 314, 316, 324, 328, 424, 425, 471, 473, 474, 476, 515, 519, 521], "start": [1, 60, 95, 252, 432], "state": [4, 15, 17, 18, 20, 24, 25, 26, 31, 32, 33, 42, 54, 56, 66, 74, 76, 78, 85, 89, 93, 95, 99, 101, 109, 110, 121, 151, 170, 176, 200, 214, 227, 228, 236, 237, 241, 249, 252, 253, 258, 259, 262, 268, 274, 275, 276, 277, 281, 282, 284, 285, 294, 295, 297, 306, 307, 309, 342, 346, 359, 372, 387, 391, 392, 393, 410, 425, 428, 443, 448, 449, 452, 453, 468, 469, 474, 476, 482, 506, 517, 518], "state_detail": [31, 33, 115, 121, 200, 214, 227, 237, 241, 252, 262, 268, 275, 277, 281, 282, 285, 307, 309, 392, 393, 425, 518], "state_fn": [31, 33, 115, 121, 200, 214, 237, 241, 252, 262, 268, 275, 277, 281, 282, 285, 307, 309, 393, 425, 518], "state_fncustom": [227, 282], "state_fninlin": 393, "state_t": [252, 253, 257, 274, 275, 358, 425, 506, 517, 518], "state_ttyp": [275, 425], "state_ttypenam": [275, 425, 518], "state_typ": [15, 20, 25, 31, 33, 42, 43, 54, 55, 56, 57, 66, 67, 74, 75, 76, 77, 89, 90, 93, 94, 99, 100, 121, 218, 220, 227, 237, 241, 252, 262, 268, 274, 275, 309, 372, 373, 425, 468, 469, 518], "state_type2d": [121, 268, 309], "state_typesophu": [31, 121, 241, 268, 309], "state_typest": [31, 33, 237, 241, 262], "state_typestatetyp": [33, 237], "state_typestd": [262, 275], "state_typeth": 275, "stateconstexpr": [31, 33, 121, 237, 241, 262, 268, 275, 277, 282, 285, 307, 309, 425, 518], "statecustom": [31, 33, 121, 237, 241, 262, 268, 275, 277, 282, 285, 307, 309, 425], "statehistogram": 518, "statesamplingfunct": [15, 66, 93, 99, 285, 342, 343, 344, 345], "statesamplingfunctiona": 342, "statesconstexpr": [277, 297, 518], "statesdefinit": [277, 297], "stateth": 109, "statetyp": [32, 33, 57, 75, 180, 189, 197, 200, 205, 211, 212, 214, 215, 218, 220, 221, 224, 227, 236, 237], "statetypetyp": [56, 74], "stateweightingfunct": [20, 54, 56, 74, 76, 89], "static": [54, 76, 121, 241, 247, 249, 251, 261, 262, 268, 270, 289, 303, 309, 330, 331, 366, 367, 370, 371, 378, 398, 430, 440, 443, 445, 448, 450, 486, 515, 521], "static_assert": [25, 40, 239, 247, 249, 261, 262, 270, 275, 285, 289, 295, 297, 305, 307, 425, 428, 432, 518], "static_cast": [37, 38, 40, 119, 171, 230, 243, 262, 270, 293, 297, 307, 425, 428, 430, 432, 503, 518, 527, 529], "static_map": 473, "staticconstexpr": 367, "stationari": [26, 99, 156, 176, 227, 245, 252, 259, 308, 309, 471, 473, 474], "stationary_model": [99, 156, 176, 244, 245, 468, 469], "stationarymodel": [15, 100, 115, 181, 200, 214, 218, 220, 252, 308, 309, 468, 469, 476, 482], "stationarymodela": [227, 309], "stationarymodelinlin": 100, "statisfi": [228, 424], "statist": [41, 441], "statu": [445, 450, 451], "std": [2, 12, 14, 16, 25, 26, 29, 31, 33, 37, 39, 40, 42, 43, 44, 48, 49, 50, 51, 54, 56, 58, 62, 64, 65, 66, 70, 72, 74, 76, 78, 80, 81, 89, 91, 93, 95, 97, 99, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 119, 121, 144, 164, 165, 166, 167, 168, 170, 171, 173, 176, 177, 178, 180, 181, 183, 184, 187, 188, 189, 190, 192, 193, 200, 201, 202, 203, 204, 212, 214, 215, 216, 218, 219, 220, 222, 223, 227, 228, 230, 235, 237, 239, 241, 243, 246, 247, 249, 251, 252, 259, 261, 262, 264, 266, 268, 270, 272, 275, 280, 281, 282, 285, 289, 291, 293, 295, 296, 297, 302, 303, 305, 306, 307, 309, 310, 311, 312, 330, 331, 332, 336, 338, 340, 342, 344, 346, 348, 350, 351, 352, 354, 355, 361, 363, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 387, 388, 392, 393, 395, 396, 397, 398, 399, 404, 405, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 430, 431, 432, 436, 438, 440, 441, 443, 445, 448, 449, 450, 451, 452, 453, 468, 469, 471, 476, 477, 482, 483, 484, 485, 486, 487, 499, 503, 504, 506, 511, 513, 515, 517, 518, 519, 521, 522, 523, 524, 528, 529], "std_msg": 504, "std_srv": [442, 443, 444, 445, 448, 449, 450, 451, 468, 469, 473, 474], "std_warn_level_": 473, "stdexcept": [39, 40, 262], "stdhash": [416, 417], "stdnumeric_limit": 418, "stdtuple_el": [419, 420], "stdtuple_s": 421, "step": [4, 42, 101, 471, 473, 474, 482, 519], "step_": 37, "step_to": 37, "still": 518, "stl": [228, 285], "storag": [64, 104, 153, 176, 242, 266, 436], "store": [97, 171, 241, 305, 473], "storeag": [486, 515], "str": 262, "strafe": [268, 334, 471, 473, 474], "strafe_noise_from_transl": [218, 223, 268, 334], "strafe_noise_from_translationbeluga": 335, "strafe_noise_from_translationdoubl": 268, "strafe_noise_from_translationtransl": 268, "strafe_param": 268, "strategi": 41, "stream": [39, 40, 252, 302], "streamlin": 6, "streamprecis": 303, "strictli": [3, 70, 91, 230], "string": [471, 473, 474], "string_view": [443, 445, 448, 449, 450, 451, 471, 504, 506], "stringstream": 262, "strive": 3, "strong": [11, 252], "strongli": [25, 26, 91, 150, 176, 227, 252, 259, 281, 282, 310, 311], "strongly_typed_numer": [91, 150, 176, 281, 282, 416, 418], "struct": [25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 62, 91, 120, 121, 164, 172, 173, 226, 232, 233, 236, 237, 240, 241, 246, 247, 252, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 280, 281, 282, 284, 285, 288, 289, 294, 295, 296, 297, 306, 307, 310, 311, 422, 423, 424, 425, 429, 430, 439, 440, 446, 464, 469, 475, 476, 477, 486, 498, 506, 514, 515, 517, 518], "structur": [3, 14, 33, 64, 235, 237, 441, 500], "subclass": 500, "subscrib": [6, 442, 443, 444, 445, 448, 450, 452, 468, 469, 471], "subscript": [70, 443, 448, 452, 469], "subsequ": 5, "subset": 97, "substanti": 1, "substitut": 268, "success": [249, 448, 450, 452], "sudo": 5, "suffici": 307, "suit": 441, "suitabl": [6, 506, 517], "sum": [263, 338, 471, 473, 474, 519], "super": [226, 464, 498], "supercov": 58, "support": [1, 3, 5, 12, 38, 56, 70, 74, 228, 262, 275, 285, 289, 296, 342, 441, 468, 469, 473, 474, 476, 482], "sure": [28, 300], "surject": 52, "surpass": 385, "surpris": 3, "svg": [21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "swap": [37, 39, 40, 64, 65, 203, 218, 252, 253, 255], "swapconstexpr": [37, 40], "swapvoid": 40, "symmetr": [78, 80, 121, 171, 249, 268], "symmetri": [37, 318], "synchron": [443, 445, 448, 450, 452, 469], "synthet": [6, 41, 481, 531], "system": [4, 5, 19, 41, 228, 241, 471, 474, 481, 530, 531], "t": [2, 4, 5, 6, 15, 16, 18, 20, 26, 27, 28, 29, 37, 38, 39, 40, 42, 65, 79, 92, 97, 108, 114, 115, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 246, 247, 248, 249, 251, 252, 253, 259, 262, 274, 275, 282, 291, 297, 300, 301, 302, 303, 306, 307, 310, 311, 351, 352, 368, 369, 370, 373, 392, 393, 404, 405, 414, 415, 417, 420, 425, 429, 430, 431, 432, 435, 436, 459, 461, 463, 464, 474, 498, 499, 518], "t1": 291, "t2": 291, "tabl": [314, 320, 328, 474], "tag": [37, 62], "tail": 38, "tail_index_": 40, "take": [18, 70, 95, 228, 252, 289, 296, 297, 387, 392, 398, 400, 404, 408, 410, 414, 422, 424, 425, 431, 432], "take_evenli": [26, 144, 176, 227, 228, 259, 408, 437, 438, 502, 503], "take_evenly_fn": [115, 200, 214, 409, 422, 423], "take_evenly_fnimplement": [227, 423], "take_evenly_fninlin": 409, "take_evenlyconstexpr": 423, "take_evenlydefinit": 423, "take_exactli": [25, 475, 476, 517, 518], "take_whil": [36, 37, 290, 291, 424, 425], "take_while_kld": [25, 26, 144, 176, 227, 228, 259, 410, 437, 438, 476], "take_while_kld_fn": [115, 200, 214, 411, 424, 425], "take_while_kld_fnimplement": [227, 425], "take_while_kld_fninlin": 411, "take_while_kldconstexpr": 425, "take_while_klddefinit": 425, "taken": [252, 296], "tan": 518, "tani": 107, "target": [4, 11, 70, 230, 252], "target_s": 425, "tbf05": [473, 474, 531], "tbuilt": 91, "technic": 336, "techniqu": [3, 41, 481, 531], "telement": 64, "teleop_twist_keyboard": 6, "teleoper": 6, "templ": [226, 464, 498], "templat": [2, 25, 26, 29, 31, 32, 33, 37, 38, 39, 40, 58, 62, 66, 83, 87, 93, 99, 101, 119, 121, 163, 164, 165, 166, 167, 168, 170, 171, 177, 226, 227, 230, 236, 237, 239, 241, 243, 247, 248, 249, 250, 251, 252, 259, 261, 262, 264, 266, 268, 270, 272, 274, 275, 280, 282, 285, 289, 291, 293, 295, 297, 300, 301, 302, 303, 305, 306, 307, 309, 311, 318, 336, 338, 340, 342, 344, 346, 348, 378, 380, 389, 392, 396, 398, 402, 404, 408, 410, 412, 414, 423, 425, 428, 429, 430, 431, 432, 436, 440, 441, 464, 468, 469, 476, 482, 498, 504, 505, 506, 513, 517, 518, 526, 527, 528, 529], "term": [1, 101], "termin": 6, "test": [146, 176], "testingtest": 128, "textual": [231, 467, 501], "tf": [261, 330, 331, 448, 450, 452], "tf2": [471, 500, 508, 509, 514, 515, 518, 526, 527, 528, 529], "tf2_eigen": [479, 480, 490, 492, 500, 517, 518, 529], "tf2_geometry_msg": [515, 527, 529], "tf2_ro": [442, 443, 444, 445, 448, 450, 452, 468, 469, 471], "tf2_sophu": [471, 479, 480, 490, 492, 500, 517, 518], "tf2tf2": [527, 529], "tf_broadcast": [471, 473, 474], "tf_broadcaster_": [443, 445, 448, 450, 452, 459, 463, 469], "tf_broadcaster_beluga_amcl": [449, 451, 453], "tf_broadcaster_std": [443, 445, 469], "tf_broadcaster_transform": [443, 445, 469], "tf_buffer_": [443, 445, 448, 450, 452, 459, 463, 469], "tf_buffer_beluga_amcl": [449, 451, 453], "tf_buffer_std": [443, 445, 469], "tf_buffer_transform": [443, 445, 469], "tf_listener_": [443, 445, 448, 450, 452, 459, 463, 469], "tf_listener_beluga_amcl": [449, 451, 453], "tf_listener_std": [443, 445, 469], "tf_listener_transform": [443, 445, 469], "than": [28, 46, 64, 76, 104, 252, 328, 402, 408, 422, 439, 471, 473, 474, 518, 519], "thei": [4, 12, 14, 16, 78, 228, 241, 253, 439, 508, 518], "them": [2, 5, 64, 306, 441, 518], "therebi": 101, "therefor": 4, "theta": [109, 239, 471, 473, 474, 529], "theta_clustering_resolut": [109, 110, 307], "theta_clustering_resolutionclust": 109, "thi": [1, 2, 3, 4, 6, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 479, 480, 482, 483, 484, 485, 486, 487, 498, 499, 500, 501, 502, 503, 504, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "thin": [473, 474, 484, 486, 500, 502, 506, 514], "thing": 235, "those": [1, 2, 104, 235, 432], "though": [1, 104], "thousand": 6, "thread_loc": [121, 268, 309], "threadsaf": [25, 26, 39, 40, 64, 227, 252, 259], "three": [297, 404], "threshold": [121, 228, 268, 269, 270, 271, 320, 334, 378, 379, 385, 473], "thresholdpercentag": 378, "through": [226, 307, 464, 498, 513], "throughout": 2, "throughput": 3, "throw": [40, 97, 249, 262], "thrun": [41, 481, 531], "thrun_recovery_probability_estim": [23, 24, 25, 101, 176], "thrunrecoveryprobabilityestim": [25, 102, 115, 200, 202, 204, 214, 216, 219, 252, 428, 476], "thrunrecoveryprobabilityestimatorconstexpr": 428, "thrunrecoveryprobabilityestimatorinlin": 102, "thrunrecoveryprobabilityestimatorrandom": [25, 227, 428], "thu": [5, 12, 14, 19, 54, 56, 74, 76, 89, 252], "tiancheng": 41, "tie": [33, 237], "tim": 307, "time": [3, 4, 25, 26, 36, 37, 60, 62, 64, 101, 109, 111, 113, 227, 228, 235, 252, 259, 289, 296, 307, 312, 432, 471, 473, 474, 486, 504, 506, 515], "timelin": 11, "timer": [445, 448, 450, 452], "timer_": [443, 448, 452, 459, 463, 469], "timer_beluga_amcl": [449, 453], "timer_callback": [443, 448, 449, 452, 453, 459, 461, 469], "timer_callbackvoid": [443, 469], "timer_rclcpp": [443, 469], "timer_tim": [443, 469], "timerbas": [443, 448, 452, 469], "timerev": [445, 450, 451], "timestamp": [504, 506], "timestamptim": 506, "tnumer": 416, "to_cel": 262, "to_likelihood": 241, "to_the_cub": 241, "to_valu": 471, "to_vector": [204, 219, 247, 249, 366, 367, 368, 369, 370, 371], "to_vectorstat": 247, "todo": [31, 241, 262, 476], "togeth": 518, "tomsg": [505, 508, 509, 513, 518, 526, 527, 528, 529], "tomsgbeluga_ro": [518, 527, 529], "too": [50, 171, 432, 474, 518], "tool": [3, 5], "toolbox": 6, "toolkit": [1, 11], "top": [164, 441], "topic": [6, 471], "topleftcorn": 171, "total": [101, 252, 263, 338], "total_weight": [166, 264, 428], "trace": [54, 76, 95, 96, 204, 219, 291], "traceauto": 291, "track": 252, "trade": 3, "trait": [3, 26, 35, 121, 146, 150, 159, 166, 176, 227, 246, 249, 252, 259, 264, 268, 274, 275, 282, 285, 295, 297, 309, 372, 425, 428, 429, 432, 433, 434, 486, 514, 515, 521], "transact": [41, 481, 531], "transform": [13, 16, 25, 30, 31, 32, 33, 167, 168, 170, 171, 235, 236, 237, 238, 239, 240, 241, 261, 264, 265, 266, 276, 277, 285, 292, 293, 295, 297, 330, 443, 445, 448, 450, 452, 469, 471, 476, 484, 503, 504, 505, 513, 528, 529], "transform_": 249, "transform_broadcast": [442, 443, 444, 445, 468, 469], "transform_listen": [442, 443, 444, 445, 468, 469], "transform_reduc": [31, 33, 171, 237, 241, 262], "transform_toler": [471, 473, 474], "transformbroadcast": [443, 445, 448, 450, 452, 469], "transformlisten": [443, 445, 448, 450, 452, 469], "transient": [6, 474], "transit": [228, 284, 443, 448, 452, 469], "translat": [33, 85, 109, 121, 171, 237, 241, 247, 252, 261, 268, 272, 291, 301, 303, 307, 320, 330, 334, 385, 471, 473, 474, 515, 518, 519, 524, 529], "translation_noise_from_rot": [121, 219, 223, 268, 320, 334], "translation_noise_from_rotationbeluga": [321, 335], "translation_noise_from_rotationdoubl": [121, 268], "translation_noise_from_rotationtransl": [121, 268], "translation_noise_from_transl": [121, 219, 223, 268, 320, 334], "translation_noise_from_translationbeluga": [321, 335], "translation_noise_from_translationdoubl": [121, 268], "translation_noise_from_translationtransl": [121, 268], "translation_param": [121, 268], "translation_view": 171, "translations_view": 171, "translationtyp": 518, "transpos": [249, 261, 262], "treat": [121, 268, 402], "triangl": 518, "triangle_list": 518, "trigger": [25, 145, 172, 173, 176, 228, 252, 269, 270, 271, 272, 279, 376, 378, 380, 385, 474], "trinari": [515, 521], "tro": 531, "troubleshoot": 6, "true": [6, 16, 18, 25, 26, 37, 40, 42, 50, 64, 70, 104, 164, 227, 252, 259, 266, 272, 282, 362, 364, 376, 382, 385, 423, 429, 430, 432, 471, 473, 474, 476, 518, 519], "true_typ": [29, 227, 275, 282, 297, 430], "truncat": [226, 464, 498], "try": [2, 6, 21, 23, 28, 30, 32, 34, 36, 39, 44, 46, 48, 50, 52, 60, 97, 103, 106, 107, 116, 118, 120, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 163, 165, 167, 170, 172, 174, 226, 229, 231, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 338, 340, 342, 344, 346, 348, 360, 361, 362, 363, 364, 382, 384, 387, 389, 395, 400, 402, 404, 406, 418, 421, 422, 424, 425, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 464, 467, 468, 475, 479, 484, 486, 498, 501, 502, 514, 517, 526, 528], "tthe": [78, 82, 252, 300, 302], "ttupl": 306, "tunderli": [91, 416, 418], "tune": 6, "tupl": [2, 25, 26, 42, 66, 93, 99, 103, 105, 106, 109, 111, 112, 115, 117, 120, 121, 148, 150, 167, 168, 176, 178, 180, 181, 183, 184, 188, 189, 190, 192, 200, 201, 202, 203, 204, 214, 215, 216, 218, 219, 220, 222, 227, 228, 239, 252, 259, 265, 266, 267, 268, 275, 281, 282, 306, 307, 308, 309, 350, 351, 353, 355, 360, 361, 362, 363, 364, 392, 394, 395, 396, 397, 414, 429, 430, 431, 432, 434, 439, 440, 441, 468, 469, 476, 482], "tuple_el": [26, 39, 40, 115, 219, 220, 227, 259, 419, 420], "tuple_element_t": [351, 430], "tuple_index": [26, 115, 227, 252, 259, 395, 429, 430], "tuple_index_found": [26, 115, 227, 259, 429, 430], "tuple_index_foundconstexpr": 430, "tuple_index_help": [429, 430], "tuple_index_helperconstexpr": 430, "tuple_index_t": [252, 253, 257, 429, 430], "tuple_index_tconveni": 430, "tuple_index_ttypenam": 430, "tuple_index_v": [252, 253, 258, 429, 430], "tuple_index_vconstexpr": 430, "tuple_index_vconveni": 430, "tuple_indexmeta": 430, "tuple_s": [26, 39, 40, 115, 227, 259, 421, 430], "tuple_size_v": [282, 350, 392, 430], "tuple_trait": [120, 121, 150, 176, 267, 268, 274, 275, 281, 282, 308, 309, 350, 351, 353, 355, 360, 361, 362, 363, 364, 394, 395, 433, 434], "tuple_vector": [103, 104, 106, 116, 117, 148, 176, 249], "tuplecontain": [104, 105, 115, 178, 180, 181, 183, 184, 188, 189, 190, 192, 201, 202, 203, 204, 215, 216, 218, 219, 220, 222, 227, 252, 431, 432], "tuplecontainerconstexpr": 432, "tuplecontainerprimari": 432, "tuplelik": [26, 115, 219, 220, 227, 252, 259, 282, 354, 363, 395, 429, 430], "tupletupl": [111, 167], "tuplevector": [2, 25, 42, 115, 227, 228, 252, 253, 255, 431, 432, 468, 469, 476], "tuplevectorshorthand": 432, "tuplevectortuplevector": 432, "twice": 423, "two": [2, 4, 6, 17, 26, 39, 40, 64, 74, 78, 171, 226, 227, 252, 259, 297, 320, 334, 350, 387, 404, 430, 432, 464, 475, 480, 482, 490, 492, 498], "two_epsilon": 425, "two_squared_sigma": 241, "type": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 31, 32, 33, 35, 37, 38, 39, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 105, 106, 107, 112, 113, 115, 118, 119, 121, 146, 150, 155, 166, 170, 171, 174, 175, 176, 178, 180, 181, 183, 184, 188, 189, 190, 192, 200, 201, 202, 203, 204, 214, 215, 216, 218, 219, 220, 222, 227, 230, 234, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 251, 252, 259, 261, 262, 264, 265, 266, 268, 274, 275, 281, 282, 285, 292, 293, 295, 297, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 322, 326, 330, 350, 351, 352, 353, 354, 355, 358, 360, 361, 362, 364, 366, 367, 371, 372, 378, 382, 384, 385, 392, 394, 396, 398, 400, 414, 416, 418, 419, 420, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 439, 440, 450, 468, 476, 477, 480, 482, 484, 486, 490, 492, 499, 500, 502, 503, 504, 506, 511, 513, 514, 515, 517, 518, 524, 526, 527, 528, 529], "type_trait": [25, 34, 35, 39, 40, 91, 120, 121, 146, 165, 166, 176, 229, 230, 261, 262, 263, 264, 267, 268, 280, 281, 282, 284, 285, 288, 289, 294, 295, 296, 297, 304, 305, 306, 307, 308, 309, 350, 351, 353, 355, 358, 360, 361, 362, 363, 364, 372, 394, 395, 416, 418, 424, 425, 428, 431, 432, 517, 518], "type_traitsdifferential_drive_model": 136, "type_traitseffective_sample_s": 132, "type_traitsnorm": 129, "type_traitssampl": 143, "typecommon": 430, "typedef": [18, 27, 32, 39, 104, 182, 232, 236, 252, 256, 260, 274, 281, 429, 431, 447, 460, 468, 478, 494], "typedefbeluga": [55, 57, 63, 65, 67, 71, 73, 75, 77, 79, 81, 90, 94, 98, 100, 105, 112, 114, 331, 352, 354, 368, 369, 370, 373], "typedefbeluga_amcl": 451, "typedefbeluga_ro": [483, 485], "typedefstd": 420, "typenam": [25, 37, 38, 39, 40, 42, 44, 46, 48, 50, 52, 60, 62, 64, 66, 70, 78, 80, 89, 92, 93, 95, 97, 99, 104, 107, 119, 121, 170, 171, 199, 200, 213, 214, 227, 230, 239, 243, 247, 248, 249, 252, 261, 262, 266, 268, 274, 275, 289, 291, 293, 297, 305, 307, 309, 310, 311, 318, 330, 350, 351, 361, 364, 366, 367, 371, 391, 398, 400, 406, 416, 418, 419, 421, 429, 430, 431, 432, 436, 468, 469, 506, 513, 517, 518, 524, 528, 529], "typereturn": 430, "typesbearing_sensor_model": 141, "typesel": 104, "typeslandmark_map": 142, "typestd": 430, "typet": 40, "typic": [2, 473, 474, 484, 500], "u": [15, 26, 27, 40, 78, 79, 115, 177, 179, 182, 194, 205, 219, 220, 221, 223, 227, 249, 252, 259, 297, 351, 352, 404, 405, 429, 430, 459, 461, 493], "u_": 4, "u_t": 4, "ubuntu": 5, "uij": 261, "uint32_t": [232, 233, 252, 307, 445, 450, 451], "uint64_t": 307, "uint8_t": [37, 50, 58, 266], "unary_fn": 285, "unaryexpr": 249, "unchang": 284, "unconfigur": [443, 448, 452, 469], "undef": 169, "undefin": [64, 70, 104], "under": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "underli": [40, 64, 76, 91, 97, 311, 416, 468, 486, 515], "underlying_hasher_": 307, "underlying_typ": 91, "underlying_type_t": 40, "underlying_typetag": 91, "undocu": [226, 464, 498], "unexpect": [31, 314], "uniform": [26, 78, 80, 82, 83, 85, 87, 159, 176, 227, 228, 250, 251, 252, 259, 287, 296, 402, 441, 473, 474], "uniform_distribut": 228, "uniform_int_distribut": [251, 297], "uniform_real_distribut": 251, "uniformli": 85, "uniformrandombitgener": [18, 78, 80, 398, 400, 406], "union": [26, 446, 477], "unique_ptr": [443, 445, 448, 449, 450, 451, 452, 453, 469], "unit": [171, 518], "unit_complex": [171, 241, 291, 301, 303], "unit_quaternion": 529, "unitari": [78, 249], "uniti": 518, "unitless": [25, 312], "unitx": 518, "unknown": [289, 515, 521], "unknown_space_occupancy_likelihood_cub": 241, "unknown_space_occupancy_prob": 241, "unless": [3, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "unlik": [296, 439, 473], "unnecessarili": 432, "unnorm": 4, "unordered_map": [262, 468, 469, 518], "unordered_set": [424, 425], "unpack": 306, "unreachable_sentinel_t": 297, "unsign": 307, "unsigned_typ": 307, "unsigned_valu": 307, "until": [64, 424, 432], "unwrap": [3, 289, 297, 398, 404], "up": [1, 4, 5, 6, 252], "updat": [4, 5, 25, 31, 33, 42, 43, 54, 56, 68, 74, 76, 99, 101, 205, 221, 228, 237, 241, 252, 284, 294, 312, 320, 334, 346, 428, 443, 445, 448, 450, 452, 469, 471, 473, 474, 476, 482, 483, 493, 495, 518, 519], "update_covariance_diagnost": [445, 450, 451, 459, 461], "update_covariance_diagnosticsvoid": 445, "update_map": [25, 31, 33, 42, 43, 54, 55, 56, 57, 74, 75, 76, 77, 205, 221, 237, 241, 476, 482, 483, 493, 495], "update_mapvoid": [25, 31, 33, 237, 241, 476], "update_min_a": [25, 221, 223, 312, 471, 473, 474, 476, 493, 497, 519], "update_min_abeluga": 313, "update_min_abeluga_ro": 520, "update_min_adoubl": [25, 476], "update_min_amin": 25, "update_min_arot": 476, "update_min_d": [25, 221, 223, 312, 471, 473, 474, 476, 493, 497, 519], "update_min_dbeluga": 313, "update_min_dbeluga_ro": 520, "update_min_ddoubl": [25, 476], "update_min_dmin": 25, "update_min_dtransl": 476, "update_policy_": [25, 476], "updateauto": [25, 476], "upgrad": 5, "upon": [473, 474], "upper": [252, 424, 425, 471, 473, 474, 519], "upstream": 5, "url": 531, "urng": [15, 83, 84, 85, 86, 87, 88, 202, 203, 216, 218, 227, 251, 288, 289, 296, 297, 398, 399, 401, 402, 403, 404, 405, 407], "urnga": [398, 400, 406], "urngth": [83, 85, 87], "us": [2, 4, 5, 6, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 42, 50, 54, 56, 60, 62, 64, 66, 70, 72, 74, 76, 78, 80, 89, 91, 93, 97, 99, 101, 104, 109, 111, 113, 117, 119, 121, 146, 164, 166, 168, 169, 171, 172, 173, 175, 176, 177, 226, 227, 228, 230, 232, 233, 235, 236, 237, 239, 240, 241, 243, 245, 247, 249, 251, 252, 259, 261, 262, 264, 266, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 309, 311, 312, 314, 316, 324, 328, 330, 332, 338, 340, 342, 346, 351, 355, 366, 367, 371, 372, 378, 387, 398, 406, 410, 419, 423, 425, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 440, 441, 443, 445, 450, 464, 468, 469, 471, 473, 474, 476, 480, 482, 484, 498, 503, 504, 513, 515, 518, 519, 527, 529], "usa": [41, 481, 531], "usag": [38, 91], "use_composit": 6, "use_map_top": [473, 474], "user": [2, 3, 17, 28, 263, 441, 477, 499, 511, 517, 524], "usual": 500, "uth": [78, 252], "util": [25, 32, 33, 36, 37, 39, 40, 70, 146, 176, 234, 235, 248, 249, 252, 281, 282, 284, 285, 288, 289, 290, 291, 296, 297, 306, 307, 350, 364, 396, 426, 429, 430, 435, 436, 439, 442, 443, 444, 445, 471, 475, 476, 490, 500, 514, 515, 517, 528, 529], "utilitycircular_arrai": 134, "v": [16, 27, 115, 179, 182, 194, 206, 220, 222, 247, 253, 297, 366, 367, 368, 369, 370, 371, 404, 405, 488, 493, 518], "v3": [25, 28, 29, 30, 31, 32, 33, 36, 37, 40, 64, 104, 163, 164, 165, 166, 167, 168, 170, 171, 228, 234, 235, 236, 237, 238, 239, 240, 241, 261, 263, 264, 265, 266, 269, 270, 274, 275, 276, 277, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 422, 423, 424, 425, 428, 431, 432, 439, 440, 475, 476, 502, 503, 517, 518], "valid": [15, 17, 18, 20, 42, 252, 262, 471, 473, 474], "valu": [12, 13, 14, 16, 18, 19, 26, 29, 31, 37, 39, 40, 46, 62, 64, 65, 68, 70, 78, 80, 91, 97, 104, 105, 107, 153, 163, 164, 167, 171, 176, 177, 227, 228, 241, 252, 259, 261, 262, 263, 266, 275, 282, 284, 288, 289, 296, 297, 300, 302, 304, 305, 306, 307, 314, 328, 332, 358, 359, 367, 398, 400, 425, 429, 430, 432, 435, 436, 473, 474, 477, 484, 486, 499, 503, 506, 511, 513, 514, 515, 517, 521, 522], "value_": 311, "value_grid": [107, 127, 153, 176, 240, 241], "value_or": [31, 241, 289], "value_trait": [16, 50, 266, 486, 487, 493, 495, 515], "value_traitsstat": 515, "value_typ": [37, 40, 62, 63, 64, 65, 70, 71, 97, 104, 105, 220, 222, 230, 432], "value_typeiter": 37, "value_typestd": [230, 432], "value_typet": 40, "value_typevalu": [40, 230, 432], "value_typevector2": 37, "valuea": 252, "valuebeluga": 59, "valuegrid2": [108, 115, 183, 191, 195, 202, 203, 206, 207, 208, 216, 218, 222, 224, 227, 241, 252, 435, 436], "valuegrid2gener": 436, "valuegrid2valuegrid2": 436, "valueinput": 306, "valueth": [104, 306, 358], "valuetrait": [486, 488, 493, 495, 497, 514, 515, 522], "valuetraitsinlinestat": 522, "valuetraitsstat": 522, "valuetraitstrait": [499, 515], "vari": 1, "variabl": [27, 28, 78, 80, 167, 172, 182, 226, 252, 256, 260, 263, 268, 269, 271, 274, 276, 281, 284, 288, 294, 296, 392, 414, 422, 424, 429, 430, 439, 447, 460, 464, 478, 494, 498], "varianc": [171, 252], "variant": [4, 37, 58, 59, 60, 61, 185, 222, 429, 468, 469, 475, 476, 482], "variant_": 37, "variantbresenham": 60, "variantvariantbresenham": 37, "variat": 1, "vector": [2, 25, 26, 30, 31, 32, 33, 54, 56, 60, 72, 74, 76, 78, 81, 89, 104, 106, 107, 108, 118, 119, 163, 164, 171, 198, 200, 212, 214, 218, 220, 222, 227, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 247, 248, 249, 251, 252, 253, 257, 259, 262, 265, 266, 322, 332, 356, 357, 366, 367, 371, 431, 432, 435, 436, 441, 476, 514, 515], "vector2": [36, 37, 61, 62, 63, 170, 171, 180, 183, 184, 189, 192, 196, 197, 200, 209, 211, 214, 215, 216, 220, 222, 227, 239, 252, 300, 301, 318, 319, 513, 518, 526, 527, 529], "vector22d": 60, "vector2d": [12, 14, 16, 19, 44, 45, 48, 49, 50, 51, 52, 53, 60, 97, 98, 107, 108, 119, 121, 243, 251, 261, 266, 268, 293, 305, 309, 486, 487, 515], "vector2i": [12, 16, 19, 37, 44, 45, 48, 49, 50, 51, 52, 53, 58, 59, 97, 98, 107, 108, 119, 243, 262, 266, 291, 293, 305, 332, 468, 469, 486, 487], "vector2ipoint": 58, "vector2near": [300, 301], "vector2nearauto": 301, "vector3": [171, 300, 301, 529], "vector3d": [33, 232, 233, 235, 237, 251, 252, 261, 476], "vector3i": [262, 332], "vector3near": [300, 301], "vector3nearauto": 301, "vector4": 171, "vector_typ": [78, 79, 80, 81, 220, 222, 227, 247, 249, 366, 367, 368, 369, 370, 371], "vector_typeth": [247, 249], "vector_typetypenam": [247, 249], "vector_typevector": 249, "vectorshorthand": [249, 432], "vectorstd": [249, 432], "veri": [5, 18, 235], "verifi": [252, 424, 425], "version": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 74, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "vertex_color": 518, "vertic": 518, "via": [42, 473, 474], "view": [2, 3, 13, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 115, 146, 163, 164, 165, 166, 170, 171, 176, 200, 202, 203, 210, 214, 216, 218, 223, 227, 228, 234, 235, 236, 237, 238, 239, 240, 241, 259, 261, 263, 264, 265, 266, 275, 284, 285, 290, 291, 292, 293, 294, 295, 336, 342, 344, 346, 348, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 428, 431, 432, 441, 475, 476, 502, 503, 517, 518], "view_": [37, 62, 289, 297], "view_adaptor": [227, 289], "view_closur": [29, 296, 297, 336], "view_facad": [227, 297], "view_interfac": [37, 227], "viewseffective_sample_s": 133, "viewsinclud": 143, "viewsnorm": 130, "viewstuple_vector": 135, "vision": 1, "visit": [164, 476], "visual": [226, 464, 474, 498, 506, 517], "visualization_msg": [442, 443, 448, 474, 504], "void": [25, 26, 29, 31, 33, 37, 39, 40, 42, 54, 56, 64, 68, 74, 76, 78, 101, 104, 110, 112, 114, 115, 175, 200, 203, 214, 216, 218, 220, 227, 237, 241, 247, 249, 252, 259, 275, 282, 289, 297, 306, 307, 353, 360, 362, 365, 391, 394, 428, 430, 432, 443, 445, 448, 450, 452, 469, 471, 476, 482, 505, 513, 528, 529], "void_t": [26, 115, 227, 252, 259, 275, 282, 297, 429, 430], "volatil": 6, "w": [4, 5, 20, 27, 41, 115, 179, 182, 194, 207, 220, 224, 252, 253, 264, 295, 297, 350, 364, 392, 414, 481, 493, 518, 529, 531], "w_i": [473, 474, 519], "w_t": 4, "wa": [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 226, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 448, 450, 452, 464, 473, 474, 482, 484, 486, 498, 519, 521, 523, 524], "wai": [91, 307], "wait": [473, 474], "want": [31, 472], "warn": 473, "warranti": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "we": [6, 29, 31, 33, 104, 106, 237, 241, 262, 289, 346, 432, 476, 518], "weight": [4, 17, 20, 25, 26, 31, 33, 42, 54, 56, 74, 76, 89, 101, 165, 166, 170, 171, 227, 228, 237, 241, 252, 253, 257, 258, 259, 262, 263, 264, 270, 274, 275, 276, 277, 281, 282, 284, 294, 295, 296, 297, 314, 328, 338, 346, 358, 372, 402, 403, 404, 405, 414, 415, 428, 441, 468, 469, 471, 473, 474, 476, 482, 506, 517, 518, 519], "weight_detail": [115, 166, 171, 200, 214, 227, 252, 275, 277, 281, 282, 414, 415, 518], "weight_fn": [115, 166, 171, 200, 214, 252, 275, 277, 281, 282, 415, 518], "weight_fncustom": [227, 282], "weight_fninlin": 415, "weight_t": [252, 253, 257, 274, 275, 506, 517, 518], "weight_ttyp": 275, "weight_ttypenam": [275, 518], "weight_typ": [20, 31, 33, 54, 55, 56, 57, 74, 75, 76, 77, 89, 90, 220, 224, 237, 241, 252, 262, 274, 275, 372, 373, 518], "weight_typedoubl": [31, 33, 237, 241, 262], "weight_typestd": 275, "weight_typeth": 275, "weight_typeweight": [31, 33, 237, 241, 262], "weightconstexpr": [166, 171, 275, 277, 282, 518], "weightcustom": [166, 171, 275, 277, 282], "weighted_mean": 171, "weighted_sampl": 171, "weighted_sd": 171, "weighted_squared_devi": 171, "weightnumer": [25, 469, 518], "weights_sum": 171, "weights_view": 171, "weightsa": 252, "weightsconstexpr": [277, 297, 518], "weightsdefinit": [277, 297], "weightspos": 252, "weightsrang": [170, 171, 252], "weightsrangea": 252, "weightt": [25, 43, 178, 187, 188, 193, 196, 201, 205, 209, 215, 221, 227], "weighttag": [25, 252, 281, 282, 469, 518], "weightttyp": 42, "weightweight": 25, "well": [2, 26, 227, 252, 259, 274, 275, 372, 441], "were": [268, 473], "wg21": 307, "what": [17, 91, 101, 104, 252, 300, 518], "wheel": 11, "when": [2, 3, 4, 6, 15, 25, 40, 42, 44, 46, 48, 50, 52, 56, 64, 74, 78, 104, 228, 241, 252, 262, 269, 296, 312, 328, 376, 392, 396, 414, 432, 471, 473, 474, 476, 519], "where": [4, 17, 33, 163, 164, 171, 172, 228, 237, 241, 252, 269, 271, 376, 408, 410, 432, 439, 440, 471, 473, 474, 476, 519], "wherea": 474, "wherev": 2, "whether": [12, 42, 312, 448, 450, 452, 471, 473, 474, 482, 519], "which": [2, 4, 5, 18, 19, 21, 23, 25, 26, 28, 30, 32, 34, 36, 39, 85, 95, 116, 118, 120, 163, 165, 167, 170, 172, 174, 177, 226, 227, 229, 232, 236, 240, 242, 244, 246, 248, 250, 252, 259, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 361, 378, 398, 400, 422, 424, 429, 431, 433, 435, 437, 439, 464, 471, 473, 474, 475, 484, 498, 502, 514, 517, 518, 526, 528], "whichev": 89, "while": [2, 4, 40, 164, 228, 424], "whole": 235, "whose": [26, 227, 252, 259, 282, 394, 429, 430, 506], "why": [31, 241], "wide": [1, 2, 3, 441], "width": [12, 44, 48, 50, 107, 108, 119, 207, 224, 241, 243, 436, 486, 487, 493, 495, 515], "width_": 436, "widthgrid": 107, "widthstd": [436, 515], "wiki": [171, 249, 518], "wikipedia": [171, 249, 518], "wild": 1, "window": [39, 252], "wise": [3, 472], "within": [83, 87, 226, 251, 464, 498], "without": [3, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 42, 97, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 473, 474, 476, 480, 503, 504, 515, 518, 527, 529], "wolfram": [41, 481, 531], "word": [2, 6, 78], "work": [2, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 228, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 448, 450, 452, 474, 482, 484, 486, 519, 521, 523, 524], "workflow": [5, 6], "world": [33, 72, 232, 233, 235, 237, 252], "world_in_sensor_transform": 235, "world_pose_typ": [33, 72, 73, 220, 224, 235], "world_pose_typesophu": 235, "world_pose_typetyp": 235, "world_to_likelihood_field_transform_": 241, "wors": 64, "worth": 6, "would": 18, "wrap": 500, "wrapper": [473, 474, 476, 477, 480, 484, 486, 490, 492, 499, 500, 502, 503, 504, 506, 511, 514, 515], "write": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 64, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 474, 476, 480, 503, 504, 515, 518, 527, 529], "www": [22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 356, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "x": [4, 12, 16, 18, 19, 31, 33, 37, 44, 45, 48, 49, 50, 51, 52, 53, 60, 97, 98, 107, 108, 109, 119, 121, 171, 237, 239, 241, 243, 247, 251, 266, 268, 272, 293, 301, 305, 307, 471, 473, 474, 476, 486, 487, 513, 515, 518, 519, 527, 529], "x10": 241, "x_": [4, 37], "x_0": 4, "x_clustering_resolut": [109, 110, 307], "x_clustering_resolutionclust": 109, "x_distribution_": 251, "x_offset": 241, "x_t": 4, "xa": 473, "xi": [12, 16, 18, 19, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 119, 243, 266, 293, 486, 487], "xigrid": [44, 50, 52], "xml": 6, "xplane": [44, 50, 52], "xspan_": 37, "xstep_": 37, "xx": 473, "xy": [171, 471, 473, 474], "xyaw": [471, 474], "y": [5, 12, 16, 18, 19, 31, 33, 37, 40, 44, 45, 48, 49, 50, 51, 52, 53, 60, 64, 97, 98, 107, 108, 109, 119, 121, 171, 237, 239, 241, 243, 251, 266, 268, 272, 293, 301, 305, 307, 471, 473, 474, 476, 486, 487, 513, 515, 518, 519, 527, 529], "y_": 37, "y_clustering_resolut": [109, 110, 307], "y_clustering_resolutionclust": 109, "y_distribution_": 251, "y_offset": 241, "ya": 473, "yaw": [171, 471, 473, 474, 513], "yellow": [226, 464, 498], "yet": [1, 518], "yi": [12, 16, 19, 44, 45, 48, 49, 50, 51, 52, 53, 97, 98, 107, 108, 119, 243, 266, 293, 486, 487], "yield": [70, 230], "yigrid": [44, 50, 52], "you": [0, 5, 6, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 252, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 300, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "your": [5, 6], "your_typ": 91, "yplane": [44, 50, 52], "yspan_": 37, "ystep_": 37, "yy": 473, "yyaw": [471, 474], "z": [27, 31, 33, 115, 179, 182, 223, 225, 237, 247, 251, 252, 301, 410, 411, 424, 425, 476, 518, 519, 529], "z_": 4, "z_distribution_": 251, "z_hit": [31, 223, 225, 241, 314, 328, 474], "z_hitbeluga": [315, 329], "z_hitdoubl": [31, 241], "z_hitweight": [31, 241], "z_max": [31, 223, 225, 314, 474], "z_maxbeluga": 315, "z_maxdoubl": 31, "z_maxweight": 31, "z_mean": 31, "z_rand": [31, 223, 225, 314, 474], "z_randbeluga": 315, "z_randdoubl": 31, "z_random": [223, 225, 241, 328], "z_randombeluga": 329, "z_randomdoubl": 241, "z_randomweight": 241, "z_randweight": 31, "z_short": [31, 223, 225, 314, 474], "z_shortbeluga": 315, "z_shortdoubl": 31, "z_shortweight": 31, "z_t": 4, "zero": [3, 68, 78, 171, 175, 237, 249, 408, 422, 428, 474, 518], "zip": [26, 144, 176, 227, 228, 238, 239, 259, 261, 275, 396, 412, 431, 432, 437, 438, 517, 518], "zip_fn": [115, 200, 214, 413, 432, 439, 440], "zip_fnimplement": [227, 440], "zip_fninlin": 413, "zip_view": [262, 412, 440], "zip_with_view": 396, "zipconstexpr": [432, 440], "zipgiven": [432, 440], "zsee": 410, "zupper": 252, "\u00eatre": 1, "\u03b7": 4, "\u2124": 58}, "titles": ["Contact", "Rationale", "Architecture", "Design principles", "Key concepts", "Installation", "Quickstart", "Benchmarking Beluga", "Extending Beluga", "Profiling Beluga", "Using Beluga AMCL on an AMR", "Overview", "Beluga: Beluga named requirements: DenseGrid2", "Beluga: Beluga named requirements: LaserScan", "Beluga: Beluga named requirements: LinearGrid2", "Beluga: Beluga named requirements: MotionModel", "Beluga: Beluga named requirements: OccupancyGrid2d", "Beluga: Beluga named requirements: Particle", "Beluga: Beluga named requirements: RandomStateDistribution", "Beluga: Beluga named requirements: RegularGrid2", "Beluga: Beluga named requirements: SensorModel", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/amcl_core.hpp Source File", "Beluga: Class List", "Classes", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/assign.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/beam_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/bearing_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/beluga.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting/bresenham.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta/ciabatta.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/circular_array.hpp Source File", "Beluga: Bibliography", "Beluga: beluga::Amcl&amp;lt; MotionModel, SensorModel, RandomStateGenerator, WeightT, ParticleType, ExecutionPolicy &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseDenseGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLaserScan&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseLinearGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseOccupancyGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BaseRegularGrid2&amp;lt; Derived &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BeamSensorModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::BearingSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i Class Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator Class Reference", "Beluga: Member List", "Beluga: beluga::CircularArray&amp;lt; T, N, F &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::ExponentialFilter Class Reference", "Beluga: Member List", "Beluga: beluga::IndexingIterator&amp;lt; Indexable, Index &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LandmarkMap Class Reference", "Beluga: Member List", "Beluga: beluga::LandmarkSensorModel&amp;lt; LandmarkMap, StateType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModel&amp;lt; OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistribution&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateNormalDistributionParam&amp;lt; Vector, Matrix &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; T, Constraint &amp;gt; Class Template Reference", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, Eigen::AlignedBox2d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE2d, OccupancyGrid &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::MultivariateUniformDistribution&amp;lt; Sophus::SE3d, Eigen::AlignedBox3d &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::NDTSensorModel&amp;lt; SparseGridT &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::Numeric&amp;lt; T, PhantomType, typename &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModel Class Reference", "Beluga: Member List", "Beluga: beluga::Ray2d&amp;lt; OccupancyGrid, Algorithm &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::SparseValueGrid&amp;lt; MapType &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::StationaryModel Class Reference", "Beluga: Member List", "Beluga: beluga::ThrunRecoveryProbabilityEstimator Class Reference", "Beluga: Member List", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, T &amp;gt; Class Template Reference", "Beluga: beluga::TupleContainer&amp;lt; InternalContainer, std::tuple&amp;lt; Types... &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::TupleVector&amp;lt; T &amp;gt; Class Template Reference", "Beluga: beluga::ValueGrid2&amp;lt; T &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Sophus::SE2d, void &amp;gt; Class Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; Tuple&amp;lt; Types... &amp;gt;, std::enable_if_t&amp;lt;(std::is_arithmetic_v&amp;lt; Types &amp;gt; &amp;amp;&amp;amp;...), void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; std::array&amp;lt; T, N &amp;gt;, std::enable_if_t&amp;lt; std::is_arithmetic_v&amp;lt; T &amp;gt;, void &amp;gt; &amp;gt; Class Template Reference", "Beluga: Member List", "Beluga: Class Index", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/dense_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/differential_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; actions Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; containers Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; motion Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; policies Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; random Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga -&amp;gt; testing Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; raycasting Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; utility Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers -&amp;gt; views Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random -&amp;gt; sensor Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; algorithm Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; data Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data -&amp;gt; types Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views -&amp;gt; type_traits Relation", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga Directory Reference", "Beluga: _doxygen Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/ciabatta Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting Directory Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/distance_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/effective_sample_size.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/elements.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/epilogue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/estimation.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/every_n.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/exponential_filter.hpp Source File", "Beluga: File List", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/forward_like.hpp Source File", "Beluga: Class Members", "All", "Beluga: Class Members", "Beluga: Class Members", "Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Enumerations", "Beluga: Class Members - Enumerator", "Beluga: Class Members", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members - Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Related Functions", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Typedefs", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Class Members - Variables", "Beluga: Class Members", "Beluga: Class Members", "Beluga: Graph Legend", "Beluga: Class Hierarchy", "Beluga: API Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/utility/indexing_iterator.hpp Source File", "Beluga: Class Hierarchy", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/types/landmark_detection_types.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/landmark_map.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/landmark_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/laser_scan.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/likelihood_field_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/linear_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_distribution_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_normal_distribution.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random/multivariate_uniform_distribution.hpp Source File", "Beluga: beluga Namespace Reference", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace Members", "Beluga: Namespace List", "Namespaces", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/ndt_cell.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/ndt_sensor_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/normalize.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/occupancy_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/omnidirectional_drive_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_effective_size_drop.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/on_motion.hpp Source File", "Beluga: Related Pages", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/particle_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/particles.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/policies/policy.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/primitives.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/detail/prologue.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/propagate.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/random.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/random_intersperse.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/raycasting.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/regular_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/actions/reweight.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/sample.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_matchers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing/sophus_printers.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/sparse_value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/spatial_hash.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/motion/stationary_model.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/strongly_typed_numeric.hpp Source File", "Beluga: beluga::AmclParams Struct Reference", "Beluga: Member List", "Beluga: beluga::BeamModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::BearingModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::Bresenham2i::Line&amp;lt; Vector2, Integer &amp;gt;::iterator::sentinel Struct Reference", "Beluga: Member List", "Beluga: beluga::DifferentialDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkBearingDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::LandmarkPositionDetection Struct Reference", "Beluga: Member List", "Beluga: beluga::LikelihoodFieldModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::NDTCell&amp;lt; NDim, Scalar &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::NDTModelParam&amp;lt; NDim &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::OmnidirectionalDriveModelParam Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::assign_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::normalize_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::propagate_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::actions::detail::reweight_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::common_tuple_type&amp;lt; T, U, Is &amp;gt; Struct Template Reference", "Beluga: beluga::common_tuple_type&amp;lt; T, U, std::index_sequence&amp;lt; I... &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; T, class &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::decay_tuple_like&amp;lt; TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::detail::CellHasher&amp;lt; N &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::detail::make_from_state_fn&amp;lt; Particle, State &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::has_common_tuple_type&amp;lt; typename, typename, typename &amp;gt; Struct Template Reference", "Beluga: beluga::has_common_tuple_type&amp;lt; T, U, std::void_t&amp;lt; common_tuple_type_t&amp;lt; T, U &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::has_single_element&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::is_tuple_like&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SO2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Eigen::EigenBase&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: Member List", "Beluga: Member List", "Beluga: beluga::multivariate_distribution_traits&amp;lt; T, std::enable_if_t&amp;lt; std::is_base_of_v&amp;lt; Sophus::SE2Base&amp;lt; T &amp;gt;, T &amp;gt; &amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::particle_traits&amp;lt; T &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::every_n_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_effective_size_drop_policy Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Pose &amp;gt; Struct Template Reference", "Beluga: beluga::policies::detail::on_motion_policy_base&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy&amp;lt; PolicyFn &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::policy_base Struct Reference", "Beluga: Member List", "Beluga: beluga::spatial_hash&amp;lt; T, Enable &amp;gt; Struct Template Reference", "Beluga: beluga::state_detail::state_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike, class &amp;gt; Struct Template Reference", "Beluga: beluga::tuple_index&amp;lt; T, TupleLike&amp;lt; Args... &amp;gt;, std::enable_if_t&amp;lt; is_tuple_like_v&amp;lt; std::decay_t&amp;lt; TupleLike&amp;lt; Args... &amp;gt; &amp;gt; &amp;gt; &amp;amp;&amp;amp;detail::tuple_index_found&amp;lt; T, Args... &amp;gt;()&amp;gt; &amp;gt; Struct Template Reference", "Beluga: beluga::views::detail::as_common_tuple_indirect_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::random_intersperse_view&amp;lt; Range, Fn, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_base_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::sample_view&amp;lt; Range, Distribution, URNG &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_evenly_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::take_while_kld_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::views::detail::zip_fn Struct Reference", "Beluga: Member List", "Beluga: beluga::weight_detail::weight_fn Struct Reference", "Beluga: Member List", "Beluga: std::hash&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::numeric_limits&amp;lt; beluga::Numeric&amp;lt; T, PhantomType &amp;gt; &amp;gt; Struct Template Reference", "Beluga: std::tuple_element&amp;lt; I, beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: Member List", "Beluga: std::tuple_size&amp;lt; beluga::CircularArray&amp;lt; T, N, F &amp;gt; &amp;gt; Struct Template Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_evenly.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/take_while_kld.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/testing.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/algorithm/thrun_recovery_probability_estimator.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits/tuple_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/containers/tuple_vector.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/type_traits.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/sensor/data/value_grid.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views.hpp Source File", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp File Reference", "Beluga: /home/runner/work/beluga/beluga/beluga/include/beluga/views/zip.hpp Source File", "Overview", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_node.hpp Source File", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/amcl_nodelet.hpp Source File", "Beluga AMCL: Class List", "Classes", "Beluga AMCL: beluga_amcl::AmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::AmclNodelet Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: beluga_amcl::NdtAmclNode Class Reference", "Beluga AMCL: Member List", "Beluga AMCL: Class Index", "Beluga AMCL: _doxygen Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include Directory Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl Directory Reference", "Beluga AMCL: File List", "Beluga AMCL: Class Members", "Class Members", "Beluga AMCL: Class Members - Functions", "Beluga AMCL: Class Members - Typedefs", "Beluga AMCL: Class Members - Variables", "Beluga AMCL: Graph Legend", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: API Reference", "Beluga AMCL: Class Hierarchy", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp File Reference", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ndt_amcl_node.hpp Source File", "Beluga AMCL: Related Pages", "Beluga AMCL: /home/runner/work/beluga/beluga/beluga_amcl/include/beluga_amcl/ros2_common.hpp Source File", "Overview", "ROS Reference", "ROS 2 Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/amcl.hpp Source File", "Beluga ROS: Class List", "Classes", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/beluga_ros.hpp Source File", "Beluga ROS: Bibliography", "Beluga ROS: beluga_ros::Amcl Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::LaserScan Class Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid Class Reference", "Beluga ROS: Member List", "Beluga ROS: Class Index", "Beluga ROS: _doxygen Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros Directory Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include Directory Reference", "Beluga ROS: File List", "Beluga ROS: Class Members", "Class Members", "Beluga ROS: Class Members - Functions", "Beluga ROS: Class Members - Typedefs", "Beluga ROS: Class Members - Variables", "Beluga ROS: Graph Legend", "Beluga ROS: Class Hierarchy", "Beluga ROS: API Reference", "Beluga ROS: Class Hierarchy", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/laser_scan.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/messages.hpp Source File", "Beluga ROS: Sophus Namespace Reference", "Beluga ROS: beluga_ros Namespace Reference", "Beluga ROS: beluga_ros::msg Namespace Reference", "Beluga ROS: Namespace Members", "Beluga ROS: Namespace Members", "Namespace Members", "Beluga ROS: Namespace List", "Namespaces", "Beluga ROS: tf2 Namespace Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/occupancy_grid.hpp Source File", "Beluga ROS: Related Pages", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/particle_cloud.hpp Source File", "Beluga ROS: beluga_ros::AmclParams Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::OccupancyGrid::ValueTraits Struct Reference", "Beluga ROS: Member List", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; T &amp;gt; Struct Template Reference", "Beluga ROS: beluga_ros::detail::almost_equal_to&amp;lt; Sophus::SE2&amp;lt; Scalar &amp;gt; &amp;gt; Struct Template Reference", "Beluga ROS: Member List", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_eigen.hpp Source File", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp File Reference", "Beluga ROS: /home/runner/work/beluga/beluga/beluga_ros/include/beluga_ros/tf2_sophus.hpp Source File", "Overview", "Bibliography", "Features", "Releases", "Using Beluga with Nav2", "Primer on Particle Filtering with Beluga"], "titleterms": {"2": 474, "_doxygen": [147, 455, 489], "abstract": 2, "action": [21, 22, 28, 29, 122, 129, 130, 154, 263, 264, 284, 285, 294, 295], "adapt": 2, "advertis": [473, 474], "algorithm": [23, 24, 25, 36, 37, 95, 131, 132, 133, 137, 139, 151, 162, 163, 164, 165, 166, 170, 171, 174, 175, 290, 291, 306, 307, 428], "alignedbox2d": 83, "alignedbox3d": 87, "all": 179, "almost_equal_to": 523, "amcl": [10, 42, 466, 475, 476, 482], "amcl_cor": 25, "amcl_nod": [442, 443], "amcl_nodelet": [444, 445], "amclnod": [448, 474], "amclnodelet": [450, 473], "amclparam": [312, 519], "amp": 111, "amr": 10, "an": 10, "architectur": 2, "arg": [355, 363, 395], "as_common_tuple_indirect_fn": 396, "assign": [28, 29], "assign_fn": 336, "awar": 3, "base": 2, "basedensegrid2": 44, "baselaserscan": 46, "baselineargrid2": 48, "baseoccupancygrid2": 50, "baseregulargrid2": 52, "beam_model": [30, 31], "beammodelparam": 314, "beamsensormodel": 54, "bearing_sensor_model": [32, 33], "bearingmodelparam": 316, "bearingsensormodel": 56, "beluga": [5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 456, 457, 466, 468, 469, 471, 475, 476, 479, 480, 490, 491, 500, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529, 534, 535], "beluga_amcl": [442, 443, 444, 445, 456, 457, 468, 469, 471, 473, 474], "beluga_ro": [475, 476, 479, 480, 490, 491, 502, 503, 504, 506, 514, 515, 517, 518, 526, 527, 528, 529], "benchmark": 7, "bibliographi": [41, 481, 531], "binari": 5, "bound": 3, "bresenham": [36, 37], "bresenham2i": 58, "broadcast": [473, 474], "build": 5, "call": 473, "carlo": 4, "cellhash": 356, "center": 3, "ciabatta": [38, 161], "circular_arrai": [39, 40], "circulararrai": [64, 419, 421], "class": [26, 27, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 115, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 231, 353, 362, 394, 446, 447, 448, 450, 452, 454, 459, 460, 461, 462, 463, 465, 467, 477, 478, 482, 484, 486, 488, 493, 494, 495, 496, 497, 499, 501], "clone": 5, "common_tuple_typ": 350, "common_tuple_type_t": 361, "compat": [473, 474], "concept": 4, "consist": 3, "constraint": 82, "contact": 0, "contain": [39, 40, 116, 117, 123, 134, 135, 148, 431, 432], "crtp": 2, "data": [2, 118, 119, 140, 142, 153, 234, 235, 238, 239, 242, 243, 261, 265, 266, 292, 293, 304, 305, 435, 436], "decay_t": 355, "decay_tuple_lik": 353, "dense_grid": [118, 119], "densegrid2": 12, "depend": [5, 441], "deriv": [44, 46, 48, 50, 52], "design": 3, "detail": [158, 169, 283], "differential_drive_model": [120, 121], "differentialdrivemodel": 66, "differentialdrivemodelparam": 320, "directori": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 455, 456, 457, 489, 490, 491], "distance_map": [163, 164], "distribut": [2, 5, 406], "easi": 3, "effective_sample_s": [165, 166], "eigenbas": 367, "element": [167, 168], "enabl": [365, 391], "enumer": [185, 186], "epilogu": 169, "estim": [170, 171], "evalu": 3, "every_n": [172, 173], "every_n_fn": 374, "every_n_polici": 376, "executionpolici": 42, "exponential_filt": [174, 175], "exponentialfilt": 68, "extend": 8, "f": [64, 419, 421], "featur": [11, 441, 532], "file": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 458, 468, 469, 471, 475, 476, 479, 480, 492, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "filter": [473, 474, 535], "fn": 400, "focus": 3, "form": 2, "forward_lik": 177, "from": 5, "function": [2, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 461, 495], "graph": [226, 464, 498], "gt": [42, 44, 46, 48, 50, 52, 54, 56, 60, 64, 70, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 95, 97, 103, 104, 106, 107, 109, 111, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 330, 332, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 382, 384, 385, 387, 391, 394, 395, 400, 406, 416, 418, 419, 421, 523, 524], "has_common_tuple_typ": 360, "has_single_el": 362, "hierarchi": [227, 231, 465, 467, 499, 501], "home": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 456, 457, 468, 469, 471, 475, 476, 479, 480, 490, 491, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "hpp": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 468, 469, 471, 475, 476, 479, 480, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "i": [350, 351], "includ": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 456, 457, 468, 469, 471, 475, 476, 479, 480, 490, 491, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "index": [70, 115, 454, 488], "index_sequ": 351, "indexing_iter": [229, 230], "indexingiter": 70, "initi": [473, 474], "instal": 5, "integ": 60, "interfac": [473, 474], "internalcontain": 103, "is_arithmetic_v": [111, 113], "is_tuple_lik": 364, "iter": 62, "kei": 4, "landmark_detection_typ": [232, 233], "landmark_map": [234, 235], "landmark_sensor_model": [236, 237], "landmarkbearingdetect": 322, "landmarkmap": [56, 72, 74], "landmarkmodelparam": 324, "landmarkpositiondetect": 326, "landmarksensormodel": 74, "laser_scan": [238, 239, 502, 503], "laserscan": [13, 484], "lazi": 3, "legend": [226, 464, 498], "like": 2, "likelihood_field_model": [240, 241], "likelihoodfieldmodel": 76, "likelihoodfieldmodelparam": 328, "line": 60, "linear_grid": [242, 243], "lineargrid2": 14, "list": [26, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 176, 259, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 352, 354, 357, 359, 368, 369, 370, 373, 375, 377, 379, 381, 383, 386, 388, 390, 393, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 420, 446, 449, 451, 453, 458, 477, 483, 485, 487, 492, 511, 520, 522, 525], "local": 4, "lt": [42, 44, 46, 48, 50, 52, 54, 56, 60, 64, 70, 74, 76, 78, 80, 82, 89, 91, 95, 97, 103, 104, 106, 107, 111, 113, 330, 332, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 382, 384, 385, 387, 391, 394, 395, 400, 406, 416, 418, 419, 421, 523, 524], "make_from_state_fn": 358, "maptyp": 97, "matrix": 80, "member": [43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 105, 108, 110, 112, 114, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 253, 254, 255, 256, 257, 258, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 352, 354, 357, 359, 368, 369, 370, 373, 375, 377, 379, 381, 383, 386, 388, 390, 393, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 420, 449, 451, 453, 459, 460, 461, 462, 463, 483, 485, 487, 493, 494, 495, 496, 497, 508, 509, 510, 520, 522, 525], "memori": 3, "messag": 504, "misc": [473, 474], "model": [473, 474], "mont": 4, "motion": [120, 121, 124, 136, 156, 244, 245, 267, 268, 308, 309, 473, 474], "motionmodel": [15, 42], "msg": 507, "multivariate_distribution_trait": [246, 247, 365], "multivariate_normal_distribut": [248, 249], "multivariate_uniform_distribut": [250, 251], "multivariatenormaldistribut": 78, "multivariatenormaldistributionparam": 80, "multivariateuniformdistribut": 82, "n": [64, 356, 419, 421], "namespac": [252, 253, 254, 255, 256, 257, 258, 259, 260, 505, 506, 507, 508, 509, 510, 511, 512, 513], "nav2": 534, "ndim": [330, 332], "ndt_amcl_nod": [468, 469], "ndt_cell": 261, "ndt_sensor_model": 262, "ndtamclnod": 452, "ndtcell": 330, "ndtmodelparam": 332, "ndtsensormodel": 89, "node": 474, "nodelet": 473, "normal": [263, 264], "normalize_base_fn": 338, "normalize_fn": 340, "note": [473, 474], "numer": [91, 416, 418], "observ": [473, 474], "occupancy_grid": [265, 266, 514, 515], "occupancygrid": [54, 76, 85, 95, 486], "occupancygrid2d": 16, "omnidirectional_drive_model": [267, 268], "omnidirectionaldrivemodel": 93, "omnidirectionaldrivemodelparam": 334, "on_effective_size_drop": [269, 270], "on_effective_size_drop_polici": 378, "on_mot": [271, 272], "on_motion_fn": 380, "on_motion_polici": 382, "on_motion_policy_bas": 384, "output": 6, "over": 6, "overview": [11, 441, 472, 530], "page": [273, 470, 516], "paramet": [473, 474], "particl": [17, 276, 277, 358, 473, 474, 535], "particle_cloud": [517, 518], "particle_trait": [274, 275, 372], "particletyp": 42, "perform": 3, "phantomtyp": [91, 416, 418], "polici": [125, 137, 145, 172, 173, 269, 270, 271, 272, 278, 279, 280, 387], "policy_bas": 389, "policyfn": 387, "pose": [382, 384, 473, 474], "prerequisit": 6, "primer": 535, "primit": [281, 282], "principl": 3, "profil": 9, "prologu": 283, "propag": [284, 285], "propagate_base_fn": 342, "propagate_fn": 344, "publish": [473, 474], "quickstart": 6, "random": [126, 138, 159, 246, 247, 248, 249, 250, 251, 286, 287], "random_interspers": [288, 289], "random_intersperse_fn": 398, "random_intersperse_view": 400, "randomstatedistribut": 18, "randomstategener": 42, "rang": [2, 400, 406], "rational": 1, "ray2d": 95, "raycast": [36, 37, 131, 162, 290, 291], "re": 3, "record": 6, "refer": [21, 23, 28, 30, 32, 34, 36, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109, 111, 113, 116, 118, 120, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 170, 172, 174, 229, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 263, 265, 267, 269, 271, 274, 276, 278, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 422, 424, 426, 429, 431, 433, 435, 437, 439, 442, 444, 448, 450, 452, 455, 456, 457, 468, 473, 474, 475, 479, 482, 484, 486, 489, 490, 491, 502, 505, 506, 507, 513, 514, 517, 519, 521, 523, 524, 526, 528], "regular_grid": [292, 293], "regulargrid2": 19, "relat": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 217, 273, 470, 516], "releas": 533, "repositori": 5, "reweight": [294, 295], "reweight_base_fn": 346, "reweight_fn": 348, "ro": [5, 473, 474, 500], "robot": 6, "ros2_common": 471, "run": 6, "runner": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 456, 457, 468, 469, 471, 475, 476, 479, 480, 490, 491, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "sampl": [296, 297], "sample_base_fn": 402, "sample_fn": 404, "sample_view": 406, "scalar": [330, 385, 524], "se2": [385, 524], "se2bas": 371, "se2d": [85, 109], "sensor": [30, 31, 32, 33, 118, 119, 127, 138, 139, 140, 141, 142, 152, 153, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 261, 262, 265, 266, 292, 293, 298, 299, 304, 305, 435, 436], "sensormodel": [20, 42], "sentinel": 318, "servic": [473, 474], "simul": 6, "so2bas": 366, "sophu": 505, "sophus_match": [300, 301], "sophus_print": [302, 303], "sourc": [5, 22, 24, 25, 29, 31, 33, 35, 37, 38, 40, 117, 119, 121, 164, 166, 168, 169, 171, 173, 175, 177, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 261, 262, 264, 266, 268, 270, 272, 275, 277, 279, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 423, 425, 427, 428, 430, 432, 434, 436, 438, 440, 443, 445, 469, 471, 476, 480, 503, 504, 515, 518, 527, 529], "sparse_value_grid": [304, 305], "sparsegridt": 89, "sparsevaluegrid": 97, "spatial_hash": [306, 307, 391], "state": 358, "state_fn": 392, "statetyp": [56, 74], "static": 3, "stationary_model": [308, 309], "stationarymodel": 99, "stl": [2, 3], "strongly_typed_numer": [310, 311], "struct": [312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 380, 382, 384, 385, 387, 389, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 419, 421, 519, 521, 523, 524], "subscrib": [473, 474], "support": 11, "t": [64, 78, 82, 91, 103, 106, 107, 113, 350, 353, 361, 362, 363, 364, 365, 366, 367, 371, 372, 391, 394, 395, 416, 418, 419, 421, 523], "take_evenli": [422, 423], "take_evenly_fn": 408, "take_while_kld": [424, 425], "take_while_kld_fn": 410, "templat": [42, 44, 46, 48, 50, 52, 54, 56, 60, 64, 70, 74, 76, 78, 80, 82, 85, 89, 91, 95, 97, 103, 104, 106, 107, 111, 113, 330, 332, 350, 351, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 382, 384, 385, 387, 391, 394, 395, 400, 406, 416, 418, 419, 421, 523, 524], "test": [128, 155, 300, 301, 302, 303, 426, 427], "tf2": 513, "tf2_eigen": [526, 527], "tf2_sophu": [528, 529], "thrun_recovery_probability_estim": 428, "thrunrecoveryprobabilityestim": 101, "topic": [473, 474], "transform": [473, 474], "tupl": 104, "tuple_index": 394, "tuple_index_found": [363, 395], "tuple_trait": [429, 430], "tuple_vector": [431, 432], "tuplecontain": 103, "tuplelik": [355, 362, 394], "tuplevector": 106, "type": [104, 111, 141, 142, 157, 232, 233], "type_trait": [129, 132, 136, 143, 150, 274, 275, 310, 311, 429, 430, 433, 434], "typedef": [220, 462, 496], "typenam": [91, 360], "u": [350, 361], "urng": [400, 406], "us": [3, 10, 534], "util": [134, 149, 177, 229, 230], "ux": 3, "value_grid": [435, 436], "valuegrid2": 107, "valuetrait": 521, "variabl": [223, 463, 497], "vector": 80, "vector2": 60, "view": [130, 133, 135, 143, 144, 167, 168, 276, 277, 288, 289, 296, 297, 422, 423, 424, 425, 437, 438, 439, 440], "visual": 6, "void": [109, 111, 113], "void_t": 361, "weight_fn": 414, "weightt": 42, "work": [21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 456, 457, 468, 469, 471, 475, 476, 479, 480, 490, 491, 502, 503, 504, 514, 515, 517, 518, 526, 527, 528, 529], "workspac": 5, "zip": [439, 440], "zip_fn": 412}})