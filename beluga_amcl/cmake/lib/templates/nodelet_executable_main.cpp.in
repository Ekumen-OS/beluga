// Copyright 2023 Ekumen, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include <iterator>
#include <string>
#include <string_view>

#include <ros/ros.h>
#include <nodelet/loader.h>

int main(int argc, char ** argv)
{
  ros::init(argc, argv, "@EXECUTABLE@");

  nodelet::V_string nargv;
  nodelet::M_string remap(ros::names::getRemappings());

  nodelet::Loader loader;
  constexpr std::string_view types[] = {@NODELETS@};
  if constexpr (std::size(types) > 1) {
    for (const auto& type : types)
    {
      const std::string name =
          ros::this_node::getName() + "/" +
          std::string(type.substr(type.find("/")));
      loader.load(name, std::string(type), remap, nargv);
    }
  } else {
      const std::string& name = ros::this_node::getName();
      loader.load(name, std::string(types[0]), remap, nargv);
  }

  ros::spin();

  return 0;
}
